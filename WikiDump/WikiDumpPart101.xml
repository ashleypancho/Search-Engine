<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.8/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.8/ http://www.mediawiki.org/xml/export-0.8.xsd" version="0.8" xml:lang="en">
  <page>
    <title>User talk:68.48.204.139</title>
    <ns>3</ns>
    <id>200531</id>
    <revision>
      <id>1547356</id>
      <timestamp>2009-06-24T21:03:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/68.48.204.139|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:03, 24 June 2009 (UTC)}}</text>
      <sha1>fp78chykknm9h92dv26w3wvyhw07b69</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:114.59.143.54</title>
    <ns>3</ns>
    <id>200532</id>
    <revision>
      <id>1547361</id>
      <parentid>1547358</parentid>
      <timestamp>2009-06-24T21:09:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Science Expansion]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:06, 24 June 2009 (UTC)

==[[Science Expansion]]==
{{mbox|type=notice|msg=
[[Science Expansion|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Science Expansion}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:08, 24 June 2009 (UTC)
}}</text>
      <sha1>5iimkyn3yvzy9mmwfc7zp9w0fsa6t81</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:114.58.59.240</title>
    <ns>3</ns>
    <id>200533</id>
    <revision>
      <id>1547362</id>
      <timestamp>2009-06-24T21:09:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Join Us!</comment>
      <text xml:space="preserve">== Join Us! ==

{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}--[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 21:09, 24 June 2009 (UTC)</text>
      <sha1>5u2e7rhblyi8som1dvsxmt4q0np6k65</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:68.199.108.147</title>
    <ns>3</ns>
    <id>200535</id>
    <revision>
      <id>1547376</id>
      <timestamp>2009-06-24T22:35:37Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>joins us &amp; thanks</comment>
      <text xml:space="preserve">==Join Us==
{{joinus}}
==Thanks==
Thanks for your work on [[Adventist Youth Honors Answer Book/Outreach/Christian Grooming &amp; Manners]].  When I saw that you had changed the wording of requirement 4a, I went back and checked the official NAD requirements, which matched the requirement as it was before your change.  Then I checked the GC's version and saw that your change adopts their version.  OK!  These are close enough to being the same that I am not inclined to fork the honor into a GC vs NAD version, which is my usual approach for showing multiple versions of an honor's requirements.  Let's just leave it the way you have it, as I kind of like the GC version better anyway. Thanks again! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 22:35, 24 June 2009 (UTC)</text>
      <sha1>2w8maude8hs1z2nbqsawuyjey4j1xvk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-bg</title>
    <ns>10</ns>
    <id>200536</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-bg" />
    <revision>
      <id>1547383</id>
      <timestamp>2009-06-24T22:48:46Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-bg]] to [[Template:False Friends of the Slavist/TalkRedirect-bg]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-bg]]</text>
      <sha1>7yqgsbp8kfwi47m2j6trwv8tly82ple</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-bih</title>
    <ns>10</ns>
    <id>200537</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-bih" />
    <revision>
      <id>1547385</id>
      <timestamp>2009-06-24T22:49:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-bih]] to [[Template:False Friends of the Slavist/TalkRedirect-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-bih]]</text>
      <sha1>rhxj6tyltouhfwnjh5r0y0prb95pqdl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-by</title>
    <ns>10</ns>
    <id>200538</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-by" />
    <revision>
      <id>1547388</id>
      <timestamp>2009-06-24T22:50:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-by]] to [[Template:False Friends of the Slavist/TalkRedirect-by]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-by]]</text>
      <sha1>fkppm6mhx9ct1uy2sy9vxoc9a3og2vv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-cz</title>
    <ns>10</ns>
    <id>200539</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-cz" />
    <revision>
      <id>1547390</id>
      <timestamp>2009-06-24T22:50:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-cz]] to [[Template:False Friends of the Slavist/TalkRedirect-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-cz]]</text>
      <sha1>7nmk9g00kokz7j5k4j0xki7xv696ed5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-hr</title>
    <ns>10</ns>
    <id>200540</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-hr" />
    <revision>
      <id>1547392</id>
      <timestamp>2009-06-24T22:51:13Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-hr]] to [[Template:False Friends of the Slavist/TalkRedirect-hr]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-hr]]</text>
      <sha1>133leuy7y0q4hyek5bfp7qos5ezg4mh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-ka</title>
    <ns>10</ns>
    <id>200541</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-ka" />
    <revision>
      <id>1547394</id>
      <timestamp>2009-06-24T22:51:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-ka]] to [[Template:False Friends of the Slavist/TalkRedirect-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-ka]]</text>
      <sha1>ke0ddiwok46kxc5ec7uz5xsktiw210n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-lso</title>
    <ns>10</ns>
    <id>200542</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-lso" />
    <revision>
      <id>1547397</id>
      <timestamp>2009-06-24T22:52:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-lso]] to [[Template:False Friends of the Slavist/TalkRedirect-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-lso]]</text>
      <sha1>9pus0md0c7xhnpgczarygsvjnoaxa41</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-mk</title>
    <ns>10</ns>
    <id>200543</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-mk" />
    <revision>
      <id>1547399</id>
      <timestamp>2009-06-24T22:52:41Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-mk]] to [[Template:False Friends of the Slavist/TalkRedirect-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-mk]]</text>
      <sha1>acqnvnhvr9vz9w2uz9wzriezkilqfvs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-pl</title>
    <ns>10</ns>
    <id>200544</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-pl" />
    <revision>
      <id>1547401</id>
      <timestamp>2009-06-24T22:53:04Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-pl]] to [[Template:False Friends of the Slavist/TalkRedirect-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-pl]]</text>
      <sha1>8zwkystl6u9gnne4t69lbnmkzcmdbvx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-rus</title>
    <ns>10</ns>
    <id>200545</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-rus" />
    <revision>
      <id>1547403</id>
      <timestamp>2009-06-24T22:53:29Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-rus]] to [[Template:False Friends of the Slavist/TalkRedirect-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-rus]]</text>
      <sha1>7kl0hglbqbqx0q2be7r4nls3hf4bqmp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-sk</title>
    <ns>10</ns>
    <id>200546</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-sk" />
    <revision>
      <id>1547407</id>
      <timestamp>2009-06-24T22:55:40Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-sk]] to [[Template:False Friends of the Slavist/TalkRedirect-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-sk]]</text>
      <sha1>myv2xodllnfwa8gmylqsqigs1lljdy5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-slo</title>
    <ns>10</ns>
    <id>200547</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-slo" />
    <revision>
      <id>1547410</id>
      <timestamp>2009-06-24T22:56:11Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-slo]] to [[Template:False Friends of the Slavist/TalkRedirect-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-slo]]</text>
      <sha1>9h133fz3aka44ms7r4gueajdgso9c1f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-ua</title>
    <ns>10</ns>
    <id>200548</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-ua" />
    <revision>
      <id>1547412</id>
      <timestamp>2009-06-24T22:56:52Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-ua]] to [[Template:False Friends of the Slavist/TalkRedirect-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-ua]]</text>
      <sha1>qjccjte9q39gxsi0vjyr8emzm1uvplv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-uso</title>
    <ns>10</ns>
    <id>200549</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-uso" />
    <revision>
      <id>1547414</id>
      <timestamp>2009-06-24T22:57:27Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-uso]] to [[Template:False Friends of the Slavist/TalkRedirect-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-uso]]</text>
      <sha1>9tma91oyaqbg7nvqgxk1yuzl5jrjg86</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFTalkRedirect-yu</title>
    <ns>10</ns>
    <id>200550</id>
    <redirect title="Template:False Friends of the Slavist/TalkRedirect-yu" />
    <revision>
      <id>1547416</id>
      <timestamp>2009-06-24T22:58:07Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFTalkRedirect-yu]] to [[Template:False Friends of the Slavist/TalkRedirect-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/TalkRedirect-yu]]</text>
      <sha1>db2ghcc2pxljw2owyo4zkenos2mj1u4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Languages/Manx Gaelic</title>
    <ns>111</ns>
    <id>200551</id>
    <revision>
      <id>1547441</id>
      <timestamp>2009-06-24T23:20:57Z</timestamp>
      <contributor>
        <username>MacTire02</username>
        <id>109116</id>
      </contributor>
      <comment>Created page with ' Unlike Irish, Manx Gaelic uses the traditional English alphabet with the exception of the letters 'x' and 'z'.  Hmm. I spy a couple of problems with that sentence. Firstly, Manx...'</comment>
      <text xml:space="preserve"> Unlike Irish, Manx Gaelic uses the traditional English alphabet with the exception of the letters 'x' and 'z'.

Hmm. I spy a couple of problems with that sentence. Firstly, Manx uses the same alphabet as Irish AND English - the Latin or Roman alphabet. If it is orthography that this sentence is implying then Manx shares some features with both Welsh and English, but that is nothing to do with alphabet and everything to do with orthography. Manx also uses the letters Ç, Ê and Ï (albeit the latter two in older examples), neither of which are available in ANY British Isles language. This sentence needs to be rewritten. --[[User:MacTire02|MacTire02]] ([[User talk:MacTire02|talk]]) 23:20, 24 June 2009 (UTC)</text>
      <sha1>iqizx7xd0bcyc40ssjszp2ns61xo1pa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lysimachia quadrifolia</title>
    <ns>110</ns>
    <id>200552</id>
    <revision>
      <id>1876101</id>
      <parentid>1547491</parentid>
      <timestamp>2010-07-07T18:37:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lysimachia quadrifolia&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Whorled Loosestrife
|binomial =Lysimachia quadrifolia
|image1 =Lysimachia quadrifolia_4319.JPG
|caption1 =Front view of the flower.
|image2 =Lysimachia quadrifolia 4325.JPG
|caption2=Flower from a different angle.
|image3=Lysimachia quadrifolia.jpg
|caption3=Whole plant
|description =Whorled Loosestrife is a weedy plant that most people would pull up without giving a second thought.  But if you see this plant in bloom, take a close look at the flowers.  They have five yellow pointed petals making the flower look like a star.  At the center of the flower is a tube called a ''style''.  It is surrounded by red triangles, one per petal.  Each flower grows at the end of a little stem called a petiole ('''peh'''-tee-ole) which attaches to the main stem.  Lots of things attach to the main stem at this point - not only four (sometimes five) flowers, but usually four (sometimes five) leaves as well.  It almost looks like the flowers are there to light up the plant's surroundings, as if they were the light fixtures in a parking lot or at a ball field.
|facts = The genus name of Whorled Loosestrife is ''Lysimachia'' ('''lie'''-sih-'''mock'''-ee-yuh).  It is named after Lysimachus, one of Alexander the Great's generals.  He was said to have fed a member of the genus to a bull to calm it down.  The colonists must have heard this legend, because they used to feed this plant to their oxen to make them work together peacefully.
}}</text>
      <sha1>mvn75noe3e4vfvbgqrewlopo40r93ue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:1983</title>
    <ns>3</ns>
    <id>200554</id>
    <revision>
      <id>1889893</id>
      <parentid>1547524</parentid>
      <timestamp>2010-07-16T00:22:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>non-free rationale needed for your images</comment>
      <text xml:space="preserve">== [[:File:Iges-settings.png]] is missing a [[Wikibooks:Media#Non-free use|fair use rationale]]==
{{mbox|type=warning|msg=
'''Thanks for uploading [[:File:Iges-settings.png]].''' The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about what Wikibooks includes because of [[w:United States copyright law|copyright law]], and requires that we maintain a strict [[Wikibooks:Copyright|copyright policy]]. [[:File:Iges-settings.png]] and other files you uploaded may soon be deleted unless a [[Wikibooks:Media#Non-free use|rationale]] for a fair use claim is provided.

In order to upload fair use material, specific rationale must be provided as to why fair use media is necessary, and how there are no free alternatives. Images or other media that do not have such rationale will likely be deleted as a copyright violation. If the information of a fair use media component could be duplicated by a free alternative, that media may not be uploaded. Please edit image descriptions pages directly to add {{tlx|fair use rationale}}; there's no need to upload the image again. If you have any questions, feel free to contact me, or [[WB:HELP|ask another Wikibookian]].

See {{UserImages2}} for a complete list of your uploads which may get deleted soon.&lt;br/&gt;Thank you. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 00:40, 25 June 2009 (UTC)}}


== [[:File:Maya-shelves-editor.png]] is missing a [[Wikibooks:Media#Non-free use|non-free use rationale]]==
{{tmbox|type=delete|text='''Thanks for uploading [[:File:Maya-shelves-editor.png]].''' The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about what Wikibooks includes because of [[w:United States copyright law|copyright law]], and requires that we maintain a strict [[Wikibooks:Copyright|copyright policy]]. [[:File:Maya-shelves-editor.png]] and other files you uploaded may soon be deleted unless a [[Wikibooks:Media#Non-free use|rationale]] for a non-free use claim is provided.

In order to upload fair use material, specific rationale must be provided as to why non-free use media is necessary, and how there are no free alternatives. Images or other media that do not have such rationale will likely be deleted as a copyright violation. If the information of a non-free use media component could be duplicated by a free alternative, that media may not be uploaded. Please edit image descriptions pages directly to add {{tlx|non-free use rationale}}; there's no need to upload the image again. If you have any questions, feel free to contact me, or [[WB:HELP|ask another Wikibookian]].

See {{UserImages2}} for a complete list of your uploads which may get deleted soon.&lt;br/&gt;Thank you. &amp;ndash;&amp;nbsp;[[User:Adrignola|Adrignola]]&amp;nbsp;&lt;small&gt;[[User talk:Adrignola|talk]]&lt;/small&gt; 00:22, 16 July 2010 (UTC)}}</text>
      <sha1>repaxwivkmmj1o4xnf7vqjeyki2ojtu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lotus corniculatus</title>
    <ns>110</ns>
    <id>200555</id>
    <revision>
      <id>1876102</id>
      <parentid>1547527</parentid>
      <timestamp>2010-07-07T18:37:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lotus corniculatus&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Birdsfoot Trefoil
|binomial =Lotus corniculatus
|image1 =Lotus-corniculatus-030605-800.jpg
|caption1 =Flower
|image2=Karringtand.jpg
|caption2=Whole plant
|image3 =Lotus corniculatus W.jpg
|caption3=Orange variety
|description =Birdsfoot Trefoil is a clover-like plant with oddly-shaped yellow flowers.  The plant doesn't get more than a couple of feet high, and usually is a high as the other plants it grows among.  It was brought to North America as a pasture crop because it can be grazed close to the ground and still survive.  The leaves usually appear in fives, even though the name suggests that there would only be three (''Trefoil'' means three leaves).  It was so named because three of the five leaves are held higher than the other two.
|facts = The &quot;Birdsfoot&quot; part of the name comes from the shape of the seed stalk.
}}</text>
      <sha1>fdau3budl2ypjgnppdawac0qrjz6wu7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Daphnep</title>
    <ns>3</ns>
    <id>200556</id>
    <revision>
      <id>1600684</id>
      <parentid>1547532</parentid>
      <timestamp>2009-08-04T23:34:35Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>Abusing multiple accounts: spam</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 23:34, 4 August 2009 (UTC)}}</text>
      <sha1>l07hlxndvfr68zsydwjq7k1q8qzhuhb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-bih</title>
    <ns>10</ns>
    <id>200558</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-bih" />
    <revision>
      <id>1547540</id>
      <timestamp>2009-06-25T00:56:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-bih]] to [[Template:False Friends of the Slavist/Wiki-bih]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-bih]]</text>
      <sha1>kyn3q4082exxue65hz91rhq1qrtm14q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-cz</title>
    <ns>10</ns>
    <id>200559</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-cz" />
    <revision>
      <id>1547543</id>
      <timestamp>2009-06-25T00:57:15Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-cz]] to [[Template:False Friends of the Slavist/Wiki-cz]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-cz]]</text>
      <sha1>iv4quhtxu6l77hx81ojl9v344dqcrx5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-hr</title>
    <ns>10</ns>
    <id>200560</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-hr" />
    <revision>
      <id>1547545</id>
      <timestamp>2009-06-25T00:57:44Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-hr]] to [[Template:False Friends of the Slavist/Wiki-hr]]</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-hr]]</text>
      <sha1>o4oijxe3s5oom05t2mnq1zj37v23dwg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-ka</title>
    <ns>10</ns>
    <id>200561</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-ka" />
    <revision>
      <id>1547547</id>
      <timestamp>2009-06-25T00:58:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-ka]] to [[Template:False Friends of the Slavist/Wiki-ka]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-ka]]</text>
      <sha1>8vgba2yxi8vwx00ympci2226oi3d7q4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-lso</title>
    <ns>10</ns>
    <id>200562</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-lso" />
    <revision>
      <id>1547550</id>
      <timestamp>2009-06-25T00:58:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-lso]] to [[Template:False Friends of the Slavist/Wiki-lso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-lso]]</text>
      <sha1>7av5gvbdncz9wtt8m3qoyu584t85akg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-mk</title>
    <ns>10</ns>
    <id>200563</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-mk" />
    <revision>
      <id>1547552</id>
      <timestamp>2009-06-25T00:59:14Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-mk]] to [[Template:False Friends of the Slavist/Wiki-mk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-mk]]</text>
      <sha1>h01oc0b03pk7kjp5ttbtg4znvuw80md</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-pl</title>
    <ns>10</ns>
    <id>200564</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-pl" />
    <revision>
      <id>1547554</id>
      <timestamp>2009-06-25T00:59:39Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-pl]] to [[Template:False Friends of the Slavist/Wiki-pl]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-pl]]</text>
      <sha1>aph75t3u73wwqnon3mptx6j6phmbia0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-rs</title>
    <ns>10</ns>
    <id>200565</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-rs" />
    <revision>
      <id>1547557</id>
      <timestamp>2009-06-25T01:00:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-rs]] to [[Template:False Friends of the Slavist/Wiki-rs]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-rs]]</text>
      <sha1>pk92t2hzoxnx0qnshchye031s671wxq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-rus</title>
    <ns>10</ns>
    <id>200566</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-rus" />
    <revision>
      <id>1547559</id>
      <timestamp>2009-06-25T01:00:47Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-rus]] to [[Template:False Friends of the Slavist/Wiki-rus]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-rus]]</text>
      <sha1>01veh4sw0gfz9slzrfc1a411yxl1wqv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-sk</title>
    <ns>10</ns>
    <id>200567</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-sk" />
    <revision>
      <id>1547566</id>
      <timestamp>2009-06-25T01:02:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-sk]] to [[Template:False Friends of the Slavist/Wiki-sk]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-sk]]</text>
      <sha1>jx1ii59azf1b7dt9fxcqw7neelonmw1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-slo</title>
    <ns>10</ns>
    <id>200568</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-slo" />
    <revision>
      <id>1547571</id>
      <timestamp>2009-06-25T01:03:10Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-slo]] to [[Template:False Friends of the Slavist/Wiki-slo]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-slo]]</text>
      <sha1>a9avnodnjgwkrc8ap8y40skpmgg9few</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-ua</title>
    <ns>10</ns>
    <id>200569</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-ua" />
    <revision>
      <id>1547578</id>
      <timestamp>2009-06-25T01:04:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-ua]] to [[Template:False Friends of the Slavist/Wiki-ua]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-ua]]</text>
      <sha1>t7c0232uv7k9cjp2xynfuj4attwkps7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-uso</title>
    <ns>10</ns>
    <id>200570</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-uso" />
    <revision>
      <id>1547584</id>
      <timestamp>2009-06-25T01:04:59Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-uso]] to [[Template:False Friends of the Slavist/Wiki-uso]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-uso]]</text>
      <sha1>tgxshnqu73h200l15ste3jr209gf374</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FFWiki-yu</title>
    <ns>10</ns>
    <id>200571</id>
    <redirect title="Template:False Friends of the Slavist/Wiki-yu" />
    <revision>
      <id>1547589</id>
      <timestamp>2009-06-25T01:05:35Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>moved [[Template:FFWiki-yu]] to [[Template:False Friends of the Slavist/Wiki-yu]]: naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:False Friends of the Slavist/Wiki-yu]]</text>
      <sha1>6u2xd8oc91ej2b11gsnyw2tchs28j4a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:GrantsDotGov.jpg</title>
    <ns>6</ns>
    <id>200572</id>
    <revision>
      <id>2359674</id>
      <parentid>1547704</parentid>
      <timestamp>2012-06-05T14:24:00Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>replace PD-self with a more correct non free rationale</comment>
      <text xml:space="preserve">== Licensing: ==
{{non-free web screenshot}}
{{Non-free use rationale
|module      = Directing_Technology/Grants
|copyrights  = www.grants.gov
|source      = self taken screenshot of www.grants.gov
|not free    = there is no free equivalent of this page
|rationale   = to give a visual explanation of the search function of that page.
}}</text>
      <sha1>t7w8axr3f0fswj37sga3q5q0z5ll9zb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:222.153.235.180</title>
    <ns>3</ns>
    <id>200573</id>
    <revision>
      <id>1547741</id>
      <timestamp>2009-06-25T02:23:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/222.153.235.180|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 02:23, 25 June 2009 (UTC)}}</text>
      <sha1>ekbci000q0pyjcx7k6ygpbannkasvh5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Meteorman7228</title>
    <ns>3</ns>
    <id>200574</id>
    <revision>
      <id>1547833</id>
      <parentid>1547823</parentid>
      <timestamp>2009-06-25T03:29:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Meteorman7228!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:29, 25 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>6pumeqzencxolxn0pkgaj3mdfml0l9b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Meteorman7228</title>
    <ns>2</ns>
    <id>200575</id>
    <revision>
      <id>1547818</id>
      <timestamp>2009-06-25T03:16:08Z</timestamp>
      <contributor>
        <username>Meteorman7228</username>
        <id>214098</id>
      </contributor>
      <comment>Created page with 'i am from wikipedia for more info see that page'</comment>
      <text xml:space="preserve">i am from wikipedia for more info see that page</text>
      <sha1>cvivg08dw2gss9u0wdvcqsvztdbpmvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium aureum</title>
    <ns>110</ns>
    <id>200579</id>
    <revision>
      <id>1876071</id>
      <parentid>1547829</parentid>
      <timestamp>2010-07-07T18:33:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium aureum&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Hop Clover
|binomial =Trifolium aureum
|image1 =Trifolium aureum W.jpg
|caption1 =Flower
|image2=Trifolium aureum eF.jpg
|caption2=Flower, stem, and leaves
|image3 =Trifolium aureum.jpg
|caption3=Colony
|description =Hop clover is a low plant with a yellow flower head.  The flower itself looks much like any other clover flower, only it is yellow.  The leaves are sessile ('''sess'''-ile) meaning they are attached directly to the plant's main stem without a stalk.  It does not grow much taller than about a foot high.  When the flower gets old, it turns brown and paper-like.  
|facts = Hop Clover was brought to North America in 1800 to be used as a pasture crop.  It grows on both the east and west coasts of the United States, but is absent from the middle part of the country.
}}</text>
      <sha1>6si9ozbt9xy86gopiv1esli1mc3jp0z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:202.59.29.82</title>
    <ns>3</ns>
    <id>200580</id>
    <revision>
      <id>1547832</id>
      <timestamp>2009-06-25T03:28:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Notification regarding [[:Snowboarding]]. using [[User:Mike.lifeguard/Twinkle Speedy documentation|TW]]</comment>
      <text xml:space="preserve">

==[[Snowboarding]]==
{{mbox|type=notice|msg=
[[Snowboarding|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Snowboarding}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:28, 25 June 2009 (UTC)
}}</text>
      <sha1>sbme0tns26g7ns0gryaz4nbmtmmgzai</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Verbascum thapsus</title>
    <ns>110</ns>
    <id>200581</id>
    <revision>
      <id>2470264</id>
      <parentid>1876068</parentid>
      <timestamp>2012-12-30T08:31:03Z</timestamp>
      <contributor>
        <username>Meisam</username>
        <id>91236</id>
      </contributor>
      <minor />
      <comment>[[:commons:COM:FR|File renamed]]: [[File:Dsc00601.jpg]] → [[File:Cirque de Mafate, Réunion - 2.jpg]] Change from completely meaningless names into suitable names, according to what the image displays</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Common Mullein
|binomial =Verbascum thapsus
|image1 =Starr 040723-0267 Verbascum thapsus.jpg
|caption1 =Flower
|image2=Starr 040723-0126 Verbascum thapsus.jpg
|caption2=Second year plant
|image3 =Cirque de Mafate, Réunion - 2.jpg
|caption3=First year plant
|description =Common Mullein is a tall plant that lives for two years.  During the first year it forms a bunch of leaves forming a circle around the plant's root.  In the second year, it sends up a tall stem, sometimes over six feet tall.  The stem is covered with flowers, but only a few of them are in bloom at a time.  The flowers are yellow with five rounded petals.  The leaves are covered with a very soft, velvety hair which leads to one of its many nicknames, &quot;lamb's ear.&quot;  If you find one of these plants, do take the time to feel the soft leaves.
|facts = Common Mullein has many medical uses, and has been found to be particularly effective for easing coughs.  It can also be used to make a dye, and the stems have been used as torches.
}}</text>
      <sha1>8jjal106acj4b2iac6ncrk0syysztaf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Hemerocallis</title>
    <ns>110</ns>
    <id>200582</id>
    <revision>
      <id>1876117</id>
      <parentid>1547842</parentid>
      <timestamp>2010-07-07T18:39:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Hemerocallis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Day Lily
|binomial =Hemerocallis
|image1 =Daylily (Hemerocallis fulva) v2.jpg
|caption1 =Orange flower
|image2=Colpfl17a.jpg
|caption2=Yellow flower
|image3 =Hemerocallis thunbergii2.UME.jpg
|caption3=Several Daylilies in a garden
|description =The Daylily produces huge yellow or orange flowers, depending on the variety.  Each flower looks like it has six petals, but really, it only has three true petals.  The other three are called tepals ('''tee'''-pulls).  The leaves are long and slender.  Daylilies belong to a large category of plant called monocots ('''Mah'''-no-kots).  Monocots often have long slender leaves, and the veins in these leaves will always run in the same direction and do not branch.  The flowers of most monocots almost always have either three or six petals.  If a plant is not a monocot, it's a dicot ('''die'''-cot).  So even if you can't tell anything else about a plant, you should be able to tell if it's a monocot or a dicot by looking at the leaf veins and counting the petals.  
|facts = The Daylily is an edible plant.  The Chinese use the flowers as an ingredient in hot and sour soups.
}}</text>
      <sha1>pkgqd1ir0zdei0upivs4qwx2zj17s1b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Linaria vulgaris</title>
    <ns>110</ns>
    <id>200583</id>
    <revision>
      <id>1876104</id>
      <parentid>1547847</parentid>
      <timestamp>2010-07-07T18:38:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Linaria vulgaris&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Butter and Eggs
|binomial =Linaria vulgaris
|image1 =Linaria vulgaris 20050825 976.jpg
|caption1 =Flowers
|image2=Linaria vulgaris.jpg
|caption2=Growing in a field
|image3 =Linaria vulgaris 03 ies.jpg
|caption3=Leaves
|description =Butter and Eggs is a beautiful yellow and orange flower.  The orange part looks like the yolk of an egg, and the yellow part is about the same color as butter.  These flowers have an odd shape.  The orange lip is closed, so the flower can only be pollinated by strong insects such as honey bees or bumble bees.  Butter and Eggs grows between one and three feet high, and has long narrow leaves.
|facts = While most commonly found as a weed, Butter and Eggs is sometimes grown for flower shops. The flowers last a long time in a vase. Like snapdragons, they are often grown in children's gardens for the &quot;snapping&quot; flowers which can be made to &quot;talk&quot; by squeezing them at the base of the flower.  Try it!
}}</text>
      <sha1>tb6dzwrslh62fcgxqaamo4wp3qn93z7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Informatics Practices for Class XI (CBSE)/SQL Functions and Grouping</title>
    <ns>0</ns>
    <id>200586</id>
    <revision>
      <id>1565464</id>
      <parentid>1547877</parentid>
      <timestamp>2009-07-10T01:26:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">== Functions ==

===Syntax===

Function names are case insensitive. You can write them as you prefer:

 SELECT database() -- ok
 SELECT DataBase() -- ok
 SELECT DATABASE() -- ok

If the IGNORE_SPACE SQL_MODE is not set, you can not put a space between the function name and the first parenthesis. It would return a 1064 error. IGNORE_SPACE is usually 0. The reason is that the parser is faster if that flag is disabled. So:

 SELECT DATABASE () -- usually not accepted
 SELECT DATABASE() -- always works fine

However, this restriction only applies to the native MySQL functions. UDFs and stored functions may be written with a space after the name.

You can't use a value calculated in the SELECT clause as a constraint in the WHERE clause (its a chicken &amp; egg problem); the WHERE clause is what determines the values in the SELECT clause. What you want is the HAVING clause which is applied *after* all matching rows have been found.

=== General functions ===

Type-indipendent functions.


'''BENCHMARK(times, espression)'''

Executes espression n times and returns how time it spent. Useful to find bottlenecks in SQL expressions.

 BENCHMARK(10000, CAST(666 AS TEXT))

'''CAST(value AS type)'''

Returns value converted in the specified type.

'''CHARSET(string)'''

Returns the CHARACTER SET used by string.

'''COALESCE(value, ...)'''

Returns the first argument which is not NULL. If all arguments are NULL, returns NULL. There must be at least one argument.

'''COERCIBILITY(string)'''

'''COLLATION(string)'''

Returns the COLLATION used by the string.

'''CONNECTION_ID()'''

Returns the id of the current thread.

'''CONVERT(value, type)'''

Returns value converted to the specified type.

 SELECT CONVERT ('666', UNSIGNED INTEGER)

'''CONVERT(string USING charset)'''

Converts the passed string to the specified CHARACTER SET.

 SELECT CONVERT ('This is a text' USING utf8)

'''CURRENT_USER()'''

Returns the username and the hostname used in the current connection.

 SELECT CURRENT_USER()
 SELECT CURRENT_USER -- it's correct

'''DATABASE()'''

Returns the current database's name, set with the USE command.

 SELECT DATABASE()

'''FOUND_ROWS()'''

After a SELECT with a LIMIT clause and the SQL_CALC_FOUND_ROWS keyword, you can run another SELECT with the FOUND_ROWS() function. It returns the number of rows found by the previous query if it had no LIMIT clause.

 SELECT SQL_CALC_FOUND_ROWS * FROM stats ORDER BY id LIMIT 10 OFFSET 50
 SELECT FOUND_ROWS() AS n

'''GREATEST(value1, value2, ...)'''

Returns the greatest argument passed.

'''IF(val1, val2, val3)'''

If val1 is TRUE, returns val2. If val1 is FALSE or NULL, returns val3.

'''IFNULL(val1, val2)'''

If val1 is NULL, returns val2; else, returns val1.

'''ISNULL(value)'''

If the value passed is NULL returns 1, else returns 0.

'''INTERVAL(val1, val2, val3, ...)'''

'''NULLIF(val1, val2)'''

If val1 = val2, returns NULL; else, returns val1.

'''LEAST(value1, value2, ...)'''

Returns the minimum argument passed.

=== Date and time ===

 SELECT * FROM mytable
  WHERE datetimecol &gt;= (CURDATE() - INTERVAL 1 YEAR)  AND
  datetimecol &lt; (CURDATE() - INTERVAL 1 YEAR) INTERVAL 1 DAY;

 SELECT IF(DAYOFMONTH(CURDATE()) &lt;= 15,
  DATE_FORMAT(CURDATE(), '%Y-%m-15'),
  DATE_FORMAT(CURDATE() + INTERVAL 1 MONTH, '%Y-%m-15')) AS next15
 FROM table;

 SELECT YEAR('2002-05-10'), MONTH('2002-05-10'), DAYOFMONTH('2002-05-10')

 SELECT PurchaseDate FROM table WHERE YEAR(PurchaseDate) &lt;= YEAR(CURDATE())

 SELECT columns FROM table
 WHERE start_time &gt;= '2004-06-01 10:00:00' AND end_time &lt;= '2004-06-03 18:00:00'

 SELECT * FROM t1
 WHERE DATE_FORMAT(datetime_column, '%T') BETWEEN 'HH:MM:SS' AND 'HH:MM:SS'

 SELECT Start_time, End_time FROM Table
 WHERE Start_time &gt;= NOW() - INTERVAL 4 HOUR
 
 SELECT NOW() + INTERVAL 60 SECOND

 SELECT UNIX_TIMESTAMP('2007-05-01'); -- 1177970400
 SELECT FROM_UNIXTIME(1177970400); -- 2007-05-01 00:00:00

===Aggregate functions===

====COUNT(field)====

If * is given, instead of the name of a field, COUNT() returns the number of rows found by the query. It's commonly used to get the number of rows in a table.

 SELECT COUNT(*) FROM `antiques`

If the DISTINCT keyword is used, identical rows are counted only once.

 SELECT COUNT(DISTINCT *) FROM `antiques`

If a field name is given, returns the number of non-NULL values.

 SELECT COUNT(`cost`) FROM `antiques`

If a field name is given and the DISTINCT keyword is given, returns the number of non-NULL values, and identical values are counted only once.

 SELECT COUNT(DISTINCT `cost`) FROM `antiques`

You can count non-NULL values for an expression:

 SELECT COUNT(`longitude` + `latitude`) FROM `cities`

This returns the number of rows where longitude and latitude are both non-NULL.

====MAX(field)====

MAX() can be used to get the maximum value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT MAX(`cost`) FROM `antiques`
 SELECT MAX(LENGTH(CONCAT(`first_name`, ' ', `last_name`))) FROM `subscribers`

====MIN(field)====

MAX() can be used to get the minimum value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT MIN(`cost`) FROM `antiques`

====AVG(field)====

MAX() can be used to get the average value for an expression in the rows matching to a query. If no row matches the query, returns NULL.

 SELECT AVG(`cost`) FROM `antiques`

====SUM(field)====

SUM() can be used to get the sum of the values for an expression in the rows matching to a query. If no row matches the query, returns NULL.

If SUM(SELECTED expr) is used, identical values are added only once. SUM(DISTINCT) has been added in MySQL 5.1.

 SELECT SUM(`cost`) FROM `antiques`

==== Aggregate bit functions ====

General syntax:

 FUNCTION_NAME(''expression'')

These functions calculate ''expression'' for each row of the resultset and permorm the calculation between all the ''expression''s. These are bitwise functions. The precision used is 64 bit.

'''AND'''

 SELECT BIT_AND(ip) FROM log

'''OR'''

 SELECT BIT_OR(ip) FROM log

(returns 0 if there are no rows)

'''XOR'''

 SELECT BIT_XOR(ip) FROM log

(returns 0 if there are no rows)

{{BookCat}}</text>
      <sha1>aybfwxaoejqt6mwxlxhiv712lfmivcz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Informatics Practices for Class XI (CBSE)/Joins and Subqueries</title>
    <ns>0</ns>
    <id>200587</id>
    <revision>
      <id>1565461</id>
      <parentid>1547879</parentid>
      <timestamp>2009-07-10T01:25:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">=== Joins ===
The Most important aspect of SQL is its relational features. You can query, compare and calculate two different tables having entirely different structure. Joins and subselects are the two methods to join tables. Both methods of joining tables should give the same results. The natural join is faster on most SQL platforms.

In the following example a student is trying to learn what the numbers are called in hindi.

 CREATE TABLE english (Tag int, Inenglish varchar(255));
 CREATE TABLE hindi (Tag int, Inhindi varchar(255));

 INSERT INTO english (Tag, Inenglish) VALUES (1, 'One');
 INSERT INTO english (Tag, Inenglish) VALUES (2, 'Two');
 INSERT INTO english (Tag, Inenglish) VALUES (3, 'Three');

 INSERT INTO hindi (Tag, Inhindi) VALUES (2, 'Do');
 INSERT INTO hindi (Tag, Inhindi) VALUES (3, 'Teen');
 INSERT INTO hindi (Tag, Inhindi) VALUES (4, 'Char');

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;select * from english&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;select * from hindi&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Tag&lt;/td&gt;&lt;td&gt;Inenglish &lt;/td&gt;&lt;td&gt;	Tag &lt;/td&gt;&lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 &lt;/td&gt; &lt;td&gt;One &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;	Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2 &lt;/td&gt; &lt;td&gt;Two &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt;&lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

====Cartesian join====
A Cartesian join is when you join every row of one table to every row of another table.

 SELECT * FROM english, hindi

It is also called Cross Join and may be written in this way:

 SELECT * FROM english CROSS JOIN hindi

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;Tag&lt;/td&gt;&lt;td&gt;Inenglish&lt;/td&gt;&lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1 &lt;/td&gt; &lt;td&gt;One &lt;/td&gt; &lt;td&gt;2 &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;Two &lt;/td&gt; &lt;td&gt;2 &lt;/td&gt; &lt;td&gt;	Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; One &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 1 &lt;/td&gt; &lt;td&gt; One &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two  &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

====Inner Join====

 SELECT hindi.Tag, english.Inenglish, hindi.Inhindi
 FROM english, hindi
 WHERE english.Tag = hindi.Tag
&lt;!-- Say why we don't see the word JOIN please--&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inenglish&lt;/td&gt; &lt;td&gt;Inhindi &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt; Two &lt;/td&gt; &lt;td&gt; Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

You can also write the same query as
 SELECT hindi.Tag, english.Inenglish, hindi.Inhindi
 FROM english INNER JOIN hindi
 ON english.Tag = hindi.Tag

Natural Joins using &quot;using&quot;
(Compatible: MySQL 4+; but changed in MySQL 5)
The following statement using &quot;USING&quot; method will display the same results.

 SELECT hindi.tag, hindi.Inhindi, english.Inenglish
 FROM hindi NATURAL JOIN english
 USING (Tag)

====Outer Joins====
&lt;table&gt;
&lt;tr&gt;&lt;td&gt; Tag &lt;/td&gt; &lt;td&gt; Inenglish &lt;/td&gt; &lt;td&gt;Tag &lt;/td&gt; &lt;td&gt;Inhindi&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;1 &lt;/td&gt;&lt;td&gt; One&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;		
&lt;tr&gt; &lt;td&gt;2 &lt;/td&gt;&lt;td&gt; Two &lt;/td&gt; &lt;td&gt; 2 &lt;/td&gt; &lt;td&gt;Do &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Three &lt;/td&gt; &lt;td&gt; 3 &lt;/td&gt; &lt;td&gt; Teen &lt;/td&gt; &lt;/tr&gt;
&lt;tr&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; 4 &lt;/td&gt; &lt;td&gt; Char &lt;/td&gt; &lt;/tr&gt;
&lt;/table&gt;

==== LEFT JOIN / LEFT OUTER JOIN ====
The syntax is as follows:
 SELECT field1, field2 FROM table1 LEFT JOIN table2 ON field1=field2

 SELECT e.Inenglish as English, e.Tag, '--no row--' as Hindi
 FROM english AS e LEFT JOIN hindi AS h
 ON e.Tag=h.Tag 
 WHERE h.Inhindi IS NULL

 English  tag   Hindi
 One      1     --no row-

====Right Outer Join====
 SELECT '--no row--' AS English, h.tag, h.Inhindi AS Hindi
 FROM english AS e RIGHT JOIN hindi AS h
 ON e.Tag=h.Tag
 WHERE e.Inenglish IS NULL

English   tag     Hindi
--no row--   4      Char

* Make sure that you have the same name and same data type in both tables.
* The keywords LEFT and RIGHT are not absolute, they only operate within the context of the given statement: we can reverse the order of the tables and reverse the keywords, and the result would be the same.
* If the type of join is not specified as inner or outer then it will be executed as an INNER JOIN.

==== Full Outer Join ====

As for v5.1, MySQL does not provide FULL OUTER JOIN. You may emulate this using a series of UNIONed SELECT statements.

==== Multiple joins ====

It is possible to join more than just two tables:
 SELECT ... FROM a JOIN (b JOIN c on b.id=c.id) ON a.id=b.id

Here is an example from ''Savane'':
 mysql&gt; SELECT group_type.type_id, group_type.name, COUNT(people_job.job_id) AS count 
        FROM group_type
         JOIN (groups JOIN people_job ON groups.group_id = people_job.group_id) 
         ON group_type.type_id = groups.type
        GROUP BY type_id ORDER BY type_id
 +---------+--------------------------------------+-------+
 | type_id | name                                 | count |
 +---------+--------------------------------------+-------+
 |       1 | Official GNU software                |   148 |
 |       2 | non-GNU software and documentation   |   268 |
 |       3 | www.gnu.org portion                  |     4 |
 |       6 | www.gnu.org translation team         |     5 |
 +---------+--------------------------------------+-------+
 4 rows in set (0.02 sec)

===Subqueries===
(Compatible: Mysql 4.1 and later...'''''Bold text''''')

* SQL subqueries let you use the results of one query as part of another query. 
* Subqueries are often natural ways of writing a statement.
* Let you break a query into pieces and assemble it.
* Allow some queries that otherwise can't be constructed. Without using a subquery, you have to do it in two steps.
* Subqueries always appear as part of the WHERE (or HAVING) clause.
* Only one field can be in the subquery SELECT. It means Subquery can only produce a single column of data as its result.
* ORDER BY is not allowed; it would not make sense.
* Usually refer to name of a main table column in the subquery.
* This defines the current row of the main table for which the subquery is being run. This is called an outer reference.

For e.g. If RepOffice= OfficeNbr from Offices table, list the offices where the sales quota for the office exceeds the sum of individual salespersons' quotas
 SELECT City FROM Offices WHERE Target &gt; ???
??? is the sum of the quotas of the salespeople, i.e.
 SELECT SUM(Quota)
 FROM SalesReps 
 WHERE RepOffice = OfficeNbr
We combine these to get
 SELECT City FROM Offices 
 WHERE Target &gt; (SELECT SUM(Quota) FROM SalesReps 
 WHERE RepOffice = OfficeNbr)

Display all customers with orders or credit limits &gt; $50,000.
Use the DISTINCT word to list the customer just once.
 SELECT DISTINCT CustNbr 
 FROM Customers, Orders 
 WHERE CustNbr = Cust AND (CreditLimit&gt;50000 OR Amt&gt;50000);

{{BookCat}}</text>
      <sha1>saq24tl8ti9z5mudz427bzz016wvdhy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Multinomial Ordered Models</title>
    <ns>0</ns>
    <id>200588</id>
    <revision>
      <id>1655475</id>
      <parentid>1650042</parentid>
      <timestamp>2009-11-12T12:20:21Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>move to mulitinomial models</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;


== References ==

{{reflist}}</text>
      <sha1>fjy47q7npzevmluspc9snhs09bki8n2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Spanish/Lessons/Introducci?n a la gram?tica</title>
    <ns>1</ns>
    <id>200590</id>
    <revision>
      <id>1547898</id>
      <timestamp>2009-06-25T08:25:56Z</timestamp>
      <contributor>
        <ip>216.175.104.78</ip>
      </contributor>
      <comment>plural form missing &quot;s&quot;</comment>
      <text xml:space="preserve">== plural form missing &quot;s&quot; ==

plural unas unas niñas some girl
plural unas unas niñas some girls</text>
      <sha1>0ivoxjlt36refeyrimcyx3q7byreqy6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Linear Algebra/Quotient Space</title>
    <ns>1</ns>
    <id>200591</id>
    <revision>
      <id>1547909</id>
      <timestamp>2009-06-25T10:44:38Z</timestamp>
      <contributor>
        <ip>195.116.242.254</ip>
      </contributor>
      <comment>Created page with 'DO THE PROOF!!!!!!!!!!!!!!!!!!!!!!!!'</comment>
      <text xml:space="preserve">DO THE PROOF!!!!!!!!!!!!!!!!!!!!!!!!</text>
      <sha1>11pl5c3wcpnhm942j8apx4qiuuwwv2x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Nataraja87</title>
    <ns>3</ns>
    <id>200595</id>
    <revision>
      <id>1547915</id>
      <timestamp>2009-06-25T10:56:39Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Nataraja87!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:56, 25 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;
== Japanese ==
I noticed your work on the [[Japanese]] wikibook. I just wanted to make a quick note on the kanji order images. These are organised by the [[commons:Commons:Stroke Order Project|Commons:Stroke Order Project]] and if we ever get around to it, this will be solved by somehow making &lt;code&gt;*-jorder*.gif&lt;/code&gt; versions of these. Please feel free to focus your efforts where you best see fit, but note that delving into the stroke order mess is a big task... --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:56, 25 June 2009 (UTC)</text>
      <sha1>gn9i98husvwc0jk8hb7406ncmv5zoxx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/A design example 1</title>
    <ns>1</ns>
    <id>200596</id>
    <revision>
      <id>1547928</id>
      <parentid>1547927</parentid>
      <timestamp>2009-06-25T11:02:10Z</timestamp>
      <contributor>
        <username>Stef.lievens</username>
        <id>189810</id>
      </contributor>
      <minor />
      <text xml:space="preserve">The reason for the update of the &quot;OLD version&quot; is because there was a lot of unnecessary information.
Following information is not wanted (no extra knowledge about how to design a system):
*technical information
*repeating something available on wikiPEDIA
*excessive summation of examples

Also, the structure wasn't up to date. The new structure uses the 5 phases as given in the chapter Design Process.

Also added information of the system complexity and design context

SUGGESTION:
* The design example should be moved to a more appropriate place within the wikibook. (i.e. an appendix??)
* Information on how/why the given subsystems are chosen = reason why those, and not other subsystems. However this is certainly not an easy task.</text>
      <sha1>3zdroei8n1z8y2tdjebobtdg1xk23dd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:76.104.213.84</title>
    <ns>3</ns>
    <id>200597</id>
    <revision>
      <id>1547923</id>
      <timestamp>2009-06-25T11:00:57Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome.</comment>
      <text xml:space="preserve">{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }}

Finally, I just wanted to give my personal thanks for your valuable contributions to the [[Japanese]] wikibook.

--[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 11:00, 25 June 2009 (UTC)</text>
      <sha1>julgaqlqo6bfnwey1w6yzioc26g71y9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:24.82.211.23</title>
    <ns>3</ns>
    <id>200599</id>
    <revision>
      <id>1547925</id>
      <timestamp>2009-06-25T11:01:41Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome.</comment>
      <text xml:space="preserve">{{#ifeq:&quot;{{NAMESPACE}}&quot;| &quot;User talk&quot;|
Hello and '''[[Wikibooks:Welcome, newcomers|welcome]]''' to [[Wikibooks]], a collection of open-content textbooks!

You should consider [[Special:Userlogin|creating an account or logging in]]. It's free and requires no personal information. Here are some advantages:

* A username of your choice.
* Greater security and privacy, as your IP address will be hidden from most users.
* Your own personal user page and talk page.
* [[Special:Contributions/{{PAGENAME}}|Your contributions]] will directly attributed to you.
* The use of your own [[Help:Watching pages|watchlist]] to monitor pages that you are interested in.
* Your opinions carry greater weight in the [[Wikibooks:Decision making|decision making process]].
* You become a recognized member of the Wikibooks community.

We hope that you choose to become a Wikibookian and [[Special:Userlogin|create an account]].

Feel free to ask any questions on my talk page or in the [[Wikibooks:Reading room|Reading room]].
Be sure to sign your talk page comments with four tildes (&lt;nowiki&gt;~~~~&lt;/nowiki&gt;).

| {{#if:  | |&lt;!-- this is so if anyone tries to use it where it doesn't go they will know. --&gt;
{{mbox|type=warning|This template must only be used on '''User [[Help:Talk page|discussion]]''' pages.}} }} }} --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 11:01, 25 June 2009 (UTC)</text>
      <sha1>5cvpeq2izj2d0wrd1sjr853m8djc7du</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thermochap/Sandbox/Shrink Me</title>
    <ns>2</ns>
    <id>200600</id>
    <revision>
      <id>1651658</id>
      <parentid>1651653</parentid>
      <timestamp>2009-11-03T15:58:22Z</timestamp>
      <contributor>
        <username>Thermochap</username>
        <id>87911</id>
      </contributor>
      <comment>/* See Also */</comment>
      <text xml:space="preserve">[[Image:Deepzoom.png|thumb|350px|right|Atom clusters with blood cell &amp; Andromeda galaxy in background.]]

This is a sandbox page to explore the '''justaposition of worlds''' on two or more size scales.

The image at right is an example of the range of objects that might be seen with a very tiny camera.  If we could pan back to see the pico-human who is taking this photograph, then this would be an example of two-world juxtaposition.

== Introduction ==

Modern technology is giving us unprecedented understanding of, and access to, processes on size-scales ranging from that of humans to that of atoms. As a result, thoughts about changing perspective are increasingly both fun and of potentially practical value.

Put another way, now it is not only fun to imagine what it would be like to take a shrinking pill like Alice in Wonderland. The prospect of building a 12&quot; globe with a 3D model of every house visible on Google Earth is moving into technological range, as is the possibility of finding robotic or perhaps even biological inhabitants that might be inclined to take advantage of such emerging real estate.

== Examples ==

=== Models ===

==== The meter &amp;hArr; millimeter model ====

This takes objects which are a meter in size down to a millimeter.  Hence size is divided by a factor of 1000.

Imagine, for example, that your living room floor were covered by a 1/1000 model of a present day city.  What would that city look like to you?

:If ordinary humans can resolve a tenth of a millimeter with one's naked eye, they might only be able to resolve a tenth of a &quot;milli-world meter&quot; i.e. objects that are about four &quot;milli-world inches&quot; across.  That means that you might be able to see a milli-human's hand, but you probably couldn't see what they were doing with their fingers.  [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 18:24, 26 June 2009 (UTC)

Conversely, what would your coffee table look like to the milli-residents of this city?  How about a piece of pollen blown in through an open window, or a skin cell shed when you scraped your hand on the edge of the desk? 

In a related vein, how would your milli-cars work differently than do normal cars?  Would seat belts be as important?  Could they be powered by miniature internal combustion engines, or would some other kind of engine make more sense?  How would the milli-mileage of these milli-cars compare to that of an ordinary-sized car?

==== The meter &amp;hArr; micron model ====

This shrinks objects which are a meter in size down to only a micron in size.  Hence distances are multiplied by 10&lt;sup&gt;-6&lt;/sup&gt;.

:The smallest things ordinary folks could see in this model might be 100 &quot;micro-world meters&quot; across. [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:06, 26 June 2009 (UTC)

Imagine for example that your living room floor were shrunk to milli-world size, so that the city-model in your living room now existed on the micro-world scale.  What would that micro-world city look like to normal people?  How big would the micro-worlder's &quot;micro-planet earth&quot; be?

:I guess from below that the micro-planet earth would be about 41.8 feet in diameter.  Isn't that about as big as a small house? [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 22:59, 25 June 2009 (UTC)

Conversely, how would un-shrunk humans look to the micro-humans living in this shrunken town?  What would one of their big toes look like?  Would one of their fingerprints look like a maze in which you could get lost?  

Similarly, how big would atoms look to these micro-humans?  Would they be big enough to see with the naked eye?  Could modern 3D printers or [http://en.wikipedia.org/wiki/Rapid_prototyping rapid prototyping devices] make physical models for normal-sized people whose atom-scale structure would let us pretend that we were micro-humans too?

Could the micro-cars in this shrunken city similarly run on an internal combustion engine, or would something else be needed?  How would their micro-mileage compare?  Would speed limits be the same, and how might seatbelts for these micro-cars be redesigned?  How about micro-airplanes, and micro-parachutes?

==== The one-foot-diameter globe ====

[[File:3quarter globe.jpg|right|thumb|What's it like to live here?]]

Here the scale factor takes the earth's diameter (4.18&amp;times;10&lt;sup&gt;7&lt;/sup&gt; feet) down to one foot.  This requires multiplication by a factor of 2.39&amp;times;10&lt;sup&gt;-8&lt;/sup&gt;, and may be useful e.g. for building [http://en.wikipedia.org/wiki/Solar_system_model scale model solar systems] on the size scale of cities.

You probably already know what such a globe would look like to you, as well as what the tiny cities and city streets would look like to the naked eye.  Finding the street on which you live might be tough!

:The smallest thing ordinary folk might be able to see with their naked eye in this model might be about 0.1 milli-meter or 10&lt;sup&gt;-4&lt;/sup&gt;&amp;times;4.18&amp;times;10&lt;sup&gt;7&lt;/sup&gt; ~ 4180 &quot;globe-world meters&quot; or 4180/1609 ~ 2.6 &quot;globe-world miles&quot; across. [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:11, 26 June 2009 (UTC)

Conversely, however, what would your finger look like to the Nanoworld-2 residents of such a globe?  What would the cells in your finger look like?  What would the molecules in the cell membrane surfaces of your finger look like?  What would the atoms that make up those molecules look like?  Would residents of these cities be able to see anything ''inside'' the atoms that make up those molecules?

How might residents of those shrunken cities power their automobiles?  Would their airplanes have wings, or something else?  Would the plumbing in their homes still work, or would that too have to be redesigned?

=== Media ===

==== Fiction ====

* [http://books.google.com/books?id=emISbmWjamwC Gulliver's Travels] by Jonathan Swift, 1727
* [http://books.google.com/books?id=tLhfenynsWoC The Nutcracker and the Mouse King] by E. T. Hoffman, 1816 (Amazon)
* [http://books.google.com/books?id=CLoNAAAAYAAJ Alice's Adventures in Wonderland] by Lewis Carroll, 1865
* [http://books.google.com/books?id=4843AAAAIAAJ Mr. Tompkins in Wonderland] by George Gamow, 1940 (Amazon)
* Engines of Creation by K. Eric Drexler, 1987 (Amazon)
* [http://books.google.com/books?id=lYiE4mplneAC Two Bad Ants] by Chris Van Allsburg, Houghton Mifflin, Boston, 1988 (Amazon)
* [http://books.google.com/books?id=o3rXIRFTa64C Alice in QuantumLand] by Robert Gilmore, 1995 (Amazon)
* [http://books.google.com/books?id=rX6K6MvOGzMC The New World of Mr. Tompkins] by Gamow and Stammard, 1999 (Amazon)
* Shrinking Mouse by Pat Hutchins, Scholastic, New York, 2000 (Amazon)

==== Movies and videos ====

* The Incredible Shrinking Man, 1957 (Amazon)
* Fantastic Voyage, 1966 (Amazon)
* Willie Wonka and the Chocolate Factory, 1971
* The Incredible Shrinking Woman, 1982 (Amazon)
* Inner Space, 1987
* Honey - I Shrunk the Kids, 1989 (Amazon)
* Honey - I Blew Up the Kid, 1992
* Honey - We Shrunk Ourselves, 1997 (Amazon)
* A Bug's Life, 1998 (Amazon)
* The [http://multimedia.mcb.harvard.edu/media.html inner life of a cell] [http://www.youtube.com/watch?v=BVvvx5HGpLg video].

== Effects of Size ==

=== Talking about size ===

&lt;center&gt;
{| class=&quot;wikitable&quot;  border = &quot;1&quot; 
|+ Useful numbers for [[:Image:Shapeclass.png|equidimensional]] (e.g. spherical) solid or liquid objects on selected size scales.
|- becolor=&quot;#efefef&quot;
|- 
!Name of scale !! Minimum&lt;br&gt;diameter!!Min. volume&lt;br&gt; in [&amp;Aring;&lt;sup&gt;3&lt;/sup&gt;]!! Number of atoms at&lt;br&gt;7&amp;times;10&lt;sup&gt;22&lt;/sup&gt; [atoms/cc] !! Min. surface&lt;br&gt;area in [&amp;Aring;&lt;sup&gt;2&lt;/sup&gt;]!!  # surface atoms at&lt;br&gt;10&lt;sup&gt;15&lt;/sup&gt; [atoms/cm&lt;sup&gt;2&lt;/sup&gt;] !! Max. fraction of&lt;br&gt; atoms on surface !! Example
|- align=&quot;center&quot;
|'''Milliworld-2''' || 1[cm]=10&lt;sup&gt;8&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;24&lt;/sup&gt; || 30&amp;times;10&lt;sup&gt;21&lt;/sup&gt; + || &amp;pi;&amp;times;10&lt;sup&gt;16&lt;/sup&gt; || 3&amp;times;10&lt;sup&gt;15&lt;/sup&gt; + || 0.0000001 || sugar cube
|- align=&quot;center&quot;
|'''Milliworld-1''' || 1[mm]=10&lt;sup&gt;7&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;21&lt;/sup&gt; || 30 quintillion + || &amp;pi;&amp;times;10&lt;sup&gt;14&lt;/sup&gt; || 30 trillion + || 0.000001 || flea
|- align=&quot;center&quot;
|'''Microworld-3''' || 100[&amp;mu;m]=10&lt;sup&gt;6&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;18&lt;/sup&gt; || 30 quadrillion + || &amp;pi;&amp;times;10&lt;sup&gt;12&lt;/sup&gt; || 300 billion + || 0.00001 || sand grain
|- align=&quot;center&quot;
|'''Microworld-2''' || 10[&amp;mu;m]=10&lt;sup&gt;5&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;15&lt;/sup&gt; || 30 trillion + || &amp;pi;&amp;times;10&lt;sup&gt;10&lt;/sup&gt; || 3 billion + || 0.0001 || pollen
|- align=&quot;center&quot;
|'''Microworld-1''' || 1[&amp;mu;m]=10&lt;sup&gt;4&lt;/sup&gt;[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;12&lt;/sup&gt; || 30 billion + || &amp;pi;&amp;times;10&lt;sup&gt;8&lt;/sup&gt; || 30 million + || 0.001 || cell
|- align=&quot;center&quot;
|'''Nanoworld-3''' || 100[nm]=1000[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;9&lt;/sup&gt; || 30 million + || &amp;pi;&amp;times;10&lt;sup&gt;6&lt;/sup&gt; || 300 thousand + || 0.01 || organelle
|- align=&quot;center&quot;
|'''Nanoworld-2''' || 10[nm]=100[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;6&lt;/sup&gt; || 30 thousand + || &amp;pi;&amp;times;10&lt;sup&gt;4&lt;/sup&gt; || 3 thousand + || 0.1 || virus
|- align=&quot;center&quot;
|'''Nanoworld-1''' || 1[nm]=10[&amp;Aring;] || (&amp;pi;/6)&amp;times;10&lt;sup&gt;3&lt;/sup&gt; || 30 + || &amp;pi;&amp;times;10&lt;sup&gt;2&lt;/sup&gt; || 30 + || 1 || buckyball
|- align=&quot;center&quot;
|'''Picoworld-3''' || 1[Ångström]|| (&amp;pi;/6) || 1 + || &amp;pi; || 1 + || 1 || atom
|-
|}
&lt;/center&gt;

=== How physical interactions change ===

This table shows how different physical properties take on importance in different ways, according to your size.

&lt;center&gt;
{| class=&quot;wikitable&quot;  border = &quot;1&quot;
|+ The shift in emphasis on various processes depend on the size-scale of one's world.
|- becolor=&quot;#efefef&quot;
|- align=&quot;center&quot;
!Effect\Size-Range !! MacroWorld!! MicroWorld !! NanoWorld 
|- align=&quot;center&quot;
|'''Tides &amp; Coriolis''' || Weak || Negligible || What's that? 
|- align=&quot;center&quot;
|'''Gravity &amp; inertia''' || Important || Weak || Negligible
|- align=&quot;center&quot;
|'''Electrostatics''' || Distracting || Scary || Off the charts
|- align=&quot;center&quot;
|'''Touch''' || Extra || Manageable&lt;ref name=&quot;fishpole&quot;&gt;The quartz fishpole balance method developed by Oliver Lowry at WUSM in the early 1940's relied on the reliability of touch exchanges for manipulating picogram sized objects in the presence of ionized air to minimize electrostatic effects.&lt;/ref&gt; || Extreme
|- align=&quot;center&quot;
|'''Terminal velocity''' || High || Slow || Nearly zero
|- align=&quot;center&quot;
|'''Heat/Brownian motion''' || Signals random motion || Jostles || Careens &amp; jiggles
|- align=&quot;center&quot;
|'''Atoms near surface''' || Few || Many || Most
|- align=&quot;center&quot;
|'''Energies''' || Allowed in bands || Odd states are important || Discrete values only
|- align=&quot;center&quot;
|'''Slow spins''' || No limit || Slow in steps || Disallowed
|- align=&quot;center&quot;
|'''Electrons''' || Shocking || Polarizing || Fuzzy 
|- align=&quot;center&quot;
|'''Measurements''' || Possible? || Intrusive || Perturbing
|-
|}
&lt;/center&gt;

=== How what we find in nature changes ===

Assuming that you have a way to see as you shrink, how would the world change as you shrunk to the size of an atom while sitting at your desk? How would it change if you were standing on your lawn? How would it change if you were standing in a forest, or sitting on a beach?

=== How mechanisms for ''imaging'' change ===

&lt;center&gt;
{| class=&quot;wikitable sortable&quot;  border = &quot;1&quot;
|+ Properties of various types of [http://en.wikipedia.org/wiki/File:Light_spectrum.png electromagnetic radiation] whose speed in vacuo is ~300,000,000 [m/s].
|- becolor=&quot;#efefef&quot;
|- align = &quot;center&quot;
!Radiation type !! Frequency in [Hz]!! Wavelength in [m] !! Photon energy in [eV] !! Conveyance 
|- align = &quot;center&quot;
|AC outlet || 60 cycles per second || 5000000&amp;rArr;5000km || 0.000000000000248&amp;rArr;248feV || power cord
|- align = &quot;center&quot;
|Audio signal (C6) || 1046.5 Hertz || 286000&amp;rArr;286km || 0.00000000000432&amp;rArr;4.32peV  || twisted pair
|- align = &quot;center&quot;
|AM radio || 1120000&amp;rArr;1120kHz|| 268 meters || 0.000000005&amp;rArr;5neV || shielded wires 
|- align = &quot;center&quot;
|FM radio || 90700000&amp;rArr;90.7MHz || 3.2 meters  || 0.000000376&amp;rArr;376neV || [http://en.wikipedia.org/wiki/Coaxial_cable coaxial cable]
|- align = &quot;center&quot;
|Microwaves || 2450000000&amp;rArr;2.45GHz || 0.120000000&amp;rArr;120mm || 0.000010000&amp;rArr;10&amp;mu;eV || [http://en.wikipedia.org/wiki/Waveguide_(electromagnetism) waveguides]
|- align = &quot;center&quot;
|Infrared Light || 30000000000000&amp;rArr;30THz ||  0.000010000&amp;rArr;10&amp;mu;m  || 0.124000000&amp;rArr;124meV  || alkali halide optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Red;&quot;&gt;Red light&lt;/span&gt; || 440000000000000&amp;rArr;&lt;span style=&quot;color:Red;&quot;&gt;440THz&lt;/span&gt; || 0.000000680&amp;rArr;&lt;span style=&quot;color:Red;&quot;&gt;680nm&lt;/span&gt; || &lt;span style=&quot;color:Red;&quot;&gt;182&lt;/span&gt; electron Volts || fiber optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Green;&quot;&gt;Green light&lt;/span&gt; || 560000000000000&amp;rArr;&lt;span style=&quot;color:Green;&quot;&gt;560THz&lt;/span&gt; || 0.000000540&amp;rArr;&lt;span style=&quot;color:Green;&quot;&gt;540nm&lt;/span&gt; || &lt;span style=&quot;color:Green;&quot;&gt;2.32&lt;/span&gt; electron Volts ||  fiber optics
|- align = &quot;center&quot;
|&lt;span style=&quot;color:Blue;&quot;&gt;Blue light&lt;/span&gt; || 630000000000000&amp;rArr;&lt;span style=&quot;color:Blue;&quot;&gt;630THz&lt;/span&gt; || 0.000000470&amp;rArr;&lt;span style=&quot;color:Blue;&quot;&gt;470nm&lt;/span&gt; || &lt;span style=&quot;color:Blue;&quot;&gt;2.61&lt;/span&gt; electron Volts || fiber optics
|- align = &quot;center&quot;
|Ultraviolet Light || 1070000000000000&amp;rArr;1.07PHz || 0.000000280&amp;rArr;280nm || 4.43 electron Volts ||  quartz optics?
|- align = &quot;center&quot;
|X-rays (Cu-K&amp;alpha;) || 1940000000000000000&amp;rArr;1.94EHz  || 0.000000000154&amp;rArr;1.54&amp;Aring; || 8030&amp;rArr;8.03keV ||  ?
|- align = &quot;center&quot;
|Gamma rays || 300000000000000000000&amp;rArr;300EHz || 0.000000000001&amp;rArr;1pm  || 1240000&amp;rArr;1.24MeV  ||  ?  
|- 
|}
&lt;/center&gt;

[[Image:KEvsMOMENTUM.png|thumb|right|250px|Kinetic energy vs. reciprocal wavelength.]]

As you can see from the table above, visible light's wavelength gets a bit large as size scales move below a micron.  As object sizes shrink to that of the illumination's wavelength, ray optics goes out the window and only interference effects remain to give us clues about what's there.

The figure at right shows how the wavelength of anything (Planck's constant divided by momentum) relates to that thing's kinetic energy.  If we want small wavelengths, therefore, we either have to illuminate with high energy photons (like X-rays and gamma-rays) which are difficult to focus and detect, or to illuminate with charged particles.

Charge makes particles easy to focus and detect with help from electric fields.  The particle with the highest charge to mass ratio may turn out to be the electron (shown by the red line in the figure at right).  Electrons thus interact most strongly with matter.  

On the other hand, higher mass particles have shorter wavelengths for a given amount of kinetic energy.  Hence they too come in handy as probes of the very small.

== Development platforms and tools ==

=== Google Earth ===

=== LiveGraphics3D ===

=== The real world ===

We refer here to the challenge of building small agents (e.g. nano-robots) equipped with the following: 

* a central-processing-unit (CPU), 
* some sort of eyes and/or other local sensors, 
* some on-board memory, 
* an ability to move from point to point, 
* a capacity for two-way communication with humans in the larger world, 
* a source of ordered energy and 
* a way to eliminate waste heat.  

What are our prospects for building and integrating each of these components on smaller and smaller size scales?

==== communications ====

==== memory ====

==== logic processors ====

==== sensors ====

Imaging sensors will be limited by the wavelength of the excitations used.  For example, the wavelength of light may be a problem for cameras and image resolutions much smaller than the visible wavelength range of 400-700 nanometers.

==== mobility ====

==== power considerations ====

Do we carry our fuel with us, or plan on finding it on the road?  Also, how do we dump excess heat?  I have a feeling that many biological systems have already figured this stuff out.

==== integrated systems ====

== Calculations ==

== See Also ==

* This [http://en.wikibooks.org/wiki/User:Thermochap/Sandbox scratch space on size-scale awareness].

== Footnotes ==

&lt;references/&gt;</text>
      <sha1>g2145fc8cgd57aa7og1kfnk32u6dqir</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Multinomial Models</title>
    <ns>0</ns>
    <id>200601</id>
    <revision>
      <id>2204083</id>
      <parentid>2204081</parentid>
      <timestamp>2011-10-31T14:49:55Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <comment>/* Rank Ordered Logit Model */ Link to WP</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== Multinomial Logit ==

* '''mlogit''' package.
* &lt;tt&gt;multinom()&lt;/tt&gt; '''nnet'''
* &lt;tt&gt;multinom()&lt;/tt&gt; '''VGAM'''


== Conditional Logit ==

* &lt;tt&gt;clogit()&lt;/tt&gt; in the '''survival''' package
* '''mclogit''' package.


== Multinomial Probit ==

* '''mprobit''' package &lt;ref&gt; Harry Joe, Laing Wei Chou and Hongbin Zhang (2006). mprobit:
  Multivariate probit model for binary/ordinal response. R package
  version 0.9-2.&lt;/ref&gt;
* [http://imai.princeton.edu/software/MNP.html '''MNP'''] package to fit a multinomial probit.


== Multinomial ordered logit model ==

We consider a [[w:Discrete_choice#K._Ordered_Logit|multinomial ordered logit]] model with unkwnown thresholds. 
First, we simulate fake data. We draw the residuals in a logistic distribution. Then we draw some explanatory variable x and we define ys the latent variable as a linear function of x. Note that we set the constant to 0 because the constant and the thresholds cannot be identified simultanously in this model. So we need to fix one of the parameters. Then, we define thresholds (-1,0,1) and we define our observed variable y using the &lt;code&gt;cut()&lt;/code&gt; function. So y is an ordered multinomial variable. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 10000
u &lt;- rlogis(N)
x &lt;- rnorm(N)
ys &lt;- x + u
mu &lt;- c(-Inf,-1,0,1, Inf)
y &lt;- cut(ys, mu)
plot(y,ys)
df &lt;- data.frame(y,x)
&lt;/source&gt;


=== Maximum likelihood estimation ===

This model can be estimated by maximum likelihood using the &lt;code&gt;polr()&lt;/code&gt; function in the '''MASS''' package. Since it is not possible to achieve identification of the constant and the thresholds, '''R''' assumes by default that the constant is equal to 0.

&lt;source lang=&quot;rsplus&quot;&gt;
library(MASS)
fit &lt;- polr(y  ~ x, method = &quot;logistic&quot;, data = df)
summary(fit)
&lt;/source&gt;


=== Bayesian estimation ===

* &lt;tt&gt;bayespolr()&lt;/tt&gt; ('''arm''') performs a bayesian estimation of the multinomial ordered logit

&lt;source lang=&quot;rsplus&quot;&gt;
library(&quot;arm&quot;)
fit &lt;- bayespolr(y ~ x, method = &quot;logistic&quot;, data = df)
summary(fit)
&lt;/source&gt;

== Multinomial ordered probit model ==

We generate fake data by drawing an error term in normal distribution and cutting the latent variables in 4 categories. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
u &lt;- rnorm(N)
x &lt;- rnorm(N)
ys &lt;- x + u
mu &lt;- c(-Inf,-1,0,1, Inf)
y &lt;- cut(ys, mu)
plot(y,ys)
df &lt;- data.frame(x,y)
&lt;/source&gt;


=== Maximum likelihood estimation ===

The model can be fitted using maximum likelihood method. This can be done using the &lt;code&gt;polr()&lt;/code&gt; function in the '''MASS''' package with the &lt;code&gt;probit&lt;/code&gt; method.

&lt;source lang=&quot;rsplus&quot;&gt;
library(MASS)
fit &lt;- polr(y  ~ x, method = &quot;probit&quot;, data = df)
summary(fit)
&lt;/source&gt;


=== Bayesian estimation ===

* &lt;tt&gt;bayespolr()&lt;/tt&gt; ('''arm''') performs a bayesian estimation of the multinomial ordered probit


== Rank Ordered Logit Model ==

This model was introduced in econometrics by Beggs, Cardell and Hausman in 1981&lt;ref name = &quot;bch&quot;&gt;Beggs, S., Cardell, S., Hausman, J., 1981. Assessing the potential demand for electric cars. Journal of Econometrics 17 (1),
1–19 (September).&lt;/ref&gt;{{,}}&lt;ref name = &quot;combes&quot; /&gt;. One application is the Combes et alii paper explaining the ranking of candidates to become professor&lt;ref name = &quot;combes&quot;&gt;Pierre-Philippe Combes, Laurent Linnemer, Michael Visser, Publish or peer-rich? The role of skills and networks in hiring economics professors, Labour Economics, Volume 15, Issue 3, June 2008, Pages 423-441, ISSN 0927-5371, 10.1016/j.labeco.2007.04.003. (http://www.sciencedirect.com/science/article/pii/S0927537107000413)&lt;/ref&gt;. Is is also known as Plackett–Luce model in biomedical literature or as [[w:Discrete_choice#J._Exploded_Logit|exploded logit model]] in marketing&lt;ref name = &quot;combes&quot; /&gt;.

== Conditionally Ordered Hierarchical Probit == 

* The Conditionally Ordered Hierarchical Probit can be estimated using the '''anchors''' package developped by Gary King and his coauthors&lt;ref&gt; Jonathan Wand, Gary King, Olivia Lau (2009). anchors:
  Software for Anchoring Vignette Data. Journal of
  Statistical Software, Forthcoming. URL
  http://www.jstatsoft.org/.&lt;/ref&gt;.

== References ==

{{reflist|2}}</text>
      <sha1>rk9nsc3ps62hxcizroskbjoeim28mau</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Count Data Models</title>
    <ns>0</ns>
    <id>200602</id>
    <revision>
      <id>2200503</id>
      <parentid>2147582</parentid>
      <timestamp>2011-10-24T16:19:50Z</timestamp>
      <contributor>
        <username>PAC2</username>
        <id>289961</id>
      </contributor>
      <minor />
      <comment>/* References */ 2 columns</comment>
      <text xml:space="preserve">{{Wikipedia|Count data}}
&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

== The Poisson model ==
{{Wikipedia|Poisson regression}}

=== Fake data simulations ===

We assume that y follows a poisson distribution with mean exp(1 + 1 * x). We store the data in the &quot;df&quot; dataframe. 

&lt;source lang=&quot;rsplus&quot;&gt;
N &lt;- 1000
x &lt;- rnorm(N)
alpha &lt;- c(1,1)
y &lt;- rpois(N,exp(alpha[1] + alpha[2] * x))
df &lt;- data.frame(x,y)
plot(x,y)
&lt;/source&gt;


=== Maximum likelihood ===

We estimate this simple model using the &lt;tt&gt;glm()&lt;/tt&gt; function with &lt;tt&gt;family = poisson&lt;/tt&gt; as option.
&lt;source lang=&quot;rsplus&quot;&gt;
fit &lt;- glm(y ~ x, family = poisson, data = df)
summary(fit)
&lt;/source&gt;

=== Bayesian estimation ===

The model can also be estimated using bayesian methods with the &lt;code&gt;MCMCpoisson()&lt;/code&gt; function which is provided in the '''MCMCpack'''. 

&lt;source lang=&quot;rsplus&quot;&gt;
library(&quot;MCMCpack&quot;)
posterior &lt;- MCMCpoisson(y ~ x, data = df)
plot(posterior)
summary(posterior)
&lt;/source&gt;

== Overdispersion test == 

* &lt;tt&gt;dispersiontest()&lt;/tt&gt; ('''AER package''') provides a test for equidispersion.

== Zero inflated model ==

See the '''zic''' package&lt;ref&gt; Markus Jochmann (2010). zic: Bayesian Inference for Zero-Inflated Count Models. R package
  version 0.5-3. http://CRAN.R-project.org/package=zic&lt;/ref&gt;

== Bivariate poisson regression ==

* '''bivpois''' package for bivariate poisson regression.

== References == 

* See [http://www.ats.ucla.edu/stat/r/dae/poissonreg.htm UCLA website for an example]
* Zeileis, A., Kleiber, C. and Jackman, S.    [http://cran.r-project.org/web/packages/pscl/vignettes/countreg.pdf Regression Models for Count Data in R]
* Replication files for Cameron and Trivedi's 1998 book&lt;ref&gt;Cameron, A.C. and Trivedi, P.K. (1998). Regression Analysis of Count Data. Cambridge: Cambridge University Press.&lt;/ref&gt; are provided in the AER package&lt;ref&gt;Christian Kleiber and Achim Zeileis (2008). Applied
  Econometrics with R. New York: Springer-Verlag. ISBN
  978-0-387-77316-2. URL
  http://CRAN.R-project.org/package=AER&lt;/ref&gt;. You can simply type '''?CameronTrivedi1998''' and you will find the source code.

{{reflist|2}}</text>
      <sha1>oyiz3w87dddih83ni396vkr12qejipp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Text Processing</title>
    <ns>0</ns>
    <id>200605</id>
    <revision>
      <id>2619815</id>
      <parentid>2484327</parentid>
      <timestamp>2014-03-23T00:42:44Z</timestamp>
      <contributor>
        <ip>74.107.120.179</ip>
      </contributor>
      <comment>/* Detecting a pattern in a string ? */</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

This page includes all the material you need to deal with strings in R. The section on regular expressions may be useful to understand the rest of the page, even if it is not necessary if you only need to perform some simple tasks.

This page may be useful to :  
* perform statistical text analysis. 
* collect data from an unformatted text file.
* deal with character variables.

In this page, we learn how to read a text file and how to use R functions for characters. There are two kind of function for characters, simple functions and regular expressions. Many functions are part of the standard R '''base''' package. 
&lt;source lang=&quot;rsplus&quot;&gt;
help.search(keyword = &quot;character&quot;, package = &quot;base&quot;)
&lt;/source&gt;
However, their name and their syntax is not intuitive to all users. Hadley Wickham has developed the
'''stringr''' package which defines functions with similar behaviour but their names are easier to retain and their syntax much more systematic&lt;ref name =&quot;stringr&quot;&gt;Hadley Wickham &quot;stringr: modern, consistent string processing&quot; The R Journal, December 2010, Vol 2/2,  http://journal.r-project.org/archive/2010-2/RJournal_2010-2_Wickham.pdf &lt;/ref&gt;. 

* Keywords : ''text mining'', ''natural language processing''
* See CRAN Task view on Natural Language Processing&lt;ref&gt;http://cran.r-project.org/web/views/NaturalLanguageProcessing.html&lt;/ref&gt;
* See also the following packages '''tm''', '''tau''', '''languageR''', '''scrapeR'''.


== Reading and writing text files ==

'''R''' can read any text file using &lt;code&gt;readLines()&lt;/code&gt; or &lt;code&gt;scan()&lt;/code&gt;.  It is possible to specify the encoding of the imported text file with &lt;code&gt;readLines()&lt;/code&gt;. The entire contents of the text file can be read into an R object (e.g., a character vector). &lt;code&gt;scan()&lt;/code&gt; is more flexible. The kind of data expected can be specified in the second argument (e.g., character(0) for a string).
&lt;source lang=&quot;rsplus&quot;&gt;
text &lt;- readLines(&quot;file.txt&quot;,encoding=&quot;UTF-8&quot;)
scan(&quot;file.txt&quot;, character(0)) # separate each word
scan(&quot;file.txt&quot;, character(0), quote = NULL) # get rid of quotes
scan(&quot;file.txt&quot;, character(0), sep = &quot;.&quot;) # separate each sentence
scan(&quot;file.txt&quot;, character(0), sep = &quot;\n&quot;) # separate each line
&lt;/source&gt;

We can write the content of an R object into a text file using &lt;code&gt;cat()&lt;/code&gt; or &lt;code&gt;writeLines()&lt;/code&gt;. By default &lt;code&gt;cat()&lt;/code&gt; concatenates vectors when writing to the text file. You can change it by adding options &lt;code&gt;sep=&quot;\n&quot;&lt;/code&gt; or &lt;code&gt;fill=TRUE&lt;/code&gt;. The default encoding depends on your computer.

&lt;source lang=&quot;rsplus&quot;&gt;
cat(text,file=&quot;file.txt&quot;,sep=&quot;\n&quot;)
writeLines(text, con = &quot;file.txt&quot;, sep = &quot;\n&quot;, useBytes = FALSE)
&lt;/source&gt;

Before reading a text file, you can look at its properties. &lt;code&gt;nlines()&lt;/code&gt; ('''parser''' package) and &lt;code&gt;countLines()&lt;/code&gt; ('''R.utils''' package) count the number of lines in the file. &lt;code&gt;count.chars()&lt;/code&gt; ('''parser''' package) counts the number of bytes and characters in each line of a file. You can also display a text file using &lt;code&gt;file.show()&lt;/code&gt;.

== Character encoding ==

{{Wikipedia|Character encoding}}

R provides functions to deal with various set of encoding schemes. This is useful if you deal with text file which have been created with another operating system and especially if the language is not English and has many accents and specific characters. For instance, the standard encoding scheme in Linux is &quot;UTF-8&quot; whereas the standard encoding scheme in Windows is &quot;Latin1&quot;.  The &lt;code&gt;Encoding()&lt;/code&gt; functions returns the encoding of a string. &lt;code&gt;iconv()&lt;/code&gt; is similar to the unix command [[w:iconv|iconv]] and converts the encoding. 
* &lt;code&gt;iconvlist()&lt;/code&gt; gives the list of available encoding scheme on your computer.
* &lt;code&gt;readLines()&lt;/code&gt;, &lt;code&gt;scan()&lt;/code&gt; and &lt;code&gt;file.show()&lt;/code&gt; have also an encoding option.
* &lt;code&gt;is.utf8()&lt;/code&gt; ('''tau''') tests if the encoding is &quot;utf8&quot;. 
* &lt;code&gt;is.locale()&lt;/code&gt; ('''tau''') tests if encoding is the same as the default encoding on your computer. 
* &lt;code&gt;translate()&lt;/code&gt; ('''tau''') translates the encoding into the current locale. 
* &lt;code&gt;fromUTF8()&lt;/code&gt; ('''descr''') is less general than &lt;code&gt;iconv()&lt;/code&gt;.
* &lt;code&gt;utf8ToInt()&lt;/code&gt; ('''base''')

=== Example ===

The following example was run under Windows. Thus, the default encoding is &quot;latin1&quot;.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; texte &lt;- &quot;Hé hé&quot;
&gt; Encoding(texte)
[1] &quot;latin1&quot;
&gt; texte2 &lt;-  iconv(texte,&quot;latin1&quot;,&quot;UTF-8&quot;)
&gt; Encoding(texte2)
[1] &quot;UTF-8&quot;
&lt;/source&gt;

== Regular Expressions ==

{{wikibooks|Regular expressions}}
{{wikipedia|Regular expression}}

A regular expression is a specific pattern in a set of strings. For instance, one could have the following pattern : 2 digits, 2 letters and 4 digits. '''R''' provides powerful functions to deal with regular expressions.
Two types of regular expressions are used in '''R'''&lt;ref&gt;In former versions (&lt; 2.10) we had also basic regular expressions in '''R''' : 
* extended regular expressions, used by &lt;code&gt;extended = TRUE&lt;/code&gt; (the default), 
* basic regular expressions, as used by &lt;code&gt;extended = FALSE&lt;/code&gt; (obsolete in '''R 2.10''').
Since basic regular expressions (&lt;code&gt;‘extended = FALSE’&lt;/code&gt;) are now obsolete, the &lt;code&gt;extended&lt;/code&gt; option is obsolete in version 2.11.&lt;/ref&gt; 
* extended regular expressions, used by &lt;code&gt;‘perl = FALSE’&lt;/code&gt; (the default), 
* Perl-like regular expressions used by &lt;code&gt;‘perl = TRUE’&lt;/code&gt;.  
There is a also an option called &lt;code&gt;‘fixed = TRUE’&lt;/code&gt; which can be considered as a literal regular expression. &lt;code&gt;fixed()&lt;/code&gt; ('''stringr''') is equivalent to &lt;code&gt;fixed=TRUE&lt;/code&gt; in the standard regex functions.
These functions are by default case sensitive. This can be changed by specifying the option &lt;code&gt;ignore.case = TRUE&lt;/code&gt;.

If you are not a specialist in regular expression you my find the &lt;code&gt;glob2rx()&lt;/code&gt; useful. This function suggests some regular expression for a specific pattern :
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; glob2rx(&quot;abc.*&quot;)
[1] &quot;^abc\\.&quot;
&lt;/source&gt;

=== Functions which use regular expressions in R ===

* &lt;code&gt;sub()&lt;/code&gt;, &lt;code&gt;gsub()&lt;/code&gt;, &lt;code&gt;str_replace()&lt;/code&gt; ('''stringr''') make some substitutions in a string.
* &lt;code&gt;grep()&lt;/code&gt;, &lt;code&gt;str_extract()&lt;/code&gt; ('''stringr''') extract some value
* &lt;code&gt;grepl()&lt;/code&gt;, &lt;code&gt;str_detect()&lt;/code&gt; ('''stringr''') detect the presence of a pattern.
* see also &lt;code&gt;splitByPattern()&lt;/code&gt; ('''R.utils''')
* See also &lt;code&gt;gsubfn()&lt;/code&gt; in the '''gsubfn''' package.

=== Extended regular expressions (The default) ===

* &lt;code&gt;&quot;.&quot;&lt;/code&gt; stands for any character.
* &lt;code&gt;&quot;[ABC]&quot;&lt;/code&gt; means A,B or C.
* &lt;code&gt;&quot;[A-Z]&quot;&lt;/code&gt; means any upper letter between A and Z. 
* &lt;code&gt;&quot;[0-9]&quot;&lt;/code&gt; means any digit between 0 and 9.

Here is the list of metacharacters  &lt;code&gt;‘$ * + . ? [ ] ^ { } | ( ) \’&lt;/code&gt;. If you need to use one of those characters, precede them with a doubled backslash.

Here are some classes of regular expressions : 
For numbers : 
* &lt;code&gt;&lt;nowiki&gt;‘[:digit:]’&lt;/nowiki&gt;&lt;/code&gt; Digits: &lt;code&gt;‘0 1 2 3 4 5 6 7 8 9’&lt;/code&gt;.
For letters : 
* &lt;code&gt;&lt;nowiki&gt;‘[:alpha:]’&lt;/nowiki&gt;&lt;/code&gt; Alphabetic characters: &lt;code&gt;‘[:lower:]’&lt;/code&gt; and &lt;code&gt;‘[:upper:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:upper:]’&lt;/nowiki&gt;&lt;/code&gt; Upper-case letters.
* &lt;code&gt;&lt;nowiki&gt;‘[:lower:]’&lt;/nowiki&gt;&lt;/code&gt; Lower-case letters.
Note that the set of alphabetic characters includes accents such as &lt;code&gt;é è ê&lt;/code&gt; which are very common is some languages like French. Therefore, it is more general than &lt;code&gt;&quot;[A-Za-z]&quot;&lt;/code&gt; which does not include letters with accent.

For other characters : 
* &lt;code&gt;&lt;nowiki&gt;‘[:punct:]’&lt;/nowiki&gt;&lt;/code&gt; Punctuation characters: &lt;code&gt;‘! &quot; # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:space:]’&lt;/nowiki&gt;&lt;/code&gt; Space characters: tab, newline, vertical tab, form feed, carriage return, and space.
* &lt;code&gt;&lt;nowiki&gt;‘[:blank:]’&lt;/nowiki&gt;&lt;/code&gt; Blank characters: space and tab. 
* &lt;code&gt;&lt;nowiki&gt;‘[:cntrl:]’&lt;/nowiki&gt;&lt;/code&gt; Control characters.  
For combination of other classes : 
* &lt;code&gt;&lt;nowiki&gt;[:alnum:]&lt;/nowiki&gt;&lt;/code&gt; Alphanumeric characters: &lt;code&gt;‘[:alpha:]’&lt;/code&gt; and &lt;code&gt;‘[:digit:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:graph:]’&lt;/nowiki&gt;&lt;/code&gt; Graphical characters: &lt;code&gt;‘[:alnum:]’&lt;/code&gt; and &lt;code&gt;‘[:punct:]’&lt;/code&gt;.
* &lt;code&gt;&lt;nowiki&gt;‘[:print:]’&lt;/nowiki&gt;&lt;/code&gt; Printable characters: &lt;code&gt;‘[:alnum:]’&lt;/code&gt;, &lt;code&gt;‘[:punct:]’&lt;/code&gt; and space.
* &lt;code&gt;&lt;nowiki&gt;‘[:xdigit:]’&lt;/nowiki&gt;&lt;/code&gt; Hexadecimal digits: &lt;code&gt;‘0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f’&lt;/code&gt;.

You can quantify the number of repetition by adding after the regular expression the following characters : 
* &lt;code&gt;‘?’&lt;/code&gt; The preceding item is optional and will be matched at most once.
* &lt;code&gt;‘*’&lt;/code&gt; The preceding item will be matched zero or more times.
* &lt;code&gt;‘+’&lt;/code&gt; The preceding item will be matched one or more times.
* &lt;code&gt;‘{n}’&lt;/code&gt; The preceding item is matched exactly ‘n’ times.
* &lt;code&gt;‘{n,}’&lt;/code&gt; The preceding item is matched ‘n’ or more times.
* &lt;code&gt;‘{n,m}’&lt;/code&gt; The preceding item is matched at least ‘n’ times, but not more than ‘m’ times.

* &lt;code&gt;^&lt;/code&gt; to force the regular expression to be at the beginning of the string
* &lt;code&gt;$&lt;/code&gt; to force the regular expression to be at the end of the string

If you want to know more, have a look at the 2 following help files : 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;?regexp # gives some general explanations
&gt;?grep # help file for grep(),regexpr(),sub(),gsub(),etc
&lt;/source&gt;

=== Perl-like regular expressions ===
{{...}}
It is also possible to use &quot;perl-like&quot; regular expressions. You just need to use the option &lt;code&gt;perl=TRUE&lt;/code&gt;. 
 
==== Examples ====
If you want to remove space characters in a string, you can use the &lt;code&gt;\\s&lt;/code&gt; Perl macro.
&lt;source lang = &quot;rsplus&quot;&gt;
sub('\\s', '',x, perl = TRUE)
&lt;/source&gt;

==== See also ====
* [[Perl Programming/Regular Expressions]]

== Concatenating strings ==

* &lt;code&gt;paste()&lt;/code&gt; concatenates strings. 
* &lt;code&gt;str_c()&lt;/code&gt; ('''stringr''') does a similar job.
* &lt;code&gt;cat()&lt;/code&gt; prints and concatenates strings. 

=== Examples ===

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; paste(&quot;toto&quot;,&quot;tata&quot;,sep=' ')
[1] &quot;toto tata&quot;
&gt; paste(&quot;toto&quot;,&quot;tata&quot;,sep=&quot;,&quot;)
[1] &quot;toto,tata&quot;
&gt; str_c(&quot;toto&quot;,&quot;tata&quot;,sep=&quot;,&quot;)
[1] &quot;toto,tata&quot;
&gt; x &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;)
&gt; paste(x,collapse=&quot; &quot;)
[1] &quot;a b c&quot;
&gt; str_c(x, collapse = &quot; &quot;)
[1] &quot;a b c&quot;
&gt; cat(c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;), sep = &quot;+&quot;)
a+b+c
&lt;/source&gt;

== Splitting a string ==

* &lt;code&gt;strsplit()&lt;/code&gt; :  Split the elements of a character vector ‘x’ into substrings according to the matches to substring ‘split’ within them. 
* See also &lt;code&gt;str_split()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; unlist(strsplit(&quot;a.b.c&quot;, &quot;\\.&quot;))
[1] &quot;a&quot; &quot;b&quot; &quot;c&quot;
&lt;/source&gt;

* &lt;code&gt;tokenize()&lt;/code&gt; ('''tau''') split a string into tokens. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; tokenize(&quot;abc defghk&quot;)
[1] &quot;abc&quot;    &quot; &quot;      &quot;defghk&quot;
&lt;/source&gt;

== Counting the number of characters in a string ==
* &lt;code&gt;nchar()&lt;/code&gt; gives the length of a string. 
* See also &lt;code&gt;str_length()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; nchar(&quot;abcdef&quot;)
[1] 6
&gt; str_length(&quot;abcdef&quot;)
[1] 6
&gt; nchar(NA)
[1] 2
&gt; str_length(NA)
[1] NA
&lt;/source&gt;

== Detecting the presence of a substring ==
=== Detecting a pattern in a string ? ===
* &lt;code&gt;grepl()&lt;/code&gt; returns a logical expression (TRUE or FALSE). 
* &lt;code&gt;str_detect()&lt;/code&gt; ('''stringr''') does a similar job.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; string &lt;- &quot;23 mai 2000&quot;
&gt; string2 &lt;- &quot;1 mai 2000&quot;
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; grepl(pattern = regexp, x = string)
[1] TRUE
&gt; str_detect(string, regexp)
[1] TRUE
&gt; grepl(pattern = regexp, x = string2)
[1] FALSE
&lt;/source&gt;
The 1st one is true and the second one is false since there is only one digit in the first number.

=== Counting the occurrence of each pattern in a string ? ===
* &lt;code&gt;textcnt()&lt;/code&gt; ('''tau''') counts the occurrence of each pattern or each term in a text. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; textcnt(string,n=1L,method=&quot;string&quot;)
blabla    mai 
     2      2 
attr(,&quot;class&quot;)
[1] &quot;textcnt&quot;
&lt;/source&gt;

== Extracting the position of a substring or a pattern in a string ==
=== Extracting the position of a substring ? ===
* &lt;code&gt;cpos()&lt;/code&gt; ('''cwhmisc''') returns the position of a substring in a string. 
* &lt;code&gt;substring.location()&lt;/code&gt; ('''cwhmisc''') does the same job but returns the first and the last position.
&lt;source lang=&quot;rsplus&quot;&gt; 
&gt; cpos(&quot;abcdefghijklmnopqrstuvwxyz&quot;,&quot;p&quot;,start=1)
[1] 16
&gt; substring.location(&quot;abcdefghijklmnopqrstuvwxyz&quot;,&quot;def&quot;)
$first
[1] 4

$last
[1] 6
&lt;/source&gt;

=== Extracting the position of a pattern in a string ? ===
* &lt;code&gt;regexpr()&lt;/code&gt; returns the position of the regular expression. &lt;code&gt;str_locate()&lt;/code&gt; ('''stringr''') does the same job. &lt;code&gt;gregexpr()&lt;/code&gt; is similar to &lt;code&gt;regexpr()&lt;/code&gt; but the starting position of every match is returned. &lt;code&gt;str_locate_all()&lt;/code&gt; ('''stringr''') does the same job.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; regexpr(pattern = regexp, text = string)
[1] 8
attr(,&quot;match.length&quot;)
[1] 11
&gt; gregexpr(pattern = regexp, text = string)
[[1]]
[1]  8 27
attr(,&quot;match.length&quot;)
[1] 11 11
&gt; str_locate(string,regexp)
     start end
[1,]     8  18
&gt; str_locate_all(string,regexp)
[[1]]
     start end
[1,]     8  18
[2,]    27  37
&lt;/source&gt;

== Extracting a substring from a string ==
=== Extracting a fixed width substring ? ===
* &lt;code&gt;substr()&lt;/code&gt; takes a sub string. 
* &lt;code&gt;str_sub()&lt;/code&gt; ('''stringr''') is similar.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; substr(&quot;simple text&quot;,1,3)
[1] &quot;sim&quot;
&gt; str_sub(&quot;simple text&quot;,1,3)
[1] &quot;sim&quot;
&lt;/source&gt;

=== Extracting the first word in a string ? ===
* &lt;code&gt;first.word()&lt;/code&gt; First Word in a String or Expression in the '''Hmisc''' package

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; first.word(&quot;abc def ghk&quot;)
[1] &quot;abc&quot;
&lt;/source&gt;

=== Extracting a pattern in a string ? ===
* &lt;code&gt;grep()&lt;/code&gt; returns the value or the position of the regular expression if &lt;code&gt;value=T&lt;/code&gt; and its position if &lt;code&gt;value=F&lt;/code&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; grep(pattern = regexp, x = string , value = T) 
[1] &quot;23 mai 2000&quot;
&gt; grep(pattern = regexp, x = string2 , value = T) 
character(0)
&gt; grep(pattern = regexp, x = string , value = F) 
[1] 1
&gt; grep(pattern = regexp, x = string2 , value = F) 
integer(0)
&lt;/source&gt;

* &lt;code&gt;str_extract()&lt;/code&gt;, &lt;code&gt;str_extract_all()&lt;/code&gt;, &lt;code&gt;str_match()&lt;/code&gt;, &lt;code&gt;str_match_all()&lt;/code&gt; ('''stringr''') and &lt;code&gt;m()&lt;/code&gt; ('''caroline''' package) are similar to &lt;code&gt;grep()&lt;/code&gt;. &lt;code&gt;str_extract()&lt;/code&gt; and &lt;code&gt;str_extract_all()&lt;/code&gt; return a vector. &lt;code&gt;str_match()&lt;/code&gt; and &lt;code&gt;str_match_all()&lt;/code&gt; return a matrix and &lt;code&gt;m()&lt;/code&gt; a dataframe.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;stringr&quot;)
&gt; regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
&gt; string &lt;- &quot;blabla 23 mai 2000 blabla 18 mai 2004&quot;
&gt; str_extract(string,regexp)
[1] &quot;23 mai 2000&quot;
&gt; str_extract_all(string,regexp)
[[1]]
[1] &quot;23 mai 2000&quot; &quot;18 mai 2004&quot;

&gt; str_match(string,regexp)
     [,1]          [,2] [,3]  [,4]  
[1,] &quot;23 mai 2000&quot; &quot;23&quot; &quot;mai&quot; &quot;2000&quot;
&gt; str_match_all(string,regexp)
[[1]]
     [,1]          [,2] [,3]  [,4]  
[1,] &quot;23 mai 2000&quot; &quot;23&quot; &quot;mai&quot; &quot;2000&quot;
[2,] &quot;18 mai 2004&quot; &quot;18&quot; &quot;mai&quot; &quot;2004&quot;
&gt; library(&quot;caroline&quot;)
&gt; m(pattern = regexp, vect = string, names = c(&quot;day&quot;,&quot;month&quot;,&quot;year&quot;), types = rep(&quot;character&quot;,3))
  day month year
1  18   mai 2004
&lt;/source&gt;

== Making some substitution inside a string ==
=== Substituting a pattern in a string ===
* &lt;code&gt;sub()&lt;/code&gt; makes a substitution.
* &lt;code&gt;gsub()&lt;/code&gt; is similar to &lt;code&gt;sub()&lt;/code&gt; but replace all occurrences of the pattern whereas &lt;code&gt;sub()&lt;/code&gt; only replaces the first occurrence. 
* &lt;code&gt;str_replace()&lt;/code&gt; ('''stringr''') is similar.

In the following example, we have a French date. The regular pattern is the following : 2 digits, a blank, some letters, a blank, 4 digits. We capture the 2 digits with the &lt;code&gt;&lt;nowiki&gt;[[:digit:]]{2}&lt;/nowiki&gt;&lt;/code&gt; expression, the letters with &lt;code&gt;&lt;nowiki&gt;[[:alpha:]]+&lt;/nowiki&gt;&lt;/code&gt; and the 4 digits with &lt;code&gt;&lt;nowiki&gt;[[:digit:]]{4}&lt;/nowiki&gt;&lt;/code&gt;. Each of these three substrings is surrounded with parenthesis. The first substring is stored in &lt;code&gt;&quot;\\1&quot;&lt;/code&gt;, the second one in &lt;code&gt;&quot;\\2&quot;&lt;/code&gt; and the 3rd one in &lt;code&gt;&quot;\\3&quot;&lt;/code&gt;.
&lt;source lang=&quot;rsplus&quot;&gt;
string &lt;- &quot;23 mai 2000&quot;
regexp &lt;- &quot;([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})&quot;
sub(pattern = regexp, replacement = &quot;\\1&quot;, x = string) # returns the first part of the regular expression
sub(pattern = regexp, replacement = &quot;\\2&quot;, x = string) # returns the second part
sub(pattern = regexp, replacement = &quot;\\3&quot;, x = string) # returns the third part
&lt;/source&gt;

In the following example, we compare the outcome of &lt;code&gt;sub()&lt;/code&gt; and &lt;code&gt;gsub()&lt;/code&gt;. The first one removes the first space whereas the second one removes all spaces in the text.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; text &lt;- &quot;abc def ghk&quot;
&gt; sub(pattern = &quot; &quot;, replacement = &quot;&quot;,  x = text)
[1] &quot;abcdef ghk&quot;
&gt; gsub(pattern = &quot; &quot;, replacement = &quot;&quot;,  x = text)
[1] &quot;abcdefghk&quot;
&lt;/source&gt;

=== Substituting characters in a string ? ===
* &lt;code&gt;chartr()&lt;/code&gt; substitutes characters in an expression. It stands for &quot;character translation&quot;. 
* &lt;code&gt;replacechar()&lt;/code&gt; ('''cwhmisc''') does the same job ...
* as well as &lt;code&gt;str_replace_all()&lt;/code&gt; ('''stringr''').

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; chartr(old=&quot;a&quot;,new=&quot;o&quot;,x=&quot;baba&quot;)
[1] &quot;bobo&quot;
&gt; chartr(old=&quot;ab&quot;,new=&quot;ot&quot;,x=&quot;baba&quot;)
[1] &quot;toto&quot;
&gt; replacechar(&quot;abc.def.ghi.jkl&quot;,&quot;.&quot;,&quot;_&quot;)
[1] &quot;abc_def_ghi_jkl&quot;
&gt; str_replace_all(&quot;abc.def.ghi.jkl&quot;,&quot;\\.&quot;,&quot;_&quot;)
[1] &quot;abc_def_ghi_jkl&quot;
&lt;/source&gt;

== Converting letters to lower or upper-case ==
* &lt;code&gt;tolower()&lt;/code&gt; converts upper-case characters to lower-case. 
* &lt;code&gt;toupper()&lt;/code&gt; converts lower-case characters to upper-case. 
* &lt;code&gt;capitalize()&lt;/code&gt; ('''Hmisc''') capitalize the first letter of a string 
* See also &lt;code&gt;cap()&lt;/code&gt;, &lt;code&gt;capitalize()&lt;/code&gt;, &lt;code&gt;lower()&lt;/code&gt;, &lt;code&gt;lowerize()&lt;/code&gt; and &lt;code&gt;CapLeading()&lt;/code&gt; in the '''cwhmisc''' package.

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; tolower(&quot;ABCdef&quot;)
[1] &quot;abcdef&quot;
&gt; toupper(&quot;ABCdef&quot;)
[1] &quot;ABCDEF&quot;
&gt; capitalize(&quot;abcdef&quot;)
[1] &quot;Abcdef&quot;
&lt;/source&gt;

== Filling a string with some character ==
* &lt;code&gt;padding()&lt;/code&gt; ('''cwhmisc''') fills a string with some characters to fit a given length. See also &lt;code&gt;str_pad()&lt;/code&gt; ('''stringr''').
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;cwhmisc&quot;)
&gt; padding(&quot;abc&quot;,10,&quot; &quot;,&quot;center&quot;) # adds blanks such that the length of the string is 10.
[1] &quot;   abc    &quot;
&gt; str_pad(&quot;abc&quot;,width=10,side=&quot;center&quot;, pad = &quot;+&quot;)
[1] &quot;+++abc++++&quot;
&gt; str_pad(c(&quot;1&quot;,&quot;11&quot;,&quot;111&quot;,&quot;1111&quot;),3,side=&quot;left&quot;,pad=&quot;0&quot;) 
[1] &quot;001&quot;  &quot;011&quot;  &quot;111&quot;  &quot;1111&quot;
&lt;/source&gt;

Note that &lt;code&gt;str_pad()&lt;/code&gt; is very slow. For instance for a vector of length 10,000, we have a very long computing time. &lt;code&gt;padding()&lt;/code&gt;does not seem to handle character vectors but the best solution may be to use the &lt;code&gt;sapply()&lt;/code&gt; and &lt;code&gt;padding()&lt;/code&gt; functions together. 

&lt;source lang = &quot;rsplus&quot;&gt;
&gt;library(&quot;stringr&quot;)
&gt;library(&quot;cwhmisc&quot;)
&gt;a &lt;- rep(1,10^4)
&gt; system.time(b &lt;- str_pad(a,3,side=&quot;left&quot;,pad=&quot;0&quot;))
utilisateur     système      écoulé 
     50.968       0.208      73.322 
&gt; system.time(c &lt;- sapply(a, padding, space = 3, with = &quot;0&quot;, to = &quot;left&quot;))
utilisateur     système      écoulé 
      7.700       0.020      12.206 
&lt;/source&gt;

== Removing leading and trailing spaces ==
* &lt;code&gt;trimws()&lt;/code&gt; ('''memisc''' package) trim leading and trailing white spaces. 
* &lt;code&gt;trim()&lt;/code&gt; ('''gdata''' package) does the same job. 
* See also &lt;code&gt;str_trim()&lt;/code&gt; ('''stringr''')

&lt;source lang=&quot;rsplus&quot;&gt;
&gt; library(&quot;memisc&quot;)
&gt; trimws(&quot;  abc def   &quot;)
[1] &quot;abc def&quot; 
&gt; library(&quot;gdata&quot;)
&gt; trim(&quot; abc def &quot;)
[1] &quot;abc def&quot;
&gt; str_trim(&quot;  abd def  &quot;)
[1] &quot;abd def&quot;
&lt;/source&gt;

== Comparing two strings ==
=== Assessing if they are identical ===
* &lt;code&gt;==&lt;/code&gt; returns TRUE if both strings are the same and false otherwise. 
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; &quot;abc&quot;==&quot;abc&quot;
[1] TRUE
&gt; &quot;abc&quot;==&quot;abd&quot;
[1] FALSE
&lt;/source&gt;

=== Computing distance between strings ===
&lt;code&gt;stringMatch()&lt;/code&gt; ('''MiscPsycho''') computes the [[w:Levenshtein distance|Levenshtein distance]] between two strings. If &lt;code&gt;normalize=&quot;YES&quot;&lt;/code&gt; the levenshtein distance is divided by the maximum length of each string.
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; library(&quot;MiscPsycho&quot;)
&gt; stringMatch(&quot;test&quot;,&quot;tester&quot;,normalize=&quot;NO&quot;,penalty=1,case.sensitive = T)
[1] 2
&lt;/source&gt;

&lt;code&gt;agrep()&lt;/code&gt; search for approximate matches using the [[w:Levenshtein distance|Levenshtein distance]].
* If 'value = T', this returns the value of the string
* If 'value = F' this returns the position of the string
* ''max'' returns the maximal levenshtein distance.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt;  agrep(pattern = &quot;laysy&quot;, x = c(&quot;1 lazy&quot;, &quot;1&quot;, &quot;1 LAZY&quot;), max = 2, value = TRUE)
[1] &quot;1 lazy&quot;
&gt;  agrep(&quot;laysy&quot;, c(&quot;1 lazy&quot;, &quot;1&quot;, &quot;1 LAZY&quot;), max = 3, value = TRUE)
[1] &quot;1 lazy&quot;
&lt;/source&gt;

== Miscellaneous ==
* &lt;code&gt;deparse()&lt;/code&gt; : Turn unevaluated expressions into character strings.
* &lt;code&gt;char.expand()&lt;/code&gt; ('''base''') expands a string with respect to a target.
* &lt;code&gt;pmatch()&lt;/code&gt; ('''base''') and &lt;code&gt;charmatch()&lt;/code&gt; ('''base''') seek matches for the elements of their first argument among those of their second.
&lt;source lang = &quot;rsplus&quot;&gt;
&gt; pmatch(c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;),table = c(&quot;b&quot;,&quot;c&quot;), nomatch = 0)
[1] 0 1 2 0
&lt;/source&gt;
* &lt;code&gt;make.unique()&lt;/code&gt; makes a character string unique. This is useful if you want to use a string as an identifier in your data.
&lt;source lang=&quot;rsplus&quot;&gt;
&gt; make.unique(c(&quot;a&quot;, &quot;a&quot;, &quot;a&quot;))
[1] &quot;a&quot;   &quot;a.1&quot; &quot;a.2&quot;
&lt;/source&gt;

== References ==
{{reflist|2}}</text>
      <sha1>ob9m0jjgw32n41ofb0i1dggjrbboapl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Stata/Probability Function</title>
    <ns>0</ns>
    <id>200606</id>
    <revision>
      <id>2384718</id>
      <parentid>1623421</parentid>
      <timestamp>2012-07-27T21:35:10Z</timestamp>
      <contributor>
        <username>Ak5791</username>
        <id>697256</id>
      </contributor>
      <text xml:space="preserve">&lt;noinclude&gt;{{Stata/Navigation}}&lt;/noinclude&gt;

The list of probability functions is available by typing in the command editor : 
&lt;pre&gt;
h density functions
&lt;/pre&gt;

== Useful quantiles == 

&lt;pre&gt;

. di invnorm(.975)
1.959964

. di invchi2(1,.95)
3.8414588

&lt;/pre&gt;

== Standard distributions == 

=== Gaussian Distribution ===

&lt;pre&gt;
local q975 = invnormal(.975)
#delimit ; 
tw function  y = normalden(x) , range(-4 4) ||
	, xlabel( , grid)
	xline( -`q975' `q975')
	title(PDF Gaussian with 95 % CI)
	; 
#delimit cr
gr export W:/normal.png, replace
&lt;/pre&gt;

The Gaussian distribution with 90,95 and 99 % confidence intervals. 

&lt;pre&gt;
set scheme s2color
global ub10 = invnorm(.95)
global lb10 = invnorm(.05)
global ub5 = invnorm(.975)
global lb5 = invnorm(.025)
global ub1 = invnorm(.995)
global lb1 = invnorm(.005)
#delimit ;
tw  function y=normden(x), range(-4 $lb5) color(red) recast(area)
      ||  function y=normden(x), range($ub5 4)   color(red) recast(area)
      ||  function y=normden(x), range(-4 4) lstyle(foreground)
      ||,
       ysca(off) xsca(noline)
       legend(off)
        xlabel(-4 &quot;-4 sd&quot; -3 &quot;-3 sd&quot; -2 &quot;-2 sd&quot; -1 &quot;-1 sd&quot; 0 &quot;mean&quot;
                      1  &quot;1 sd&quot;  2  &quot;2 sd&quot;  3  &quot;3 sd&quot;  4  &quot;4 sd&quot;
                      , grid gmin gmax)
              xtitle(&quot;&quot;)
          ;
#delimit cr  
&lt;/pre&gt;

=== Student Distribution ===

&lt;pre&gt;
#delimit ; 
tw function  y = tden(1,x) , range(-4 4) ||
	function y = tden(2,x) , range(-4 4) ||
	function y = tden(5,x) , range(-4 4) ||
	function y = tden(10,x) , range(-4 4) ||
	function y = tden(30,x) , range(-4 4) ||
	function y = normalden(x) , range(-4 4) lw(thick) ||
	, xlabel( , grid)
	legend(cols(5) label(1 &quot;k=1&quot;) label(2 &quot;k=2&quot;) label(3 &quot;k=5&quot;) 
 label(4 &quot;k=10&quot;) label(5 &quot;k=30&quot;) label(6 &quot;Gaussienne&quot;))
	title(PDF Student Distribution)
	; 
#delimit cr
&lt;/pre&gt;
{{Stata/Navbar|Documentation|Random Number Generation}}</text>
      <sha1>gg80tjs09l3oizf0ag4ugusrryb8ajc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/Hostile Environment</title>
    <ns>1</ns>
    <id>200607</id>
    <revision>
      <id>1547959</id>
      <parentid>1547958</parentid>
      <timestamp>2009-06-25T11:27:58Z</timestamp>
      <contributor>
        <username>Stef.lievens</username>
        <id>189810</id>
      </contributor>
      <minor />
      <comment>/* Future work */</comment>
      <text xml:space="preserve">=Future work=

A suggestion for future development on the wikibook:
Try to link the terms 'hostile environment' and 'robustness'. The latter being very hard to pin down on 1 definition (even experts don't use the same definitions for robustness on a system level).

Maybe this asks for a new section about robustness alone. Were the difference of robustness on a component level (easy definition) and robustness on a system level (hard, ?variable? definition) is explained...</text>
      <sha1>6w4a8swzeb5n1ne9d21m5tgax8u0qt6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Thermochap/Sandbox/Shrink Me</title>
    <ns>3</ns>
    <id>200608</id>
    <revision>
      <id>1578594</id>
      <parentid>1578553</parentid>
      <timestamp>2009-07-24T17:57:13Z</timestamp>
      <contributor>
        <username>Thermochap</username>
        <id>87911</id>
      </contributor>
      <comment>/* Automatically-generated worlds */</comment>
      <text xml:space="preserve">This is the talk page for shrink me.

== Please start new sections just below this line ==

== Automatically-generated worlds ==

Unfettered exploration of real worlds on multiple size-scales can be done with various types of microscopes, but unfettered exploration of virtual worlds on multiple size-scales might be inherently limited by a system's ability to remember that world's nanoscopic details.  One way around this problem is to find a way to generate interesting substructure automatically, so that the details of every atom position don't have to be memorized.  What are some ways that this might be done?  [[User:Thermochap|Thermochap]] ([[User talk:Thermochap|talk]]) 16:33, 24 July 2009 (UTC)

== See Also ==

== Footnotes ==

&lt;references/&gt;</text>
      <sha1>au4sw77605zbz40q1rhsdw3abmfgtx8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Lime Grilled Chicken</title>
    <ns>102</ns>
    <id>200609</id>
    <revision>
      <id>1703809</id>
      <parentid>1703789</parentid>
      <timestamp>2010-01-23T13:42:53Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 boneless skinless chicken breasts
* 1/2 cup extra-virgin olive oil
* 3 tbsp [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 1/4 cup freshly squeezed lime juice
* 2 tbsp honey
* 1/2 cup [[Cookbook:Chipotle BBQ Rub|Chipotle BBQ Rub]]

== Procedure ==
#Combine all ingredients except for Rub in a gallon zip-top plastic freezer bag. Add chicken breasts and refrigerate for 45 minutes.
#Remove chicken from bag. Season each with Rub.
#Place on a preheated charcoal grill and cook, turning often, until internal temperature reaches 165°.
#Remove and let rest for 5 minutes and serve.</text>
      <sha1>1ntrcxrhzebenmm0w7axkbaqt7qhm6t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Ketchup</title>
    <ns>102</ns>
    <id>200610</id>
    <revision>
      <id>2306912</id>
      <parentid>1704078</parentid>
      <timestamp>2012-04-15T20:59:28Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 ounces tomato paste
* 3/4 cup cider vinegar
* 5 chipotles in adobo sauce, puréed
* 1 tbsp salt
* 2 tbsp onion powder
* 2 tbsp garlic powder
* 1/4 cup adobo sauce

== Procedure ==
#Combine all ingredients in a large saucepan and bring to a boil over high heat. Cook, stirring occasionally, for 1/2 hour.
#Refrigerate in a non-reactive container for up to 2 months.</text>
      <sha1>svzk7vmx97kkw63b7gnvjnrgmdye3fs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Directing Technology/Purchase/Learn More About the Bidding Process</title>
    <ns>1</ns>
    <id>200611</id>
    <revision>
      <id>1548003</id>
      <timestamp>2009-06-25T12:57:40Z</timestamp>
      <contributor>
        <ip>208.101.140.94</ip>
      </contributor>
      <comment>Created page with 'John Franzen jpf207@lehigh.edu'</comment>
      <text xml:space="preserve">John Franzen
jpf207@lehigh.edu</text>
      <sha1>f74vhxcxzztqepifxh3czkqe0id0ope</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mexican Habanero Hot Sauce</title>
    <ns>102</ns>
    <id>200613</id>
    <revision>
      <id>1736265</id>
      <parentid>1548021</parentid>
      <timestamp>2010-03-14T22:10:29Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/2 cup tomato paste
* 10-15 habaneros, de-stemmed
* 1/4 cup malt vinegar
* Salt to taste
* 5 drops red food coloring

== Procedure ==
#Combine all ingredients in a food processor and pulse until smooth.
#Refrigerate in a non-reactive container for up to 2 months.</text>
      <sha1>kmlmrvqpzlr79djb13abetvm16r2km3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Medical Physiology/Cellular Physiology/Cell structure and Function</title>
    <ns>1</ns>
    <id>200615</id>
    <revision>
      <id>1548049</id>
      <timestamp>2009-06-25T14:08:01Z</timestamp>
      <contributor>
        <ip>69.40.253.111</ip>
      </contributor>
      <comment>Created page with 'This chapter is pretty much finished and ready for proofing--~~~~'</comment>
      <text xml:space="preserve">This chapter is pretty much finished and ready for proofing--[[Special:Contributions/69.40.253.111|69.40.253.111]] ([[User talk:69.40.253.111|talk]]) 14:08, 25 June 2009 (UTC)</text>
      <sha1>eoagkb5lr3md4os8yvz0tabtby598nq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Boumphreyfr</title>
    <ns>2</ns>
    <id>200616</id>
    <revision>
      <id>1548052</id>
      <parentid>1548051</parentid>
      <timestamp>2009-06-25T14:10:55Z</timestamp>
      <contributor>
        <username>Boumphreyfr</username>
        <id>232282</id>
      </contributor>
      <text xml:space="preserve">Hi I'm Frank Boumphrey and I am interested in doing books on Medical Physiology and ''regional'' Anatomy--[[User:Boumphreyfr|Boumphreyfr]] ([[User talk:Boumphreyfr|talk]]) 14:10, 25 June 2009 (UTC)</text>
      <sha1>0o4k6hxm0z0il7q5i7g8v6k1hn8x5g3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Audinet sample.jpg</title>
    <ns>6</ns>
    <id>200617</id>
    <revision>
      <id>2360988</id>
      <parentid>1548089</parentid>
      <timestamp>2012-06-08T13:24:36Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <comment>this is an excel screenshot --&gt; non free rationale</comment>
      <text xml:space="preserve">== Summary ==
{{Information |Description=A screenshot of Excel showing a sample PCProfile results for software audit|Source=self taken |Date=2009-06-25 |Author= multiple |Permission=see below}}

== Licensing ==
{{Microsoft screenshot}}
{{Fairuse rationale
|module      = Directing Technology/Maintain/Maintaining Technology
|copyrights  = Microsoft
|not free    = This is a screenshot of a proprietary software
|rationale   = There is no free equivalent for this screenshot
|source      = self taken
}}</text>
      <sha1>axm85qeulydzf9gpcbgeo45kj7l2na8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Lord Spring Onion/Collections/Intermediate Psychology</title>
    <ns>2</ns>
    <id>200618</id>
    <revision>
      <id>1548079</id>
      <timestamp>2009-06-25T14:47:13Z</timestamp>
      <contributor>
        <username>Lord Spring Onion</username>
        <id>176046</id>
      </contributor>
      <comment>Created page with '{{saved_book}}  == Intermediate Psychology == === The textbook for SQA Int 1 &amp; 2 Psychology === :[[Transwiki:Nonverbal communication]]  [[Category:Collections|Intermediate Psycho...'</comment>
      <text xml:space="preserve">{{saved_book}}

== Intermediate Psychology ==
=== The textbook for SQA Int 1 &amp; 2 Psychology ===
:[[Transwiki:Nonverbal communication]]

[[Category:Collections|Intermediate Psychology]]</text>
      <sha1>n8gt430d9zv0mc8fk0dv995bbn1nv0s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Could Sherlock Holmes Have Been a Good Geologist?</title>
    <ns>14</ns>
    <id>200623</id>
    <revision>
      <id>1548134</id>
      <timestamp>2009-06-25T16:30:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Geology]]</text>
      <sha1>clmwhlhawcf06akmq5rjq06q4st95xn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Telecommunications Theory</title>
    <ns>14</ns>
    <id>200624</id>
    <revision>
      <id>1548136</id>
      <timestamp>2009-06-25T16:31:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Telecommunication]]</text>
      <sha1>lzmrycd3s4gx8lyinsgod6gpgwlwkod</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Box templates</title>
    <ns>14</ns>
    <id>200625</id>
    <revision>
      <id>1548166</id>
      <timestamp>2009-06-25T17:12:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates for generic box or block-level elements.

[[Category:Templates]]</text>
      <sha1>f5ijf4gd1w3lu1j9l7e3fa5pqq4ncx7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Code templates</title>
    <ns>14</ns>
    <id>200627</id>
    <revision>
      <id>1549474</id>
      <parentid>1548202</parentid>
      <timestamp>2009-06-27T03:11:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Introduction to Philosophy</title>
    <ns>14</ns>
    <id>200628</id>
    <revision>
      <id>1548237</id>
      <timestamp>2009-06-25T17:50:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Philosophy]]</text>
      <sha1>bfonuilfqb30graarro9utovszjvl27</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Introduction</title>
    <ns>0</ns>
    <id>200629</id>
    <revision>
      <id>2239612</id>
      <parentid>2200773</parentid>
      <timestamp>2011-12-22T08:47:46Z</timestamp>
      <contributor>
        <username>Harshad.wiki</username>
        <id>514725</id>
      </contributor>
      <minor />
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;

SAS is a database. As opposed to Relational Databases, SAS is used primarily for batch processing of massive amounts of data. It can be found [http://www.sas.com here]. SAS is the largest privately held software company in the world.

SAS is made up of a number of modules with specialized procedures for analysis relating to various disciplines.  The foundation of the software is the Base/SAS product.  If one is interested in producing Graphical output, it would be necessary to purchase a license to SAS/Graph.  Statistical tools are in SAS/Stat and Economic/time-series procedures are in SAS/ETS.  There are other modules for Executive Information Systems (SAS/EIS), Operational Research (SAS/OR) and many more that could be mentioned.

SAS is fundamentally the premier data analysis software on the market today.  It utilizes a specialized data set table proprietary to SAS, however the SAS System has modules to be able to read and write to many other data base products like Oracle and ODBC compliant products like MS-SQL Server or PROGRESS.

SAS is generally utilized by government organizations and large businesses.  It is also found being used by many colleges and universities.  The greatest use for research is hard to identify, but there has been a great focus of users in the pharmacological research field.  It is also used for analysis and reporting of data in social science fields and engineering companies like electric utilities.

SAS licenses tend to be expensive and complicated, based on the number of users and the number of processors in the host computer.  It runs on server environments and is licencable for workstation users on PCs or other common machines.  It does not run on Macintosh machines, but a special product called JMP, and marketed by SAS Institute is available.  It analyses market data or survey data and notable for it's ability to visualize 'data cloud' arrays.

Dr. Jim Goodnight and a few other individuals were the founders of the product and Mr. Goodnight is CEO of SAS Institute.  The SAS Institute is located in Cary, North Carolina.

Television (60 minutes or 20/20 ) featured SAS in one of their programs.</text>
      <sha1>ooevv7ktixuhz20utu24y8m3382qbse</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:ROOTBOOKNAME</title>
    <ns>10</ns>
    <id>200630</id>
    <revision>
      <id>2005106</id>
      <parentid>2005061</parentid>
      <timestamp>2010-12-17T01:44:43Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>let's try this version after all</comment>
      <text xml:space="preserve">&lt;includeonly&gt;{{#switch:{{ARTICLESPACE:{{{1|{{FULLPAGENAME}}}}}}}|Template=|Category=|User=|=|{{ARTICLESPACE:{{{1|{{FULLPAGENAME}}}}}}}:}}{{BOOKNAME|{{{1|{{FULLPAGENAME}}}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>q8uoroh26vwids268eyjjweb9hdpw8a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Beygian</title>
    <ns>2</ns>
    <id>200631</id>
    <revision>
      <id>1548258</id>
      <timestamp>2009-06-25T18:12:58Z</timestamp>
      <contributor>
        <username>Beygian</username>
        <id>247068</id>
      </contributor>
      <comment>Created page with 'I am Sadegh Beygian very intrested in science and try to be PROFFESIONAL'</comment>
      <text xml:space="preserve">I am Sadegh Beygian
very intrested in science and try to be PROFFESIONAL</text>
      <sha1>eta4nqf4megj7uws524sezht8ylmwcd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Method of Moment</title>
    <ns>0</ns>
    <id>200632</id>
    <revision>
      <id>1548271</id>
      <timestamp>2009-06-25T18:37:58Z</timestamp>
      <contributor>
        <username>PAC</username>
        <id>244523</id>
      </contributor>
      <comment>Created page with '&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;  * PROC MODEL'</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;

* PROC MODEL</text>
      <sha1>9quywaoxw1jscyjz2okh41v5bnq3s9f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crawfish Boil</title>
    <ns>102</ns>
    <id>200633</id>
    <revision>
      <id>1785548</id>
      <parentid>1785463</parentid>
      <timestamp>2010-05-02T22:08:53Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 pound purged live craw/crayfish
* 1/2 gallon water

'''Boil Seasoning'''
* 2 tbsp cayenne pepper
* 2 tbsp dried dill weed
* 2 tbsp each garlic and onion powder
* 3 tbsp salt
* 2 tbsp paprika
* 2 tbsp black pepper
* 2 tsp cinnamon
* Lemon zest

== Procedure ==
#Bring water to a boil in a stockpot or your tallest pot. Add Seasoning ingredients and stir.
#Add crawfish, making sure to leave any dead ones behind. Cook for 7 minutes.
#Turn off the heat and leave on the burner for 8 minutes. Serve.</text>
      <sha1>qepjjk8rce9fu14xbnxlafqhljizytm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>SAS/Documentation</title>
    <ns>0</ns>
    <id>200634</id>
    <revision>
      <id>2575983</id>
      <parentid>1927729</parentid>
      <timestamp>2013-10-30T09:06:34Z</timestamp>
      <contributor>
        <username>Rotlink</username>
        <id>761486</id>
      </contributor>
      <minor />
      <comment>fixing dead links</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{SAS/Navigation}}&lt;/noinclude&gt;


* [http://support.sas.com/onlinedoc/913/docMainpage.jsp SAS online documentation]
** [http://support.sas.com/onlinedoc/913/getDoc/fr/allprods.hlp/a003135046.htm List and help of all SAS procedures]
** [http://support.sas.com/sassamples/graphgallery/ The Graph Gallery]
* [http://www.ats.ucla.edu/stat/sas/ UCLA Stat computing SAS]
* Google Code Search
* [http://archive.is/20121225205015/dataninja.wordpress.com/2005/12/23/introduction-to-sas/ A Brief Introduction to SAS] (10 pages)
* [http://stackoverflow.com/questions/tagged/sas StackOverflow]
* '''(fr)''' [http://olivier.godechot.free.fr/hoprubrique.php?id_rub=27 Olivier Godechot's macros] (mainly for textmining)
* [http://www.sascommunity.org/wiki/Main_Page SAS Community wiki]</text>
      <sha1>4k5v9xukyfiqucshfem4fkggoebg8bl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Nmaniac42/Collections/Japanese Phrase Book</title>
    <ns>2</ns>
    <id>200635</id>
    <revision>
      <id>1548279</id>
      <timestamp>2009-06-25T18:49:49Z</timestamp>
      <contributor>
        <username>Nmaniac42</username>
        <id>188979</id>
      </contributor>
      <comment>Created page with '{{saved_book}}  == Japanese Phrase Book == :[[Japanese Phrasebook/Greetings and farewell]] :[[Japanese Phrasebook/Common phrases]] :[[Japanese Phrasebook/At the hotel]] :[[Japane...'</comment>
      <text xml:space="preserve">{{saved_book}}

== Japanese Phrase Book ==
:[[Japanese Phrasebook/Greetings and farewell]]
:[[Japanese Phrasebook/Common phrases]]
:[[Japanese Phrasebook/At the hotel]]
:[[Japanese Phrasebook/At the bank]]
:[[Japanese Phrasebook/Ticketing]]
:[[Japanese Phrasebook/Asking for directions and time]]

[[Category:Collections|Japanese Phrase Book]]</text>
      <sha1>5fnjpc0samu7k6ubybnr597sdj4ixss</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fish Sticks</title>
    <ns>102</ns>
    <id>200636</id>
    <revision>
      <id>1720687</id>
      <parentid>1720686</parentid>
      <timestamp>2010-02-15T22:20:26Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 pound cod, haddock, or tilapia fillets, cut in half
* Cornmeal as needed
* Freshly squeezed lemon juice, as needed
* 1 tbsp salt
* 1 tbsp black pepper
* 1 tbsp cayenne pepper
* 2 tbsp smoked paprika
* Oil for deep frying

== Procedure ==
#Combine all dry seasonings. Set aside.
#Dip fish in lemon juice then season with seasoning mixture then dredge in cornmeal.
#Heat oil to 375°. Fry fish in batches for 3 minutes. Drain on a cooling rack.
#Cut into one strip. If inside is underdone, finish in a 350° oven, '''''not''''' in the oil. Serve.</text>
      <sha1>djefme3xl99gxf3xriwhgczwqs9bgu8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook/Language Dictionary/PLI/procedures</title>
    <ns>0</ns>
    <id>200637</id>
    <revision>
      <id>2393558</id>
      <parentid>1573719</parentid>
      <timestamp>2012-08-15T08:23:11Z</timestamp>
      <contributor>
        <ip>15.203.233.84</ip>
      </contributor>
      <comment>/* External Procedures */</comment>
      <text xml:space="preserve">'''Note:''' This article requires basic knowledge of PL/I which can be found in [[Software Engineers Handbook/Language Dictionary/PLI]].

=== Procedures ===

==== Procedures as Subroutines ====

A PL/I programm may contain user defined subroutines:
* The definition of a (internal) subroutine starts with
** The name of the subroutine followed by ':'
** The keyword PROCEDURE (abbreviation: PROC)
** Optionally a parameter-descriptor list in brackets
* The subroutine will be invoked by CALL statements
* The subroutine may be left by optionally return statements
 '''example: proc options ( main );'''
    call proc_1 ( 0 );   /* output: 'zero'                */
    call proc_1 ( 7 );   /* output: 'the number is     7' */
 '''proc_1: proc ( parm );'''
 dcl   parm   bin fixed (15);
    if parm = 0 then
       do;
          put skip list ( 'zero' );
          return;
       end;
    put skip list ( 'the number is' || parm );
 '''end proc_1;'''
 '''end example;'''

==== Procedures as Functions ====

A PL/I programm may contain user defined functions:
* The definition of a (internal) function starts with
** The name of the function followed by ':'
** The keyword PROCEDURE (abbreviation: PROC)
** Optionally a parameter-descriptor list in brackets
** The keyword RETURNS followed by the type of the return value in brackets
* The result of the function may be used in expressions
* The subroutine must have at least one return statements which returns the result
 '''example: proc options ( main );'''
 dcl   number   bin fixed (31);
    put skip list ( hundred ( 0 ) ) ;   /* output:          0 */
    put skip list ( hundred ( 3 ) ) ;   /* output:        300 */
    number = hundred ( 5 ) + 55;
    put skip list ( number );           /* output:        555 */
 '''hundred: proc ( parm ) returns ( bin fixed (31) );'''
 dcl   parm   bin fixed (15);
    if parm = 0 then return ( 0 );
    return ( parm * 100 );
 '''end hundred;'''
 '''end example;'''

=== Changes of Parameter Variables ===

When a procedure is invoked with variables as parameter this parameters may be passed in one of the following ways:
* &quot;By reference&quot; (also known as &quot;by name&quot;) which means changes inside the procedure alters the original variable.
* &quot;By value&quot; (or &quot;as dummy&quot;) which means changes inside the procedure alters only a copy of the original variable.

In PL/I a variable which is
* of simple type, e.g. char, number, ...
* an array of simple type variables
* a structure of simple type variables &lt;sup&gt;[1]&lt;/sup&gt;
is passed by reference if and only if the variable matches exactly the argument definition inside the procedure.
 example: proc options ( main );
 dcl   bifi_15   bin fixed (15);
 dcl   bifi_31   bin fixed (31);
    bifi_15 = 15;
    call change ( bifi_15 );
    put skip list ( bifi_15 );   /* output: 99 */
    bifi_31 = 31;
    call change ( bifi_31 );
    put skip list ( bifi_31 );   /* output: 31 */
 change: proc ( parm_15 );
 dcl   parm_15   bin fixed (15);
    parm_15 = 99;
 end change;
 end example;

==== Asterisk Notation ====

* If the size attribute of the parameter definition is an asterisk every matching variable with any size is passed by reference.
* If the dimension of the parameter definition is an asterisk every matching variable with any dimension is passed by reference.
 example: proc options ( main );
 dcl   a_ch (2)   char (10);
 dcl   b_ch (5)   char (20);
 dcl   v_ch (5)   char (20) varying;
    a_ch (1) = 'BEFORE'
    call change ( a_ch );
    put skip list ( a_ch (1) );   /* output: 'AFTER     ' */
    b_ch (1) = 'BEFORE'
    call change ( b_ch );
    put skip list ( b_ch (1) );   /* output: 'AFTER               ' */
    v_ch (1) = 'BEFORE'
    call change ( v_ch );
    put skip list ( v_ch (1) );   /* output: 'BEFORE' because v_ch-strings are varying */
 change: proc ( ch_array );
 dcl   ch_array (*)   char (*);
    ch_array (1) = 'AFTER';
 end change;
 end example;

=== Locale Variables ===
==== Scope ====

The scope of PL/I variables is confined to procedures in which they are declared.
 outer: proc options ( main );
 dcl   a   char (07)   init ( 'outer A' );
 dcl   b   char (07)   init ( 'outer B' );
    call inner;
    put skip list ( a );
    put skip list ( b );
 inner: proc;
 dcl   b   char (07)   init ( 'inner B' );
 dcl   c   char (07)   init ( 'inner C' );
    put skip list ( b );
    put skip list ( c );
 end inner;
 end outer;
 &amp;nbsp;
 output:
    'inner B'
    'inner C'
    'outer A'
    'outer B'

 outer: proc options ( main );
    call hello;    /* output: 'hello from outer' */
    call inner;    /* output: 'hello from inner' */
 hello: proc;
    put skip list ( 'hello from outer' );
 end hello;
 inner: proc;
    call hello;
 hello: proc;
    put skip list ( 'hello from inner' );
 end hello;
 end inner;
 end outer;

==== Storage Class ====

There are two storage class locale variables may have.&lt;sup&gt;[2]&lt;/sup&gt;

'''Automatic''' storage:
* It's value is lost between successive invocations of the procedure
* If the variable has the INIT attribute initialisation is done every time the procedure is invoced
* The keyword AUTOMATIC may be abbreviated as AUTO
* Locale variables are automatic by default&lt;sup&gt;[3]&lt;/sup&gt;

'''Static''' storage:
* It's value is saved between successive invocations of the procedure
* If the variable has the INIT attribute initialisation is done only once when program starts

 example: proc options ( main );
    call static_memory ( 7 );
    call static_memory ( 0 );   /* output: 7 */
    call   auto_memory ( 7 );
    call   auto_memory ( 0 );   /* output: 1 */
 static_memory: proc ( parm );
 dcl   parm     bin fixed (15);
 dcl   memory   bin fixed (15)   init ( 1 )   '''STATIC''';
    if parm = 0 then
       put skip list ( memory );
    else
       memory = parm;
 end static_memory;
 auto_memory: proc ( parm );
 dcl   parm     bin fixed (15);
 dcl   memory   bin fixed (15)   init ( 1 );
    if parm = 0 then
       put skip list ( memory );
    else
       memory = parm;
 end auto_memory;
 end example;


=== Multiple Entries ===

Procedures may have more than one entry.

 example: proc options ( main );
 dcl   number   bin fixed (15);
    call value_set ( 3 );
    call value_get ( number );
    put skip list ( number );    /* output: 3 */
    call value_calc ( 2 , 1 );
    call value_write;            /* output: 7 */
 '''value_set: PROC ( parm_1 );'''
 dcl   parm_1   bin fixed (15);
 dcl   memory   bin fixed (15)   static;
    memory = parm_1;
    return;
 '''value_get: ENTRY ( parm_1 );'''
 /* do NOT declare parm_1 and memory once again ! */
    parm_1 = memory;
    return;
 '''value_calc: ENTRY ( parm_1 , parm_2 );'''
 dcl   parm_2   bin fixed (15);
    memory = memory * parm_1 + parm_2;
    return;
 '''value_write: ENTRY;'''
    put skip list ( memory );
 '''end value_set;'''
 end example;

=== Multiple Parm Lists ===

Using the attribute '''GENERIC''' procedures may have more than one parm list.
 '''Syntax:'''
    DCL   procname   GENERIC ( procname_1   WHEN ( parm_descriptor_1 ) ,
                               procname_2   WHEN ( parm_descriptor_2 )   );
 '''Meaning at compile time:'''
    WHENEVER   a call of procname is inside the source
       IF      the calling parameters are like parm_descriptor_1 THEN replace procname with procname_1
       ELSE IF the calling parameters are like parm_descriptor_2 THEN replace procname with procname_2
       ELSE    throw compile error

Parm descriptor may contain the attributes of the calling parameters:
 example: proc options ( main );
 dcl   twice   generic ( twice_C   when ( char  ) ,
                         twice_F   when ( fixed )   );
    put skip list ( twice ( 'hello' ) );   /* output: 'hello hello' */
    put skip list ( twice ( 1234321 ) );   /* output: 2468642       */
 twice_C: proc ( parm ) returns ( char (11) );
 dcl   parm   char (05);
    return ( parm || ' ' || parm );
 end twice_C;
 twice_F: proc ( parm ) returns ( bin fixed (31) );
 dcl   parm   bin fixed (31);
    return ( parm + parm );
 end twice_F;
 end example;

Parm descriptor may contain the number of the calling parameters:
 dcl   calc   generic ( calc_with_3_parameters   when ( * , * , * ) ,
                        calc_with_2_parameters   when (   ,   )     ,
                        calc_with_1_parameter    when ( * )           );
 calc_with_3_parameters: proc ( a , b , c );
 ...
 calc_with_2_parameters: proc ( a , b );
 ...
 calc_with_1_parameter:  proc ( a  );
 ...

Parm descriptor may contain the number of dimensions of the calling parameters:
 dcl   calc   generic ( calc_value    when ( ( * )         ) ,
                        calc_vector   when ( ( * , * )     ) ,
                        calc_matrix   when ( ( * , * , * ) )   );
 calc_value: proc ( v );
 dcl   v         char (12);   
 ...
 calc_vector: proc ( v ):
 dcl   v (5)     bit (1);
 ...
 calc_matrix: proc ( v ):
 dcl   v (5,8)   bin fixed (15);
 ...

=== Recursive Procedures ===

A procedure may be invoked recursivly if the RECURSIVE option is specified.
* Every invocation of the procedure has it's own value of the calling parameters
* Every invocation of the procedure has it's own value of local variables which are automatic
* All invocations of the procedure have a common value of local variables which are static
 example: proc options ( main );
 dcl   number   bin fixed (15);
    call test ( 1 );
 test: proc ( level ) '''RECURSIVE''';
 dcl   level   pic   '9';
 dcl   loc_a   pic  '99';
 dcl   loc_s   pic '999'   static;
 dcl   pre     char (09);
    loc_a = level *  11;
    loc_s = level * 111;
    pre = substr ( '         ' , 1 , 3 * level );
    put skip list ( pre || 'Level ' || level || ' started' );
    put skip list ( pre || 'loc_a =  ' || loc_a );
    put skip list ( pre || 'loc_s = '  || loc_s );
    if level &lt; 3 call test ( level + 1 );
    put skip list ( pre || 'loc_a =  ' || loc_a );
    put skip list ( pre || 'loc_s = '  || loc_s );
    put skip list ( pre || 'Level ' || level || ' ended' );
 end test;
 end example;
 &amp;nbsp;
 Output:
    Level 1 started
    loc_a =  11
    loc_s = 111
       Level 2 started
       loc_a =  22
       loc_s = 222
          Level 3 started
          loc_a =  33
          loc_s = 333
          loc_a =  33
          loc_s = 333
          Level 3 ended
       loc_a =  22
       loc_s = 333
       Level 2 ended
    loc_a =  11
    loc_s = 333
    Level 1 ended

=== Entry Variables and Parameters ===

Like other data procedures may be used as variables and parameters.

 example: proc options ( main );
 dcl   e_var   ENTRY;
    e_var = proc_1;
    call e_var;       /* output: 'proc 1' */
    e_var = proc_2;
    call e_var;       /* output: 'proc 2' */
 proc_1: proc;
    put skip list ( 'proc 1' );
 end proc_1;
 proc_2: proc;
    put skip list ( 'proc 2' );
 end proc_2;
 end example;

 example: proc options ( main );
    call list ( 'square' , square_proc );
    call list ( 'cube'   ,   cube_proc );
 list: proc ( title , calc );
 dcl   title   char (*);
 dcl   calc    entry ( bin fixed (15) ) returns ( bin fixed (15) );
 dcl   i       bin fixed (15);
    put skip list ( title || '-table:' );
    do i = 1 to 5;
       put skip list ( i || ':' || calc ( i ) );
    end;
 end list;
 square_proc: proc ( v ) returns ( bin fixed (15) );
 dcl   v   bin fixed (15);
    return ( v * v );
 end square_proc;
 cube_proc: proc ( v ) returns ( bin fixed (15) );
 dcl   v   bin fixed (15);
    return ( v * square_proc ( v ) );
 end cube_proc;
 end example;
 &amp;nbsp;
 Output:
    square-table:
         1:      1
         2:      4
         3:      9
         4:     16
         5:     25
    cube-table:
         1:      1
         2:      8
         3:     27
         4:     64
         5:    125

=== External Procedures ===

A procedure may be ''external'', i.e. the source may be contained in a separate file.&lt;br&gt;
This approach offers the possibility to use this procedure in more than one main program.&lt;br&gt;
Every program or procedure which uses an external procedure must declare this procedure.

 '''Source File of external procedure EXT1:'''
 ext1: proc;
    put skip list ( 'Hello from EXT-1' );
 end ext1;
 &amp;nbsp;
 '''Source File of external procedure EXT2:'''
 ext2: proc ( message );
 dcl   message   char (*);
 dcl   ext1      EXTERNAL ENTRY;   /* declaration of used external procedure */
    put skip list ( 'EXT-2:' );
    put skip list ( message );
    call ext1;
 end EXT2;
 &amp;nbsp;
 '''Source File of MAIN:'''
 example: proc options ( main );
 dcl   ext2      EXT ENTRY ( CHAR (*) );   /* keyword EXTERNAL may be abbreviated */
    call ext2 ( 'Called by Example' );
 end example;
 &amp;nbsp;
 '''Output running example'''
 EXT-2:
 Called by Example
 Hello from EXT-1

==== Static Linking ====

Making a program executable requires two steps:
# Compile the program and all the used external procedures in any order.
# Use the '''linkage editor''' to combine the compile objects to an executable program.

The executable program now contains the binary code of its procedures at linking time,&lt;br&gt;
i.e. if an external procedure is changed and recompiled after linking time this would not change the behaviour of the executable program.

==== Fetched Procedures ==== 

PL/I allows dynamic linking of external procedures,&lt;br&gt;
i.e. a main program may load the last compiled version of a procedure at run time.

The statement '''FETCH ABC''' loads the binary of procedure ABC from auxiliary storage into main storage (unless ABC already exists in main storage).

The statement '''RELEASE ABC''' frees main storage occupied by ABC&lt;sup&gt;[4]&lt;/sup&gt;.

 example: proc options ( main );
 dcl   abc         EXT ENTRY;
 dcl   dfg         EXT ENTRY;
 dcl ( b1 , b2 )   bit (1);
    .....
    if b1 then
       do;
          fetch   abc;
          call    abc;
          release abc;
       end;
    .....
    if b2 then
       do;
          fetch   abc, dfg;
          call    abc;
          call    dfg;
          release abc, dfg;
       end;
 end example;

==== &quot;Pseudo-Fetching&quot; ====

If in the example above both b1 and b2 are true ...
* abc will be released after the first call
* abc will be loaded again before the second call
... which is not very effective.

PL/I has the following properties:
* A procedure will be recognised as to_be_loaded_dynamicly iff the program somewhere contains a fetch or release statement, it is not necessary that this statement will be reached at any time.
* If a procedure recognised as to_be_loaded_dynamicly is invoked at runtime it will be fetched automatically if necessary.

Using this two properties the program above may be rewritten as:
 example: proc options ( main );
 dcl   abc         EXT ENTRY;
 dcl   dfg         EXT ENTRY;
 dcl ( b1 , b2 )   bit (1);
    if 1 &gt; 2 then          /* this will never be true */
       fetch   abc, dfg;   /* but abc and dfg will be MARKED AS TO_BE_LOADED_DYNAMICLY */
    .....
    if b1 then
       do;
       /* COMMENT: IF ABC IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call abc;
       end;
    .....
    if b2 then
       do;
       /* COMMENT: IF ABC IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call abc;
       /* COMMENT: IF DFG IS NOT YET IN MAIN STORAGE THEN LOAD IT AUTOMATICALLY */
          call dfg;
       end;
 end example;

=== Notes ===
* &lt;sup&gt;[1]&lt;/sup&gt; or an array of structures of simple type variables ...
* &lt;sup&gt;[2]&lt;/sup&gt; there are two more storage class (based and controlled for dynamically allocated storage) which will be explained in [[Software_Engineers_Handbook/Language_Dictionary/PLI/storage_classes|another wikibooks PL/I special]].
* &lt;sup&gt;[3]&lt;/sup&gt; in PL/I default values may be altered using the DEFAULT statement.
* &lt;sup&gt;[4]&lt;/sup&gt; the FREE statement for a fetched procedure will also free the local static variables of this procedure.

{{BookCat}}</text>
      <sha1>9ao8cx0rpdsysnecdkga55k5ljfunbc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Physics with Calculus</title>
    <ns>14</ns>
    <id>200638</id>
    <revision>
      <id>1548315</id>
      <timestamp>2009-06-25T19:25:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category.</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Physics]]</text>
      <sha1>9r9ehm8f0t08njgz8erzv7r1jtjzwmt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Technology Planning</title>
    <ns>14</ns>
    <id>200640</id>
    <revision>
      <id>1548323</id>
      <timestamp>2009-06-25T19:27:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Information technology]]</text>
      <sha1>ozk17ycgc64swah26h42wyhhd8j1uq9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/the</title>
    <ns>0</ns>
    <id>200641</id>
    <revision>
      <id>1548328</id>
      <parentid>1548324</parentid>
      <timestamp>2009-06-25T19:39:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">This command is used to get the value of a counter, eg. \the\exno

{{BookCat}}</text>
      <sha1>8dwq0g3b5juw17iri46n9qqddedn6gf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:72.27.7.131</title>
    <ns>3</ns>
    <id>200646</id>
    <revision>
      <id>1548413</id>
      <parentid>1548381</parentid>
      <timestamp>2009-06-25T20:06:40Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>/* Warning */ new section</comment>
      <text xml:space="preserve">==[[Adventist Youth Honors Answer Book/Nature/Seeds]]==
Hi,

Please don't reword the requirements of an honor, and please do not remove additional answers.  If a requirement asks for ten seeds, but the answers here provide more than that, it's OK.  We are trying to cover as many bases as possible.  If you have questions about this, please post them on [[Talk:Adventist Youth Honors Answer Book/Nature/Seeds|the honor's talk page]].  Thanks! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 19:57, 25 June 2009 (UTC)

== Warning ==

You need to quit making edits to the honor requirements.  It almost looks as if you are trying to change the answers and questions in such a way to make them look like ''your'' answers so you can turn them in to your instructor.  If you keep doing this, you will be blocked from making further edits. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 20:06, 25 June 2009 (UTC)</text>
      <sha1>pj7wkou2oj40dxkwq96a3jimkblffjq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Deletion templates</title>
    <ns>14</ns>
    <id>200647</id>
    <revision>
      <id>1548507</id>
      <parentid>1548422</parentid>
      <timestamp>2009-06-25T22:03:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Maintenance templates]]</text>
      <sha1>lfh3lbxk3od6ygifvsr4lqfd057nk8i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:217.219.214.129</title>
    <ns>3</ns>
    <id>200649</id>
    <revision>
      <id>1548444</id>
      <timestamp>2009-06-25T20:46:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/217.219.214.129|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 20:46, 25 June 2009 (UTC)}}</text>
      <sha1>7ctzz204bak310ofgx9fwir4ezjyup6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Namespace-specific templates</title>
    <ns>14</ns>
    <id>200650</id>
    <revision>
      <id>2586629</id>
      <parentid>1548445</parentid>
      <timestamp>2013-12-01T12:42:10Z</timestamp>
      <contributor>
        <username>دالبا</username>
        <id>393521</id>
      </contributor>
      <minor />
      <comment>[[fa:رده:الگوهای مختص به فضای نام]]</comment>
      <text xml:space="preserve">This category is for categories that list templates commonly used in only a specific namespace.

[[Category:Templates|{{PAGENAME}}]]
[[fa:رده:الگوهای مختص به فضای نام]]</text>
      <sha1>0t3ubos8f6vc4hbgdegzx0gpm05jqea</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Bartending/Templates</title>
    <ns>14</ns>
    <id>200651</id>
    <revision>
      <id>1548487</id>
      <timestamp>2009-06-25T21:36:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">This category contains templates used in the [[{{ROOTBOOKNAME}}]] book.

{{BookCat}}</text>
      <sha1>alj4u0ntthhue154f7vxdmhh30tyc4p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>National Forensic League</title>
    <ns>0</ns>
    <id>200653</id>
    <redirect title="Lincoln-Douglas Debate/National Forensic League" />
    <revision>
      <id>1548517</id>
      <timestamp>2009-06-25T22:08:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[National Forensic League]] to [[Lincoln-Douglas Debate/National Forensic League]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Lincoln-Douglas Debate/National Forensic League]]</text>
      <sha1>brqr7vbjyvtzs264w2xs0nzny57ygtm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Lincoln-Douglas Debate</title>
    <ns>14</ns>
    <id>200654</id>
    <revision>
      <id>1548519</id>
      <timestamp>2009-06-25T22:09:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Verbal communication]]</text>
      <sha1>fbxud5xmmz2xr31ulewju34gqhbwh6e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Physics Textbook</title>
    <ns>14</ns>
    <id>200655</id>
    <revision>
      <id>1548531</id>
      <timestamp>2009-06-25T22:14:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category,</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Physics]]</text>
      <sha1>9r9ehm8f0t08njgz8erzv7r1jtjzwmt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4014</title>
    <ns>0</ns>
    <id>200657</id>
    <revision>
      <id>1548560</id>
      <parentid>1548546</parentid>
      <timestamp>2009-06-25T22:37:44Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <text xml:space="preserve">{{Logic_IC
|number = 4014
|logic_type = Sequential
|func_family = Shift register
|description = 8-bit shift register with parallel load.
|pins=16
}}

[[Category:Practical Electronics]]</text>
      <sha1>g2rftk1jrc3lhee4ksfqkp53pwqsu6u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Force and Motion</title>
    <ns>0</ns>
    <id>200658</id>
    <redirect title="General Mechanics/Force and Motion" />
    <revision>
      <id>1548567</id>
      <timestamp>2009-06-25T22:45:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Force and Motion]] to [[General Mechanics/Force and Motion]]: Merging into book.</comment>
      <text xml:space="preserve">#REDIRECT [[General Mechanics/Force and Motion]]</text>
      <sha1>5bx1uhfj6dmbcpobwk5cqrvaj7o8fen</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Class project templates</title>
    <ns>14</ns>
    <id>200661</id>
    <revision>
      <id>1548592</id>
      <timestamp>2009-06-25T23:19:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics/RectMot</title>
    <ns>10</ns>
    <id>200662</id>
    <redirect title="Template:FHSST Physics/Rectilinear Motion" />
    <revision>
      <id>1548602</id>
      <timestamp>2009-06-25T23:46:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics/RectMot]] to [[Template:FHSST Physics/Rectilinear Motion]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Rectilinear Motion]]</text>
      <sha1>n69gxjij2uy1ujf59zcf7qso0f4jfny</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:FHSST Physics/Mom</title>
    <ns>10</ns>
    <id>200663</id>
    <redirect title="Template:FHSST Physics/Momentum" />
    <revision>
      <id>1548604</id>
      <timestamp>2009-06-25T23:51:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:FHSST Physics/Mom]] to [[Template:FHSST Physics/Momentum]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:FHSST Physics/Momentum]]</text>
      <sha1>ofq813y8miouhvburbc2x3zth6om7fb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Rectilinear Motion</title>
    <ns>0</ns>
    <id>200664</id>
    <redirect title="FHSST Physics/Rectilinear Motion" />
    <revision>
      <id>1548610</id>
      <timestamp>2009-06-26T00:13:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Rectilinear Motion]] to [[FHSST Physics/Rectilinear Motion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion]]</text>
      <sha1>kob0bguujymzyqcgvlvkdks7r0753iz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:What is rectilinear motion</title>
    <ns>0</ns>
    <id>200665</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Definition" />
    <revision>
      <id>1548613</id>
      <timestamp>2009-06-26T00:14:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:What is rectilinear motion]] to [[FHSST Physics/Rectilinear Motion/Definition]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Definition]]</text>
      <sha1>qwyfzo0rp2krxr8p3dzdy7k9giplep7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Speed and Velocity</title>
    <ns>0</ns>
    <id>200666</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Speed and Velocity" />
    <revision>
      <id>1548616</id>
      <timestamp>2009-06-26T00:15:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Speed and Velocity]] to [[FHSST Physics/Rectilinear Motion/Speed and Velocity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Speed and Velocity]]</text>
      <sha1>a5nd0grxxb97kea5hwfxd6uin0x64pu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Rectilinear Motion:Speed and Velocity</title>
    <ns>1</ns>
    <id>200667</id>
    <redirect title="Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity" />
    <revision>
      <id>1548618</id>
      <timestamp>2009-06-26T00:15:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Rectilinear Motion:Speed and Velocity]] to [[Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Rectilinear Motion/Speed and Velocity]]</text>
      <sha1>93me7hxlsxd63k1vn7u5ou2nb0zzesr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Graphs</title>
    <ns>0</ns>
    <id>200668</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Graphs" />
    <revision>
      <id>1548621</id>
      <timestamp>2009-06-26T00:17:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Graphs]] to [[FHSST Physics/Rectilinear Motion/Graphs]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Graphs]]</text>
      <sha1>9flp2a6hlronz27v442i46x84esmg1r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Equations of Motion</title>
    <ns>0</ns>
    <id>200669</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Equations of Motion" />
    <revision>
      <id>1548624</id>
      <timestamp>2009-06-26T00:18:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Equations of Motion]] to [[FHSST Physics/Rectilinear Motion/Equations of Motion]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Equations of Motion]]</text>
      <sha1>tletkw1zx5i495sxpbfu3drn79mj74f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Rectilinear Motion:Important Equations and Quantities</title>
    <ns>0</ns>
    <id>200670</id>
    <redirect title="FHSST Physics/Rectilinear Motion/Summary" />
    <revision>
      <id>1548627</id>
      <timestamp>2009-06-26T00:19:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Rectilinear Motion:Important Equations and Quantities]] to [[FHSST Physics/Rectilinear Motion/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Rectilinear Motion/Summary]]</text>
      <sha1>o8x72f4uk7pupm1h0rali39orzmw2br</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:What is Momentum</title>
    <ns>0</ns>
    <id>200671</id>
    <redirect title="FHSST Physics/Momentum/Definition" />
    <revision>
      <id>1548635</id>
      <timestamp>2009-06-26T00:25:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:What is Momentum]] to [[FHSST Physics/Momentum/Definition]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Definition]]</text>
      <sha1>aqpidag1f3j5ve4cuic451wzg9l3iwe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:The Momentum of a System</title>
    <ns>0</ns>
    <id>200672</id>
    <redirect title="FHSST Physics/Momentum/System" />
    <revision>
      <id>1548638</id>
      <timestamp>2009-06-26T00:26:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:The Momentum of a System]] to [[FHSST Physics/Momentum/System]]: Subpage notation and shorter name</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/System]]</text>
      <sha1>l00ai7prwkb9ohr56ipj6ifdxs0tauh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Change in Momentum</title>
    <ns>0</ns>
    <id>200673</id>
    <redirect title="FHSST Physics/Momentum/Change" />
    <revision>
      <id>1548641</id>
      <timestamp>2009-06-26T00:27:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Change in Momentum]] to [[FHSST Physics/Momentum/Change]]: Subpage notation and less redundancy</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Change]]</text>
      <sha1>ofe94phivv24h5byixi4sx4h4esnfm0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:What properties does momentum have</title>
    <ns>0</ns>
    <id>200674</id>
    <redirect title="FHSST Physics/Momentum/Properties" />
    <revision>
      <id>1548644</id>
      <timestamp>2009-06-26T00:28:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:What properties does momentum have]] to [[FHSST Physics/Momentum/Properties]]: Subpage notation and shorter name</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Properties]]</text>
      <sha1>nuabk2p0td48ztcxs9bgvt3h2anfzgk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Impulse</title>
    <ns>0</ns>
    <id>200675</id>
    <redirect title="FHSST Physics/Momentum/Impulse" />
    <revision>
      <id>1548647</id>
      <timestamp>2009-06-26T00:29:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Impulse]] to [[FHSST Physics/Momentum/Impulse]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Impulse]]</text>
      <sha1>r9ipmmeaqhd7imnm4tbn0ab956oymfc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:FHSST Physics Momentum:Impulse</title>
    <ns>1</ns>
    <id>200676</id>
    <redirect title="Talk:FHSST Physics/Momentum/Impulse" />
    <revision>
      <id>1548649</id>
      <timestamp>2009-06-26T00:29:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:FHSST Physics Momentum:Impulse]] to [[Talk:FHSST Physics/Momentum/Impulse]]: Subpage notation.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:FHSST Physics/Momentum/Impulse]]</text>
      <sha1>awoq6ys1s0cy2n29sj2tpz13zocv3ks</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>FHSST Physics Momentum:Summary of Important Quantities, Equations and Concepts</title>
    <ns>0</ns>
    <id>200677</id>
    <redirect title="FHSST Physics/Momentum/Summary" />
    <revision>
      <id>1548652</id>
      <timestamp>2009-06-26T00:30:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[FHSST Physics Momentum:Summary of Important Quantities, Equations and Concepts]] to [[FHSST Physics/Momentum/Summary]]: Subpage notation and shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[FHSST Physics/Momentum/Summary]]</text>
      <sha1>tv8gz1xf98yydhhjhp07018etmtqh5s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Practical Electronics/IC/4073</title>
    <ns>0</ns>
    <id>200678</id>
    <revision>
      <id>1548659</id>
      <timestamp>2009-06-26T00:42:29Z</timestamp>
      <contributor>
        <username>Inductiveload</username>
        <id>30522</id>
      </contributor>
      <comment>Created page with '{{Logic_IC |number = 4073 |logic_type = Combinatorial |func_family = Logic |description = Triple 3-Input AND Gate |pins = 14 }}'</comment>
      <text xml:space="preserve">{{Logic_IC
|number = 4073
|logic_type = Combinatorial
|func_family = Logic
|description = Triple 3-Input AND Gate
|pins = 14
}}</text>
      <sha1>a51nuyt9eft233npiyholnuqc0xcrm1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Balsamic Chicken Wings</title>
    <ns>102</ns>
    <id>200679</id>
    <revision>
      <id>1799206</id>
      <parentid>1548663</parentid>
      <timestamp>2010-05-18T21:08:04Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 chicken wingettes
* 1 cup balsamic vinegar
* 3 sprigs rosemary, finely chopped
* 2 tbsp salt
* 1 tbsp black pepper
* 1 1/2 tbsp cayenne pepper
* 1/4 cup paprika
* 1 tbsp garlic powder
* Cornmeal as needed
* Oil for deep frying

== Procedure ==
#Place chicken in a zip-top plastic bag. Combine remaining ingredients except for oil and cornmeal and refrigerate overnight.
#Heat oil to 350°. Meanwhile, dredge chicken in cornmeal. Fry in batches for 12 minutes. Drain on a cooling rack.
#Rest 5 minutes and serve.</text>
      <sha1>tthalpg4ic8ppd1jb635rt6p4z545k1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Rhubarb Pie</title>
    <ns>103</ns>
    <id>200682</id>
    <revision>
      <id>1548693</id>
      <timestamp>2009-06-26T01:19:14Z</timestamp>
      <contributor>
        <username>JohnnyB256</username>
        <id>247232</id>
      </contributor>
      <comment>suggestion</comment>
      <text xml:space="preserve">Hey there, wikicooks: I have a rhubarb recipe that is simpler and I can personally attest that it is great.[http://allrecipes.com/Recipe/Fresh-Rhubarb-Pie/Detail.aspx]. Maybe you can add this one?</text>
      <sha1>i3z0l55k0rc76kshyuwhte9xi47kodu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:DPL templates</title>
    <ns>14</ns>
    <id>200684</id>
    <revision>
      <id>1549559</id>
      <parentid>1548710</parentid>
      <timestamp>2009-06-27T04:28:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Utility templates]]</text>
      <sha1>cl8dfwfekt4qcjueb6n446qg4fbc0e2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Polygonal Modeling</title>
    <ns>0</ns>
    <id>200685</id>
    <revision>
      <id>1616976</id>
      <parentid>1554863</parentid>
      <timestamp>2009-08-26T20:15:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">As the name suggest, polygonal modeling involves constructing the models out of polygons. Strictly, software packages works only with triangles. Blender could show you quads and some software packages could even let you work with polygons with more than 4 sides (n-gons) but these packages work internally only with triangles. These triangles are hidden so that you could concentrate more on modeling.

While different modelers works differently, they would still follow certain workflows (some call this techniques). These are familiarly called box modeling and polygon-by-polygon modeling (poly-by-poly modeling).

'''Box modeling''' is a top-down approach where modelers start with a primitive (usually a cube (box), hence the box in box modeling). Then from this primitive, the model's form is build up where details are gradually added.

'''Poly-by-poly modeling''' is almost the opposite of box modeling. It is the bottom-up approach where modelers start with a plane or even a vertex. Using extrusion and other tools, more geometries are added. Polygon by polygon the model is gradually build.

None of the two is better than the other but there are instances where one workflow lends much better to the situation. One typical advantage of box modeling is that at early stage, you are able to conceive first the form (the whole) of the model and is better equipped to do general corrections without bothering yet with the details. Poly-by-poly otherwise give you more control on the geometry and is much more easier to use in modeling complex forms like the human ear. Complications do arise when working with the two. In box modeling, it is typically difficult to manage the geometry when adding details. Experience is necessary so as not to create a mess. Poly-by-poly modeling otherwise has its own quirks. Since you are going detail by detail, it is easy to make a mess with the models form (i.e. wrong proportions).

While the two are opposites, they compliment each other beautifully. Most modelers would combine the two workflows in a variety of proportions, combining the strength of each. For example one might model a human body using box modeling while the head and the ears are done using poly-by-poly modeling.

'''Blocking with primitives''' is added to enrich approaches is modeling. It is basically box modeling in conjunction with divide-and-conquer approach. Different parts are modeled separately with their own primitives and later attached with the others to form the whole.

{{BookCat}}</text>
      <sha1>l26odru2xgso1opvi6kyolz5cte44vf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Solidago canadensis</title>
    <ns>110</ns>
    <id>200686</id>
    <revision>
      <id>1876075</id>
      <parentid>1548741</parentid>
      <timestamp>2010-07-07T18:34:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Solidago canadensis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Goldenrod
|binomial =Solidago
|image1 =Solidago canadensis.jpg
|caption1 =Canadian Goldenrod
|image2=Solidago altissima2.jpg
|caption2=
|image3 =Solidago canadensis 20050815 248.jpg
|caption3=
|description =Goldenrod is a tall flower, growing up to seven feet tall.  The flowers are actually very tiny, only an eighth of an inch across.  However, they are grouped together in large numbers, making them look like one huge flower.  The leaves are long and narrow with no stalks.  The leaves have tiny teeth along the edges.

Many people believe they are allergic to Goldenrod, but actual cases of this are somewhat rare.  Goldenrod blooms at about the same time as ragweed which is a very common cause of hayfever.  Many cases of &quot;Goldenrod allergies&quot; are really ragweed allergies.
|facts = Native Americans brewed a tea from the flowers of the Goldenrod to treat fever and snakebites.
}}</text>
      <sha1>ag6bdrqhsybr5gtecd1ygtiqijq9spk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Impatiens capensis</title>
    <ns>110</ns>
    <id>200687</id>
    <revision>
      <id>1876109</id>
      <parentid>1548754</parentid>
      <timestamp>2010-07-07T18:38:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Impatiens capensis&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Jewelweed
|binomial =Impatiens capensis
|image1 =Impatiens capensis1.JPG
|caption1 =
|image2=Jewel Weed Impatiens capensis Leaves and Flower 2600px.jpg
|caption2=
|image3 =Jewel Weed Impatiens capensis Flower 1950px.jpg
|caption3=
|description =Jewelweed it a medium sized plant with orange or yellow flowers.  The flowers are a little bit odd-shaped, with a spur coming our the back, and curled lips in the front.  It is usually spotted, and is sometimes even called a Spotted Jewelweed.  Another name for it is Touch-me-not.  It got this name because the seed pods will explode when touched even very gently.  This explosion sends seeds flying out everywhere.  

People have used the sap from this plant to treat skin rashes (including rashes caused by poison ivy) for centuries.  However, scientists have done a lot of testing on this plant and have found that it is not really an effective medicine at all.  Rather than depending on Jewelweed to cure poison ivy, it's a much better idea to just learn what poison ivy looks like, be on the lookout for it, and stay away from it.

Jewelweed is a water-loving plant, growing near ditches and streams.
|facts = The species name ''&quot;capensis&quot;'', meaning &quot;of the cape&quot;, is actually incorrect.  A scientist named Nicolaas Meerburgh thought that it was native to the Cape of Good Hope, in southern Africa.
}}</text>
      <sha1>7ocjvyjy6rh90vkqm204fsxxodwkg4m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lysimachia terrestris</title>
    <ns>110</ns>
    <id>200688</id>
    <revision>
      <id>1876100</id>
      <parentid>1548759</parentid>
      <timestamp>2010-07-07T18:37:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Lysimachia terrestris&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Swamp Candles
|binomial =Lysimachia terrestris
|image1 =Lysimachia terrestris.jpg
|caption1 =Flowers
|image2=Lysimachia terrestris_6846.jpg
|caption2=A colony of Swamp Candles growing at the edge of a pond
|image3 =Lysimachia terrestris_6851.jpg
|caption3=Swamp Candles (yellow) and Pickerelweed (purple)
|description =Swamp Candles are pretty yellow flowers that grow on the edges of ponds.  The flowers look a lot like those of its cousin, [[../Lysimachia quadrifolia|Whorled Loosestrife]].  Sometimes these two plants can cross breed.  Though they both look very similar, the flowers on Swamp Candles grow only at the top of the plant.  If you look closely at the flower of a Swamp Candle, you will notice that each of the five yellow petals as two tiny red dots near the bottom.  All together, there are ten of these red dots forming a circle around the flower's center.
|facts = Swamp Candles can spread very rapidly by sending out underwater stems.
}}</text>
      <sha1>65ycog4rh001rllbj8a5p9ltl79e3bl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Nuphar variegata</title>
    <ns>110</ns>
    <id>200689</id>
    <revision>
      <id>1876093</id>
      <parentid>1548761</parentid>
      <timestamp>2010-07-07T18:36:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Nuphar variegata&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Bullhead Lily
|binomial =Nuphar variegata
|image1 =Nuphar lutea2 ies.jpg
|caption1 =Close-up of the flower
|image2=Nuphar lutea (Detail) 24072005-1.jpg
|caption2=Flower and leaves
|image3 =Nuphar lutea blatt.jpeg
|caption3=Leaves
|description =Bullhead Lily is a yellow flower that grows in the shallow water of ponds.  The leaves are large and heart-shaped, and they float on top of the water.  They are lily pads in every sense of the word!  The inside of the flower is usually a very busy place for insects.  They are there to gather the flower's nectar, and in doing so, they pollinate the flower.  The flowers grows at the end of a stem which pushes the blossom a couple of inches higher than the surface of the water.  The stems can only grow to about 16 inches, so Bullhead Lilies cannot grow in water any deeper than that.
|facts = The seeds of the Bullhead Lily are edible and can be ground into a nutritious flour.  Flour from flowers, right?  The roots are edible too, but in some plants they are very bitter.
}}</text>
      <sha1>h2a2io70e6wfcquccobvac1fh01iv8c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:15sa1898</title>
    <ns>2</ns>
    <id>200690</id>
    <revision>
      <id>1557818</id>
      <parentid>1554646</parentid>
      <timestamp>2009-07-03T20:18:36Z</timestamp>
      <contributor>
        <ip>217.219.214.129</ip>
      </contributor>
      <text xml:space="preserve">==Gholam Ali Nuri==


Gholam ALI Nuri (غلامعلي نوري) Born june,13, 1968 ,Kermanshah ,Iran

Iranian physician &amp; scientist.
His works have been extended in  many
subjects:mathematics,chemistry,physics, persian litrerature,
Quran interpretation,medical practice &amp; philosophy,...
some of his attractive works are brought below for instance:

1- Expression of speed of light by abstract mathematics as following:
c = 670^3-99^3-6^3-3^3 = velocity of light in vacuum = 299792458
Another equality is: square root 2 multiplied by c is an integer number i.e 423970560 =2^8×1656135 .
C= 2^28+(2^24+2^23+2^22)+(2^20+2^19+2^18+2^17)+(2^14+2^13+2^12+2^11)+(2^6+2^3+2^1)

2×9×9×7×9×2×4×5×8 = 9!×9 = 8!×81

&quot; As constant pi(3.1415926...)that can be exhibited by pure math (e.g Wallis formula) speed of the light (as an universal constant) can also be expressed by abstract mathematical series or sequential real numbers&quot; Nuri says.

2-Getting exact percentage&amp; ratio of the Earth‘s hydrosphere versus land (73.33% vs 26.66%)by means of holy Quran(ie total repetitions of the word (بحر = sea) in Quran is 33 times , and total repetitions of the word (بر = land) in Quran is 12 times.Then,33 divided by 12 results in 2.75,the same as hydrosphere/land ratio.

This article, (with new cases)  to be continued in future.</text>
      <sha1>s69ztietphzv70mzvtle0lwpfsea7do</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Summer Flowers of Northern New England/Red and Pink Flowers</title>
    <ns>111</ns>
    <id>200691</id>
    <revision>
      <id>1548770</id>
      <timestamp>2009-06-26T03:21:24Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Created page with 'To create new pages, paste this text in and fill it in. &lt;pre&gt; {{WJ Flower |common name = |binomial = |image1 = |caption1 = |image2= |caption2= |image3 = |caption3= |description =...'</comment>
      <text xml:space="preserve">To create new pages, paste this text in and fill it in.
&lt;pre&gt;
{{WJ Flower
|common name =
|binomial =
|image1 =
|caption1 =
|image2=
|caption2=
|image3 =
|caption3=
|description =
|facts = 
}}

&lt;/pre&gt;</text>
      <sha1>is5eur0nmzzropeiw6r6vje81igmwzv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium pratense</title>
    <ns>110</ns>
    <id>200692</id>
    <revision>
      <id>1876070</id>
      <parentid>1548772</parentid>
      <timestamp>2010-07-07T18:33:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium pratense&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Red Clover
|binomial =Trifolium pratense
|image1 =Red clover closeup.jpg
|caption1 =Close-up of the flower
|image2=Kleebluete001.jpg
|caption2=Red Clover colony
|image3 =Trifolium pratense feuille1.jpg
|caption3=Leaves
|description =Red Clover looks a lot like [[../Trifolium repens|White Clover]], and in fact, sometimes the two cross-breed.  But for the most part, the flower of the red clover is red (or pink), and the flower of the White Clover is white.  If you can't decided if the flower is pink or white, you may be looking at a cross between the two.

The leaves of the Red Clover are a little bigger than the leaves of the White Clover.  They also have a brighter chevron, which is a pattern that looks like a sargeant's stripes.

Like the White Clover, Red Clover was brought to the Americas by the Europeans for use as a pasture crop.  It is also widely used as a source of nectar for honey bees.
|facts = Red Clover has the ability to take nitrogen from the air and put it in the soil.  This is important because even though most plants need nitrogen in the soil, few are able to put it there.
}}</text>
      <sha1>90a0566irkcjq5qtfjz1dkuii4rrn35</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Trifolium arvense</title>
    <ns>110</ns>
    <id>200693</id>
    <revision>
      <id>1876072</id>
      <parentid>1548775</parentid>
      <timestamp>2010-07-07T18:33:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Trifolium arvense&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Rabbit's Foot Clover
|binomial =Trifolium arvense
|image1 =Trifolium arvense 2005.07.11 09.23.43.jpg
|caption1 =Flower
|image2=Trifolium arvense.jpg
|caption2=Whole plant with many flowers and leaves
|image3 =Trifolium arvense var arvense Monacia Corse.jpg
|caption3=Flower and leaf
|description =Rabbit's foot clover is another type of clover with a pinkish flower.  The flower also looks a little bit grey.  It does not grow as tall as most clovers, and the flowers are not very bright.  Because of this, it is often not even noticed. 

The pinkish flowers are very hairy looking, and somewhat longer than they are wide.  Like all clovers, the leafs are divided into three leaflets.  

This is another clover that was brought to the America's as a pasture crop.  It did not grow here before it was imported by the Europeans.

|facts = This plant got the name Rabbit's Foot Clover because of the shape and color of the flower.  It looks just like a rabbit's foot!
}}</text>
      <sha1>t2inowtw0z9skimojgue32rlpkhfqla</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Asclepias syriaca</title>
    <ns>110</ns>
    <id>200694</id>
    <revision>
      <id>1876136</id>
      <parentid>1548914</parentid>
      <timestamp>2010-07-07T18:41:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Asclepias syriaca&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Milkweed
|binomial =Asclepias syriaca
|image1 =Common milkweed-tracy.jpg
|caption1 =Flower cluster
|image2=Seidenpflanze-Samenkapsel.jpg
|caption2=Seed pods
|image3 =Common Milkweed Asclepias syriaca Plant 2000px.jpg
|caption3=Whole plant
|description =Milkweed is a plant that usually grows about three feet tall, but sometimes it can grow as tall as a man.  It produces a round cluster of pink flowers.  Each flower has five petals.  The leaves are a couple of inches wide and about six inches long.  They are also pretty thick.  Every part of the plant will produce a milky sap when broken open.  That's where it gets the name Milkweed.  But don't drink this milk!  It is very bitter, and just slightly poisonous.  Every part of the plant ''other'' than the sap is edible and it actually tastes pretty good!    The sap can be removed from the plant by boiling it in several changes of water.  If you wish to try this, you will need two pots of boiling water - one large, and one small.  When they are both boiling, drop the leaves, flowers, stems, or young seed pods into the smaller pot and let it boil for about a minute.  Then pour most of the water off.  Add more boiling water to the small pot from the large pot and boil for another minute.  Do this about six times.  Then add butter or margarine and enjoy the feast.
|facts = Monarch butterflies live on Milkweed.  The sap does not bother them at all, and in fact, since they eat so much of it, it makes them taste ''terrible'' to birds.  Birds soon learn this and look for their dinner somewhere else!
}}</text>
      <sha1>rvow876gqvrvf66sj23l83t9ya6fey4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Dutch/The numbers/Hover test</title>
    <ns>0</ns>
    <id>200698</id>
    <revision>
      <id>2164314</id>
      <parentid>2164312</parentid>
      <timestamp>2011-09-04T22:02:37Z</timestamp>
      <contributor>
        <ip>91.96.176.230</ip>
      </contributor>
      <text xml:space="preserve">Pick a word at random and say the translation in Dutch, ''then'' hover your mouse over the word and see if your are right.

{|class=&quot;wikitable&quot;
|-
|{{C|7|zeven}}
|{{C|13|dertien}}
|{{C|100|honderd}}
|{{C|52|tweeënvijftig}}
|{{C|12|twaalf}}
|{{C|21|eenentwintig}}
|{{C|6|zes}}
|-
|{{C|9|negen}}
|{{C|90|negentig}}
|{{C|19|negentien}}
|{{C|67|zevenenzestig}}
|{{C|76|zesenzeventig}}
|{{C|25|vijfentwintig}}
|{{C|1345|dertienhonderdvijfenveertig}}
|-
|{{C|82|tweeëntachtig}}
|{{C|23|drieëntwintig}}
|{{C|2|twee}}
|{{C|1|een}}
|{{C|84|vierentachtig}}
|{{C|250|tweehonderdvijftig}}
|{{C|1.000.000|een miljoen}}
|-
|{{C|17|zeventien}}
|{{C|3|drie}}
|{{C|5|vijf}}
|{{C|15|vijftien}}
|{{C|33|drieëndertig}}
|{{C|60|zestig}}
|{{C|88|achtentachtig}}
|-
|{{C|32|tweeëndertig}}
|{{C|4|vier}}
|{{C|41|eenenveertig}}
|{{C|43|drieënveertig}}
|{{C|700|zevenhonderd}}
|{{C|900|negenhonderd}}
|-
|{{C|1000|duizend}}
|{{C|53|drieënvijftig}}
|{{C|81|eenentachtig}}
|{{C|36|zesendertig}}
|{{C|29|negenentwintig}}
|{{C|30|dertig}}
|{{C|11|elf}}
|}

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>i6i8y80irhde4jrdflq3cx2peu8gf8r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Order of operations/Fractions</title>
    <ns>0</ns>
    <id>200699</id>
    <revision>
      <id>1710229</id>
      <parentid>1548847</parentid>
      <timestamp>2010-02-01T18:16:11Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">Do the questions very carefully.

# &lt;math&gt;\frac{2}{3}+\frac{5}{6}-\frac{1}{2}=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{3}{5}\times\frac{2}{3}+\frac{5}{12}=\cdots&lt;/math&gt;
# &lt;math&gt;(\frac{7}{15}+\frac{2}{3})-\frac{7}{9}=\cdots&lt;/math&gt;
# &lt;math&gt;2\tfrac{2}{3}\div\frac{4}{5}+1\tfrac{4}{5}=\cdots&lt;/math&gt;
# &lt;math&gt;3\frac{1}{5}\div(\frac{3}{5}+\frac{1}{2})=\cdots&lt;/math&gt;
# &lt;math&gt;(2\tfrac{5}{8}+1\tfrac{5}{12})\times(\frac{5}{6}-\frac{1}{2})=\cdots&lt;/math&gt;
# &lt;math&gt;(1\tfrac{2}{3}+2\tfrac{1}{6})\div11\tfrac{1}{2}=\cdots&lt;/math&gt;
# &lt;math&gt;5\tfrac{3}{5}\div3\tfrac{1}{2}\times2\tfrac{2}{3}=\cdots&lt;/math&gt;
# &lt;math&gt;4\tfrac{3}{7}+5\tfrac{5}{14}-3\tfrac{10}{21}=\cdots&lt;/math&gt;
# &lt;math&gt;3\tfrac{5}{8}\times\frac{3}{58}+3\tfrac{3}{8}=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{5}{6}+2\tfrac{2}{5}\times\frac{8}{9}-1\tfrac{5}{6}=\cdots&lt;/math&gt;
# &lt;math&gt;(2\tfrac{4}{5}-\frac{7}{10})\div2\tfrac{4}{5}=\cdots&lt;/math&gt;
# &lt;math&gt;[\frac{3}{5}+(\frac{7}{10}+\frac{9}{20})]-\!2.75=\cdots&lt;/math&gt;
# &lt;math&gt;\!675\%-4\tfrac{7}{30}+\!2.5=\cdots&lt;/math&gt;
# &lt;math&gt;\!5.3+3\tfrac{3}{5}\times2\tfrac{8}{11}-\!245\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!34.2\times\!24.25+\!7,462.5=\cdots&lt;/math&gt;
# &lt;math&gt;\!127,5\div\!7.5+\!5.74\times\!23.63=\cdots&lt;/math&gt;
# &lt;math&gt;\!44.62-\!1,425\%+\!47.6\div\!0.7=\cdots&lt;/math&gt;
# &lt;math&gt;\frac{13}{25}+[3\tfrac{3}{20}\div4\tfrac{1}{2}-(\frac{4}{7}+\!435\%)]=\cdots&lt;/math&gt;
# &lt;math&gt;(\!3.4-\!36\%)\times6\tfrac{2}{3}+(3\tfrac{3}{8}-2\tfrac{7}{12})=\cdots&lt;/math&gt;
# &lt;math&gt;(4\tfrac{9}{10}\div\frac{7}{15}\times1\tfrac{3}{5})+\!190\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!10\%\times8\tfrac{9}{10}+4\tfrac{1}{10}=\cdots&lt;/math&gt;
# &lt;math&gt;\sqrt{\frac{6}{25}+\frac{2}{5}}+\frac{7}{10}\times1\tfrac{3}{25}=\cdots&lt;/math&gt;
# &lt;math&gt;\sqrt[3]{\frac{5^3}{6^3}}-\frac{1}{2}+\!560\%=\cdots&lt;/math&gt;
# &lt;math&gt;\!43.2-\!13.6+\!47.3\times\!34.2=\cdots&lt;/math&gt;
# &lt;math&gt;[(6\tfrac{1}{2}-3\tfrac{3}{4})\div\frac{14}{15}]+5\tfrac{5}{8}=\cdots&lt;/math&gt;
# &lt;math&gt;3\tfrac{1}{2}\div1\tfrac{2}{5}+\frac{9}{10}\times2\tfrac{2}{5}-\!75\%=\cdots&lt;/math&gt;
# &lt;math&gt;[(3\tfrac{4}{15}+2\tfrac{3}{5})\times(\frac{5}{6}+\frac{1}{3})=\cdots&lt;/math&gt;
# &lt;math&gt;6\tfrac{5}{7}\times\frac{5}{94}+3\tfrac{2}{5}\div\frac{2}{15}=\cdots&lt;/math&gt;
# &lt;math&gt;[(\frac{1}{2}\times\frac{3}{4}+\frac{4}{5}\times\frac{5}{6})]-\frac{1}{2}+\!245\%=\cdots&lt;/math&gt;

[[Category:Mathematics Worksheet]]</text>
      <sha1>mh25xtropyebsomxcb6b2uwwvqnx3zu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Mokuiloik</title>
    <ns>3</ns>
    <id>200700</id>
    <revision>
      <id>1556471</id>
      <parentid>1548851</parentid>
      <timestamp>2009-07-03T02:37:27Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Manchu/Lesson 1 - Pronunciation</title>
    <ns>1</ns>
    <id>200701</id>
    <revision>
      <id>1926782</id>
      <parentid>1807195</parentid>
      <timestamp>2010-09-02T17:52:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

Pronounciation as wav files, anyone? --''sigmundur'', [[Special:Contributions/213.100.59.11|213.100.59.11]] ([[User talk:213.100.59.11|talk]]) 10:28, 26 June 2009 (UTC)

== Greeting and question ==

Hi, I'm Eleraama. I plan to study this course to get a basic grasp of Manchu, and so I think this is the perfect opportunity to critique the book from a learner's perspective.
For example, I am uncertain that the discussion of vowel harmony belongs here and not in its own section; having literally just started this course, it's pretty much meaningless to me and looks quite scary. I think it would make a lot more sense if it provided example words or was placed at the end of the first vocabulary section; it's really more a matter of construction than pronunciation (or so it seems to me, with five minutes of Manchu under my belt) --[[User:Eleraama|Eleraama]] ([[User talk:Eleraama|talk]]) 05:30, 25 May 2010 (UTC)</text>
      <sha1>cgq0alacf323byw6yo3fxyklvnckfvl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Sigmundur/monobook.js</title>
    <ns>2</ns>
    <id>200702</id>
    <revision>
      <id>1548869</id>
      <timestamp>2009-06-26T10:42:39Z</timestamp>
      <contributor>
        <username>Sigmundur</username>
        <id>119597</id>
      </contributor>
      <comment>Created page with '/***** InstaView *****/   document.write('&lt;script type=&quot;text/javascript&quot; src=&quot;http://en.wikipedia.org/w/index.php?title=User:Pilaf/instaview.js&amp;action=raw&amp;ctype=text/javascript&amp;d...'</comment>
      <text xml:space="preserve">/***** InstaView *****/
 
document.write('&lt;script type=&quot;text/javascript&quot; src=&quot;http://en.wikipedia.org/w/index.php?title=User:Pilaf/instaview.js&amp;action=raw&amp;ctype=text/javascript&amp;dontcountme=s&quot;&gt;&lt;/script&gt;')
 
InstaView.conf.user.name = 'User Name'
 
/* This is to keep track of who is using InstaView: [[User:Pilaf/instaview.js]] */</text>
      <sha1>nnn7yozpg0w0efl6p57wwrvoyd9p47t</sha1>
      <model>javascript</model>
      <format>text/javascript</format>
    </revision>
  </page>
  <page>
    <title>Talk:Embedded Control Systems Design/Model driven engineering</title>
    <ns>1</ns>
    <id>200703</id>
    <revision>
      <id>1548871</id>
      <parentid>1548870</parentid>
      <timestamp>2009-06-26T10:53:22Z</timestamp>
      <contributor>
        <username>Markus.klotzbuecher</username>
        <id>243976</id>
      </contributor>
      <minor />
      <text xml:space="preserve">==Some suggestions for further improvements:==

* The first sentence of &quot;Standards&quot; seems to suggest that all modeling languages mentioned are incarnations of MDA, which is of course not true.
* in &quot;Discussion&quot;:
** the sentence &quot;The reusability of a model, even within the original platform. Current modeling languages contain flaws, reused code usually requires debugging for a new application.&quot; is not very clear. Suggested improvement: &quot;Reuse of a model is often not possible without modifying the original model and hence having to test it again. This is because current modeling tools and standards fail to enforce strong enough decoupling&quot;
** &quot;The time consumption of the testing period: the process of deriving platform dependent code is time intensive in most domains.&quot;: It is not clear what the testing period has to do with the process of deriving platform dependent code? Maybe this should be split into two points:
*** &quot;Exhaustive testing might still be necessary if the model does not capture enough detail for verification or verification tools are not available&quot;
*** &quot;The time required for defining a transformation to platform dependent code may by far outweigh the time required for performing the transformation manually&quot; 
--[[User:Markus.klotzbuecher|Markus.klotzbuecher]] ([[User talk:Markus.klotzbuecher|talk]]) 10:52, 26 June 2009 (UTC)</text>
      <sha1>fynwiu0biz9ljk905y03iqo09h58w6o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Manchu/Lesson 4 - Numerals</title>
    <ns>1</ns>
    <id>200704</id>
    <revision>
      <id>1926801</id>
      <parentid>1548875</parentid>
      <timestamp>2010-09-02T17:53:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

What a political dialogue, patriotic poetry  (:  maybe a reference would be appropriate, which poem it is, written by whom, when etc. --[[User:Sigmundur|Sigmundur]] ([[User talk:Sigmundur|talk]]) 11:18, 26 June 2009 (UTC)</text>
      <sha1>pj3n96aigtkvtfm5e7q0mqe0kqah7mr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Ratio and Proportion</title>
    <ns>0</ns>
    <id>200705</id>
    <revision>
      <id>1710237</id>
      <parentid>1548882</parentid>
      <timestamp>2010-02-01T18:22:48Z</timestamp>
      <contributor>
        <ip>205.208.75.179</ip>
      </contributor>
      <text xml:space="preserve">This section will help with ratios and proportions. The categories are:

{{stages}}

# [[/Ratio in daily life/|Ratio in daily life]] {{stage|00%|Jun 26, 2009}}
# [[/Equivalent ratios/|Equivalent ratios]] {{stage|00%|Jun 26, 2009}}
# [[/Reverse ratios/|Reverse ratios]] {{stage|00%|Jun 26, 2009}}

[[Category:Mathematics Worksheet]]</text>
      <sha1>16io7vqhxwr4lbw5ry3zzjoy4op8xxj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>WebObjects/Overview/Licensing</title>
    <ns>0</ns>
    <id>200706</id>
    <revision>
      <id>1651167</id>
      <parentid>1650055</parentid>
      <timestamp>2009-11-02T10:21:42Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>Undo revision 1650055 by [[Special:Contributions/Mschrag|Mschrag]] ([[User talk:Mschrag|Talk]]) restoring content.</comment>
      <text xml:space="preserve">The contents of this wikibook are out of date and have now moved to http://wiki.objectstyle.org/confluence/display/WO/Home.

== License == 

As of WebObjects 5.3, the deployment of WebObjects built server applications is now permitted on any platform. The XCode license (within which WebObjects is included) reads:

&lt;blockquote&gt;
D.  WebObjects Software.  Subject to the terms and conditions of this License, you may use, install and permit others to access the WebObjects deployment software included with the Developer Software to deploy application programs developed using Apple’s WebObjects Software.  You may also reproduce and distribute:  (1) over a network, components of the WebObjects deployment software for installation and use by others (“Java Client End Users”) on any remote computer’s volatile memory (e.g. RAM) to enable Java Client functionality for the sole purpose of communicating with Apple’s WebObjects Software that may be installed and executed on the same Apple-labeled computer on which you have installed the Developer Software (the &quot;Licensed System&quot;); and (2) both manually and automatically over a network, components of the WebObjects deployment software for installation and use by Java Client End Users on any remote computer’s non-volatile memory (e.g. ROM) to enable Java Client functionality for the sole purpose of communicating with Apple’s WebObjects Software that may be installed and executed on the Licensed System; provided that all distributions to Java Client End Users are made under terms that are at least as restrictive as those set forth in this License and contain the disclaimers and limitations set forth in Sections 6 and 7 of this License.  Subject to the terms and conditions of this License, you may also deploy server applications built with the WebObjects Software on any platform.
&lt;/blockquote&gt;

Sections 6 and 7 are standard Apple license disclaimers of warranty and limitations of liability clauses. Deployment to other platforms requires WebObjects software be built as Java servlet for deployment on a servlet compatible server such as [[WebObjects/Web Applications/Deployment/Tomcat Deployment|Apache Tomcat]].

{{BookCat}}</text>
      <sha1>a22i12jly2z8anir34sxgruy7nmfc6i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Fried Rice</title>
    <ns>102</ns>
    <id>200707</id>
    <revision>
      <id>2072112</id>
      <parentid>1842663</parentid>
      <timestamp>2011-03-21T09:49:49Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Fixed energy</comment>
      <text xml:space="preserve">{{recipesummary|Rice recipes|3|15 minutes|2||54 Kcal.}}

{{Recipe}}

==Ingredients==

* 2 tbsp. [[Cookbook:Oil|coconut oil]]
* 1 big [[Cookbook:Onion|onion]], diced
* 3 cloves [[Cookbook:Garlic|garlic]], crushed
* 2 cm [[Cookbook:Ginger|ginger]], minced
* 2 pcs [[Cookbook:Scallion|scallion]], cut 1,5 cm length
* 50 g [[Cookbook:Chilli|red chilli]], cut 1 cm length
* 1 cup (900 g) [[Cookbook:Basmati rice|basmati rice]]
* 30 g [[Cookbook:Chilli powder|Chilli powder]]
* 3 tbsp. light [[Cookbook:Soy sauce|soy sauce]]
* 2 tbsp. [[Cookbook:Fish sauce|fish sauce]]
* 1 tbsp. [[Cookbook:Chicken|chicken powder]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Pepper|pepper]]

==Procedures==

# Heat the oil on non-stick pan, fry the big onion, garlic, red chilli, ginger and scallion. Stir at 30 minutes until it's fragrant. Now add the basmati rice.
# Add the chilli powder, light soy sauce, fish sauce, chicken powder, salt and pepper. Cook until all mixed. Served hot.

[[Category:Fried rice recipes]]
[[Category:Japanese recipes]]
[[Category:Inexpensive recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>qdtmyl7af2cmh7sp80b486pxgqgj95r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>POV-Ray/Set up</title>
    <ns>0</ns>
    <id>200708</id>
    <revision>
      <id>2564122</id>
      <parentid>1980233</parentid>
      <timestamp>2013-10-07T11:56:42Z</timestamp>
      <contributor>
        <username>Ivan Shmakov</username>
        <id>639214</id>
      </contributor>
      <comment>s/[[w:Open source software|open source]]/[[w:freeware|freeware]] with the source available/.</comment>
      <text xml:space="preserve">POV-ray is a [[w:Freeware|freeware]] program with the source code available. For users of the microsoft windows or mac OSX operating system who do not have POV-Ray already installed, you will have to dowload it from the POV-Ray [[http://www.povray.org/ website]].  For users of any major Linux distribution (Ubuntu, Fedora, Debian, etc.) you can obtain it directly from your software repository.

If you already have a copy of povray installed, you may skip this section.

== Installation==
=== For Windows ===
Povray installers can be obtained from the website, [http://povray.org/download/ here]. To install this software, you will need to select either the 32 or 64 bit &quot;binary&quot;, depending on whether you are running windows in 64 or 32 bit mode.

=== For Mac OSX ===
Stuff-it compressed archives of pov-ray can be found on their [http://povray.org/download/ website]. You will need stuff-it expander in order to be able to access the files.

===For Linux ===
Linux users may install this either through the software repository, or via the command line. You must have a connection to your software repository, such as via the internet.
==== Ubuntu/Debian ====

Graphical method: 
:From the title bar select '''System &gt; Administration &gt; Synaptic Package Manager'''.  Enter the administrator password when prompted. In the search box, type &quot;povray&quot;, then select the povray package. Once selected press install. You may be prompted to install supporting software. The software will be downloaded and installed.

Command Line:

: The package may be installed using the installer &quot;aptitude&quot;. Simply type:
 sudo apt install povray

:You may be prompted to confirm the install, after which the package manager will proceed to install POV-Ray. 

:If the packages don't appear in the repositories for your distribution, they are available from the Ubuntu repositories.
 
==== Fedora ====

Povray packages are not available for Fedora due to its non-free license [http://www.redhat.com/archives/fedora-extras-list/2006-February/msg00191.html]. But packages are maintained by the ATrpms 3rd party repository [http://atrpms.net/].

Graphical method:
:From the title bar select '''Applications -&gt; Add remove software''', then search for povray. Select it then select install.

Command Line:
: Simply type:
 sudo yum install povray

You will be prompted to confirm, at which point yum will download and install povray.

{{BookCat}}</text>
      <sha1>cnpjmxjhbkp4gylvt3z1s8b3qzm7kdg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Conlang/Intermediate/Grammar/Nouns</title>
    <ns>1</ns>
    <id>200709</id>
    <revision>
      <id>1866427</id>
      <parentid>1555791</parentid>
      <timestamp>2010-06-28T22:34:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

== Other morphosyntactic alignments ==

Should the &quot;Case&quot; section of this page say something about other morphosyntactic alignments other than nominative/accusative? -- ergative, active, tripartite...?   Or save that exclusively for the Advanced section?  I'm inclined to say a little about it here, with a cross-reference to the appropriate page in the Advanced section. --[[User:Jim Henry|Jim Henry]] ([[User talk:Jim Henry|talk]]) 14:51, 26 June 2009 (UTC)

: I've been wondering about ergative etc.  A similar situation arose over at [[{{BOOKNAME}}/Intermediate/Sounds/Phones#Vowels]], where it only mentioned height and backness.  I didn't want to get into a lot of fancy stuff that feels Advanced, but it didn't seem right that a reader could go through the Intermediate section and then get blown away trying to read discussions of the subject because they haven't been exposed at all to terms like rounding and R-coloring.  So I tried (not, perhaps, as skillfully as I'd like) to touch briefly on each of several such terms, leaving the details for the Advanced section (and I have a list of such things to touch on similarly under consonants, when I find time).

: I'd suggest keeping the detail fairly minimal.  Perhaps a few words about ergative, and mention the names of a few others?  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 16:11, 26 June 2009 (UTC)</text>
      <sha1>i5hz6x72w04ugwnqaypqnnu1vf32fqo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Boston Baked Beans</title>
    <ns>102</ns>
    <id>200710</id>
    <revision>
      <id>2548008</id>
      <parentid>1697719</parentid>
      <timestamp>2013-08-07T02:35:25Z</timestamp>
      <contributor>
        <username>Sumone10154</username>
        <id>357761</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 cups canned kidney beans, rinsed and drained
* 1/2 cup molasses
* 1/4 cup blackstrap, plus more as needed
* 1/4 cup dark brown sugar
* 2 tbsp dark rum
* 1/2 tsp salt
* 1/2 tsp black pepper
* 1 tbsp dry mustard
* 6 rashers thick cut bacon, sliced (or 5 drops liquid smoke)
* 1 tbsp bacon fat

== Procedure ==
#Cook bacon. Separate from fat and place 1 tbsp fat into a large stainless steel pan. Add kidney beans and sauté over medium high heat. Add rum and tilt to ignite.*
#Add remaining ingredients and bacon and fold to combine. Bake in a 325° oven for 1 1/2 hours, adding blackstrap occasionally to prevent drying.

== Note ==
* If you do not have a gas stove, simply light with a fire stick.

{{wikipedia|Boston baked beans}}</text>
      <sha1>4kevlze41hcrwz0kkm9unsqiiv93ffq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hickory Maple Glazed Wings</title>
    <ns>102</ns>
    <id>200711</id>
    <revision>
      <id>1735122</id>
      <parentid>1615369</parentid>
      <timestamp>2010-03-13T17:09:49Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 36 chicken wingettes, '''''or''''' 18 whole chicken wings, tips removed and halved
* 1/4 tsp hickory smoke powder
* 1 tbsp salt
* 1 tbsp black pepper
* [[cookbook:Maple Syrup|Maple syrup]] as needed plus 6 tbsp
* Cornmeal as needed
* 3 tbsp [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]]
* 1 tbsp minced garlic
* 1/2 tbsp finely grated lemon zest
* Oil for deep frying

== Procedure ==
#Season chicken with salt and pepper. Dip chicken in maple syrup then dredge in cornmeal and fry at 350° in batches for 12 minutes. Drain on a cooling rack.
#Combine 6 tbsp maple syrup with remaining ingredients. Add wings and toss to coat. Serve.


{{DEFAULTSORT:{{PAGENAME}}}}
[[Category:Chicken recipes]]
[[Category:Maple Syrup recipes]]</text>
      <sha1>mhyvcefzzn4rvy7sn06kb49vhpvmajf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:BOOKTEMPLATE</title>
    <ns>10</ns>
    <id>200712</id>
    <revision>
      <id>1767213</id>
      <parentid>1549543</parentid>
      <timestamp>2010-04-21T16:27:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Using {{documentation}}</comment>
      <text xml:space="preserve">&lt;includeonly&gt;Template:{{ROOTBOOKNAME}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>nkqvx23k322o6mty8cu2rwooytvc8fe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Crab Cakes</title>
    <ns>102</ns>
    <id>200713</id>
    <revision>
      <id>1844586</id>
      <parentid>1548982</parentid>
      <timestamp>2010-06-16T20:59:48Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

These crab cakes get an extra kick from cayenne pepper.

=== Ingredients ===
*: 1 pound lump blue crab meat
* 1 tbsp Old Bay
* 1 tbsp cayenne pepper
* 1 1/2 tsp kosher salt
* 1 1/2 tsp black pepper
* 1/2 cup Dijon mustard
* 2 tbsp mayonnaise
* Juice of two lemons
* Oil for deep frying
* Panko breadcrumbs as needed
* 1 egg, beaten

=== Procedure ===
#Combine all ingredients execpt for oil, panko, and egg. Shape into 4 equal patties.
#Dip into egg then dredge in panko. Fry at 375° just until heated through and golden brown. Serve with chipotle remoulade sauce. (below)

== Chipotle Remoulade ==

===Ingredients===

* 1/4 cup mayonnaise
* 1/4 cup Dijon mustard
* 2 tbsp dill, finely chopped
* 2 tbsp flat-leaf parsley, finely chopped
* 1 tbsp chipotle in adobo sauce puree
* Salt to taste
* Freshly ground black pepper to taste

===Procedure===
#Combine all ingredients in a small bowl.</text>
      <sha1>5b49afgweunvd0omtmkgkokaonb2xcy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thedos</title>
    <ns>2</ns>
    <id>200714</id>
    <revision>
      <id>1549027</id>
      <parentid>1548991</parentid>
      <timestamp>2009-06-26T16:35:39Z</timestamp>
      <contributor>
        <username>Thedos</username>
        <id>247497</id>
      </contributor>
      <minor />
      <comment>Changed my mind about structure</comment>
      <text xml:space="preserve">Stuff I thinking of drafting, that I intend to add to whatever project is appropriate once they are reasonably developed &lt;br&gt;
[[User:Thedos/Math_Study]]&lt;br&gt;
[[User:Thedos/PHP_Programming]]&lt;br&gt;
[[User:Thedos/Air_Power]]&lt;br&gt;
====Other Ideas====
Create a resource (maybe even a seperate wiki) for the sharing of ideas for teaching methods for different subjects- basically lesson plans.&lt;br&gt;
====Why???====
I'm a fairly senior and experienced instructor for a youth organization, and under the (possibly deluded) impression I'm good at teaching.</text>
      <sha1>a0v9re16rr3rymhdhrm344a2fdkgbfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blackstar</title>
    <ns>0</ns>
    <id>200715</id>
    <revision>
      <id>2063414</id>
      <parentid>1858184</parentid>
      <timestamp>2011-03-04T17:53:17Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: etc, → etc., using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">BlackStar - Point-to-Point GPS Navigation for BlackBerry

== Introduction ==

Blackstar is a free application that runs on most BlackBerry smartphones.  It allows the user to use the built-in GPS (or an external Bluetooth GPS) to perform point-to-point navigation.  It also has a series of Geocaching-specific enhancements that allow Premium Geocaching members to import Pocket Queries or extract data from bcaching.com.

Project page:  http://www.blackstarnavigation.com

== Installation and support ==

The software may be downloaded from the project page above, or can be installed from Blackberry App World.  

Support is available at the project forums, which can also be found at the project page.

== Getting your first GPS Lock ==

When you start BlackStar, it will attempt to get your location using whatever GPS is set up on your device.  While the lock is being acquired, you'll see a count on the screen.  This is the number of seconds BlackStar has been trying to acquire a GPS lock (not a number of satellites acquired).

Once it accomplishes the lock, it will start showing your GPS coordinates and altitude, along with speed and a compass indicating the direction you are moving (this is not a magnetic compass - it compares your current location to your last few location to interpolate the direction you are moving, so if you slow down too much or stop this compass will just start spinning off in random directions).  

This GPS lock may take some time (several minutes), and generally requires a clear view of the sky.  The GPS can sometimes work indoors, but this isn't generally the case.  Even a heavy tree canopy can interfere with GPS signal, and in large cities the tall buildings can block access to all but a few satellites, making a lock more difficult.  So for best results, go outside and enjoy some fresh air while you wait for your first lock.

If you still don't get a GPS lock, there are several things that can be causing problems.

=== GPS Setup ===
To verify that your GPS is set up properly on your BlackBerry:  
#If you already use other third-party applications that use the GPS like Google Maps, and the GPS is working there, you can skip to &quot;Security&quot;.
#Obviously, your phone needs to be set up with a GPS unit (sorry, Pearl users), and you need to allow third party applications to use it.
#This setup is generally found under Options - look for &quot;Advanced Options&quot; and &quot;GPS&quot;.
##GPS Services must be set to &quot;ON&quot; or &quot;Location ON&quot;.  If you don't have the option to turn this on, you either don't have a GPS on board or your carrier has disabled it - contact your carrier for details or see the NOTE below.
#Try refreshing the GPS from this screen and see if you get a GPS lock (Menu Button, then select &quot;Refresh GPS&quot;).
#For Blackberries that lack a GPS Receiver (like the Pearl) or cases where your carrier has disabled access to the GPS (Like Verizon OS 4.2) you need to use an external Bluetooth GPS receiver.
#If your GPS is not acquiring a lock after this, try a battery pull.

NOTE:  Verizon (and probably other carriers) once had the GPS disabled for BlackBerry devices unless you purchased their Navigation software ($10/month).  Verizon has supposedly removed this lock as of OS 4.5, so if you have a Verizon BlackBerry and you don't pay for TeleNav you'll need to upgrade the OS for BlackStar (or any third-party GPS application) to work with your internal GPS.

=== Security ===
Your GPS may be working fine, but you also need to give BlackStar access to it.  If you still can't see your location in BlackStar after verifying your GPS receiver works, check your application permissions and make sure BlackStar has access to &quot;Location(GPS)&quot; under &quot;Connections&quot;.

From the &quot;Options&quot; menu, go to &quot;Advanced Options&quot; then &quot;Applications&quot;.  Menu-click on BlackStar and select &quot;Edit Permissions&quot;.  If necessary, use the spacebar to open the &quot;Connections&quot; section, and look for &quot;Location(GPS)&quot; and make sure that is set to &quot;ALLOW&quot;.

== Adding/Managing Waypoints ==

Waypoints can generally be added in one of three ways:

=== Entering Directly ===

From the BlackStar main screen, hit the menu key and select &quot;New Waypoint&quot;.  Enter a waypoint name, your desired Lat/Lon, and a description.

If obtaining Lat/Lon from geocaching.com, the data you need will be found by clicking the [Other Conversions] link next to the Lat/Lon degrees listed on the cache's main page.
On the subsequent page under the heading &quot;Older Datum (NAD27)&quot; you'll use the data following DECIMAL.  Which will be in the format XX.XXXX -XX.XXXXX

=== Importing a GPX or LOC file from an SD card ===

If you don't have an SD card for your BlackBerry, get one.  This is just another handy thing you can do with them.

GPX files are frequently used by Premium GeoCaching.com members to download lists of GeoCaches for &quot;paperless&quot; caching.  You can have the GPX file emailed to your BlackBerry and save it to your SD card, or attach your BlackBerry to your desktop and copy it from there.

To import GPX files from the BlackStar main screen, hit [menu], select &quot;List Waypoints&quot;, then select &quot;Import GPX/LOC File&quot;.  Find and select your GPX file and you're good to go.

Be careful with the sizes of these GPX files.  While BlackStar seems to be able to handle a 500-cache query, every time you go to list the caches it'll try to sort them by distance, which means it has to calculate the distance for every cache in your current list.  With 200 or more caches on board, this can be a significant wait.

Special note:  Some companies require non-media files to be encrypted on the SD card.  In this case, you may need to save the GPX file to your &quot;music&quot; or &quot;video&quot; folder - otherwise the BlackBerry will add an extension to the filename and BlackStar can't recognize the file.

=== BCaching.com Import ===

BCaching.com also allows you to store Pocket Queries from Geocaching.com on their site if you are a Premium Geocaching member.  You can even set the Pocket Queries to email directly to your BCaching.com account, meaning you always have a reasonably current list of GeoCaches &quot;on tap&quot; at your BCaching.com account.  This is pretty easy to set up, and you can just create a few automated Pocket Queries that run every day or two and always have lots of current caches ready for &quot;on the spur of the moment&quot; GeoCaching.

You have to set up an account with BCaching (see their site for full details) and enter your BCaching credentials into BlackStar (under &quot;Options&quot; / &quot;bcaching&quot;).

Once this is set up, BlackStar can pull the 20 Geocaches that are closest to your current position from BCaching.  The real beauty of doing it this way is that the distance calculations are done on the BCaching site and are very fast.  So if you keep your BlackStar waypoints list empty, BCaching can have your &quot;nearest 20&quot; loaded up and ready to go very quickly.

You have to have a GPS lock to load the nearest caches from BCaching.  Once you have a lock, go to the Waypoints List and select &quot;Get closest BCaching GPX&quot;.  Wait for the &quot;x caches added, x caches updated&quot; message, exit the Waypoints List and go back in to force BlackStar to sort the new waypoints by distance.

Note:  When you cache this way, you may find it helpful to clear your waypoints list every now and then.  If you're driving around loading more and more caches into BlackStar, you'll find the distance calculations take longer and longer.  20 waypoints load almost instantly.  200 can take a frustrating amount of time.

Tip:  If your Pocket Queries are set to exclude caches you've found, BCaching will have no way of taking them off the list of caches to find.  Be sure your PQ includes found caches so BCaching is aware you've found the cache.  (Personally, I use weekly queries to get new caches, and I have a daily query set up centered at my home coordinates that uploads only &quot;caches I've found&quot; within a 500-mile radius, emailed directly to my BCaching account - this marks caches I've found overnight so they don't show up the next day on BCaching).

== The Hunt ==

Now it's time to go find a GeoCache!

=== Selecting a Waypoint ===

When you open the &quot;list waypoints&quot; screen, it will sort the waypoints by distance from you (if you have a GPS lock).  It will also indicate the approximate direction of each cache.

The direction is based on your current heading (the direction you are currently moving), and not what direction your BlackBerry happens to be pointed.  So if you're standing still, there's a very good chance the directions are going to be pretty much random.  For best results, walk a little distance and make sure the compass indicator is showing your approximate direction of movement before loading up the waypoints screen.

There are several ways to decide which waypoint you want to find next.  Click on one and select &quot;Waypoint Details&quot; to see the description of the Cache.  You can also select &quot;Show all on BBMaps&quot; and you'll see your nearest waypoints on a map (assuming you have BlackBerry Maps installed).

Once you've picked the waypoint you want to go to, click on it and select &quot;Set as Destination&quot;.

=== Navigating to the Waypoint ===

The navigation screen will show you a compass rose with a red arrow pointing to the cache.  As with all directional functions in BlackStar (and most GPS units, for that matter), this direction is interpolated from repeated readings of your location.  In other words, if you stop moving, the BlackBerry has no way of knowing which way is &quot;forward&quot; and the arrow will likely start to spin around.

If you have to drive to the waypoint, or just prefer a map view, there are options on the main menu to see the waypoint in Google Maps or BlackBerry Maps.

=== The Final Hunt ===

Once you reach the vicinity of the waypoint, there are several hunting tips to keep in mind:

# The arrow is (at the risk of sounding repetitive on this point) only accurate when you are moving in a straight line.  If you stop or move in erratic directions, it becomes useless fast.  You can counter this by using one of two techniques.
## Walk briskly in a straight line for at least 10 feet.  This will calibrate the arrow for you.
## Ignore the arrow and look at the &quot;distance to waypoint&quot;.  If the number is getting smaller, you're headed in approximately the right direction.
# The BlackBerry, like all GPS units, is only accurate to about 3 meters or approximately 9 feet under ideal conditions.  Tree canopy, large buildings, and even a heavy cloud cover can interfere with GPS signal reception and increase that error considerably.  Also, the original coordinates may be off due to the same issues.  So once you get to within about 20 feet or so, don't depend on the GPS as much.

=== Found it! ===

Once you've found the cache, you can log it by selecting &quot;Log Cache Online&quot; from the menu.  This will take you to the Geocaching.com mobile site with the log page for your cache preloaded.  You may have to log in to Geocaching.com, of course.

This will not delete the cache from your GPX file or BCaching, so if you load your nearest from BCaching you'll see the same cache all over again.  Keep track of what you've found for the day.  :)

== Miscellaneous helpful hints ==

=== GPS and battery life ===

The GPS is a very power-hungry device, and will drain your battery in a matter of hours.  If you want your BlackBerry to live through a full day of caching, it's helpful to only run the GPS when you need it.  

Once you know approximately where your GeoCache is, turn off BlackStar (and Google Maps or BBMaps) so the GPS can shut down for a while (unless you need it for navigation, of course).  It's nice having an indicator that you are .9 miles from the cache.. .8... .7... etc., but shutting down the GPS until you really need it might mean the difference between finding the cache and running out of juice 200 feet from the cache.

==Frequently Asked Questions==
*[[/FAQ|Frequently Asked Questions and Answers]]

{{Subjects|Computer software}}
{{Alphabetical|B}}
{{status|25%}}</text>
      <sha1>41rl2xsl4ugrvbdtz57o27qic8zhjl9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Thedos/Math Study</title>
    <ns>2</ns>
    <id>200716</id>
    <revision>
      <id>1549043</id>
      <parentid>1549042</parentid>
      <timestamp>2009-06-26T16:55:54Z</timestamp>
      <contributor>
        <username>Thedos</username>
        <id>247497</id>
      </contributor>
      <minor />
      <comment>Confusing line removed</comment>
      <text xml:space="preserve">==Vectors==
Before getting into vectors, it is important to know the difference between a Scalar and a Vector.&lt;br&gt;
A Scalar is a quantity with only a magnitude. For example, the number of fingers I have is a scalar, as is the distance I have walked.&lt;br&gt;
A Vector is a quantity with a magnitude and a direction- for example, Displacement is the direction I have traveled, and the distance.&lt;br&gt;
We represent a vector with an arrow.*add pic when i have the rights&lt;br&gt;
The beginning of the vector is the tail, and the end of the vector (where it points to) is the head. We indicate a vector using the points it goes from and to, for example in our picture our vector goes from point A to point B, so we could write it as &lt;math&gt;\overrightarrow{A B}&lt;/math&gt;. Alternatively, we can indicate it similar to a variable in algebra, as a letter. However, we either bold it or draw a line underneath it to indicate that it is a vector, not an ordinary variable. For example, we could call it &lt;math&gt;\underline{u}&lt;/math&gt;.
===Vector Math===
====Addition====
When adding vectors, we simply join them together, head to tail.&lt;br&gt;
For example,</text>
      <sha1>7kgynofzdyqms5m1jgy6kcop7yfitq1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Κ</title>
    <ns>10</ns>
    <id>200717</id>
    <redirect title="User:Proteins/Κ" />
    <revision>
      <id>1549061</id>
      <timestamp>2009-06-26T17:35:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Κ]] to [[User:Proteins/Κ]]: User template</comment>
      <text xml:space="preserve">#REDIRECT [[User:Proteins/Κ]]</text>
      <sha1>01fl5ghdgumjty83txwntteh2xxmgom</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Tangy Lemon Mousse</title>
    <ns>102</ns>
    <id>200718</id>
    <revision>
      <id>1888419</id>
      <parentid>1549074</parentid>
      <timestamp>2010-07-14T09:53:50Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
*1/2 cup freshly squeezed lemon juice
*2 tsp finely grated lemon zest
*1 cup sugar
*2 cups heavy cream, beaten to soft peaks
*1/4 cup pasteurized egg product, or 2 pasteurized egg yolks, beaten
*Pinch of salt
*1/4 cup butter, melted

== Procedure ==
#Combine all ingredients execpt for cream. Gently fold in cream. Refrigerate for 20 minutes and serve.

== Warnings ==

The reason I am using pasteurized egg is because I wouldn't want anyone to get sick. You could use regular eggs, but remember there are risks associated with doing so.</text>
      <sha1>6jf3n429r1jqfm4p1eqi2rb7qpguqm3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Sigmundur</title>
    <ns>3</ns>
    <id>200719</id>
    <revision>
      <id>1549076</id>
      <timestamp>2009-06-26T17:52:53Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Sigmundur!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Swift|Swift]] ([[User talk:Swift|talk]]) 17:52, 26 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>r1j6of63ck6alf3ir3ng2x36ufxf4np</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grilled Pork Tenderloin</title>
    <ns>102</ns>
    <id>200720</id>
    <revision>
      <id>1734750</id>
      <parentid>1549095</parentid>
      <timestamp>2010-03-12T20:24:29Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==

'''Marinade'''

* 1 whole pork tenderloin, trimmed
* 1/4 cup freshly squeezed lime juice
* 1/4 cup honey
* 1 1/2 tsp salt
* 2 tbsp apple cider vinegar
* 1/4 cup apple cider

'''Rub'''
* 2 tbsp paprika
* 1/2 tbsp garlic powder
* 1 1/3 tbsp cayenne pepper
* 1/2 tbsp chipotle powder
* 1/2 tbsp black pepper
* 1/2 tbsp dried rosemary

'''Grill'''
* 4 lbs. natural chunk charcoal
* 1/2 pound soaked applewood chips
* 2 tsp vegetable oil
* 1 sheet newspaper

== Procedure ==
#Combine Marinade ingredients. Pour half into a large zip-top plastic bag. Add pork and refrigerate for 24 hours.
#Combine Rub ingredients and rub all over pork.
#Moisten newspaper with oil and wad up under a large chimney starter with charcoal in it. Light and wait 15 minutes.
#Once charcoal has heated, disperse evenly around bottom of grill. Add soaked chips, replace grate, and place pork in the center. Cover and cook for 1 1/2 minutes.
#Flip to another side and cook 1 1/2 more minutes and repeat until pork has cooked for 12 minutes and internal temp. reaches 140°.
#Make a large foil pouch and place pork inside. Pour in reserved marinade and let rest for 10 minutes. Serve.

[[Category:Spice Mix recipes]]</text>
      <sha1>09kvcydmub6jvuxpm0o7cfk67y7o0tl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Advocate</title>
    <ns>10</ns>
    <id>200722</id>
    <redirect title="Template:Advocate" />
    <revision>
      <id>1549102</id>
      <timestamp>2009-06-26T18:08:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Advocate]] to [[Template:Advocate]]: Make in line with other response template names</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Advocate]]</text>
      <sha1>tgxr9bo43m29but3b8286g3k6ghns5a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Concerns</title>
    <ns>10</ns>
    <id>200723</id>
    <redirect title="Template:Concerns" />
    <revision>
      <id>1549104</id>
      <timestamp>2009-06-26T18:09:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Concerns]] to [[Template:Concerns]]: Make in line with other response template names.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Concerns]]</text>
      <sha1>i4dm0go84zkt4wc7labr5oorxabti3m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Favor</title>
    <ns>10</ns>
    <id>200724</id>
    <redirect title="Template:Favor" />
    <revision>
      <id>1549109</id>
      <timestamp>2009-06-26T18:11:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Favor]] to [[Template:Favor]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Favor]]</text>
      <sha1>bkrmax2awyb6wp0oaoy3y7m7ek50i50</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Favour</title>
    <ns>10</ns>
    <id>200725</id>
    <redirect title="Template:Favour" />
    <revision>
      <id>1549113</id>
      <timestamp>2009-06-26T18:12:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Respond Favour]] to [[Template:Favour]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Favour]]</text>
      <sha1>r32m9j93v6nne9sm8eg2du2wuzvu26t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Respond Stand Aside</title>
    <ns>10</ns>
    <id>200726</id>
    <redirect title="Template:Stand aside" />
    <revision>
      <id>1549126</id>
      <parentid>1549123</parentid>
      <timestamp>2009-06-26T18:17:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Stand aside]]</text>
      <sha1>d73rfwh1cn9ab5fqx78u7sxaokv9gxf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Stand Aside</title>
    <ns>10</ns>
    <id>200727</id>
    <redirect title="Template:Stand aside" />
    <revision>
      <id>1549125</id>
      <timestamp>2009-06-26T18:17:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Stand Aside]] to [[Template:Stand aside]]: Sentence case.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Stand aside]]</text>
      <sha1>d73rfwh1cn9ab5fqx78u7sxaokv9gxf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Vote/Transwiki</title>
    <ns>10</ns>
    <id>200728</id>
    <redirect title="Template:Trans" />
    <revision>
      <id>1549131</id>
      <timestamp>2009-06-26T18:20:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Vote/Transwiki]] to [[Template:Trans]]: In line with other response templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Trans]]</text>
      <sha1>e55pt8tk24lcs5jh5hi16ptee1zjbab</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Print templates</title>
    <ns>14</ns>
    <id>200729</id>
    <revision>
      <id>1549135</id>
      <timestamp>2009-06-26T18:24:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">The [[Help:Collections|collections extension]] allows substitute templates to be used when creating a PDF, ODT, or Print-on-demand book from a collection of pages. To create a substitute for template SOMETEMPLATE, you would create a template named &quot;PrintSOMETEMPLATE&quot;. The Collections extension will automatically use the Print version when it is creating a collection. For ease of finding such templates, they should be put into this category.

[[Category:Templates]]</text>
      <sha1>cix23qqkv8qorpg7hc5p60zs56dh5xt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Heading templates</title>
    <ns>14</ns>
    <id>200730</id>
    <revision>
      <id>1549149</id>
      <timestamp>2009-06-26T18:29:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Secrets To Great Ribs</title>
    <ns>102</ns>
    <id>200731</id>
    <revision>
      <id>1838984</id>
      <parentid>1838983</parentid>
      <timestamp>2010-06-10T21:19:23Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{technique}}


If you leave ribs to other people, or don't do ribs at all, this guide will help you start making your own ribs.

== Cooking ==

Never boil ribs! Boil ribs and you lose! Just pretend the ribs were a nice, juicy, ribeye. Then would you boil it? I didn't think so.

If you don't want to have to pay attention to a smoker or a grill all day long, then do it in a 275° oven. Whatever you do, do not BOIL ribs! Just step away from a person that says you should boil ribs. See, since water leaches all the flavor from them, you'll be eating something like wet paper.

If the weather isn't very good for grilling, then just place a roasting rack in a roasting pan and place wood chips under it. Just be sure to open a window and turn on a fan just in case. Also keep a fire extinguisher around.

== Seasoning ==

Rubs are classic rib seasonings. There are some pretty good rubs on this website, but avoid salt-based commercial rubs. If you can't find one that you like, just make your own. Things that work well in rubs include paprika, chipotle powder, garlic, cayenne pepper, brown sugar, chili powder, and smoke powder. Rubs make a nice crust on the surface of the meat, and a good one will make you look like a pro.

== Sauces ==

Don't put a sauce on the meat before you cook it! The sauce will burn and the meat will either be underdone or still tough. Just brush on a sauce generously once it's done cooking, then place it on a grill or under the broiler. Even then, you don't want to use a commercial sugar-based sauce.
If you look at the ingredients, the first thing you'll see is high fructose corn syrup, then tomato, then more sugar, then oil, salt, etc. Homemade sauces are much less sugary and aren't that hard to make.

== Rib Cuts ==

Think all ribs are the same? Wrong. There are 3 different cuts of ribs: baby back/loin/back ribs, spareribs, and St. Louis ribs.

The baby back is a little more tender than the other ribs, takes flavor well, and cooks faster.

The sparerib is a little tougher, has a little cartilage, has a bit more meat on it, and takes longer to cook.

The St. Louis rib is just a sparerib with the tips and cartilage removed.



Hopefully you will get to work on some of your own lip-smacking ribs.</text>
      <sha1>0rqxj6ha8260qpkrbsqugy2x3gyr3nv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Aros/Developer/Docs/building</title>
    <ns>0</ns>
    <id>200732</id>
    <revision>
      <id>2053872</id>
      <parentid>1897828</parentid>
      <timestamp>2011-02-22T04:54:03Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: seperate → separate, aswell → as well, prefered → preferred using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">Building AROS in Different Directories
--------------------------------------------

It is possible, and the preferred method, to configure and build AROS in a directory other than
the working copy. For example ..
&lt;source lang=&quot;bash&quot;&gt;
$ svn co https://svn.aros.org/svn/aros/trunk/AROS aros-src
$ cd aros-src
$ mkdir ../build
$ cd ../build
$ ../aros-src/configure [...with options as appropriate...]
$ make
&lt;/source&gt;
puts the AROS working copy in the directory &quot;aros-src&quot; and builds
it in a separate, parallel directory &quot;build&quot;.

Why would you want to do this? Well there are a number of reasons...

:* You may want to separate the source and object code and only
::backup the source / avoid &quot;polluting&quot; the working copy with
::files generated during the build.
  
:* You may want to put the build directory and the working
::copy on different physical disks to improve performance.
  
:*You may want to remote mount the working copy on multiple
:: machines, and build for different machines from the same
::working copy.
  
:*You may want to build multiple configurations from the
::same working copy (and at the same time!).

The last reason above is possibly the most useful.  For instance
you can have builds for separate architectures and/or debug builds
each using the same working copy. Using multiple build directories you can
rebuild any or all configurations after an edit without the need
to either clean and reconfigure, or identify and copy changes
into another working copy.

NB:- If you have previously built AROS inside the working copy you will
need to delete all obsolete generated files from the source tree before
attempting to configure/build in another directory. The reason for this is some parts will detect the existing file in the source tree before the correct version and attempt to use that.  It is best to delete the bin/ directory as well as all files that shouldnt exist when the following command is used ..

  &lt;code&gt;svn status --no-ignore&lt;/code&gt;

Delete any files which are ignored/not supposed to be there (unless they are your own
projects files).

  [TIP]
  
  If you are compiling multiple AROS builds from the same working dir, the following
  configure option will make them use a common location to download external sources to
  
  &lt;code&gt;--with-portssources=&lt;path to common location&gt;&lt;/code&gt;
  
  It is best to use a separate directory outside of both the working dir and build dir(s)
  to store these files - so that if you delete a build or the working dir you will still
  have the files and not need to download them every time.

{{BookCat}}</text>
      <sha1>9qo7w5ff21s3sy1062mnehwefd9t9oj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Wine Glazed Pork Chops</title>
    <ns>102</ns>
    <id>200733</id>
    <revision>
      <id>1872025</id>
      <parentid>1549180</parentid>
      <timestamp>2010-07-01T21:00:20Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 4 thick cut bone-in pork rib chops
* 1/2 cup [[Cookbook:Chop Rub|Chop Rub]]
* Cider vinegar, as needed
* 1 cup red wine
* 1/4 cup butter, divided

== Procedure ==
#Brush pork chops generously with cider vinegar. Season pork with Rub, patting down slightly.
#Bring wine to a boil over high heat in a large saucepan and ignite. Cook until reduced by half. Add butter, 1 tbsp at a time while whisking, until all butter has melted.
#Grill pork chops over high heat 2 minutes, brushing with wine mixture, then twist 90° and cook for 2 minutes, brushing. Flip and repeat 1 more time.
#Remove and let rest 5 minutes. Serve with remaining wine mixture.</text>
      <sha1>kj9xbv8wc6zlpycrjk5780mxjbdscg5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userboxes</title>
    <ns>14</ns>
    <id>200734</id>
    <revision>
      <id>2586627</id>
      <parentid>2573799</parentid>
      <timestamp>2013-12-01T12:38:46Z</timestamp>
      <contributor>
        <username>دالبا</username>
        <id>393521</id>
      </contributor>
      <minor />
      <comment>[[fa:رده:جعبه‌های کاربری]]</comment>
      <text xml:space="preserve">{{template category|type=userbox}}

[[Category:User namespace templates]]

&lt;!-- [[en:Category:Userboxes]] --&gt;
[[eo:Kategorio:Ŝablonaro uzantoskatola]]
[[fr:Catégorie:Boîte_utilisateur]]
[[fa:رده:جعبه‌های کاربری]]</text>
      <sha1>r9n413yzo5g3ej7rs49ztmjn0hqpuhz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Ethics.jpg</title>
    <ns>6</ns>
    <id>200735</id>
    <revision>
      <id>1549217</id>
      <timestamp>2009-06-26T19:58:30Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freeclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freeclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9drogwho0mea4as9ic5enrhprpilx8x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Stackofbooks.jpg</title>
    <ns>6</ns>
    <id>200736</id>
    <revision>
      <id>1549219</id>
      <timestamp>2009-06-26T20:00:45Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9g758x6o5pcm73d179mle6igo77t27m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Book Overload.jpg</title>
    <ns>6</ns>
    <id>200737</id>
    <revision>
      <id>1549220</id>
      <timestamp>2009-06-26T20:01:54Z</timestamp>
      <contributor>
        <username>Hcogg001</username>
        <id>225308</id>
      </contributor>
      <comment>found on freeclipart.net</comment>
      <text xml:space="preserve">== Summary ==
found on freeclipart.net
== Licensing: ==
{{cc-by-2.0}}</text>
      <sha1>9drogwho0mea4as9ic5enrhprpilx8x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Islam In The World/George W. Bush</title>
    <ns>0</ns>
    <id>200740</id>
    <revision>
      <id>2472396</id>
      <parentid>1928142</parentid>
      <timestamp>2013-01-03T13:02:54Z</timestamp>
      <contributor>
        <username>Gold1618</username>
        <id>492166</id>
      </contributor>
      <comment>clarified Bush's beliefs specifically about Islam</comment>
      <text xml:space="preserve">George W. Bush held the office of President of the United States of America when the September 11 terrorism acts were carried out in 2001. Osama bin Laden, a militant Saudi Arabian muslim, soon claimed responsibility for the act. He had been forced to leave Sudan, after attacks on a US embassy, and the USS Cole, and sought haven with the Taliban in Afghanistan.

The US government demanded that the Taliban hand Osama bin Laden unconditionally over, but when they refused, the US military invaded the country to capture the heads of the terrorist organisation, al-Qaeda, which Osama was said to lead. The initial invasion appeared to be a success, and coalition forces soon gained control of Kabul. Soon, however, it became apparent that the country was not quite won yet; warlords swept in to fill the power void, and the Taliban regrouped. Eight years later, there are few prospects for peace in that war-torn country.

While the Bush administration was eager to explain that its &quot;War on Terror&quot; was in no way a war on Islam, not all were convinced. Calling the incursion into Afghanistan a &quot;crusade&quot; was a sore spot for some Muslims&lt;ref&gt;[http://weekly.ahram.org.eg/2001/552/p2fall3.htm War, 21st-century style]&lt;/ref&gt; and particularly after the second US invasion of Iraq, the relationship between the US and the &quot;Muslim world&quot; became a sensitive issue.

However, Bush also publicly stated that he believed that Muslims have no barriers to entry into Heaven that are not also faced by Christians, and that Islam was as acceptable a path to God as Christianity.

==References==
&lt;references/&gt;

[[Category:Islam In The World]]
[[ar:مستخدم:الحارث بن همام/حقوق الله/جورج بوش الابن]]</text>
      <sha1>9uazs56qg6zkn5qugud1t295zbp09k2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Globalization/Toyota Megaweb</title>
    <ns>0</ns>
    <id>200744</id>
    <revision>
      <id>2066110</id>
      <parentid>1561709</parentid>
      <timestamp>2011-03-06T04:38:14Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]] using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">== Overview ==

The Toyota Megaweb Showcase is a huge car showroom. Spread over 260,500 square feet in three pavilions, Mega Web has it's main focus on young consumers in their 20s and early 30s [1]. It's about the past, the present and the future. All the models of Toyota are in this showroom unlocked so as a visitor you can really experience a Toyota. In a way it is Disneyland for adults/men.The purpose of this exhibit is: `We want people to see, ride and dream', this was said by the Toyota Motor Corp. President Hiroshi Okuda [2]. 

There are six exhibits located in the various buildings of the Toyota Megaweb:

1 History Garage

Here cars from the past can be observed, not only from Toyota but from various brands. There are cars from all over the world from the 1950s to the 1970. The different rooms are a visit worth and have a different timezones and various types of cars.

2 Universal Designer Showcase

In this showcase is about the design of cars. How is this done and what should you think about.  

3 Toyota City Showcase

In this part you can see and learn all about Toyota's new models. Experience for yourself Toyota's new technology showcased in the hybrid and racing cars. Also announcements of new cars and motorsport events are communicated here.

4 Ride One

At ride one a person with a car licence can perform a test drive in one of the latest Toyota cars on a track. The costs are around 300 yen per car. In this way you can really experience a Toyota.

5 E-com Ride

This ride consists of a large track that passes around the complex but also through the building. The E-com ride are small special painted cars that drive by themselves. It's a kind of cruise control of the future, the car increase speed or break automatically.

6 Kids Hybrid Ride One

The kids are not forgotten. In this exhibit kids can drive a car. Here there are motor assisted hybrid cars that drive around on a 150 m circuit.


== History/Timeline ==
In March 1999 this Showroom opened her doors for visitors. The exhibits, and the current and the future cars are updated frequently.


== References ==
[1-2] http://www.highbeam.com/doc/1G1-54267288 retrieved on 25MAY09.

Personal visit to the Toyota Megaweb Showcase

Website of the Toyota Megaweb: http://www.megaweb.gr.jp/English retrieved on 25MAY09

http://www.autoblog.com/2006/07/11/toyota-mega-web-the-best-auto-showroom-ever retrieved on 25MAY09

http://metropolis.co.jp/CarsBikesarchive349/305/carsbikesinc retrieved on 25MAY09

{{BookCat}}</text>
      <sha1>cf0sokriebip6p032zd5a9bjhw5gezc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Peace Movements &amp; Peace Museums/JUMP</title>
    <ns>0</ns>
    <id>200746</id>
    <revision>
      <id>1561702</id>
      <parentid>1550343</parentid>
      <timestamp>2009-07-06T23:21:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">[http://www.ministryofpeace.jp JUMP], Japan United For Ministry of Peace, founded by [http://www.peaceinspace.blogs.com/campaign_for_a_positive_f/2008/02/yumi-kikuchi-bu.html Yumi Kikuchi], 
is an organization of individual citizens, whose main goal is to bring about a lasting and sustainable peace by establishing a Ministry for Peace across all of Japan.  A Ministry of Peace, referred to in the United States as a [http://en.wikipedia.org/wiki/Department_of_Peace Department of Peace], is a specific governmental institution that assesses governmental policy and legal decisions, on national, as well as international level, and then suggests alternatives based on the [http://www3.unesco.org/iycp/uk/uk_sum_cp.htm Culture of Peace], rather than economic gain or strategic / military power.  As defined by the United Nations, the Culture of Peace is a set of values, attitudes, modes of behaviour and ways of life that reject violence and prevent conflicts by tackling their root causes to solve problems through dialogue and negotiation among individuals, groups and nations (UN Resolutions [http://www3.unesco.org/iycp/kits/res52-13_en.htm A/RES/52/13]: Culture of Peace and [http://www3.unesco.org/iycp/kits/uk_res_243.pdf A/RES/53/243] Declaration and Programme of Action on a Culture of Peace).

The structure and design of a Ministry or Department of Peace is one that would not only establish a formal Department of Peace, but that would also create a [http://www.democraticunderground.com/discuss/duboard.php?az=view_all&amp;address=389x4908415 Secretary of Peace] position, appointed by the President of the United States, who would among many things, hold the cultivation of peace as a strategic national policy objective and work closely with the President and other lawmakers to advance this objective via domestic and foreign policy initiatives. 

The Department of Peace would also look to establish an &lt;strong&gt;Office of Peace Education and Training&lt;/strong&gt; that would carry out the functions of the Department relative to the development and implementation of peace education training at the elementary, secondary, university, and postgraduate levels, including the development of a Peace Academy. 

One of the most vocal advocates for a Department of Peace here in the United States is [http://kucinich.house.gov/issues/issue/?IssueID=1564 Congressman Dennis Kucinich] who has been a strong advocate for peace and meaningful reform towards that end in U.S. national and foreign policy. 

JUMP, as organization seeking to develop a Ministry of Peace in Japan, shares the basic mission and vision of numerous other independent organizations that seek to establish a Department of Peace with their home countries.  JUMP is also one of the founding members of the [http://www.mfp-dop.org/ Global Alliance for Ministries and Departments of Peace], a community of individuals and organizations working within their respective countries to establish ministries or departments of peace. The Global Alliance regularly hosts annual international conferences for current and potential members to encourage program growth and to address relevant global issues.

JUMP has an active voice in the Article 9 debate - the spirited debate over preserving or removing the clause in Japan's pacific constitution that prohibits maintaining a standing army as well as the use of military force to resolve international disputes. JUMP is an advocate for Article 9 preservation locally in Japan, but also supports the international, [http://www.iadllaw.org/en/node/172 Global Article 9 Campaign] holding Article 9 as a broad mechanism for peace and the shared property of the world.  Additionally they work to advocate for and to recognize the relevance that the cultivation of peace has on human rights, disarmament, nuclear weapons abolition, conflict prevention, development, the environment, etc.  JUMP is a strong advocate for developing self-sustaining communities, protecting the environment, corporate social responsibility, minimizing the effects of globalization, UN reform and other global issues.

'''IMPACT ON AUTHOR'''

I was particularly interested in JUMP because they are an advocate for peace in what is seemingly a tangible and meaningful way. The notion of a Ministry of Peace that works closely with Japanese law makers to develop and implement legislation and policies aimed at cultivating national and international peace was refreshing. I thought that it was an interesting idea to consider what that would like here in the United States. That is, a Department of Peace that works closely with the U.S. President to develop domestic and foreign policies that fully consider the importance of preserving and advancing the principles of peace as well as partnering with the President and other law makers to construct peaceful alternatives to international conflict. I believe that the current political and diplomatic climate is one that is incredibly tenuous. There are a wide and varied range of very serious issues brewing all across the world stage such as the U.S. Wars in Iraq and Afghanistan, Iran's pursuit of nuclear energy, the Israeli-Palestinian conflict, North Korea's testing of nuclear missiles, the issue of nuclear disarmament, pressure for UN reform, U.S. strained relationships with Russia, Cuba, etc., just to name a few. When you look closely at international relations and present-day issues, it is quite clear that the peace that exists is fragile and that there are many opportunities for international conflict. I believe that the establishment of Ministries or Departments of Peace in every country is potentially an important first step towards meaningful, lasting global peace. 

'''REFERENCES'''

Chinen, Mark 2006, ‘Article 9 of he constitution of Japan and the use of procedural and
     substantive heuristics for consensus’, Michigan Journal of Intentional Law vol. 27.

“Department of Peace.”  Wikipedia.  19 June 2009.  &lt;http:// en. wikipedia. org /wiki   
     /Department_of_Peace&gt;

International Association of Democratic Lawyers 2008, ‘Global Article 9 Campaign
     Background’ viewed June 26, 2009 http://iadllaw.org/en/node/172.

Japan-101 Information Resource, ‘Article 9 of Japan’s Constitution – No War Clause’,
     viewed June 26, 2009 http://www.japan-101.com/government/article_9_of_japan.htm.

Japan United for Ministry of Peace 2007, ‘Welcome to JUMP’, viewed June 26, 2009, 
     http://ministryofpeace.jp/english/index.html.

Secretary of Peace, U.S. Department of Peace and Nonviolence 2009, ‘One of Top 10 
     Ideas for Change Sent to Administration.’ viewed June 27, 2009.     
     http://www.democraticunderground.com/discuss/duboard.php?az= view_all&amp;    
     address=389x4908415.

Stebbins, Jane 2003, ‘Udall Backs Creating Department of Peace’ Summit Daily News 8 
     April.

U.S. Department of Peace, ‘Campaign to Establish The Peace Alliance.’ viewed June 26,
     2009, http://www.thepeacealliance.org/content/view/77/118.

{{BookCat}}</text>
      <sha1>1j744k4ru836e30hfiwbsh9y4z21egn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Rosa</title>
    <ns>110</ns>
    <id>200747</id>
    <revision>
      <id>1876082</id>
      <parentid>1549371</parentid>
      <timestamp>2010-07-07T18:35:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Rosa&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Rose
|binomial =Rosa
|image1 =Rosa virginiana.jpg
|caption1 =Virginia Rose
|image2=Rosa blanda.jpg
|caption2=Smooth Rose
|image3 =Rose hip.JPG
|caption3=Rose hips
|description =Roses are familiar to almost anyone who loves flowers.  However, the roses you buy from a florist or see in the grocery store do not look a whole lot like the wild ones you might find out in a field.  Wild roses have five petals.  The flowers are showy and large, usually an inch or two across.  The center of the flower has many yellow stamens ('''stay'''-mins) which are little thread-like structures.  The leaves generally have toothy edges.  The plant itself grows anywhere from one to six feet tall.  The stems are often thorny.

In the fall, the flowers turn into rose hips, which are small round fruits.
|facts = Rose hips rich in vitamin C and are commonly used as an herbal tea, often blended with hibiscus and as an oil. They can also be used to make jam, jelly, marmalade and wine. Rose hip soup, &quot;nyponsoppa,&quot; is especially popular in Sweden.
}}</text>
      <sha1>1vkkqlhz0mlmab6td7686x0pi1i6uzr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Kalmia angustifolia</title>
    <ns>110</ns>
    <id>200748</id>
    <revision>
      <id>1876108</id>
      <parentid>1550208</parentid>
      <timestamp>2010-07-07T18:38:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Kalmia angustifolia&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Sheep Laurel
|binomial =Kalmia angustifolia
|image1 =Kalmia angustifolia Rubra.jpg
|caption1 =Cluster of flowers
|image2=Kalmia angustifolia 3869.JPG
|caption2=
|image3 =Kalmia angustifolia 4502.JPG
|caption3=Sheep Laurel growing at the base of a Pine tree among some blueberries.
|description =Sheep Laurel has beautiful pink flowers shaped like bowls.  The petals are joined together all around the edges.  At the base of the petals there are some darker pink dots.  It looks like there are more dark dots around the edge of the &quot;bowl&quot; but if you look closely, you will see that these dots are connected to little threads.  The &quot;threads&quot; are called stamens ('''stay'''-mins), and the dots on the end of each is called an anther.  From the very center of the flower arises a white tube called a style.  The flowers are located a near the middle of the plant, peeking out from a layer of long, narrow leaves.  

The leaves are leathery, thick, and shiny.  They stay green year round.  The stem is woody and grows anywhere from six inches to two feet high.

Sheep Laurel is closely related to Mountain Laurel.  Mountain laurel can grow to be very tall (up to 30 feet) and has wide leaves.  Sheep Laurel leaves are far narrower.  These two plants are in the same genus ('''jee'''-nuss), and their species names remind us whether the leaves are wide or narrow.  Sheep Laurel is ''Kalmia angustifolia'', and Mountain Laurel is ''Kalmia latifolia''.  ''Angustifolia'' means &quot;narrow leaf,&quot; and ''latifolia'' means &quot;wide leaf.&quot;

|facts = Sheep Laurel is poisonous, especially to sheep.  It has many other names that attest to this unfortunate fact, including Lamb-kill, Calf-kill, and Sheep-poison.
}}</text>
      <sha1>5b1d2oicrmbp9j9ojxqk6u6g6fuelso</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Dianthus deltoides</title>
    <ns>110</ns>
    <id>200749</id>
    <revision>
      <id>1876126</id>
      <parentid>1549382</parentid>
      <timestamp>2010-07-07T18:40:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Dianthus deltoides&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Maiden Pink
|binomial =Dianthus deltoides
|image1 =Dianthus deltoides.jpeg
|caption1 =Flower
|image2=DianthusDeltoides.jpg
|caption2=Colony of Maiden Pinks
|image3 =Dianthus deltoides Newborough.jpg
|caption3=Stem and flower
|description =Maiden Pink is a brilliant pink flower with five petals.  Each petal has darker pink stripes going across their width near the center of the flower.  Flowers appear one per stem, but sometimes you can find many Maiden Pinks all growing together.  They are such beautiful flowers that they are planted by highway departments along roads and sidewalks.

The stems grow up to 18 inches tall, and the leaves are very narrow.
|facts = The scientific name for Maiden Pink is ''Dianthus deltoides''.  The word ''Dianthus'' was made from two Greek words: ''dios'' meaning &quot;divine&quot; and ''anthos'' meaning &quot;flower.&quot;  The Greeks thought that this flower was special to their main god Zeus.
}}</text>
      <sha1>hx5e5c9k4atzky7540qbbgvv5o60tvz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Doctorotto</title>
    <ns>3</ns>
    <id>200750</id>
    <revision>
      <id>1549388</id>
      <timestamp>2009-06-27T01:29:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Doctorotto!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, --[[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:29, 27 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>q5b6kkc588fnga3hgf09s9f9xesbil8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Kjoldft</title>
    <ns>3</ns>
    <id>200751</id>
    <revision>
      <id>1556470</id>
      <parentid>1549412</parentid>
      <timestamp>2009-07-03T02:37:27Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Lobelia cardinalis</title>
    <ns>110</ns>
    <id>200752</id>
    <revision>
      <id>2260830</id>
      <parentid>1876103</parentid>
      <timestamp>2012-02-03T00:33:14Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Replacing Fleur_inconnue_02.jpg with [[File:Lobelia_cardinalis-02.jpg]] (by [[commons:User:Billinghurst|Billinghurst]] because: [[commons:Commons:File renaming|File renamed]]: Die Blume ist nicht mehr unbekannt, la fleur n'est plus inconnue, the p...</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Cardinal Flower
|binomial =Lobelia cardinalis
|image1 =Lobelia cardinalis 2.jpg
|caption1 =
|image2=Lobelia_cardinalis-02.jpg
|caption2=
|image3 =06-08-16 LobeliaCardinalisIR.jpg
|caption3=
|description =Cardinal Flowers grow to about four feet tall on the banks of rivers and streams.  They have clusters of brilliant red flowers growing along most of their length.  The leaves are up to eight inches long and two inches wide.

Each flower has five petals, with the largest one being at the bottom center.  The next largest petals are next to the bottom one, and two small petals grow at the top.  

Native Americans made a tea from the root and used it to treat intestinal sicknesses.  They used a tea made from the leaves to treat bronchitis, and chest colds.
|facts = This plant is a great choice for the garden if you want to attract hummingbirds.
}}</text>
      <sha1>hx8dhy7jl17a0u66spy48ehspun75q0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>XQuery/Basic Session Management</title>
    <ns>0</ns>
    <id>200753</id>
    <revision>
      <id>1582906</id>
      <parentid>1549416</parentid>
      <timestamp>2009-07-29T15:17:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">== Motivation ==
You want to associate some behavior of your web application with a users's login session.

== Method ==
There are several functions provided by eXist and other web servers to manage information associated with a login session.

&lt;source lang=&quot;xml&quot;&gt;
xquery version &quot;1.0&quot;;

let $session-attributes := session:get-attribute-names()

return
&lt;results&gt;
   {for $session-attribute in $session-attributes
       return
       &lt;session-attribute&gt;{$session-attribute}&lt;/session-attribute&gt;
   }
&lt;/results&gt;
&lt;/source&gt;

Before you add any session attributes this might return only a single variable such as:

&lt;source lang=&quot;xml&quot;&gt;
&lt;results&gt;
   &lt;session-attribute&gt;_eXist_xmldb_user&lt;/session-attribute&gt;
&lt;/results&gt;
&lt;/source&gt;


&lt;source lang=&quot;xml&quot;&gt;
xquery version &quot;1.0&quot;;

(: set the group and role :)
let $set-dba-group := session:set-attribute('group', 'dba')
let $set-role-editor := session:set-attribute('role', 'editor')

let $session-attributes := session:get-attribute-names()

return
&lt;results&gt;
   {for $session-attribute in $session-attributes
       return
       &lt;session-attribute&gt;{$session-attribute}&lt;/session-attribute&gt;
   }
&lt;/results&gt;
&lt;/source&gt;

This will return the following attributes:

&lt;source lang=&quot;xml&quot;&gt;
&lt;results&gt;
  &lt;session-attribute&gt;group&lt;/session-attribute&gt;
  &lt;session-attribute&gt;role&lt;/session-attribute&gt;
  &lt;session-attribute&gt;_eXist_xmldb_user&lt;/session-attribute&gt;
&lt;/results&gt;
&lt;/source&gt;

These attributes will remain associated with the user until the user logs out or their session times out, typically after 15 minutes of inactivity.

One sample use of session attributes is to keep track of user interface preferences.  For example if a user wants to have their data sorted by a person's zip code you can add that to their session variable.

   let $set-sort := session:set-attribute('sort', 'zip-code')

{{BookCat}}</text>
      <sha1>t49c92y2umyg64ges9ajfdfdmmoaccm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Float templates</title>
    <ns>14</ns>
    <id>200754</id>
    <revision>
      <id>1549441</id>
      <timestamp>2009-06-27T02:42:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Formatting templates]]</text>
      <sha1>kmlqpu5tsyiwl6fbhvgzpfdwq99ucbh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Column templates</title>
    <ns>14</ns>
    <id>200755</id>
    <revision>
      <id>1798291</id>
      <parentid>1549446</parentid>
      <timestamp>2010-05-18T01:56:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Text formatting templates</title>
    <ns>14</ns>
    <id>200757</id>
    <revision>
      <id>2153210</id>
      <parentid>1549466</parentid>
      <timestamp>2011-08-04T12:45:54Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <comment>hide prefix</comment>
      <text xml:space="preserve">{{hide prefix|Template:}}
[[Category:Formatting templates]]</text>
      <sha1>dn6385tich7ym1zl05eizi7vx0n00en</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Illustrative Example: Model a Wine Glass</title>
    <ns>0</ns>
    <id>200758</id>
    <revision>
      <id>2163102</id>
      <parentid>1617788</parentid>
      <timestamp>2011-09-01T08:04:40Z</timestamp>
      <contributor>
        <ip>66.189.165.84</ip>
      </contributor>
      <text xml:space="preserve">{{B3D:N2P/NAV
|next=Creating Ogg-Theora movies using Blender
|previous=Spin Tool Introduction
}}


Lets start with a classic spin tool model. Here we go step by step in making a wine glass... or any other latheable models... using the spin tool.

==Model half the outline==

Using what you have learned earlier, create a simple outline of the wine glass. Just the half part and leave the center part open. As a recap, go first to front view. Select the cube (or if you have no object create one) and press Tab to go to edit mode. Delete all vertices of the object, then using Ctrl+
LMB, add connected vertices. Keep holding Ctrl and clicking until finished. Adjust vertices as required.

{{Noframecenter|1=[[Image:WineglasTut outline.png|266px]]|2=Finished wineglass outline}}

==Spinning the outline==

Remember to align the two end points in the open side. Select the two vertices and scale at the x-axis to zero (Skey-&gt;Xkey-&gt;0key). Move the 3d cursor to the center by snapping to the selection (Shift+S -&gt; 4key). Then select all vertices by hitting Akey twice.

{{Noframecenter|1=[[Image:WineglassTut preparation.jpg|235px]]|2=Wineglass outline in preparation for spinning}}

Now go to top view (Num7). Select the editing button (F9Key) and find the mesh tools tab. Change Degr to 360 for a complete turn and change steps to 20 or higher to form a much rounded shape.

{{Noframecenter|1=[[Image:WineglassTut spin settings.jpg|380px]]|2=Parameter settings for the project}}

Press the Spin button.

{{Noframecenter|1=[[Image:WineglasTut spin frontview.jpg|238px]]|2=Wineglass result seen in front view}}

==Cleaning up the Mesh==

Select all vertices by pressing Akey twice then apply remove doubles operation (WKey-&gt;6Key/Remove doubles). Now the model is finished. Make it shade smooth using set smooth (Wkey -&gt; set smooth). If you like, add a Subsurf modifier to the object to make it geometrically smoother. If dark bands appear, recalculate normals outside (Ctrl+N), to eliminate them.

{{Noframecenter|1=[[Image:Winglass noTex.jpg]]|2=Finished wineglass rendered with no textures}}

{{B3D:N2P/NAV
|next=Illustrative Example: Model a Mug
|previous=Spin Tool Introduction
}}

{{BookCat}}</text>
      <sha1>jfhxr65ilhvk2t8g8nzqxtcs4h411va</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Template references</title>
    <ns>14</ns>
    <id>200759</id>
    <revision>
      <id>1549482</id>
      <timestamp>2009-06-27T03:15:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Ohma-stublink</title>
    <ns>10</ns>
    <id>200763</id>
    <redirect title="Template:Organic Horticulture in the Mid-Atlantic/Stub" />
    <revision>
      <id>1549525</id>
      <timestamp>2009-06-27T03:57:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Ohma-stublink]] to [[Template:Organic Horticulture in the Mid-Atlantic/Stub]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Organic Horticulture in the Mid-Atlantic/Stub]]</text>
      <sha1>f3vmpzghxdsleu0xwcif84oog3eixbm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Ohma-weed</title>
    <ns>10</ns>
    <id>200764</id>
    <redirect title="Template:Organic Horticulture in the Mid-Atlantic/Weed" />
    <revision>
      <id>1549528</id>
      <timestamp>2009-06-27T03:58:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Ohma-weed]] to [[Template:Organic Horticulture in the Mid-Atlantic/Weed]]: Naming convention</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Organic Horticulture in the Mid-Atlantic/Weed]]</text>
      <sha1>ds1f4ceejwbtaqlhx26iu08lslzz1o8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Magic word templates</title>
    <ns>14</ns>
    <id>200765</id>
    <revision>
      <id>1549562</id>
      <parentid>1549544</parentid>
      <timestamp>2009-06-27T04:28:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">These templates pretend to be built-in magic words like &lt;nowiki&gt;{{PAGENAME}} and {{SUBPAGENAME}}&lt;/nowiki&gt; by using all caps. They provide additional functionality over the built-ins.

[[Category:Utility templates]]</text>
      <sha1>i3pb0wfirlypyhq4zwxxpgsp128ehdy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Disclaimer templates</title>
    <ns>14</ns>
    <id>200767</id>
    <revision>
      <id>1549581</id>
      <parentid>1549556</parentid>
      <timestamp>2009-06-27T04:43:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Utility templates</title>
    <ns>14</ns>
    <id>200768</id>
    <revision>
      <id>1549560</id>
      <timestamp>2009-06-27T04:28:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Information templates</title>
    <ns>14</ns>
    <id>200770</id>
    <revision>
      <id>1549574</id>
      <timestamp>2009-06-27T04:41:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Templates]]</text>
      <sha1>0t5jiibdq6k1tam9oy4zt1yld5iz80u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Note templates</title>
    <ns>14</ns>
    <id>200771</id>
    <revision>
      <id>1549594</id>
      <timestamp>2009-06-27T04:50:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Algebra/Algebraic exponents</title>
    <ns>0</ns>
    <id>200772</id>
    <revision>
      <id>1567754</id>
      <parentid>1554247</parentid>
      <timestamp>2009-07-13T16:26:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">Calculate the problem carefully. (50 questions)

# &lt;math&gt;\!6x\times\!x=\cdots&lt;/math&gt;
# &lt;math&gt;\!y\times\!y\times\!y=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x\times\!6y=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x^2\times\!3xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!3y^3\times\!6xy\times\!2x^2=\cdots&lt;/math&gt;
# &lt;math&gt;\!2x^3y^2\times\!3yz=\cdots&lt;/math&gt;
# &lt;math&gt;\!3yz\times\!5z^2=\cdots&lt;/math&gt;
# &lt;math&gt;\!4x^5\times\!3x^3y^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!7x^2\times\!5y^2z\times\!5z=\cdots&lt;/math&gt;
# &lt;math&gt;\!3y\times\!4xy^4=\cdots&lt;/math&gt;
# &lt;math&gt;\!(\!5xy\times\!6x^2y^3)\div\!3y^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!3x^2\times\!6xy^3=\cdots&lt;/math&gt;
# &lt;math&gt;\!4y^2z\times\!3xy\div\!2x^5=\cdots&lt;/math&gt;
# &lt;math&gt;\!5x^3\div\!10x^2y^3\times\!5xy=\cdots&lt;/math&gt;
# &lt;math&gt;\!(6x)^3\times\!(5y)^4=\cdots&lt;/math&gt;

{{BookCat}}</text>
      <sha1>lilci7krpups86yb3cn3cakgbfse7tv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Progress templates</title>
    <ns>14</ns>
    <id>200773</id>
    <revision>
      <id>2134235</id>
      <parentid>2134225</parentid>
      <timestamp>2011-07-05T15:24:28Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/208.71.79.254|208.71.79.254]] ([[User talk:208.71.79.254|talk]]) to last version by Adrignola</comment>
      <text xml:space="preserve">[[Category:Information templates]]</text>
      <sha1>jmo5rvz4qp7c0n2eccrkeeywd7v9nie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Medical Physiology/Cellular Physiology/Cell junctions and Tissues</title>
    <ns>0</ns>
    <id>200775</id>
    <revision>
      <id>2481572</id>
      <parentid>2481570</parentid>
      <timestamp>2013-01-25T05:16:41Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Replacing Gap_cell_junction_en.svg with [[File:Gap_cell_junction-en.svg]] (by [[commons:User:Morning Sunshine|Morning Sunshine]] because: [[commons:COM:FR|File renamed]]: [[commons:COM:FR#reasons|File renaming criterion #6]]: Harmonize file names of a ...</comment>
      <text xml:space="preserve">==Introduction==
Cells are organized to form tissues, and tissues are organised to form organs. Tissues are formed by an aggregation of like cells carrying out a like function. Cells are linked together by '''cell junctions'''  and are supported by a '''matrix''' which they themselves secrete.

The cell junctions are basicaly of three types, '''tight''', '''desmosomal''', and '''gap'''. We will look at these in more detail in the next section.
&lt;div style='margin:20px'&gt;
[[File:Cell junctions.png|400px]]
&lt;/div&gt;
Histologists classify the tissues according to their physical features, physiologists tend to classify tissues acording to their function. There are four major types of tissue : '''epithelial'''; '''connective'''; '''neural'''; and '''muscular'''. The following table summarizes the difference between these tissues.

&lt;table cellpadding='10' border='1&gt;
&lt;caption&gt;&lt;b&gt;Summary of Tissue Properties&lt;/b&gt;&lt;/caption&gt;
&lt;tr&gt;
     &lt;th&gt;&lt;/th&gt;
     &lt;th&gt;Features&lt;/th&gt;
     &lt;th&gt;Matrix&lt;/th&gt;
     &lt;th&gt;Other Characeristics&lt;/th&gt;
&lt;/tr&gt;
&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Epithelial&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Organized in sheets. Provides covering: Lines body surface, hollow organs, cavities and tubes.  Provides tissues for secretory glands.&lt;/td&gt;
     &lt;td&gt;Matrix is minimal in ammount, forming the '''basement membrane''' of the sheets of epithelial cells.&lt;/td&gt;
     &lt;td&gt;Cells are polarized with a 'surface' and 'basement' side. The surface side may have special characteristcs such as '''cilia''' or '''microvilli'''. The membrane functions also often differ.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Connective&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Characterised by a varied and extensive matrix. Cells are usually scattered irregularly in this matrix. Cell shape is irregular to round.&lt;/td&gt;
     &lt;td&gt;Matrix is varried consisting of numerous protein fibers in ground substance. Consistency varies from liquid (blood) to gelatinous; from firm (fibrous tissue,cartilage) to solid (bone).&lt;/td&gt;
     &lt;td&gt;Found throughout body, forms the support and structure for organs and the body itself.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Nerve&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Cells can generate electrical signals. Highly branched.&lt;/td&gt;
     &lt;td&gt;Neural tissue has no matrix. Support is provided by other specialized neural cells.&lt;/td&gt;
     &lt;td&gt;Found throughout body with concentrations in the brain, the spinal cord and the enteric nervous system of the gut.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr valign='top'&gt;
     &lt;td&gt;&lt;b&gt;Muscle&lt;/b&gt;&lt;/td&gt;
     &lt;td&gt;Cells can generate electrical signals, which result in contraction. 'Voluntary' muscle  makes up skeletal muscles; Cardiac muscle powers the heart; smooth muscle surrounds hollow organs and tubes.&lt;/td&gt;
     &lt;td&gt;Muscular tissue does not secrete its own matrix. Skeletal muscle is suppored by fibous tissue, and is attached to tendons.&lt;/td&gt;
     &lt;td&gt;Intestinal Smooth muscle and Cardiac muscle both have cell to cell communication.&lt;/td&gt;

&lt;/tr&gt;

&lt;/table&gt;

==Cell Junctions==
[[File:Junctional complex and pinocytotic vesicles - embryonic brain-TEM.jpg|thumb|Transmission electron microscope image of a thin section cut through the developing brain tissue (telencephalic hemisphere) of an 11.5 day mouse embryo. This higher magnification image of &quot;Embryonic brain 80415&quot;, shows an area of the luminal surface of the telencephalon, which has a junctional complex and pinocytotic vesicles. The junctional complex is divided into three types of junctions: 1) the most apical is the tight junction, which controls and/or restricts the movement of molecules across epithelial layers and helps maintain polarity, 2) the zonula adherens and 3) the desmosome, which is a spot junction. The pinocytotic vesicles are formed from coated pits in the plasma membrane and are involved in endocytosis.]]

It is the junctions that allow individual cells to be organized into tissues. Numerous proteins called '''cell adhesion molecules (CAMs)''' have been identified, and the illustrations shown really represent a generqalization. These proteins are being intensively studied because of their importance in cancer and the embryonic development organization of the nervous system. According to Ganong the proteins can be divided into four large groups, integrins, IgG superfamily, cadhedrins and selectins. A Biochemistry text should be consulted of more information on these proteins.

[[File:Cell junction simplified en.svg|600px]]
The tight junctions  can be found at the apexes of many lumen epithelial cells, and forms a 'water tight' occlusion that prevents leaking of water, substrates and ions from the extra cellular fluid to the lumen. That having been said, there is evidence that some tight junctions are more 'leaky' than others, and that this 'leakiness' is under hormonal control. Desmosomes and Zona Adherens junctions hold cells together.The Zona Adherens is a continuous band, whereas Desmosomes are more in the nature of a 'spot weld'. They allow passage of some substances between the cells. Gap junction give direct communication from cell to cell. They are found in many epithelial cells, but most famously they exist in Cardiac muscle and intestinal smooth muscle
[[File:Tight junction blowup.jpg|thumb| Electron Micrograph of negatively stained en:Proximal convoluted tubule of Rat en:Kidney tissue at a magnification of ~55,000x and 80KV.
This is a close-up of the en:Zonula occludens (en:Tight junction) out of a larger image of a Kidney Tissue with Tight junction.]]
===Tight (Zona Occludans) Junctions===
[[File:Cellular_tight_junction-en.svg|400px]]





===Zona Adherens Junctions===
[[File:Adherens Junctions structural proteins.svg|400px]]

===Desmosome Spot Junctions===
[[File:Desmosome cell junction en.svg|400px]]

===Gap Junctions===
[[File:Gap_cell_junction-en.svg|400px]]



&lt;!--
WIDER FIELD VERSION OF FIRST EM
[[File:Unctional complex and pinocytotic vesicles - embryonic brain - TEM.jpg|thumb|Transmission electron microscope image of a thin section cut through the developing brain tissue (telencephalic hemisphere) of an 11.5 day mouse embryo. This image of the luminal surface of the telencephalon, shows junctional complexes and pinocytotic vesicles. The junctional complex is divided into three types of junctions: 1) the most apical is the tight junction, which controls and/or restricts the movement of molecules across epithelial layers and helps maintain polarity, 2) the zonula adherens, which also includes the numerous actin filaments seen in the apical cytoplasm, and 3) the desmosome, which is a spot junction. The pinocytotic vesicles are formed from coated pits in the plasma membrane and are involved in endocytosis.]]--&gt;
&lt;br clear=&quot;both&quot; /&gt;

==Epithelia==
[[File:Normal colonic mucosa.jpg|thumb| Epithelia from Colon]]
[[File:Normal Epidermis and Dermis with Intradermal Nevus 10x.JPG|thumb|Normal epidermis and Dermis]]
[[File:Ciliated columnar epithelium.JPEG|thumb|Ciliated columnar epithelium]]

[[File:Microvilli-Duodenum.JPG|thumb|Microvilli-Duodenum]]

Histologists classify epithelia cells by appearence. Single layer epithelias is called 'simple'; multilayer is called stratified. The diagram below shows a typical histological classification. Plain light microscope appearences appear in the thumbnails to the right.
&lt;div align='center' style='align:center;margin:10px'&gt;
[[File:Illu epithelium.jpg]]
&lt;p&gt;&lt;i&gt;Histological classification of Epithelia&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;!--
[[File:Tkanka nablonkowa.png]]

SUMMARY

A - simple columnar epithelium. 
B - simple columnar epithelium with cilia. 
C - stratified squamous epithelium. 
D - simple squamous epithelium. 
E - transitional epithelium. 
F - pseudostratified epithelium. 
G - cuboidal epithelium. 
H - choanocytes 
I - stratified columnar epithelium with cilia. 
--&gt;

&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:400px;'&gt;

[[File:Skinlayers.png]]
&lt;p align='center'&gt;&lt;i&gt;Illustration showing layers of the skin&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Cell enterocyte.png]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing an enterocyte, a small intestine epithelial cell. These cells are bound by tight junctions, depicted by the yellow ovals in the illustration. Note the microvilli which increase the absorptive area about a hundredfold.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;

As physiologists we find it more useful to classify epithelia by function:
*Exchange Epithelia
*Transport Epithelia
*Protective Epithelia
*Ciliated epithelia
*Secretion epithelia
A brief description is given below. More detail is given in the sections dealing with different orga types.
===Exchange Epithelia===
Thin flattened cells that allow the easy exchange of gasses. These are found in he capillaries and the lungs.

===Transport Epithelia===
These epithelia are found lining the the tubes of the intestine and the kidney. 
*The cells are usually columnar and regulate the exchange of  nutrients an ions. 
*The apical surface usually has microvilli, fingerlike projections that can increase the absorptive area up to 100X.
*These cells are usually bound together with tight junctions
*These cells usually have a high metabolism (numerous mitochondria)

===Protective Epithelia===
Prevent exchange between the internal and external environment, examples include:
*skin
*linings of upper respiratory system
*mouth
*oesaphagus
*urethra
*vagina

===Ciliated epithelia===
Line parts of the respiratory system - where they propel mucous laden with particulate matter out of the lung and the fallopian tube - where they waft the ovum to the uterus.

===Secretion epithelia===
Form either '''exocrine''' or '''endocrine''' glands

==Connective Tissue==
Connective tissue can be classified into the following groups:
*Loose Connective Tissue
*Dense Irregular Connective Tissue
*Dense Regular Connective Tissue
*Adipose Tissue
*Blood
*Cartilage
*Bone
Detailed histology is really outside the scope of this book. Physiologists need to know enough to under stand function. Brief descriptions are given below, fuller descriptions will be given in the appropriate sections on systems. A good histology book is recommended for more a detailed description.
===Loose Connective Tissue===
Loose Connective Tissue has a gel like ground substance with more ground substance than fibers or gel. The main cell type are fibroblasts, and it is foundaround blood vessels and organs and under the epithelia. What anatomists call 'loose fasia' is mainly Loose Connective Tissue.
===Dense Irregular Connective Tissue===
Dense Irregular Connective Tissue has more fibers than ground substance. The fiber type is mainly collagen, and the dominant cells are fibroblasts. Dense Irregular Connective Tissue forms the sheaths of nerves and muscles. Anatomists 'organized fascia' is of this type.
===Dense Regular Connective Tissue===
Parallel fibers of collagen. This connective tissue makes up ligaments and tendons
===Adipose Tissue===
Fat cells are found distributed throughout the body. There is very little ground substance
===Blood===
This will be reviewed in detail in the sections on Blood and and immunology 

===Cartilage===
[[File:Hyaline cartilage.jpg|thumb|Hyaline cartilage]]
[[File:Cartilage polarised.jpg|thumb|Cartilage in polarized light]]
&lt;!--[[File:Cartilage.jpg]]--&gt;
There are really two kinds of cartilage:
*Hyaline Cartilage
*Fibro cartilage.
Hyaline Cartilage is found lining the joints and is mainly firm hyaluronic acid. Fibro cartilage is found in the ear, the septum of the nose, and tracheal rings.
A characteristic of  cartilage is that it has no blood supply.
&lt;!--===Liver===
[[File:Portal triad.JPG|thumb|A portal Triad from the liver]]
--&gt;
===Bone===
Bone makes up the skeleton. It consists of two types, cortical and trabecular bone. It will be considered in more detail in its own section.


&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Illu compact spongy bone.jpg]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing compact and Spongy bone.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;

====Cortical or Compact Bone====
[[File:Compact bone - ground cross section.jpg|thumb|Compact bone - ground cross section.]]
[[File:Compact bone - decalcified cross section.jpg|thumb|Compact bone - decalcified cross section.]]
The thumbnails show calcified and decalcified cross sections of bone. Cortical bone occurs in the shafts of long bones. 
====Spongy or Trabecular Bone====
[[File:Spongy bone - trabecules.jpg|thumb|Spongey bone showing trabecules]]
Trabecular bone appears in vertebrae and the metaphyses (ends) of long bones.

==Muscle==
===Skeletal Muscle===
&lt;div align='center' style='align:center;margin:10px;border:black 1px solid;width:600px;'&gt;
[[File:Illu muscle structure.jpg]]
&lt;div align='center'&gt;&lt;i&gt;Illustration showing the general arrangement of Skeletal muscle.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;


[[File:Skeletal muscle - cross section, nerve bundle.jpg|thumb]]
[[File:Skeletal muscle - longitudinal section.jpg|thumb|Longitudinal section through skeletal muscle]]

===Smooth Muscle Cells===
[[File:Illu compact spongy bone.jpg]]
[[File:Glatte Muskelzellen.jpg|thumb|smooth muscle cells]]
===Cardiac Muscle===
==Neural Tissues==
[[File:Peripheral nerve, cross section.jpg|thumb|]]
[[File:Myelinated nerve fibers, Ranvier nodes.jpg|thumb|Myelinated nerve fibers showing nodes of Ranvier]]

{{BookCat}}</text>
      <sha1>efj1pfyxpihxde1ftryoxuwnkhxyv9o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>USB</title>
    <ns>0</ns>
    <id>200776</id>
    <redirect title="Serial Programming/USB" />
    <revision>
      <id>1549627</id>
      <timestamp>2009-06-27T06:19:51Z</timestamp>
      <contributor>
        <username>Caesarion</username>
        <id>92735</id>
      </contributor>
      <minor />
      <comment>Redirected page to [[Serial Programming/USB]]</comment>
      <text xml:space="preserve">#REDIRECT [[Serial Programming/USB]]</text>
      <sha1>buxecjgvy6d9dyjqio9ppztz19rrtll</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:33rogers</title>
    <ns>2</ns>
    <id>200777</id>
    <redirect title="User talk:33rogers" />
    <revision>
      <id>1549641</id>
      <parentid>1549639</parentid>
      <timestamp>2009-06-27T07:22:38Z</timestamp>
      <contributor>
        <username>33rogers</username>
        <id>239975</id>
      </contributor>
      <comment>Redirected page to [[User talk:33rogers]]</comment>
      <text xml:space="preserve">#REDIRECT [[User_talk:33rogers]]</text>
      <sha1>ba5h1vjnqgmodcwv1q5y0dvfp6a3129</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:33rogers</title>
    <ns>3</ns>
    <id>200778</id>
    <revision>
      <id>1826524</id>
      <parentid>1794584</parentid>
      <timestamp>2010-06-06T17:18:53Z</timestamp>
      <contributor>
        <username>PullUpYourSocks</username>
        <id>4060</id>
      </contributor>
      <minor />
      <comment>/* Re: Canadian Criminal Procedure and Practice */</comment>
      <text xml:space="preserve">Welcome, 33rogers!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally.--[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 07:23, 27 June 2009 (UTC)

== Editor, Rollbacker, Patroller ==

Hi 33rogers,

As per your request, I have enabled the editor tools on your account.  I also turned on rollbacker and patroller even though you did not request them.  Thanks for your work here, and congrats on the new buttons! --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 12:41, 10 May 2010 (UTC)

:Thank you. --[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 13:47, 10 May 2010 (UTC)

== About your screenshots ==

As I don't think you will check your commons talk, I am here to ask you if you want to change those screenshot licenses into &lt;nowiki&gt;{{Wikimedia-screenshot}}&lt;/nowiki&gt;. [[User:Kayau|Kayau]] ( [[User talk:Kayau|talk]] &amp;#124; [[Special:Emailuser/Kayau|email]] &amp;#124; [[Special:Contributions/Kayau|contribs]] ) 14:54, 13 May 2010 (UTC)
:done. thanks. --[[User:33rogers|33rogers]] ([[User talk:33rogers|talk]]) 14:57, 13 May 2010 (UTC)

== Canadian Criminal Procedure and Practice ==

It depends. But that's a topic that will be covered under &quot;release and attendance&quot;. I'll get around to starting that sometime soon. The &quot;Detention&quot; section mostly focuses on accused rights while while in custody. [[User:PullUpYourSocks|PullUpYourSocks]] ([[User talk:PullUpYourSocks|talk]])</text>
      <sha1>nqfj99qbhoi517w59l29k6nr460xppt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:33rogers/monobook.css</title>
    <ns>2</ns>
    <id>200779</id>
    <revision>
      <id>1798903</id>
      <parentid>1549651</parentid>
      <timestamp>2010-05-18T17:03:25Z</timestamp>
      <contributor>
        <username>33rogers</username>
        <id>239975</id>
      </contributor>
      <comment>testing implementation - MediaWiki:Geshi.css</comment>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
      <model>css</model>
      <format>text/css</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Black-peppered chicken spaghetti</title>
    <ns>102</ns>
    <id>200780</id>
    <revision>
      <id>2068489</id>
      <parentid>1697571</parentid>
      <timestamp>2011-03-10T17:15:27Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Energy was being displayed as images</comment>
      <text xml:space="preserve">{{Recipesummary|Pasta recipes|5|1 hours|3||350 kcal.}}

{{Recipe}}

==Ingredients==

* 1 pack (800 g) [[Cookbook:Spaghetti|spaghetti]] noodles
* 1 [[Cookbook:Litre|l]] [[Cookbook:Water|water]]
* 5 tbsp. [[Cookbook:Oil|oil]] (2 tbsp. for boiling spaghetti, 3 tbsp. for frying)
* 6 cloves [[Cookbook:Garlic|garlic]], crushed and minced
* 1 green [[Cookbook:Capsicum|capsicum]], cut into 8 pieces
* 1 red [[Cookbook:Capsicum|capsicum]], cut into 8 pieces
* 1 big [[Cookbook:Onion|onion]], minced
* 100 ml [[Cookbook:Cream|cream]]
* 6 pcs [[Cookbook:Chicken|chicken]] fillet, cut 2 cm
* 25 g [[Cookbook:Black Pepper|black pepper]]
* 2 tbsp. [[Cookbook:Salt|salt]]
* 2 tbsp. [[Cookbook:Parsley|parsley]]

==Procedure==

# Heat the water, put the spaghetti and 2 tbsp. oil. After 10 minutes boiled, keep the water. Drain the spaghetti from the big pan.
# Now, boil the chicken. Sprinkle some salt. When it's changes the color, drain the chicken.
# Heat the oil on non-stick pan, fry the garlic, green and red capsicum and big onion.
# Add the chicken, cream, black pepper, salt and parsley. Stir until become mixture.
# Add the spaghetti, stir until all mixed.
# Served hot.

[[Category:Inexpensive recipes]]
[[Category:Chicken recipes]]
[[Category:Pasta recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>hq5y4q2h4oi4aj3m58xw3lrs9thy35q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Syed Kazim</title>
    <ns>2</ns>
    <id>200781</id>
    <revision>
      <id>1549658</id>
      <parentid>1549655</parentid>
      <timestamp>2009-06-27T09:51:07Z</timestamp>
      <contributor>
        <username>Syed Kazim</username>
        <id>247825</id>
      </contributor>
      <comment>Final draft</comment>
      <text xml:space="preserve">Hey!
Thanks for visiting. My main account is on the [http://www.en.wikipedia.com English Wikipedia]. Please click [http://en.wikipedia.org/wiki/User:Syed_Kazim here] to go to my main user page. Apologies for any inconveniences caused.</text>
      <sha1>bdu6wsdyvksbiee8ylrib9p6i3r7rbj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Professional and Technical Writing/Business Communications/E-Mail</title>
    <ns>1</ns>
    <id>200782</id>
    <revision>
      <id>1549661</id>
      <timestamp>2009-06-27T10:52:59Z</timestamp>
      <contributor>
        <ip>59.96.196.198</ip>
      </contributor>
      <comment>Created page with 'Really a nice inforamtion'</comment>
      <text xml:space="preserve">Really a nice inforamtion</text>
      <sha1>k35w1bblxt1d83o27zk85ltxykyhunc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Beef yakiniku pizza</title>
    <ns>102</ns>
    <id>200783</id>
    <revision>
      <id>2069204</id>
      <parentid>1736350</parentid>
      <timestamp>2011-03-13T21:59:52Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Fixed energy</comment>
      <text xml:space="preserve">{{Recipesummary|Pizza recipes|12|1 hour 30 minutes|3||4,8 Mcal.}}

{{Recipe}} | [[Cookbook:Cuisine of Japan|Cuisine of Japan]]

==Ingredients==

===[[Cookbook:Dough|Dough]]===

* 600 g high protein [[Cookbook:Flour|flour]]
* 200 g low protein [[Cookbook:Flour|flour]]
* 15 g [[Cookbook:Yeast|yeast]]
* 3 tbsp. [[Cookbook:Sugar|sugar]]
* 75 ml [[Cookbook:Water|cold water]]
* 3/4 tsp [[Cookbook:Salt|salt]]

===Topping===

&lt;!--REMOVE THE YAKINIKU SAUCE WHEN FINISH MAKE THE TOPPING INTO THE SMALL PLATE AS A CONDIMENT--&gt;

&lt;!--ALL OF THE FILLING INGREDIENTS FRIED TOGETHER--&gt;

* 2 tbsp. [[Cookbook:Oil|vegetable oil]]
* ½ big [[Cookbook:Onion|onion]], chopped
* ½ red [[Cookbook:Capsicum|capsicum]], cut into 10 pieces
* 600 g tenderloin meat, cut 2 * 1 * 1 cm
* 100 ml [[Cookbook:Water|water]]
* 2 tbsp. [[Cookbook:Mirin|mirin]]
* 2 tbsp. light [[Cookbook:Soy sauce|soy sauce]]
* 2 tbsp. oyster sauce
* 2 tbsp. [[Cookbook:Cornflour|cornflour]], dissolved with 20 ml [[Cookbook:Water|water]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Sugar|sugar]]

===Spreading===

* 5 tbsp. [[Cookbook:Tomato Sauce|tomato sauce]]

==Procedures==

* For dough: Mix all the dough ingredients in the bowl, close with wrapping plastic, and quiet until 10 minutes until expanded.
* For the topping: Heat the oil on non-stick pan, fry the big onion and capsicum, stir at 10 seconds. Add the tenderloin and the water. And then add some mirin, light soy sauce and oyster sauce.
* Add the dissolved cornflour, salt and sugar. Stir until mixed.
* Prepare the pizza dough, roll with rolling pin with diameter 10 cm, and then fill with the meat toppings.
* Bake in the oven at the temperature 220 degree Celsius at 20 minutes.
* Serve hot with the dipping sauces.

[[Category:Expensive recipes]]
[[Category:Japanese recipes]]
[[Category:Beef recipes]]
[[Category:Recipes with metric units]]
[[Category:Pizza recipes]]</text>
      <sha1>7myex2026pcpbxssm9dbf983wrhfv0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Hastyo</title>
    <ns>2</ns>
    <id>200785</id>
    <revision>
      <id>2174384</id>
      <parentid>1549687</parentid>
      <timestamp>2011-10-02T23:57:08Z</timestamp>
      <contributor>
        <username>HethrirBot</username>
        <id>475400</id>
      </contributor>
      <minor />
      <comment>Robot: Cosmetic changes</comment>
      <text xml:space="preserve">&lt;font face=&quot;Century Gothic&quot;&gt;
&lt;center&gt;&lt;font size=&quot;8&quot;&gt;W&lt;/font&gt;&lt;font size=&quot;8&quot;&gt;ELCOME!&lt;/font&gt; 




&lt;font face=&quot;Century Gothic&quot;&gt;
&lt;center&gt;&lt;font size=&quot;4&quot;&gt;'''My name is Hastyo. Now I am using all Wikimedia projects. I am very loving all Wikimedia administrator! Because the appereance are handsome and preety, not so bad. I think you are healthy now. Thanks. --[[User:Hastyo|Hastyo]] ([[User talk:Hastyo|talk]]) 13:22, 27 June 2009 (UTC)'''&lt;/font&gt;</text>
      <sha1>ghx8hi1ldwztfyfx2kreh1s5eazgju1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mesquite Beef Tenderloin</title>
    <ns>102</ns>
    <id>200786</id>
    <revision>
      <id>1749676</id>
      <parentid>1549688</parentid>
      <timestamp>2010-04-02T20:06:41Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 center cut [[Cookbook:Beef|beef]] tenderloin roast
* 3/4 cup soaked mesquite wood chips
* Cognac, as needed

===Rub===
* 3 tbsp [[Cookbook:Paprika|paprika]]
* 1 tbsp coarsely ground coriander (seeds, not herb)
* 1 1/2 tsp salt
* 1 1/2 tsp coarsely ground black pepper
* 1 1/2 tsp dried rosemary
* 2 tsp dehydrated lemon peel

== Procedure ==
#Place beef in a large zip-top plastic bag. Add cognac to cover and refrigerate for at least 30 minutes.
#Place mesquite chips in the hot coal area of a charcoal grill.
#Combine Rub ingredients and rub all over beef. Bring to room temperature.
#Place beef in center of grill, cover, and cook, turning often until internal temperature reaches 135° for medium rare, 150° for medium, 160° for toast.
#Remove and let rest for 10 minutes and serve.

[[Category:Beef recipes]]
[[Category:Spice Mix recipes]]</text>
      <sha1>m8d6c8r4m6xmo3k8nv684p55jazcth1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chipotle Fried Chicken</title>
    <ns>102</ns>
    <id>200787</id>
    <revision>
      <id>1704076</id>
      <parentid>1563804</parentid>
      <timestamp>2010-01-23T17:53:36Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Featured recipe candidate]]

== Ingredients ==
* 2 '''''each''''' skinless chicken thighs, legs, and boneless skinless chicken breasts
* 1/2 cup adobo sauce
* 16 ounces vegetable shortening
* 1/4 cup freshly squeezed lime juice
* Cornmeal as needed

'''Seasoning'''
* 3 tbsp chipotle powder
* 2 tsp cayenne pepper
* 1 tbsp garlic powder
* 2 tbsp smoked paprika
* 2 tbsp salt
* 1 tbsp black pepper

== Procedure ==
#Combine adobo sauce and lime juice and pour over chicken. Refrigerate overnight.
#Remove chicken from adobo mixture. Combine Seasoning ingredients and sprinkle over chicken.
#Dredge chicken in cornmeal. Let rest for 2-3 minutes.
#Meanwhile, heat shortening in a large cast iron skillet to 350°. Place breasts and legs around the edges, then place thighs in the center.
#Cook for 12 minutes per side. Drain on a cooling rack and serve.

[[Category:Chicken recipes]]
[[Category:Spice Mix recipes]]</text>
      <sha1>f8y7vors6eiml2mm9ejdcwylamoo3ob</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fry Seasoning for Chicken</title>
    <ns>102</ns>
    <id>200788</id>
    <revision>
      <id>1728273</id>
      <parentid>1728272</parentid>
      <timestamp>2010-02-28T23:19:04Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1/2 cup smoked paprika
* 1/4 cup salt
* 1/4 cup granulated garlic
* 6 tbsp lemon pepper
* 3 tbsp cayenne pepper
* 2 tbsp red pepper flake
* 2 tbsp Old Bay
* 2 tbsp Worcestershire sauce powder (you can find this easily on the Internet)

== Procedure ==
#Combine all ingredients in an airtight container with a shaker lid.

[[Category:Spice Mix recipes]]</text>
      <sha1>e3a3hf658cm4gq63exdk7hdxylkte48</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Poultry Shake</title>
    <ns>102</ns>
    <id>200789</id>
    <revision>
      <id>1776459</id>
      <parentid>1549695</parentid>
      <timestamp>2010-04-26T16:05:14Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

Everyone serious about frying chicken ought to have one of these.

== Ingredients ==
*1/2 cup paprika
*1/2 cup salt
*1/3 cup garlic powder
*1/4 cup cayenne pepper
*1/3 cup lemon pepper

== Procedure ==
#Combine all ingredients in an airtight container with a shaker lid.

[[Category:Spice Mix recipes]]</text>
      <sha1>sjwgsdru3hnyptzu9tu7rw8x5yweh67</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Garlic Pork Roast</title>
    <ns>102</ns>
    <id>200790</id>
    <revision>
      <id>1796475</id>
      <parentid>1549699</parentid>
      <timestamp>2010-05-15T23:02:33Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 boneless pork loin roast
* 1/4 cup [[Cookbook:Chop Rub|chop rub]]
* Cider vinegar, as needed
* 1 sprig rosemary
* 5 cloves garlic
* Non-stick cooking spray

== Procedure ==
#Generously brush pork with cider vinegar. Apply Rub, pressing slightly to aid adhesion. Spray with non-stick cooking spray. Refrigerate at least 1 hour.
#Place rosemary in the bottom of a roasting pan and place garlic in a circle around it. Place pork on top.
#Insert an oven-safe probe thermometer into the center and bake at 375° until internal temperature reaches 140°.
#Remove and let rest for 10 minutes. Serve.

[[Category:Pork recipes]]</text>
      <sha1>17e9qivow4t9p5dnl427hj4m8ejbpbd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Rosemary Garlic Oil</title>
    <ns>102</ns>
    <id>200791</id>
    <revision>
      <id>1785583</id>
      <parentid>1549710</parentid>
      <timestamp>2010-05-02T22:34:53Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

I am surprised how much people will pay for infused oils when you can make them easily in your own house.

== Ingredients ==
* 1/2 gallon any flavorless high-smoke point oil, such as canola, grapeseed, peanut, or safflower.
* 6 sprigs rosemary
* 20 cloves garlic
* 1/2 tsp salt

== Procedure ==
#Heat the oil in your tallest largest pot over low heat. Add remaining ingredients and cook for 1 hour.
#Strain and keep in an airtight container. You may want to keep this in the refrigerator.

[[Category:Fats and oils]]</text>
      <sha1>rkzfwtx0cyuc95om4ez8qlji2rp2mbw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hot Wing Dip</title>
    <ns>102</ns>
    <id>200793</id>
    <revision>
      <id>1735963</id>
      <parentid>1735962</parentid>
      <timestamp>2010-03-14T17:23:53Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 1 cup crumbled blue cheese
* 1/2 cup sour cream 
* 1/2 tbsp minced garlic
* 2 tbsp cayenne pepper
* 1 tbsp salt
* 1 recipe [[Cookbook:Hot Wings|Hot Wings]] or [[Cookbook:Buffalo Wings|Buffalo Wings]]
* Celery sticks

== Procedure ==
#Combine cheese, cayenne, sour cream, garlic, and salt in a serving bowl.
#Serve with celery and hot wings/Buffalo Wings.

[[Category:Sauce recipes]]</text>
      <sha1>blu2zsok3q9y6olae1rdne3z8e3b1u4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Adventist Youth Honors Answer Book/Edible Wild Plants/Cranberry</title>
    <ns>0</ns>
    <id>200795</id>
    <revision>
      <id>1734817</id>
      <parentid>1734816</parentid>
      <timestamp>2010-03-12T22:34:09Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>add image</comment>
      <text xml:space="preserve">{{EWP
|name=Cranberry
|image=Mirtillo Rosso Cranberry.jpg
|description=
Cranberries are creeping shrubs or vines that grow up to 2 meters long and from 5 to 20 cm. tall. They have slender stems, and small evergreen leaves. They have dark pink flowers with petals that leave the style and stamens exposed and pointing forward. Their fruit is a berry that is larger than the leaves of the plant. It is white when unripe, but is a deep red when it is fully ripe. Cranberries have a very acidic taste.
|range=Northeastern US, northern Europe and Asia, and southeastern Canada.
|season=Late September to early October.
|use=Cranberries are usually made into '''compotes''' or '''jellies''', but are also baked into '''muffins''', '''scones''', or '''cakes''', or other baked goods. They are considered too sour for eating unaccompanied.
}}

{{BookCat}}
&lt;noinclude&gt;[[Category:Adventist Youth Honors Answer Book/Transcluded Modules|{{SUBPAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>b6uubedz9mqsx8cq1zv2uae7b95k7ed</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Introduction</title>
    <ns>0</ns>
    <id>200797</id>
    <revision>
      <id>2203685</id>
      <parentid>2203682</parentid>
      <timestamp>2011-10-30T15:46:58Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/175.110.178.235|175.110.178.235]]) and restored revision 1550567 by Suruena</comment>
      <text xml:space="preserve">{{Chapter navigation||Source Code Presentation}}

{{TOC|limit=3|float=none}}

== Introduction ==

Style is an often overlooked but very critical attribute of writing. The style of writing directly impacts the readability and understandability of the end product. The style of programming, as the writing of source code in a computer language, also suffers from this neglect. Programs need to be readable and understandable by humans, not just comparable by machines. This requirement is important in the creation of quality products that not only meet user needs but also can be developed on schedule and within estimated cost. This book is intended to help the computer professional produce better Ada programs. It presents a set of specific stylistic guidelines for using the powerful features of Ada 95 (Ada Reference Manual 1995) in a disciplined manner. 

Each guideline consists of a concise statement of the principles that should be followed and a rationale for following the guideline. In most cases, an example of the use of the guideline is provided, and, in some cases, a further example is included to show the consequences of violating the guideline. Possible exceptions to the application of the guideline are explicitly noted, and further explanatory notes are provided, where appropriate. In some cases, an instantiation is provided to show more specific guidance that could be enforced as a standard. In selected cases, automation notes discuss how one could automate enforcement of the guideline. 

Ada was designed to support the development of high-quality, reliable, reusable, and portable software. For a number of reasons, no programming language can ensure the achievement of these desirable objectives on its own. For example, programming must be embedded in a disciplined development process that addresses requirements analysis, design, implementation, verification, validation, and maintenance in an organized way. The use of the language must conform to good programming practices based on well-established software engineering principles. This book is intended to help bridge the gap between these principles and the actual practice of programming in Ada. 

Many of the guidelines in this book are designed to promote clear source text. The goal of these guidelines is to improve the ease of program evolution, adaptation, and maintenance. Understandable source text is more likely to be correct and reliable. Easy adaptation requires a thorough understanding of the software; this is considerably facilitated by clarity. Effective code adaptation is a prerequisite to code reuse, a technique that has the potential for drastic reductions in system development cost. Finally, because maintenance (really evolution) is a costly process that continues throughout the life of a system, clarity plays a major role in keeping maintenance costs down. Over the entire life cycle, code has to be read and understood far more often than it is written; thus, the investment in writing readable, understandable code is worthwhile. 

The remaining sections of this introduction discuss the organization of this book and how the material presented can be used by people in different roles, including new Ada programmers, experienced Ada programmers, object-oriented programmers, software project managers, contracting agencies, standards setting organizations, and planners of the transition to Ada 95 from existing Ada 83 (Ada Reference Manual 1983) programs. 

== Organization of this Book ==

The format of this book follows the well-received guideline format of the Ada Quality and Style: Guidelines for Professional Programmer's, version 02.01.01 (AQ&amp;S 83) (Software Productivity Consortium 1992). The style guide is divided into sections that map to the major decisions that each programmer must make when creating high-quality, reliable, reusable, and portable Ada software. Some overlap exists in the sections because not all programming decisions can be made independently. 

Individual chapters address source code presentation, readability, program structure, programming practices, concurrency, portability, reusability, and performance, and a new chapter addresses object-oriented features. Each chapter ends with a summary of the guidelines it contains. The last chapter shows a complete implementation of the Dining Philosophers example, provided by Dr. Michael B. Feldman and Mr. Bjorn Kallberg. Many of the guidelines in this book were used to create this example. An appendix provides a cross-reference matrix between the Ada Reference Manual (1995) sections and the guidelines in this style guide. 

This book is written using the general software engineering vocabulary developed over the last 20 years. Software engineering is a rapidly evolving discipline with relatively new concepts and terminology. However, to establish a common frame of reference, needed definitions are extracted from the Ada Reference Manual (1995) and Rationale (1995). 

Throughout the book, references are made to other sources of information about Ada style and other Ada issues. The references are listed at the end of the book. A bibliography is also provided. 

In this book, the term &quot;Ada&quot; refers to the latest Ada standard, released in February 1995 (sometimes also known as Ada 95). References to the earlier Ada standard are clearly denoted as &quot;Ada 83.&quot; 

=== Source Code Presentation and Readability ===

Chapters 2 and 3 directly address the issues of creating clear, readable, and understandable source text. Chapter 2 focuses on code formatting, and Chapter 3 addresses issues of use of comments, naming conventions, and types. 

There are two main aspects of code clarity: (1) careful and consistent layout of the source text on the page or the screen, covered by Chapter 2, that can enhance readability dramatically; (2) careful attention to the structure of code, covered by Chapter 3, that can make the code easier to understand. This is true both on the small scale (e.g., by careful choice of identifier names or by disciplined use of loops) and on the large scale (e.g., by proper use of packages). These guidelines treat both layout and structure. 

Code formatting and naming convention preferences tend to be very personal. You must balance your personal likes and dislikes with those of other engineers on the project so that you can agree to a consistent set of conventions that the whole project team will follow. Automatic code formatters can help in enforcing this kind of consistency. 

=== Program Structure ===

Chapter 4 addresses overall program structure. Proper structure improves program clarity. This is analogous to readability on lower levels and includes issues of high-level structure, in particular the use of packages and child packages, visibility, and exceptions. The majority of the guidelines in this chapter are concerned with the application of sound software engineering principles, such as information hiding, abstraction, encapsulation, and separation of concerns. 

=== Programming Practices ===

Chapter 5 presents guidelines that define consistent and logical language feature usage. These guidelines address optional parts of the syntax, types, data structures, expressions, statements, visibility, exceptions, and erroneous execution. 

=== Concurrency ===

Chapter 6 defines the correct use of concurrency to develop predictable, reliable, reusable, and portable software. The topics include tasking, protected units, communication, and termination. One major area of enhancement of the Ada language has been better support for shared data. The task mechanism had been the only available approach to protecting shared data. The guidelines in this chapter support the use of protected types to encapsulate and synchronize access to shared data. 

=== Portability and Reusability ===

Chapters 7 and 8 address issues of designing for change from slightly different perspectives. Chapter 7 addresses the fundamentals of portability, the ease of changing software from one computer system or environment to another, and the impact of specific feature usage on portability. Chapter 8 addresses code reusability, the extent to which code can be used in different applications with minimal change. 

The portability guidelines discussed in Chapter 7 need careful attention. Adherence to them is important even if the need to port the resulting software is not currently foreseen. Following the guidelines improves the potential reusability of the resulting code in projects that use different Ada implementations. You should insist that when particular project needs force the relaxation of some of the portability guidelines, nonportable features of the source text are prominently indicated. 

The reusability guidelines given in Chapter 8 are based on the principles of encapsulation and design for change. These guidelines stress that understanding and clarity, robustness, adaptability, and independence are useful and desirable, even when reuse is not expected, because the resulting code is more resistant to both planned and unplanned change. 

=== Object-Oriented Features ===

Chapter 9 defines a set of guidelines in common objected-oriented terms that exploit some of the features of Ada 95 that are not in Ada 83. The guidelines discuss the use of the new Ada features of type extension (tagged types), abstract tagged types, and abstract subprograms to implement single inheritance, multiple inheritance, and polymorphism. 

=== Performance ===

Chapter 10 defines a set of guidelines intended to enhance performance. It is recognized that some approaches to performance are at odds with maintainability and portability. Most of the guidelines in this chapter read &quot;. . . when measured performance indicates.&quot; &quot;Indicates&quot; means that you have determined that the benefit in increased performance to your application in your environment outweighs the negative side effects on understandability, maintainability, and portability of the resulting code. 

== How To Use This Book ==

This book is intended for those involved in the actual development of software systems written in Ada. The following sections discuss how to make the most effective use of the material presented. Readers with different levels of Ada experience or different roles in a software project will need to use the book in different ways. 

There are a number of ways in which this book can be used: as a guide to good Ada style; as a comprehensive list of guidelines that will contribute to better Ada programs; or as a reference work to consult for usage examples of and design-tradeoff discussion on specific features of the language. The book contains many guidelines, some of which are quite complex. Learning them all at the same time should not be necessary; it is unlikely that you will be using all the features of the language at once. However, it is recommended that all programmers (and, where possible, other Ada project staff) make an effort to read and understand Chapters 2, 3, 4, and Chapter 5 up to Section 5.7. Some of the material is quite difficult (e.g., Section 4.2, which discusses visibility), but it covers issues that are fundamental to the effective use of Ada and is important for any software professional involved in building Ada systems. 

This book is not intended as an introductory text on Ada or as a complete manual of the Ada language. It is assumed that you already know the syntax of Ada and have a rudimentary understanding of the semantics. With such a background, you should find the guidelines useful, informative, and often enlightening. 

If you are learning Ada, you should equip yourself with a comprehensive introduction to the language. Two good introductory texts on Ada 83 are Barnes (1989) and Cohen (1986). Both authors have published new books that cover Ada 95 (Barnes 1996, Cohen 1996). Once you become familiar with these texts, you are encouraged to use them in conjunction with Rationale (1995). The Ada Reference Manual (1995) should be regarded as a companion to these books. The majority of guidelines reference the sections of the Ada Reference Manual (1995) that define the language features being discussed. Appendix A cross references sections of the Ada Language Reference Manual to the guidelines. 

=== To The New Ada Programmer ===

At first sight, Ada offers a bewildering variety of features. It is a powerful tool intended to solve difficult problems, and almost every feature has a legitimate application in some context. This makes it especially important to use Ada's features in a disciplined and organized way. Following the guidelines can make learning Ada easier and help you to master its apparent complexity. From the beginning, you can write programs that exploit the best features of the language in the way that the designers intended. 

Programmers experienced in using other programming languages are often tempted to use Ada as if it were their familiar language but with irritating syntactic differences. This pitfall should be avoided at all costs; it can lead to convoluted code that subverts exactly those aspects of Ada that make it so suitable for building high-quality systems. You must learn to &quot;think Ada.&quot; Following the guidelines in this book and reading the examples of their use will help you to do this as quickly and painlessly as possible. 

To some degree, novice programmers learning Ada have an advantage. Following the guidelines from the beginning helps in developing a clear programming style that effectively exploits the language. If you are in this category, it is recommended that you adopt the guidelines for those exercises you perform as part of learning Ada. Initially, developing sound programming habits by concentrating on the guidelines themselves and their supporting examples is more important than understanding the rationale for each guideline. 

The rationale for many of the guidelines helps experienced programmers understand and accept the suggestions presented in the guideline. Some of the guidelines themselves are also written for the experienced programmer who must make engineering tradeoffs. This is especially true in the areas of portability, reusability, and performance. These more difficult guidelines and rationale will make you aware of the issues affecting each programming decision. You can then use that awareness to recognize the engineering tradeoffs that you will eventually be asked to make when you are the experienced Ada programmer. 

=== To The Experienced Ada Programmer ===

As an experienced Ada programmer, you are already writing code that conforms to many of the guidelines in this book. In some areas, however, you may have adopted a personal programming style that differs from that presented here, and you might be reluctant to change. Carefully review those guidelines that are inconsistent with your current style, make sure that you understand their rationale, and consider adopting them. The overall set of guidelines in this book embodies a consistent approach to producing high-quality programs that would be weakened by too many exceptions. 

Consistency is another important reason for general adoption of common guidelines. If all the staff of a project write source text in the same style, many critical project activities are easier. Consistent code simplifies formal and informal code reviews, system integration, code reuse within a project, and the provision and application of supporting tools. In practice, corporate or project standards may require deviations from the guidelines to be explicitly commented, so adopting a nonstandard approach may require extra work. 

Some of the guidelines in this book, particularly in the chapters on concurrency, portability, reusability, object-oriented features, and performance, focus on design tradeoffs. These guidelines ask you to consider whether using an Ada feature is an appropriate design decision for your application. There are often several ways to implement a particular design decision, and these guidelines discuss the tradeoffs you should consider in making your decision. 

=== To Experienced Object-Oriented Programmers ===

As an experienced object-oriented programmer, you will appreciate the effort that has gone into elegantly extending the Ada language to include powerful object-oriented features. These new features are integrated tightly with the existing language features and vocabulary. This book is intentionally written to provide a view from the perspective of style; therefore, Ada object-oriented features are used throughout the book. Disciplined use of these features will promote programs that are easier to read and modify. These features also give you flexibility in building reusable components. Chapter 9 addresses object-oriented programming and the issues of inheritance and polymorphism. Earlier chapters cross reference the Chapter 9 guidelines. 

You will find it easier to take advantage of many of the concepts in Chapter 9 if you have done an object-oriented design. The results of an object-oriented design would include a set of meaningful abstractions and hierarchy of classes. The abstractions need to include the definition of the design objects, including structure and state, the operations on the objects, and the intended encapsulation for each object. The details on designing these abstractions and the hierarchy of classes are beyond the scope of this book. A number of good sources exist for this detail, including Rumbaugh et al. (1991), Jacobson et al. (1992), the ADARTS Guidebook (Software Productivity Consortium 1993), and Booch (1994). 

=== To The Software Project Manager ===

Technical management plays a key role in ensuring that the software produced in the course of a project is correct, reliable, maintainable, and portable. Management must create a project-wide commitment to the production of high-quality code; define project-specific coding standards and guidelines; foster an understanding of why uniform adherence to the chosen coding standards is critical to product quality; and establish policies and procedures to check and enforce that adherence. The guidelines contained in this book can aid such an effort. 

An important activity for managers is the definition of coding standards for a project or organization. These guidelines do not, in themselves, constitute a complete set of standards; however, they can serve as a basis for standards. Several guidelines indicate a range of decisions, but they do not prescribe a particular decision. For example, the second guideline in the book (Guideline 2.1.2) advocates using a consistent number of spaces for indentation and indicates in the rationale that two to four spaces would be reasonable. With your senior technical staff, you should review each such guideline and arrive at a decision about its instantiation that will constitute your project or organizational standard. 

Two other areas require managerial decisions about standardization. Guideline 3.1.4 advises you to avoid arbitrary abbreviations in object or unit names. You should prepare a glossary of acceptable abbreviations for a project that allows the use of shorter versions of application-specific terms (e.g., FFT for Fast Fourier Transform or SPN for Stochastic Petri Net). You should keep this glossary short and restrict it to terms that need to be used frequently as part of names. Having to refer continually to an extensive glossary to understand source text makes it hard to read. 

The portability guidelines given in Chapter 7 need careful attention. Adherence to them is important even if the need to port the resulting software is not currently foreseen. Following the guidelines improves the potential reusability of the resulting code in projects that use different Ada implementations. You should insist that when particular project needs force the relaxation of some of the portability guidelines, nonportable features of the source text are prominently indicated. Observing the Chapter 7 guidelines requires definition and standardization of project- or organization-specific numeric types to be used in place of the (potentially nonportable) predefined numeric types. 

Your decisions on standardization issues should be incorporated in a project or organization coding standards document. With coding standards in place, you need to ensure adherence to them. Gaining the wholehearted commitment of your programming staff to use the standards is critical. Given this commitment and the example of high-quality Ada being produced by your programmers, it will be far easier to conduct effective formal code reviews that check compliance to project standards. 

Some general issues concerning the management of Ada projects are discussed by Hefley, et al. (1992). 

=== To Contracting Agencies And Standards Organizations ===

Many of the guidelines presented here are specific enough to be adopted as corporate or project programming standards. Others require a managerial decision on a particular instantiation before they can be used as standards. In such cases, a sample instantiation is presented and used throughout the examples. Such instantiations should be recognized as weaker recommendations than the guidelines themselves. In some cases, where the examples are extracted from a published work, the author's style is used unchanged. 

Other guidelines presented in this book are intentionally phrased in terms of design choices to consider. These guidelines cannot be instantiated as hard-and-fast rules that a project must follow. For example, you should not interpret Guidelines 6.1.1 and 6.1.2 to mean that a project is forbidden to use tasks. Rather, these guidelines are intended to help the designer make the tradeoffs between using protected objects and tasks, thus leading the designer to make a more informed choice between these features. 

The guidelines in this document are not intended to stand alone as a standard. In some cases, it is not clear that a guideline could be enforced because it is only intended to make the engineer aware of tradeoffs. In other cases, a choice still remains about a guideline, such as how many spaces to use for each level of indentation. 

When a guideline is too general to show an example, the &quot;instantiation&quot; section of each guideline contains more specific guidelines. These instantiations can be considered a standard and are more likely to be enforceable. Any organization that attempts to extract standards from this document needs to evaluate the complete context. Each guideline works best when related guidelines are practiced. In isolation, a guideline may have little or no benefit. 

=== To Ada 83 To Ada 95 Transition Planners ===

Transitioning issues fall into two major categories: the incompatibilities between the languages, in particular, upward compatibility, and exploitation of new language features. 

Upward compatibility of Ada 95 was a major design goal of the language. The small number of incompatibilities between Ada 83 and Ada 95 that are likely to occur in practice are easily overcome (see Ada 95 Rationale [1995] Appendix X entitled Upward Compatibility). Detailed information on compatibility issues can be found in Taylor (1995) and Intermetrics (1995). 

The transition planner can gain insight from this book into the exploitation of language features in two ways. First, Table 1 shows the impact of new Ada 95 language features on style guide chapters. Second, Appendix A maps Ada Reference Manual (1995) sections to specific style guidelines. 

== Typographic Conventions ==

This style guide uses the following typographic conventions: 

* Serif font  General presentation of information. 
* ''Italicized serif font''  Publication titles and emphasis. 
* '''Boldfaced serif font'''  Section headings. 
* '''Boldfaced sans serif font'''  Subheadings for guideline, instantiation, example, rationale, notes, exceptions, automation notes, caution, and subheadings in Summary sections. 
*&lt;tt&gt;Typewriter font&lt;/tt&gt;:
 Syntax of code.


{{Chapter navigation||Source Code Presentation}}
[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>jdtorrcmnb9gxkud3fwkcsogr8i7ad2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Source Code Presentation</title>
    <ns>0</ns>
    <id>200798</id>
    <revision>
      <id>2307255</id>
      <parentid>2307252</parentid>
      <timestamp>2012-04-16T06:40:06Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <comment>/* More on Alignment */ Fix spacing &amp; alignment in examples</comment>
      <text xml:space="preserve">{{Chapter navigation|Introduction|Readability}}

{{TOC|limit=3|float=none}}

== Introduction ==

The physical layout of source text on the page or screen has a strong effect on its readability. This chapter contains source code presentation guidelines intended to make the code more readable. 

In addition to the general purpose guidelines, specific recommendations are made in the &quot;instantiation&quot; sections. If you disagree with the specific recommendations, you may want to adopt your own set of conventions that still follow the general purpose guidelines. Above all, be consistent across your entire project. 

An entirely consistent layout is hard to achieve or check manually. Therefore, you may prefer to automate layout with a tool for parameterized code formatting or incorporate the guidelines into an automatic coding template. Some of the guidelines and specific recommendations presented in this chapter cannot be enforced by a formatting tool because they are based on the semantics, not the syntax, of the Ada code. More details are given in the &quot;automation notes&quot; sections. 

== Code Formatting ==

The &quot;code formatting&quot; of Ada source code affects how the code looks, not what the code does. Topics included here are horizontal spacing, indentation, alignment, pagination, and line length. The most important guideline is to be consistent throughout the compilation unit as well as the project. 

=== Horizontal Spacing ===

==== guideline ====

* Use consistent spacing around delimiters. 
* Use the same spacing as you would in regular prose. 

==== instantiation ====

Specifically, leave at least one blank space in the following places, as shown in the examples throughout this book. More spaces may be required for the vertical alignment recommended in subsequent guidelines. 

* Before and after the following delimiters and binary operators: 

&lt;source lang=text&gt;
  + - * / &amp;
  &lt; = &gt; /= &lt;= &gt;=
  := =&gt; | ..
  :
  &lt;&gt; 
&lt;/source&gt;

* Outside of the quotes for string (&quot;) and character (' ) literals, except where prohibited.
* Outside, but not inside, parentheses.
* After commas (,) and semicolons (;).

Do not leave any blank spaces in the following places, even if this conflicts with the above recommendations.
* After the plus (+) and minus (-) signs when used as unary operators.
* After a function call.
* Inside of label delimiters (&lt;&lt; &gt;&gt;).
* Before and after the exponentiation operator (**), apostrophe ('), and period (.)
* Between multiple consecutive opening or closing parentheses.
* Before commas (,) and semicolons (;). 
When superfluous parentheses are omitted because of operator precedence rules, spaces may optionally be removed around the highest precedence operators in that expression. 

==== example ====

&lt;source lang=ada&gt;
Default_String : constant String :=
      &quot;This is the long string returned by&quot; &amp;
      &quot; default. It is broken into multiple&quot; &amp;
      &quot; Ada source lines for convenience.&quot;;

type Signed_Whole_16 is range -2**15 .. 2**15 - 1;
type Address_Area  is array (Natural range &lt;&gt;) of Signed_Whole_16;

Register : Address_Area (16#7FF0# .. 16#7FFF#);
Memory   : Address_Area (       0 .. 16#7FEC#);

Register (Pc) := Register (A);

X := Signed_Whole_16 (Radius * Sin(Angle) );

Register (Index) := Memory (Base_Address + Index * Element_Length);

Get (Value =&gt; Sensor);

Error_Term := 1.0 - (Cos(Theta)**2 + Sin(Theta)**2);

Z      := X**3;
Y      := C * X + B;
Volume := Length * Width * Height;
&lt;/source&gt;

==== rationale ====

It is a good idea to use white space around delimiters and operators because they are typically short sequences (one or two characters) that can easily get lost among the longer keywords and identifiers. Putting white space around them makes them stand out. Consistency in spacing also helps make the source code easier to scan visually. 

However, many of the delimiters (commas, semicolons, parentheses, etc.) are familiar as normal punctuation marks. It is distracting to see them spaced differently in a computer program than in normal text. Therefore, use the same spacing as in text (no spaces before commas and semicolons, no spaces inside parentheses, etc.). 

==== exceptions ====

The one notable exception is the colon (:). In Ada, it is useful to use the colon as a tabulator or a column separator (see Guideline 2.1.4). In this context, it makes sense to put spaces before and after the colon rather than only after it as in normal text. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

=== Indentation ===

==== guideline ====

* Indent and align nested control structures, continuation lines, and embedded units consistently. 
* Distinguish between indentation for nested control structures and for continuation lines.
* Use spaces for indentation, not the tab character (Nissen and Wallis 1984, §2.2).

==== instantiation ====
Specifically, the following indentation conventions are recommended, as shown in the examples throughout this book. Note that the minimum indentation is described. More spaces may be required for the vertical alignment recommended in subsequent guidelines. 

* Use the recommended paragraphing shown in the Ada Reference Manual (1995).
* Use three spaces as the basic unit of indentation for nesting.
* Use two spaces as the basic unit of indentation for continuation lines. 

A label is outdented three spaces: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
begin
&lt;&lt;label&gt;&gt;
   &lt;statement&gt;
end;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;long statement with line break&gt;
  &lt;trailing part of same statement&gt;
&lt;/source&gt;

|}

The if statement and the plain loop: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
if &lt;condition&gt; then
    &lt;statements&gt;
elsif &lt;condition&gt; then
   &lt;statements&gt;
else
   &lt;statements&gt;
end if;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;name&gt;:
loop
   &lt;statements&gt;
   exit when &lt;condition&gt;;
   &lt;statements&gt;
end loop &lt;name&gt;;
&lt;/source&gt;

|}

Loops with the for and while iteration schemes: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
&lt;name&gt;:
   for &lt;scheme&gt; loop
      &lt;statements&gt;
   end loop &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
&lt;name&gt;:
   while &lt;condition&gt; loop
      &lt;statements&gt;
   end loop &lt;name&gt;;
&lt;/source&gt;

|}

The block and the case statement as recommended in the Ada Reference Manual (1995): 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
&lt;name&gt;:
   declare
      &lt;declarations&gt;
   begin
      &lt;statements&gt;
   exception
      when &lt;choice&gt; =&gt;
         &lt;statements&gt;
      when others =&gt;
         &lt;statements&gt;
   end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
   when others =&gt;
      &lt;statements&gt;
end case;  --&lt;comment&gt;
&lt;/source&gt;

|}

These case statements save space over the Ada Reference Manual (1995) recommendation and depend on very short statement lists, respectively. Whichever you choose, be consistent: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
when &lt;choice&gt; =&gt;
     &lt;statements&gt;
when &lt;choice&gt; =&gt;
     &lt;statements&gt;
when others =&gt;
     &lt;statements&gt;
end case;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
case &lt;expression&gt; is
   when &lt;choice&gt; =&gt; &lt;statements&gt;
                    &lt;statements&gt;
   when &lt;choice&gt; =&gt; &lt;statements&gt;
   when others   =&gt; &lt;statements&gt;
end case;
&lt;/source&gt;

|}

The various forms of selective accept and the timed and conditional entry calls: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
select
   when &lt;guard&gt; =&gt;
      &lt;accept statement&gt;
      &lt;statements&gt;
or
   &lt;accept statement&gt;
   &lt;statements&gt;
or
   when &lt;guard&gt; =&gt;
      delay &lt;interval&gt;;
      &lt;statements&gt;
or
   when &lt;guard&gt; =&gt;
      terminate;
else
   &lt;statements&gt;
end select;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
select
   &lt;entry call&gt;;
   &lt;statements&gt;
or
   delay &lt;interval&gt;;
   &lt;statements&gt;
end select;

select
   &lt;entry call&gt;;
   &lt;statements&gt;
else
   &lt;statements&gt;
end select;

select
   &lt;triggering alternative&gt;
then abort
   &lt;abortable part&gt;
end select;
&lt;/source&gt;

|}

The accept statement: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
accept &lt;specification&gt; do
   &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
separate (&lt;parent unit&gt;)
&lt;proper body&gt;
&lt;/source&gt;

|}

A subunit: 
&lt;source lang=ada&gt;
separate (&lt;parent unit&gt;)
&lt;proper body&gt;
end &lt;name&gt;;
&lt;/source&gt;

Proper bodies of program units:

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
procedure &lt;specification&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
end &lt;name&gt;;

function &lt;specification&gt;
  return &lt;type name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt; =&gt;
      &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
package body &lt;name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt;=&gt;
      &lt;statements&gt;
end &lt;name&gt;;

task body &lt;name&gt; is
   &lt;declarations&gt;
begin
   &lt;statements&gt;
exception
   when &lt;choice&gt;=&gt;
      &lt;statements&gt;
end &lt;name&gt;;
&lt;/source&gt;

|}

Context clauses on compilation units are arranged as a table. Generic formal parameters do not obscure the unit itself. Function, package, and task specifications use standard indentation: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
with &lt;name&gt;; use &lt;name&gt;;
with &lt;name&gt;;
with &lt;name&gt;;



&lt;compilation unit&gt;


generic
   &lt;formal parameters&gt;
&lt;compilation unit&gt;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
function &lt;specification&gt;
  return &lt;type&gt;;

package &lt;name&gt; is
   &lt;declarations&gt;
private
   &lt;declarations&gt;
end &lt;name&gt;;

task type &lt;name&gt; is
   &lt;entry declarations&gt;
end &lt;name&gt;;
&lt;/source&gt;

|
|}

Instantiations of generic units and record indentation: 

{| style=&quot;width:100%&quot;
|- style=&quot;vertical-align:top&quot;
|style=&quot;width:50%&quot;|

&lt;source lang=ada&gt;
procedure &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;

function &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;

package &lt;name&gt; is
   new &lt;generic name&gt; &lt;actuals&gt;
&lt;/source&gt;

|

&lt;source lang=ada&gt;
type ... is
   record
      &lt;component list&gt;
      case &lt;discriminant name&gt; is
         when &lt;choice&gt; =&gt;
            &lt;component list&gt;
         when &lt;choice&gt; =&gt;
            &lt;component list&gt;
      end case;
   end record;
&lt;/source&gt;
|}

Indentation for record alignment: 
&lt;source lang=ada&gt;
for &lt;name&gt; use
   record &lt;mod clause&gt;
      &lt;component clause&gt;
   end record;
&lt;/source&gt;

Tagged types and type extension: 
&lt;source lang=ada&gt;
type ... is tagged
   record
      &lt;component list&gt;
   end record;

type ... is new ... with
   record
      &lt;component list&gt;
   end record;
&lt;/source&gt;

==== example ====
&lt;source lang=ada&gt;
Default_String : constant String :=
      &quot;This is the long string returned by&quot; &amp;
      &quot; default.  It is broken into multiple&quot; &amp;
      &quot; Ada source lines for convenience.&quot;;

...

   if Input_Found then
      Count_Characters;

   else  --not Input_Found
      Reset_State;
      Character_Total :=
        First_Part_Total  * First_Part_Scale_Factor  +
        Second_Part_Total * Second_Part_Scale_Factor +
        Default_String'Length + Delimiter_Size;
   end if;

end loop;
&lt;/source&gt;
==== rationale ====

Indentation improves the readability of the code because it gives you a visual indicator of the program structure. The levels of nesting are clearly identified by indentation, and the first and last keywords in a construct can be matched visually. 

While there is much discussion on the number of spaces to indent, the reason for indentation is code clarity. The fact that the code is indented consistently is more important than the number of spaces used for indentation. 

Additionally, the Ada Reference Manual (1995, §1.1.4) states that the layout shown in the examples and syntax rules in the manual is the recommended code layout to be used for Ada programs: &quot;The syntax rules describing structured constructs are presented in a form that corresponds to the recommended paragraphing . . . . Different lines are used for parts of a syntax rule if the corresponding parts of the construct described by the rule are intended to be on different lines . . . . It is recommended that all indentation be by multiples of a basic step of indentation (the number of spaces for the basic step is not defined).&quot; 

It is important to indent continuation lines differently from nested control structures to make them visually distinct. This prevents them from obscuring the structure of the code as you scan it. 

Listing context clauses on individual lines allows easier maintenance; changing a context clause is less error-prone. 

Indenting with spaces is more portable than indenting with tabs because tab characters are displayed differently by different terminals and printers. 

==== exceptions ====

If you are using a variable width font, tabs will align better than spaces. However, depending on your tab setting, lines of successive indentation may leave you with a very short line length. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

=== Alignment of Operators ===

==== guideline ====

* Align operators vertically to emphasize local program structure and semantics. 

==== example ====
&lt;source lang=ada&gt;
    if Slot_A &gt;= Slot_B then
       Temporary := Slot_A;
       Slot_A    := Slot_B;
       Slot_B    := Temporary;
    end if;

    ----------------------------------------------------------------
    Numerator   := B**2 - 4.0 * A * C;
    Denominator := 2.0 * A;
    Solution_1 := (B + Square_Root(Numerator)) / Denominator;
    Solution_2 := (B - Square_Root(Numerator)) / Denominator;
    ----------------------------------------------------------------

    X := A * B +
         C * D +
         E * F;

    Y := (A * B + C) +  (2.0 * D - E) -  -- basic equation
         3.5;                            -- account for error factor
&lt;/source&gt;

==== rationale ====

Alignment makes it easier to see the position of the operators and, therefore, puts visual emphasis on what the code is doing. 

The use of lines and spacing on long expressions can emphasize terms, precedence of operators, and other semantics. It can also leave room for highlighting comments within an expression. 

==== exceptions ====

If vertical alignment of operators forces a statement to be broken over two lines, especially if the break is at an inappropriate spot, it may be preferable to relax the alignment guideline. 

==== automation notes ====

The last example above shows a kind of &quot;semantic alignment&quot; that is not typically enforced or even preserved by automatic code formatters. If you break expressions into semantic parts and put each on a separate line, beware of using a code formatter later. It is likely to move the entire expression to a single line and accumulate all the comments at the end. However, there are some formatters that are intelligent enough to leave a line break intact when the line contains a comment. A good formatter will recognize that the last example above does not violate the guidelines and would, therefore, preserve it as written.

=== Alignment of Declarations ===

==== guideline ====

* Use vertical alignment to enhance the readability of declarations. 
* Provide, at most, one declaration per line.
* Indent all declarations in a single declarative part at the same level. 

==== instantiation ====

For declarations not separated by blank lines, follow these alignment rules: 

* Align the colon delimiters.
* Align the := initialization delimiter.
* When trailing comments are used, align the comment delimiter.
* When the declaration overflows a line, break the line and add an indentation level for those lines that wrap. The preferred places to break, in order, are: (1) the comment delimiter; (2) the initialization delimiter; (3) the colon delimiter.
* For enumeration type declarations that do not fit on a single line, put each literal on a separate line, using the next level of indentation. When appropriate, semantically related literals can be arranged by row or column to form a table. 

==== example ====

Variable and constant declarations can be laid out in a tabular format with columns separated by the symbols :, :=, and -- 
&lt;source lang=ada&gt;
    Prompt_Column : constant        := 40;
    Question_Mark : constant String := &quot; ? &quot;; -- prompt on error input
    Prompt_String : constant String := &quot; ==&gt; &quot;;
&lt;/source&gt;
If this results in lines that are too long, they can be laid out with each part on a separate line with its unique indentation level: 
&lt;source lang=ada&gt;
    subtype User_Response_Text_Frame is String (1 .. 72);
    -- If the declaration needed a comment, it would fit here.
    Input_Line_Buffer : User_Response_Text_Frame
           := Prompt_String &amp;
              String'(1 .. User_Response_Text_Frame'Length -
                           Prompt_String'Length =&gt; ' ');
&lt;/source&gt;
Declarations of enumeration literals can be listed in one or more columns as: 
&lt;source lang=ada&gt;
  type Op_Codes_In_Column is
        (Push,
         Pop,
         Add,
         Subtract,
         Multiply,
         Divide,
         Subroutine_Call,
         Subroutine_Return,
         Branch,
         Branch_On_Zero,
         Branch_On_Negative);
&lt;/source&gt;
or, to save space: 

&lt;source lang=ada&gt;
    type Op_Codes_Multiple_Columns is
          (Push,            Pop,                Add,
           Subtract,        Multiply,           Divide,
           Subroutine_Call, Subroutine_Return,  Branch,
           Branch_On_Zero,  Branch_On_Negative);
&lt;/source&gt;
or, to emphasize related groups of values: 
&lt;source lang=ada&gt;
    type Op_Codes_In_Table is
          (Push,            Pop,
           Add,             Subtract,          Multiply,    Divide,
           Subroutine_Call, Subroutine_Return,
           Branch,          Branch_On_Zero,    Branch_On_Negative);
&lt;/source&gt;

==== rationale ====

Many programming standards documents require tabular repetition of names, types, initial values, and meaning in unit header comments. These comments are redundant and can become inconsistent with the code. Aligning the declarations themselves in tabular fashion (see the examples above) provides identical information to both compiler and reader; enforces, at most, one declaration per line; and eases maintenance by providing space for initializations and necessary comments. A tabular layout enhances readability, thus preventing names from &quot;hiding&quot; in a mass of declarations. This applies to all declarations: types, subtypes, objects, exceptions, named numbers, and so forth. 

==== automation notes ====

Most of the guidelines in this section are easily enforced with an automatic code formatter. The one exception is the last enumerated type example, which is laid out in rows based on the semantics of the enumeration literals. An automatic code formatter will not be able to do this and will likely move the enumeration literals to different lines. However, tools that are checking only for violations of the guidelines should accept the tabular form of an enumeration type declaration. 

=== More on Alignment ===

==== guideline ====

* Align parameter modes and parentheses vertically. 

==== instantiation ====

Specifically, it is recommended that you: 

* Place one formal parameter specification per line.
* Vertically align parameter names, colons, the reserved word in, the reserved word out, and parameter subtypes.
* Place the first parameter specification on the same line as the subprogram or entry name. If any parameter subtypes are forced beyond the line length limit, place the first parameter specification on a new line indented the same as a continuation line. 

==== example ====
&lt;source lang=ada&gt;
    procedure Display_Menu (Title   : in     String;
                            Options : in     Menus;
                            Choice  :    out Alpha_Numerics);
&lt;/source&gt;

The following two examples show alternate instantiations of this guideline: 

&lt;source lang=ada&gt;
    procedure Display_Menu_On_Primary_Window
          (Title   : in     String;
           Options : in     Menus;
           Choice  :    out Alpha_Numerics); 
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
    procedure Display_Menu_On_Screen (
          Title   : in     String;
          Options : in     Menus;
          Choice  :    out Alpha_Numerics
        );
&lt;/source&gt;

Aligning parentheses makes complicated relational expressions more clear: 

&lt;source lang=ada&gt;
    if not (First_Character in Alpha_Numerics and then
            Valid_Option(First_Character))        then
&lt;/source&gt;

==== rationale ====

This alignment facilitates readability and understandability, and it is easy to achieve given automated support. Aligning parameter modes provides the effect of a table with columns for parameter name, mode, subtype, and, if necessary, parameter-specific comments. Vertical alignment of parameters across subprograms within a compilation unit increases the readability even more. 

==== exceptions ====

Various options are available for subprogram layout. The second example above aligns all of the subprogram names and parameter names in a program. This has the disadvantage of occupying an unnecessary line where subprogram names are short and looking awkward if there is only one parameter. 

The third example is a format commonly used to reduce the amount of editing required when parameter lines are added, deleted, or reordered. The parentheses do not have to be moved from line to line. However, the last parameter line is the only one without a semicolon. 

==== exceptions ====

When an operator function has two or more formal parameters of the same type, it is more readable to declare the parameters in a single one-line list rather than to separate the formal parameter list into multiple formal parameter specifications. 

&lt;source lang=ada&gt;
    type Color_Scheme is (Red, Purple, Blue, Green, Yellow, White, Black, Brown, Gray, Pink); 

    function &quot;&amp;&quot; (Left, Right : Color_Scheme) return Color_Scheme;
&lt;/source&gt;

==== automation notes ====

Most of the guidelines in this section are easily enforced with an automatic code formatter. The one exception is the last example, which shows vertical alignment of parentheses to emphasize terms of an expression. This is difficult to achieve with an automatic code formatter unless the relevant terms of the expression can be determined strictly through operator precedence.

=== Blank Lines ===

==== guideline ====

* Use blank lines to group logically related lines of text (NASA 1987). 

==== example ====

&lt;source lang=ada&gt;
    if ... then

       for ... loop
          ...
       end loop;

    end if;
&lt;/source&gt;

This example separates different kinds of declarations with blank lines: 

&lt;source lang=ada&gt;
    type Employee_Record is
       record
          Legal_Name    : Name;
          Date_Of_Birth : Date;
          Date_Of_Hire  : Date;
          Salary        : Money;
       end record;

    type Day is
          (Monday,    Tuesday,   Wednesday, Thursday,  Friday,
           Saturday,  Sunday);

    subtype Weekday is Day range Monday   .. Friday;
    subtype Weekend is Day range Saturday .. Sunday;
&lt;/source&gt;

==== rationale ====

When blank lines are used in a thoughtful and consistent manner, sections of related code are more visible to readers. 

==== automation notes ====

Automatic formatters do not enforce this guideline well because the decision on where to insert blank lines is a semantic one. However, many formatters have the ability to leave existing blank lines intact. Thus, you can manually insert the lines and not lose the effect when you run such a formatter.

=== Pagination ===

==== guideline ====

* Highlight the top of each package or task specification, the top of each program unit body, and the end statement of each program unit. 

==== instantiation ====

Specifically, it is recommended that you: 

* Use file prologues, specification headers, and body headers to highlight those structures as recommended in Guideline 3.3.
* Use a line of dashes, beginning at the same column as the current indentation to highlight the definition of nested units embedded in a declarative part. Insert the line of dashes immediately before and immediately after the definition.
* If two dashed lines are adjacent, omit the longer of the two. 

==== example ====

&lt;source lang=ada&gt;
    with Basic_Types;
    package body SPC_Numeric_Types is
       ---------------------------------------------------------------------
       function Max
             (Left  : in     Basic_Types.Tiny_Integer;
              Right : in     Basic_Types.Tiny_Integer)
             return Basic_Types.Tiny_Integer is
       begin
          if Right &lt; Left then
             return Left;
          else
             return Right;
          end if;
       end Max;
       ---------------------------------------------------------------------
       function Min
             (Left  : in     Basic_Types.Tiny_Integer;
              Right : in     Basic_Types.Tiny_Integer)
             return Basic_Types.Tiny_Integer is
       begin
          if Left &lt; Right then
             return Left;
          else
             return Right;
          end if;
       end Min;
       ---------------------------------------------------------------------
       use Basic_Types;
    begin  -- SPC_Numeric_Types
       Max_Tiny_Integer := Min(System_Max, Local_Max);
       Min_Tiny_Integer := Max(System_Min, Local_Min);
       -- ...
    end SPC_Numeric_Types;
&lt;/source&gt;

==== rationale ====

It is easy to overlook parts of program units that are not visible on the current page or screen. The page lengths of presentation hardware and software vary widely. By clearly marking the program's logical page boundaries (e.g., with a dashed line), you enable a reader to quickly check whether all of a program unit is visible. Such pagination also makes it easier to scan a large file quickly, looking for a particular program unit. 

==== exceptions ====

This guideline does not address code layout on the physical &quot;page&quot; because the dimensions of such pages vary widely and no single guideline is appropriate. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter. 

=== Number of Statements Per Line ===

==== guideline ====

* Start each statement on a new line.
* Write no more than one simple statement per line.
* Break compound statements over multiple lines. 

==== example ====

Use: 

&lt;source lang=ada&gt;
    if End_Of_File then
       Close_File;
    else
       Get_Next_Record;
    end if;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
    if End_Of_File then Close_File; else Get_Next_Record; end if;
&lt;/source&gt;

exceptional case: 

&lt;source lang=ada&gt;
    Put(&quot;A=&quot;);    Natural_IO.Put(A);    New_Line;
    Put(&quot;B=&quot;);    Natural_IO.Put(B);    New_Line;
    Put(&quot;C=&quot;);    Natural_IO.Put(C);    New_Line;
&lt;/source&gt;

==== rationale ====

A single statement on each line enhances the reader's ability to find statements and helps prevent statements being missed. Similarly, the structure of a compound statement is clearer when its parts are on separate lines. 

==== exceptions ====

If a statement is longer than the remaining space on the line, continue it on the next line. This guideline includes declarations, context clauses, and subprogram parameters. 

According to the Ada Reference Manual (1995, §1.1.4), &quot;The preferred places for other line breaks are after semicolons.&quot; 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter, with the single exception of the last example, which shows a semantic grouping of multiple statements onto a single line. 

==== exceptions ====

The example of Put and New_Line statements shows a legitimate exception. This grouping of closely related statements on the same line makes the structural relationship between the groups clear. 

=== Source Code Line Length ===

==== guideline ====

* Adhere to a maximum line length limit for source code (Nissen and Wallis 1984, §2.3). 

==== instantiation ====

Specifically, it is recommended that you: 

* Limit source code line lengths to a maximum of 72 characters. 

==== rationale ====

When Ada code is ported from one system to another, there may be restrictions on the record size of source line statements, possibly for one of the following reasons: some operating systems may not support variable length records for tape I/O, or some printers and terminals support an 80-character line width with no line-wrap. See further rationale in the note for Guideline 7.1.2. 

Source code must sometimes be published for various reasons, and letter-size paper is not as forgiving as a computer listing in terms of the number of usable columns. 

In addition, there are human limitations in the width of the field of view for understanding at the level required for reading source code. These limitations correspond roughly to the 70- to 80-column range. 

==== exceptions ====

An alternate instantiation is to limit source code length to 79 characters. The 79-character limit differentiates the code from the FORTRAN 72-character limit. It also avoids problems with 80-character width terminals where the character in the last column may not print correctly. 

==== automation notes ====

The guidelines in this section are easily enforced with an automatic code formatter.

== Summary ==

=== code formatting ===

* Use consistent spacing around delimiters. 
* Use the same spacing as you would in regular prose. 
* Indent and align nested control structures, continuation lines, and embedded units consistently. 
* Distinguish between indentation for nested control structures and for continuation lines. 
* Use spaces for indentation, not the tab character (Nissen and Wallis 1984, §2.2). 
* Align operators vertically to emphasize local program structure and semantics. 
* Use vertical alignment to enhance the readability of declarations. 
* Provide, at most, one declaration per line. 
* Indent all declarations in a single declarative part at the same level. 
* Align parameter modes and parentheses vertically. 
* Use blank lines to group logically related lines of text (NASA 1987). 
* Highlight the top of each package or task specification, the top of each program unit body, and the end statement of each program unit. 
* Start each statement on a new line. 
* Write no more than one simple statement per line. 
* Break compound statements over multiple lines. 
* Adhere to a maximum line length limit for source code (Nissen and Wallis 1984, §2.3).


{{Chapter navigation||Readability}}
[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>qnmrbop4tt0dmv7yl7nasc234hq3jha</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Readability</title>
    <ns>0</ns>
    <id>200799</id>
    <revision>
      <id>2307226</id>
      <parentid>2307225</parentid>
      <timestamp>2012-04-16T04:35:12Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <minor />
      <comment>/* example */</comment>
      <text xml:space="preserve">{{Chapter navigation|Source Code Presentation|Program Structure}}

{{TOC|limit=3|float=none}}

== Introduction ==

This chapter recommends ways of using Ada features to make reading and understanding code easier. There are many myths about comments and readability. The responsibility for true readability rests more with naming and code structure than with comments. Having as many comment lines as code lines does not imply readability; it more likely indicates the writer does not understand what is important to communicate. 

== Spelling ==

Spelling conventions in source code include rules for capitalization and use of underscores, numbers, and abbreviations. If you follow these conventions consistently, the resulting code is clearer and more readable. 

=== Use of Underscores ===

==== guideline ====

* Use underscores to separate words in a compound name. 

==== example ====
&lt;source lang=ada&gt;
Miles_Per_Hour
Entry_Value
&lt;/source&gt;

==== rationale ====

When an identifier consists of more than one word, it is much easier to read if the words are separated by underscores. Indeed, there is precedent in English in which compound words are separated by a hyphen or a space. In addition to promoting readability of the code, if underscores are used in names, a code formatter has more control over altering capitalization. See Guideline 3.1.3. 

=== Numbers ===

==== guideline ====

* Represent numbers in a consistent fashion.
* Represent literals in a radix appropriate to the problem.
* Use underscores to separate digits the same way commas or periods (or spaces for nondecimal bases) would be used in normal text. 
* When using scientific notation, make the E consistently either uppercase or lowercase.
* In an alternate base, represent the alphabetic characters in either all uppercase or all lowercase. 

==== instantiation ====
* Decimal and octal numbers are grouped by threes beginning on the left side of the radix point and by fives beginning on the right side of the radix point.
* The E is always capitalized in scientific notation.
* Use uppercase for the alphabetic characters representing digits in bases above 10. 
* Hexadecimal numbers are grouped by fours beginning on either side of the radix point. 

==== example ====

&lt;source lang=ada&gt;
type Maximum_Samples     is range          1 ..  1_000_000;
type Legal_Hex_Address   is range   16#0000# ..   16#FFFF#;
type Legal_Octal_Address is range 8#000_000# .. 8#777_777#;

Avogadro_Number : constant := 6.02216_9E+23;
&lt;/source&gt;

To represent the number 1/3 as a constant, use: 

&lt;source lang=ada&gt;
One_Third : constant := 1.0 / 3.0;
&lt;/source&gt;

Avoid this use: 

&lt;source lang=ada&gt;
One_Third_As_Decimal_Approximation : constant := 0.33333_33333_3333;
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
One_Third_Base_3 : constant := 3#0.1#;
&lt;/source&gt;

==== rationale ====

Consistent use of uppercase or lowercase aids scanning for numbers. Underscores serve to group portions of numbers into familiar patterns. Consistency with common use in everyday contexts is a large part of readability. 

==== notes ====

If a rational fraction is represented in a base in which it has a terminating rather than a repeating representation, as 3#0.1# does in the example above, it may have increased accuracy upon conversion to the machine base.
(This is wrong for named numbers as in this example - they must be calculated exactly.)

=== Capitalization ===

==== guideline ====

* Make reserved words and other elements of the program visually distinct from each other. 

==== instantiation ====
* Use lowercase for all reserved words (when used as reserved words).
* Use mixed case for all other identifiers, a capital letter beginning every word separated by underscores.
* Use uppercase for abbreviations and acronyms (see automation notes). 

==== example ====

&lt;source lang=ada&gt;
...

type Second_Of_Day      is range 0 .. 86_400;
type Noon_Relative_Time is (Before_Noon, After_Noon, High_Noon);

subtype Morning   is Second_Of_Day range 0 .. 86_400 / 2 - 1;
subtype Afternoon is Second_Of_Day range Morning'Last + 2 .. 86_400;

...

Current_Time := Second_Of_Day(Calendar.Seconds(Calendar.Clock));
if Current_Time in Morning then
   Time_Of_Day := Before_Noon;
elsif Current_Time in Afternoon then
   Time_Of_Day := After_Noon;
else
   Time_Of_Day := High_Noon;
end if;

case Time_Of_Day is
   when Before_Noon =&gt;   Get_Ready_For_Lunch;
   when High_Noon   =&gt;   Eat_Lunch;
   when After_Noon  =&gt;   Get_To_Work;
end case;

...
&lt;/source&gt;

==== rationale ====

Visually distinguishing reserved words allows you to focus on program structure alone, if desired, and also aids scanning for particular identifiers. 

The instantiation chosen here is meant to be more readable for the experienced Ada programmer, who does not need reserved words to leap off the page. Beginners to any language often find that reserved words should be emphasized to help them find the control structures more easily. Because of this, instructors in the classroom and books introducing the Ada language may want to consider an alternative instantiation. The Ada Reference Manual (1995) chose bold lowercase for all reserved words. 

==== automation notes ====

Ada names are not case sensitive. Therefore, the names &lt;code&gt;max_limit&lt;/code&gt;, &lt;code&gt;MAX_LIMIT&lt;/code&gt;, and &lt;code&gt;Max_Limit&lt;/code&gt; denote the same object or entity. A good code formatter should be able to automatically convert from one style to another as long as the words are delimited by underscores. 

As recommended in Guideline 3.1.4, abbreviations should be project-wide. An automated tool should allow a project to specify those abbreviations and format them accordingly. 

=== Abbreviations ===

==== guideline ====

* Do not use an abbreviation of a long word as an identifier where a shorter synonym exists. 
* Use a consistent abbreviation strategy.
* Do not use ambiguous abbreviations.
* To justify its use, an abbreviation must save many characters over the full word. 
* Use abbreviations that are well-accepted in the application domain. 
* Maintain a list of accepted abbreviations, and use only abbreviations on that list. 

==== example ====
Use: 

&lt;source lang=ada&gt;
Time_Of_Receipt 
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
Recd_Time or R_Time
&lt;/source&gt;

But in an application that commonly deals with message formats that meet military standards, &lt;code&gt;DOD_STD_MSG_FMT&lt;/code&gt; is an acceptable abbreviation for: 

&lt;source lang=ada&gt;
Department_Of_Defense_Standard_Message_Format.
&lt;/source&gt;

==== rationale ====

Many abbreviations are ambiguous or unintelligible unless taken in context. As an example, Temp could indicate either temporary or temperature. For this reason, you should choose abbreviations carefully when you use them. The rationale in Guideline 8.1.2 provides a more thorough discussion of how context should influence the use of abbreviations. 

Because very long variable names can obscure the structure of the program, especially in deeply nested (indented) control structures, it is a good idea to try to keep identifiers short and meaningful. Use short unabbreviated names whenever possible. If there is no short word that will serve as an identifier, then a well-known unambiguous abbreviation is the next best choice, especially if it comes from a list of standard abbreviations used throughout the project. 

You can establish an abbreviated format for a fully qualified name using the renames clause. This capability is useful when a very long, fully qualified name would otherwise occur many times in a localized section of code (see Guideline 5.7.2). 

A list of accepted abbreviations for a project provides a standard context for using each abbreviation.

== Naming Conventions ==

Choose names that clarify the object's or entity's intended use. Ada allows identifiers to be any length as long as the identifier fits on a line with all characters being significant (including underscores). Identifiers are the names used for variables, constants, program units, and other entities within a program. 

=== Names ===

==== guideline ====

* Choose names that are as self-documenting as possible.
* Use a short synonym instead of an abbreviation (see Guideline 3.1.4). 
* Use names given by the application, but do not use obscure jargon. 
* Avoid using the same name to declare different kinds of identifiers. 

==== example ====
In a tree-walker, using the name &lt;code&gt;Left&lt;/code&gt; instead of &lt;code&gt;Left_Branch&lt;/code&gt; is sufficient to convey the full meaning given the context. However, use &lt;code&gt;Time_Of_Day&lt;/code&gt; instead of &lt;code&gt;TOD&lt;/code&gt;. 

Mathematical formulas are often given using single-letter names for variables. Continue this convention for mathematical equations where they would recall the formula, for example: 

&lt;source lang=ada&gt;
   A*(X**2) + B*X + C.
&lt;/source&gt;

With the use of child packages, a poor choice of package, subunit, and identifier names can lead to a visibility clash with subunits. See the Rationale (1995, §8.1) for a sample of the resulting, rather obscure code. 

==== rationale ====

A program that follows these guidelines can be more easily comprehended. Self-documenting names require fewer explanatory comments. Empirical studies have shown that you can further improve comprehension if your variable names are not excessively long (Schneiderman 1986, 7). The context and application can help greatly. The unit of measure for numeric entities can be a source of subtype names. 

You should try not to use the same name as an identifier for different declarations, such as an object and a child package. Overusing an identifier in seemingly different name spaces can, in fact, lead to visibility clashes if the enclosing program units are intended to work together. 

==== notes ====

See Guideline 8.1.2 for a discussion on how to use the application domain as a guideline for selecting abbreviations. 

=== Subtype Names ===

==== guideline ====

* Use singular, general nouns as subtype identifiers.
* Choose identifiers that describe one of the subtype's values.
* Consider using suffixes for subtype identifiers that define visible access types, visible subranges, or visible array types.
* For private types, do not use identifier constructions (e.g., suffixes) that are unique to subtype identifiers.
* Do not use the subtype names from predefined packages. 

==== example ====
&lt;source lang=ada&gt;
type Day is
   (Monday,    Tuesday,   Wednesday, Thursday,  Friday,
    Saturday,  Sunday);

type Day_Of_Month    is range      0 ..    31;
type Month_Number    is range      1 ..    12;
type Historical_Year is range -6_000 .. 2_500;

type Date is
   record
      Day   : Day_Of_Month;
      Month : Month_Number;
      Year  : Historical_Year;
   end record;
&lt;/source&gt;

In particular, &lt;code&gt;Day&lt;/code&gt; should be used in preference to &lt;code&gt;Days&lt;/code&gt; or &lt;code&gt;Day_Type&lt;/code&gt;. 

The identifier &lt;code&gt;Historical_Year&lt;/code&gt; might appear to be specific, but it is actually general, with the adjective &lt;code&gt;historical&lt;/code&gt; describing the range constraint: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Disk_Driver is
 
   -- In this procedure, a number of important disk parameters are
   -- linked.
   Number_Of_Sectors  : constant :=     4;
   Number_Of_Tracks   : constant :=   200;
   Number_Of_Surfaces : constant :=    18;
   Sector_Capacity    : constant := 4_096;

   Track_Capacity   : constant := Number_Of_Sectors  * Sector_Capacity;
   Surface_Capacity : constant := Number_Of_Tracks   * Track_Capacity;
   Disk_Capacity    : constant := Number_Of_Surfaces * Surface_Capacity;

   type Sector_Range  is range 1 .. Number_Of_Sectors;
   type Track_Range   is range 1 .. Number_Of_Tracks;
   type Surface_Range is range 1 .. Number_Of_Surfaces;

   type Track_Map   is array (Sector_Range)  of ...;
   type Surface_Map is array (Track_Range)   of Track_Map;
   type Disk_Map    is array (Surface_Range) of Surface_Map;

begin  -- Disk_Driver
   ...
end Disk_Driver;
------------------------------------------------------------------------
&lt;/source&gt;

The suffixes &lt;code&gt;_Capacity&lt;/code&gt;, &lt;code&gt;_Range&lt;/code&gt;, and &lt;code&gt;_Map&lt;/code&gt; help define the purpose of the above subtypes and avoid the search for synonyms for the sector, track, and surface abstractions. Without the suffixes, you would need three different names per abstraction, one to describe each of the concepts succinctly named in the suffix. This recommendation only applies to certain visible subtypes. Private types, for example, should be given a good name that reflects the abstraction being represented.

==== rationale ====

When this style and the suggested style for object identifiers are used, program code more closely resembles English (see Guideline 3.2.3). Furthermore, this style is consistent with the names of the language's predefined identifiers. They are not named &lt;code&gt;Integers&lt;/code&gt;, &lt;code&gt;Booleans&lt;/code&gt;, &lt;code&gt;Integer_Type&lt;/code&gt;, or &lt;code&gt;Boolean_Type&lt;/code&gt;. 

However, using the name of a subtype from the predefined packages is sure to confuse a programmer when that subtype appears somewhere without a package qualification. 

==== notes ====

This style guide tries to be consistent with the Ada Reference Manual (1995) in use of the terms &quot;type&quot; and &quot;subtype&quot; name. In general, a &quot;type&quot; refers to the abstract concept, as in a type declaration, while the &quot;subtype&quot; refers to the name given to that abstract concept in an actual declaration. Thus, what was called a type name in Ada 83 (Ada Reference Manual 1983) is now called a subtype name. 

=== Object Names ===

==== guideline ====

* Use predicate clauses or adjectives for Boolean objects.
* Use singular, specific nouns as object identifiers.
* Choose identifiers that describe the object's value during execution.
* Use singular, general nouns as identifiers for record components. 

==== example ====
Non-Boolean objects: 

&lt;source lang=ada&gt;
Today           : Day;
Yesterday       : Day;
Retirement_Date : Date;
&lt;/source&gt;

Boolean objects: 

&lt;source lang=ada&gt;
User_Is_Available : Boolean;        -- predicate clause
List_Is_Empty     : Boolean;        -- predicate clause
Empty             : Boolean;        -- adjective
Bright            : Boolean;        -- adjective
&lt;/source&gt;

==== rationale ====

Using specific nouns for objects establishes a context for understanding the object's value, which is one of the general values described by the subtype's name (see Guideline 3.2.2). Object declarations become very English-like with this style. For example, the first declaration above is read as &quot;Today is a Day.&quot; 

General nouns, rather than specific, are used for record components because a record object's name will supply the context for understanding the component. Thus, the following component is understood as &quot;the year of retirement&quot;: 

&lt;source lang=ada&gt;
Retirement_Date.Year
&lt;/source&gt;

Following conventions that relate object types and parts of speech makes code read more like text. For example, because of the names chosen, the following code segment needs no comments: 

&lt;source lang=ada&gt;
if List_Is_Empty then
   Number_Of_Elements := 0;
else
   Number_Of_Elements := Length_Of_List;
end if;
&lt;/source&gt;

==== notes ====

If it is difficult to find a specific noun that describes an object's value during the entire execution of a program, the object is probably serving multiple purposes. Multiple objects should be used in such a case. 

=== Naming of Tagged Types and Associated Packages ===

==== guideline ====

* Use a consistent naming convention for tagged types and associated packages. 

==== instantiation ====

Naming conventions spark &quot;religious wars&quot;; therefore, two different instantiations are presented. The first instantiation integrates the use of object-oriented features. Except for two special cases, it applies the same naming conventions to declarations, independent of whether they use an object-oriented feature: 

* Name tagged types no differently than subtype names (see Guideline 3.2.2).
* Use the prefix &lt;code&gt;Abstract_&lt;/code&gt; for packages that export an abstraction for which you intend to provide multiple implementations (see Guideline 9.2.4).
* Use the suffix &lt;code&gt;_Mixin&lt;/code&gt; for packages that provide units of functionality that can be &quot;mixed in&quot; to core abstractions. 

The second instantiation highlights the use of object-oriented features through special names or suffixes: 

* Name class packages after the object they represent, without a suffix (Rosen 1995).
* Name mixin packages after the facet they represent, appending the suffix _Facet (Rosen 1995).
* Name the main tagged type &lt;code&gt;Instance&lt;/code&gt; (Rosen 1995).
* Follow the declaration of the specific type with a subtype named &lt;code&gt;Class&lt;/code&gt; for the corresponding class-wide type (Rosen 1995). 

==== example ====

The following two-part example from the Rationale (1995, §§4.4.4 and 4.6.2) applies the naming conventions of the first instantiation. 

For the first part of this example, assume the type &lt;code&gt;Set_Element&lt;/code&gt; was declared elsewhere:

&lt;source lang=ada&gt;
package Abstract_Sets is

   type Set is abstract tagged private;

   -- empty set
   function Empty return Set is abstract;

   -- build set with 1 element
   function Unit (Element: Set_Element) return Set is abstract;

   -- union of two sets
   function Union (Left, Right: Set) return Set is abstract;

   -- intersection of two sets
   function Intersection (Left, Right: Set) return Set is abstract;

   -- remove an element from a set
   procedure Take (From    : in out Set;
                   Element :    out set_Element) is abstract;

   Element_Too_Large : exception;
private
   type Set is abstract tagged null record;
end Abstract_Sets;

with Abstract_Sets;
package Bit_Vector_Sets is   -- one implementation of set abstraction

   type Bit_Set is new Abstract_Sets.Set with private;
   ...
private
   Bit_Set_Size : constant := 64;
   type Bit_Vector is ...
   type Bit_Set is new Abstract_Sets.Set with
      record
         Data : Bit_Vector;
      end record;
end Bit_Vector_Sets;

with Abstract_Sets;
package Sparse_Sets  -- alternate implementation of set abstraction

   type Sparse_Set is new Abstract_Sets.Set with private;
   ...
private
   ...
end Bit_Vector_Sets;
&lt;/source&gt;

The second part of this example applies the naming convention to mixin packages that support a windowing system: 

&lt;source lang=ada&gt;
-- assume you have type Basic_Window is tagged limited private;

generic
   type Some_Window is abstract new Basic_Window with private;
package Label_Mixin is 
   type Window_With_Label is abstract new Some_Window with private;
   ...
private
   ...
end Label_Mixin;

generic
   type Some_Window is abstract new Basic_Window with private;
package Border_Mixin is 
   type Window_With_Label is abstract new Some_Window with private;
   ...
private
   ...
end Border_Mixin;
&lt;/source&gt;

The following example applies the naming conventions of the second instantiation, as discussed in Rosen (1995): 

&lt;source lang=ada&gt;
package Shape is
   subtype Side_Count is range 0 .. 100;
   type Instance (Sides: Side_Count) is tagged private;
   subtype Class is Instance'Class;
   . . .
   -- operations on Shape.Instance
private
   . . .
end Shape;

with Shape; use Shape;
package Line is
   type Instance is new Shape.Instance with private;
   subtype Class is Instance'Class;
   . . .
   -- Overridden or new operations
private
   . . .
end Line;

with Shape; use Shape;
generic
   type Origin is new Shape.Instance;
package With_Color_Facet is
   type Instance is new Origin with private;
   subtype Class is Instance'Class;
   -- operations for colored shapes
private
   . . .
end With_Color_Facet;

with Line; use Line;
with With_Color_Facet;
package Colored_Line is new With_Color_Facet (Line.Instance);
&lt;/source&gt;

Sample declarations might look like: 

&lt;source lang=ada&gt;
Red_Line : Colored_Line.Instance;

procedure Draw (What : Shape.Instance);
&lt;/source&gt;

The above scheme works whether you use full names or a &lt;code&gt;use&lt;/code&gt; clause. As long as you use the same name for all the specific types (i.e., &lt;code&gt;type Instance&lt;/code&gt;) and class-wide types, the unqualified names will always hide one another. Thus, the compiler will insist you use full name qualification to resolve the ambiguity introduced by the use clause (Rosen 1995). 

==== rationale ====

You want to use a naming scheme that is consistent and readable and conveys the intent of the abstraction. Ideally, the naming scheme should be uniform in how it handles the different ways in which tagged types are used to create classes. If the naming convention is too rigid, however, you will write code fragments that appear stilted from a readability point of view. By using a similar naming convention for type extension through derivation and through generic mixin (see also Guideline 9.5.1), you achieve readable declarations of objects and procedures. 

==== notes ====

A naming convention for classes draws a hard line between object-oriented abstractions and other kinds of abstractions. Given that engineers have been defining abstract data types in Ada 83 (Ada Reference Manual 1983) for over 10 years, you may not want to change the naming convention just for the sake of using type extension with a type. You must consider how important it is to call out uses of inheritance in the overall use of abstractions in your program. If you prefer to emphasize abstraction, in general, over the mechanism used to implement the abstraction (i.e., inheritance, type-extension, and polymorphism), you may not want to impose such a stringent naming convention. You do not hamper quality by favoring a smoother transition in naming conventions from abstractions developed without inheritance to those developed with inheritance. 

If you choose a naming convention that highlights the use of object-oriented features and later decide to change the declaration to one that does not use an object-oriented feature, the change may be expensive. You must naturally change all occurrences of the names and must be careful not to introduce errors as you update the names. If you choose a naming convention that prohibits the use of suffixes or prefixes to characterize the declaration, you lose the opportunity to convey the intended usage of the declared item.

=== Program Unit Names ===

==== guideline ====

* Use action verbs for procedures and entries.
* Use predicate clauses for Boolean functions.
* Use nouns for non-Boolean functions.
* Give packages names that imply a higher level of organization than subprograms. Generally, these are noun phrases that describe the abstraction provided.
* Give tasks names that imply an active entity.
* Use nouns descriptive of the data being protected for protected units.
* Consider naming generic subprograms as if they were nongeneric subprograms.
* Consider naming generic packages as if they were nongeneric packages.
* Make the generic names more general than the instantiated names.

==== example ====
The following are sample names for elements that compose an Ada program: 

Sample procedure names: 

&lt;source lang=ada&gt;
procedure Get_Next_Token          -- get is a transitive verb
procedure Create                  -- create is a transitive verb
&lt;/source&gt;

Sample function names for Boolean-valued functions: 

&lt;source lang=ada&gt;
function Is_Last_Item             -- predicate clause
function Is_Empty                 -- predicate clause
&lt;/source&gt;

Sample function names for non-Boolean-valued functions: 

&lt;source lang=ada&gt;
function Successor                -- common noun
function Length                   -- attribute
function Top                      -- component
&lt;/source&gt;

Sample package names: 

&lt;source lang=ada&gt;
package Terminals is               -- common noun
package Text_Routines is           -- common noun
&lt;/source&gt;

Sample protected objects: 

&lt;source lang=ada&gt;
protected Current_Location is      -- data being protected
protected type Guardian is         -- noun implying protection
&lt;/source&gt;

Sample task names: 

&lt;source lang=ada&gt;
task Terminal_Resource_Manager is  -- common noun that shows action
&lt;/source&gt;

The following sample piece of code shows the clarity that results from using the parts-of-speech naming conventions:

&lt;source lang=ada&gt;
Get_Next_Token(Current_Token);

case Current_Token is
   when Identifier =&gt;         Process_Identifier;
   when Numeric    =&gt;         Process_Numeric;
end case;  -- Current_Token

if Is_Empty(Current_List) then
   Number_Of_Elements := 0;
else
   Number_Of_Elements := Length(Current_List);
end if;
&lt;/source&gt;

When packages and their subprograms are named together, the resulting code is very descriptive: 

&lt;source lang=ada&gt;
if Stack.Is_Empty(Current_List) then
   Current_Token := Stack.Top(Current_List);
end if;
&lt;/source&gt;

==== rationale ====

Using these naming conventions creates understandable code that reads much like natural language. When verbs are used for actions, such as subprograms, and nouns are used for objects, such as the data that the subprogram manipulates, code is easier to read and understand. This models a medium of communication already familiar to a reader. Where the pieces of a program model a real-life situation, using these conventions reduces the number of translation steps involved in reading and understanding the program. In a sense, your choice of names reflects the level of abstraction from computer hardware toward application requirements. 

See also Guideline 3.2.4 for the use of special-purpose suffixes in packages associated with tagged types. 

==== notes ====

There are some conflicting conventions in current use for task entries. Some programmers and designers advocate naming task entries with the same conventions used for subprograms to blur the fact that a task is involved. Their reasoning is that if the task is reimplemented as a package, or vice versa, the names need not change. Others prefer to make the fact of a task entry as explicit as possible to ensure that the existence of a task with its presumed overhead is recognizable. Project-specific priorities may be useful in choosing between these conventions. 

=== Constants and Named Numbers ===

==== guideline ====

* Use symbolic values instead of literals where the symbolic value improves readability.
* Use symbolic values instead of literals if the value occurs at more than one place and might need to be changed.
* Use the predefined constants Ada.Numerics.Pi and Ada.Numerics.e for the mathematical constants Pi and e.
* Use constants instead of variables for constant values.
* Use a constant when the value is specific to a type or when the value must be static.
* Use named numbers instead of constants, whenever possible.
* Use named numbers to replace numeric literals whose type or context is truly universal. 
* Use constants for objects whose values cannot change after elaboration (United Technologies 1987).
* Show relationships between symbolic values by defining them with static expressions.
* Use linearly independent sets of literals.
* Use attributes like 'First and 'Last instead of literals, wherever possible.

==== example ====

&lt;source lang=ada&gt;
3.14159_26535_89793                                 -- literal
Max_Entries : constant Integer       := 400;        -- constant
Avogadros_Number  : constant := 6.022137 * 10**23;  -- named number
Avogadros_Number / 2                                -- static expression
Avogadros_Number                                    -- symbolic value
&lt;/source&gt;

Declaring &lt;code&gt;Pi&lt;/code&gt; as a named number (assuming a &lt;code&gt;with&lt;/code&gt; clause for the predefined package &lt;code&gt;Ada.Numerics&lt;/code&gt; in the Ada Reference Manual [1995, §A.5] allows it to be referenced symbolically in the assignment statement below: 

&lt;source lang=ada&gt;
Area :=       Pi * Radius**2;       -- if radius is known.
&lt;/source&gt;

instead of: 

&lt;source lang=ada&gt;
Area := 3.14159 * Radius**2;        -- Needs explanatory comment
&lt;/source&gt;

Also, &lt;code&gt;Ada.Characters.Latin_1.Bel&lt;/code&gt; is more expressive than &lt;code&gt;Character'Val(8#007#)&lt;/code&gt;. 

Clarity of constant and named number declarations can be improved by using other constant and named numbers. For example: 

&lt;source lang=ada&gt;
Bytes_Per_Page   : constant := 512;
Pages_Per_Buffer : constant := 10;
Buffer_Size      : constant := Pages_Per_Buffer * Bytes_Per_Page;
&lt;/source&gt;

is more self-explanatory and easier to maintain than: 

&lt;source lang=ada&gt;
Buffer_Size : constant := 5_120;   -- ten pages
&lt;/source&gt;

The following literals should be constants: 

&lt;source lang=ada&gt;
if New_Character  = '$' then  -- &quot;constant&quot; that may change
...
if Current_Column = 7 then    -- &quot;constant&quot; that may change
&lt;/source&gt;

==== rationale ====

Using identifiers instead of literals makes the purpose of expressions clear, reducing the need for comments. Constant declarations consisting of expressions of numeric literals are safer because they do not need to be computed by hand. They are also more enlightening than a single numeric literal because there is more opportunity for embedding explanatory names. Clarity of constant declarations can be improved further by using other related constants in static expressions defining new constants. This is not less efficient because static expressions of named numbers are computed at compile time. 

A constant has a type. A named number can only be a universal type: universal_integer or universal_real. Strong typing is enforced for constants but not for named numbers or literals. Named numbers allow compilers to generate more efficient code than for constants and to perform more complete error checking at compile time. If the literal contains a large number of digits (as Pi in the example above), the use of an identifier reduces keystroke errors. If keystroke errors occur, they are easier to locate either by inspection or at compile time. 

Independence of literals means that the few literals that are used do not depend on one another and that any relationship between constant or named values is shown in the static expressions. Linear independence of literal values gives the property that if one literal value changes, all of the named numbers of values dependent on that literal are automatically changed. 

See Guideline 4.1.4 for additional guidelines on choosing a parameterless function versus a constant. 

==== notes ====

There are situations where a literal is a better choice than a name.  For this to be the case, the following conditions have to be fulfilled:

* The literal has to be self-explanatory in the respective context, such that replacing the literal by a symbolic value would not improve the readability.
* The value is either unchangeable or only occurs at one single place in the code, such that replacing the literal by a symbolic value would not improve the maintainability.

For example, the literals in the following well known relationship are both self-explanatory and unchangeable:

&lt;source lang=ada&gt;
   Fahrenheit := 32.0 + (9.0 * Celsius) / 5.0;
&lt;/source&gt;

As a second example, dividing by the literal 2 is self-explanatory in a binary search algorithm context.  And, since the value is also unchangeably related with the algorithm, it also does not matter if the literal occurs at more than one place in the code (for example due to loop unrolling).  Therefore, the use of a symbolic value like the following would neither improve readability nor maintainability:

&lt;source lang=ada&gt;
   Binary_Search_Divisor : constant := 2;
&lt;/source&gt;

=== Exceptions ===

==== guideline ====

* Use a name that indicates the kind of problem the exception represents. 

==== example ====

&lt;source lang=ada&gt;
Invalid_Name: exception;
Stack_Overflow: exception;
&lt;/source&gt;

==== rationale ====

Naming exceptions according to the kind of problem they are detecting enhances the readability of the code. You should name your exceptions as precisely as you can so that the maintainer of the code understands why the exception might be raised. A well-named exception should be meaningful to the clients of the package declaring the exception.

=== Constructors ===

==== guideline ====

* Include a prefix like &lt;code&gt;New&lt;/code&gt;, &lt;code&gt;Make&lt;/code&gt;, or &lt;code&gt;Create&lt;/code&gt; in naming constructors (in this sense, operations to create and/or initialize an object).
* Use names indicative of their content for child packages containing constructors. 

==== instantiation ====
* Name a child package containing constructors &lt;code&gt;&lt;whatever&gt;.Constructor&lt;/code&gt;. 

==== example ====

&lt;source lang=ada&gt;
function Make_Square (Center : Cartesian_Coordinates; 
                      Side   : Positive)
  return Square;
&lt;/source&gt;

==== rationale ====

Including a word like &lt;code&gt;New&lt;/code&gt;, &lt;code&gt;Make&lt;/code&gt;, or &lt;code&gt;Create&lt;/code&gt; in a constructor name makes its purpose clear. You may want to restrict the use of the prefix New to constructors that return an access value because the prefix suggests the internal use of an allocator. 

Putting all constructors in a child package, even when they return access values, is a useful organizational principle. 

For information regarding the use of Ada constructors, refer to Guideline 9.3.3.

== Comments ==

Comments in source text are a controversial issue. There are arguments both for and against the view that comments enhance readability. In practice, the biggest problem with comments is that people often fail to update them when the associated source text is changed, thereby making the commentary misleading. Commentary should be reserved for expressing needed information that cannot be expressed in code and highlighting cases where there are overriding reasons to violate one of the guidelines. If possible, source text should use self-explanatory names for objects and program units, and it should use simple, understandable program structures so that little additional commentary is needed. The extra effort in selecting (and entering) appropriate names and the extra thought needed to design clean and understandable program structures are fully justified. 

Use comments to state the intent of the code. Comments that provide an overview of the code help the maintenance programmer see the forest for the trees. The code itself is the detailed &quot;how&quot; and should not be paraphrased in the comments. 

Comments should be minimized. They should provide needed information that cannot be expressed in the Ada language, emphasize the structure of code, and draw attention to deliberate and necessary violations of the guidelines. Comments are present either to draw attention to the real issue being exemplified or to compensate for incompleteness in the sample program. 

Maintenance programmers need to know the causal interaction of noncontiguous pieces of code to get a global, more or less complete sense of the program. They typically acquire this kind of information from mental simulation of parts of the code. Comments should be sufficient enough to support this process (Soloway et al. 1986). 

This section presents general guidelines about how to write good comments. It then defines several different classes of comments with guidelines for the use of each. The classes are file headers, program unit specification headers, program unit body headers, data comments, statement comments, and marker comments. 

=== General Comments ===

==== guideline ====

* Make the code as clear as possible to reduce the need for comments. 
* Never repeat information in a comment that is readily available in the code.
* Where a comment is required, make it concise and complete. 
* Use proper grammar and spelling in comments.
* Make comments visually distinct from the code.
* Structure comments in header so that information can be automatically extracted by a tool. 

==== rationale ====
The structure and function of well-written code is clear without comments. Obscured or badly structured code is hard to understand, maintain, or reuse regardless of comments. Bad code should be improved, not explained. Reading the code itself is the only way to be absolutely positive about what the code does; therefore, the code should be made as readable as possible. 

Using comments to duplicate information in the code is a bad idea for several reasons. First, it is unnecessary work that decreases productivity. Second, it is very difficult to correctly maintain the duplication as the code is modified. When changes are made to existing code, it is compiled and tested to make sure that it is once again correct. However, there is no automatic mechanism to make sure that the comments are correctly updated to reflect the changes. Very often, the duplicate information in a comment becomes obsolete at the first code change and remains so through the life of the software. Third, when comments about an entire system are written from the limited point of view of the author of a single subsystem, the comments are often incorrect from the start. 

Comments are necessary to reveal information difficult or impossible to obtain from the code. Subsequent chapters of this book contain examples of such comments. Completely and concisely present the required information. 

The purpose of comments is to help readers understand the code. Misspelled, ungrammatical, ambiguous, or incomplete comments defeat this purpose. If a comment is worth adding, it is worth adding correctly in order to increase its usefulness. 

Making comments visually distinct from the code by indenting them, grouping them together into headers, or highlighting them with dashed lines is useful because it makes the code easier to read. Subsequent chapters of this book elaborate on this point. 

==== automation notes ====

The guideline about storing redundant information in comments applies only to manually generated comments. There are tools that automatically maintain information about the code (e.g., calling units, called units, cross-reference information, revision histories, etc.), storing it in comments in the same file as the code. Other tools read comments but do not update them, using the information from the comments to automatically generate detailed design documents and other reports. 

The use of such tools is encouraged and may require that you structure your header comments so they can be automatically extracted and/or updated. Beware that tools that modify the comments in a file are only useful if they are executed frequently enough. Automatically generated obsolete information is even more dangerous than manually generated obsolete information because it is more trusted by the reader. 

Revision histories are maintained much more accurately and completely by configuration management tools. With no tool support, it is very common for an engineer to make a change and forget to update the revision history. If your configuration management tool is capable of maintaining revision histories as comments in the source file, then take advantage of that capability, regardless of any compromise you might have to make about the format or location of the revision history. It is better to have a complete revision history appended to the end of the file than to have a partial one formatted nicely and embedded in the file header. 

=== File Headers ===

==== guideline ====

* Put a file header on each source file.
* Place ownership, responsibility, and history information for the file in the file header.

==== instantiation ====
* Put a copyright notice in the file header.
* Put the author's name and department in the file header.
* Put a revision history in the file header, including a summary of each change, the date, and the name of the person making the change. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
--      Copyright (c) 1991, Software Productivity Consortium, Inc.
--      All rights reserved.
--
-- Author: J. Smith
-- Department:System Software Department
--
-- Revision History:
--   7/9/91 J. Smith
--     - Added function Size_Of to support queries of node sizes.
--     - Fixed bug in Set_Size which caused overlap of large nodes.
--   7/1/91 M. Jones
--     - Optimized clipping algorithm for speed.
--   6/25/91 J. Smith
--     - Original version.
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Ownership information should be present in each file if you want to be sure to protect your rights to the software. Furthermore, for high visibility, it should be the first thing in the file. 

Responsibility and revision history information should be present in each file for the sake of future maintainers; this is the header information most trusted by maintainers because it accumulates. It does not evolve. There is no need to ever go back and modify the author's name or the revision history of a file. As the code evolves, the revision history should be updated to reflect each change. At worst, it will be incomplete; it should rarely be wrong. Also, the number and frequency of changes and the number of different people who made the changes over the history of a unit can be good indicators of the integrity of the implementation with respect to the design. 

Information about how to find the original author should be included in the file header, in addition to the author's name, to make it easier for maintainers to find the author in case questions arise. However, detailed information like phone numbers, mail stops, office numbers, and computer account user names are too volatile to be very useful. It is better to record the department for which the author was working when the code was written. This information is still useful if the author moves offices, changes departments, or even leaves the company because the department is likely to retain responsibility for the original version of the code. 

==== notes ====

With modern configuration management systems, explicitly capturing version history as header comments may be superfluous. The configuration management tool maintains a more reliable and consistent (from a content point of view) change history. Some systems can re-create earlier versions of a unit. 

=== Program Unit Specification Headers ===

==== guideline ====

* Put a header on the specification of each program unit.
* Place information required by the user of the program unit in the specification header.
* Do not repeat information (except unit name) in the specification header that is present in the specification.
* Explain what the unit does, not how or why it does it.
* Describe the complete interface to the program unit, including any exceptions it can raise and any global effects it can have.
* Do not include information about how the unit fits into the enclosing software system.
* Describe the performance (time and space) characteristics of the unit. 

==== instantiation ====
* Put the name of the program unit in the header.
* Briefly explain the purpose of the program unit.
* For packages, describe the effects of the visible subprograms on each other and how they should be used together.
* List all exceptions that can be raised by the unit.
* List all global effects of the unit.
* List preconditions and postconditions of the unit.
* List hidden tasks activated by the unit.
* Do not list the names of parameters of a subprogram.
* Do not list the names of package subprograms just to list them.
* Do not list the names of all other units used by the unit.
* Do not list the names of all other units that use the unit. 

==== example ====

&lt;source lang=ada&gt;
     ------------------------------------------------------------------------
     -- AUTOLAYOUT
     --
     -- Purpose:
     --   This package computes positional information for nodes and arcs
     --   of a directed graph.  It encapsulates a layout algorithm which is
     --   designed to minimize the number of crossing arcs and to emphasize
     --   the primary direction of arc flow through the graph.
     --
     -- Effects:
     --   - The expected usage is:
     --     1. Call Define for each node and arc to define the graph.
     --     2. Call Layout to assign positions to all nodes and arcs.
     --     3. Call Position_Of for each node and arc to determine the
     --        assigned coordinate positions.
     --   - Layout can be called multiple times, and recomputes the
     --     positions of all currently defined nodes and arcs each time.
     --   - Once a node or arc has been defined, it remains defined until
     --     Clear is called to delete all nodes and arcs.
     --
     -- Performance:
     --   This package has been optimized for time, in preference to space.
     --   Layout times are on the order of N*log(N) where N is the number
     --   of nodes, but memory space is used inefficiently.
     ------------------------------------------------------------------------

     package Autolayout is

        ...

        ---------------------------------------------------------------------
        -- Define
        --
        -- Purpose:
        --   This procedure defines one node of the current graph.
        -- Exceptions:
        --   Node_Already_Defined
        ---------------------------------------------------------------------
        procedure Define
              (New_Node : in     Node);

        ---------------------------------------------------------------------
        -- Layout
        --
        -- Purpose:
        --   This procedure assigns coordinate positions to all defined
        --   nodes and arcs.
        -- Exceptions:
        --   None.
        ---------------------------------------------------------------------
        procedure Layout;

        ---------------------------------------------------------------------
        -- Position_Of
        --
        -- Purpose:
        --   This function returns the coordinate position of the
        --   specified node.  The default position (0,0) is returned if no
        --   position has been assigned yet.
        -- Exceptions:
        --   Node_Not_Defined
        ---------------------------------------------------------------------
        function Position_Of (Current : in     Node)
              return Position;

        ...

     end Autolayout;
&lt;/source&gt;

==== rationale ====

The purpose of a header comment on the specification of a program unit is to help the user understand how to use the program unit. From reading the program unit specification and header, a user should know everything necessary to use the unit. It should not be necessary to read the body of the program unit. Therefore, there should be a header comment on each program unit specification, and each header should contain all usage information not expressed in the specification itself. Such information includes the units' effects on each other and on shared resources, exceptions raised, and time/space characteristics. None of this information can be determined from the Ada specification of the program unit. 

When you duplicate information in the header that can be readily obtained from the specification, the information tends to become incorrect during maintenance. For example, do not make a point of listing all parameter names, modes, or subtypes when describing a procedure. This information is already available from the procedure specification. Similarly, do not list all subprograms of a package in the header unless this is necessary to make some important statement about the subprograms. 

Do not include information in the header that the user of the program unit does not need. In particular, do not include information about how a program unit performs its function or why a particular algorithm was used. This information should be hidden in the body of the program unit to preserve the abstraction defined by the unit. If the user knows such details and makes decisions based on that information, the code may suffer when that information is later changed. 

When describing the purpose of the unit, avoid referring to other parts of the enclosing software system. It is better to say &quot;this unit does…&quot; than to say &quot;this unit is called by Xyz to do….&quot; The unit should be written in such a way that it does not know or care which unit is calling it. This makes the unit much more general purpose and reusable. In addition, information about other units is likely to become obsolete and incorrect during maintenance. 

Include information about the performance (time and space) characteristics of the unit. Much of this information is not present in the Ada specification, but it is required by the user. To integrate the unit into a system, the user needs to understand the resource usage (CPU, memory, etc.) of the unit. It is especially important to note that when a subprogram call causes activation of a task hidden in a package body, the task may continue to consume resources after the subroutine ends. 

==== notes ====

Some projects have deferred most of the commentary to the end rather than at the beginning of the program unit. Their rationale is that program units are written once and read many times and that long header comments make the start of the specification difficult to find. 

==== exceptions ====

Where a group of program units are closely related or simple to understand, it is acceptable to use a single header for the entire group of program units. For example, it makes sense to use a single header to describe the behavior of Max and Min functions; Sin, Cos, and Tan functions; or a group of functions to query related attributes of an object encapsulated in a package. This is especially true when each function in the set is capable of raising the same exceptions. 

=== Program Unit Body Headers ===

==== guideline ====

* Place information required by the maintainer of the program unit in the body of the header 
* Explain how and why the unit performs its function, not what the unit does.
* Do not repeat information (except unit name) in the header that is readily apparent from reading the code.
* Do not repeat information (except unit name) in the body header that is available in the specification header. 

==== instantiation ====
* Put the name of the program unit in the header.
* Record portability issues in the header.
* Summarize complex algorithms in the header.
* Record reasons for significant or controversial implementation decisions.
* Record discarded implementation alternatives, along with the reason for discarding them. 
* Record anticipated changes in the header, especially if some work has already been done to the code to make the changes easy to accomplish. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
-- Autolayout
--
-- Implementation Notes:
--   - This package uses a heuristic algorithm to minimize the number
--     of arc crossings.  It does not always achieve the true minimum
--     number which could theoretically be reached.  However it does a
--     nearly perfect job in relatively little time.  For details about
--     the algorithm, see ...
--
-- Portability Issues:
--   - The native math package Math_Lib is used for computations of
--     coordinate positions.
--   - 32-bit integers are required.
--   - No operating system specific routines are called.
--
-- Anticipated Changes:
--   - Coordinate_Type below could be changed from integer to float
--     with little effort.  Care has been taken to not depend on the
--     specific characteristics of integer arithmetic.
------------------------------------------------------------------------
package body Autolayout is

   ...

   ---------------------------------------------------------------------
   -- Define
   --
   -- Implementation Notes:
   --   - This routine stores a node in the general purpose Graph data
   --     structure, not the Fast_Graph structure because ...
   ---------------------------------------------------------------------
   procedure Define
         (New_Node : in     Node) is
   begin
      ...
   end Define;

   ---------------------------------------------------------------------
   -- Layout
   --
   -- Implementation Notes:
   --   - This routine copies the Graph data structure (optimized for
   --     fast random access) into the Fast_Graph data structure
   --     (optimized for fast sequential iteration), then performs the
   --     layout, and copies the data back to the Graph structure.  This
   --     technique was introduced as an optimization when the algorithm
   --     was found to be too slow, and it produced an order of
   --     magnitude improvement.
   ---------------------------------------------------------------------
   procedure Layout is
   begin
      ...
   end Layout;

   ---------------------------------------------------------------------
   -- Position_Of
   ---------------------------------------------------------------------
   function Position_Of (Current : in     Node)
         return Position is
   begin
      ...
   end Position_Of;

   ...

end Autolayout;
&lt;/source&gt;

==== rationale ====

The purpose of a header comment on the body of a program unit is to help the maintainer of the program unit to understand the implementation of the unit, including tradeoffs among different techniques. Be sure to document all decisions made during implementation to prevent the maintainer from making the same mistakes you made. One of the most valuable comments to a maintainer is a clear description of why a change being considered will not work. 

The header is also a good place to record portability concerns. The maintainer may have to port the software to a different environment and will benefit from a list of nonportable features. Furthermore, the act of collecting and recording portability issues focuses attention on these issues and may result in more portable code from the start. 

Summarize complex algorithms in the header if the code is difficult to read or understand without such a summary, but do not merely paraphrase the code. Such duplication is unnecessary and hard to maintain. Similarly, do not repeat the information from the header of the program unit specification. 

==== notes ====

It is often the case that a program unit is self-explanatory so that it does not require a body header to explain how it is implemented or why. In such a case, omit the header entirely, as in the case with Position_Of above. Be sure, however, that the header you omit truly contains no information. For example, consider the difference between the two header sections: 

&lt;source lang=ada&gt;
-- Implementation Notes:  None.
&lt;/source&gt;

and: 

&lt;source lang=ada&gt;
-- NonPortable Features:  None.
&lt;/source&gt;

The first is a message from the author to the maintainer saying &quot;I can't think of anything else to tell you,&quot; while the second may mean &quot;I guarantee that this unit is entirely portable.&quot; 

=== Data Comments ===

==== guideline ====

* Comment on all data types, objects, and exceptions unless their names are self-explanatory.
* Include information on the semantic structure of complex, pointer-based data structures.
* Include information about relationships that are maintained between data objects.
* Omit comments that merely repeat the information in the name.
* Include information on redispatching for tagged types in cases where you intend the specializations (i.e., derived types) to override these redispatching operations. 

==== example ====
Objects can be grouped by purpose and commented as: 

&lt;source lang=ada&gt;
...

---------------------------------------------------------------------
-- Current position of the cursor in the currently selected text
-- buffer, and the most recent position explicitly marked by the
-- user.
-- Note:  It is necessary to maintain both current and desired
--        column positions because the cursor cannot always be
--        displayed in the desired position when moving between
--        lines of different lengths.
---------------------------------------------------------------------
Desired_Column : Column_Counter;
Current_Column : Column_Counter;
Current_Row    : Row_Counter;
Marked_Column  : Column_Counter;
Marked_Row     : Row_Counter;
&lt;/source&gt;

The conditions under which an exception is raised should be commented: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
-- Exceptions
---------------------------------------------------------------------
Node_Already_Defined : exception;   -- Raised when an attempt is made
                                    --|   to define a node with an
                                    --|   identifier which already
                                    --|   defines a node.
Node_Not_Defined     : exception;   -- Raised when a reference is
                                    --|   made to a node which has
                                    --|   not been defined.
&lt;/source&gt;

Here is a more complex example, involving multiple record and access types that are used to form a complex data structure: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
-- These data structures are used to store the graph during the
-- layout process. The overall organization is a sorted list of
-- &quot;ranks,&quot; each containing a sorted list of nodes, each containing
-- a list of incoming arcs and a list of outgoing arcs.
-- The lists are doubly linked to support forward and backward
-- passes for sorting. Arc lists do not need to be doubly linked
-- because order of arcs is irrelevant.
--
-- The nodes and arcs are doubly linked to each other to support
-- efficient lookup of all arcs to/from a node, as well as efficient
-- lookup of the source/target node of an arc.
---------------------------------------------------------------------

type Arc;
type Arc_Pointer is access Arc;

type Node;
type Node_Pointer is access Node;

type Node is
   record
      Id       : Node_Pointer;-- Unique node ID supplied by the user.
      Arc_In   : Arc_Pointer;
      Arc_Out  : Arc_Pointer;
      Next     : Node_Pointer;
      Previous : Node_Pointer;
   end record;

type Arc is
   record
      ID     : Arc_ID;        -- Unique arc ID supplied by the user.
      Source : Node_Pointer;
      Target : Node_Pointer;
      Next   : Arc_Pointer;
   end record;

type Rank;
type Rank_Pointer is access Rank;

type Rank is
   record
      Number     : Level_ID;  -- Computed ordinal number of the rank.
      First_Node : Node_Pointer;
      Last_Node  : Node_Pointer;
      Next       : Rank_Pointer;
      Previous   : Rank_Pointer;
   end record;

First_Rank : Rank_Pointer;
Last_Rank  : Rank_Pointer;
&lt;/source&gt;

==== rationale ====

It is very useful to add comments explaining the purpose, structure, and semantics of the data structures. Many maintainers look at the data structures first when trying to understand the implementation of a unit. Understanding the data that can be stored, along with the relationships between the different data items and the flow of data through the unit, is an important first step in understanding the details of the unit. 

In the first example above, the names Current_Column and Current_Row are relatively self-explanatory. The name Desired_Column is also well chosen, but it leaves the reader wondering what the relationship is between the current column and the desired column. The comment explains the reason for having both. 

Another advantage of commenting on the data declarations is that the single set of comments on a declaration can replace multiple sets of comments that might otherwise be needed at various places in the code where the data is manipulated. In the first example above, the comment briefly expands on the meaning of &quot;current&quot; and &quot;marked.&quot; It states that the &quot;current&quot; position is the location of the cursor, the &quot;current&quot; position is in the current buffer, and the &quot;marked&quot; position was marked by the user. This comment, along with the mnemonic names of the variables, greatly reduces the need for comments at individual statements throughout the code. 

It is important to document the full meaning of exceptions and under what conditions they can be raised, as shown in the second example above, especially when the exceptions are declared in a package specification. The reader has no other way to find out the exact meaning of the exception (without reading the code in the package body). 

Grouping all the exceptions together, as shown in the second example, can provide the reader with the effect of a &quot;glossary&quot; of special conditions. This is useful when many different subprograms in the package can raise the same exceptions. For a package in which each exception can be raised by only one subprogram, it may be better to group related subprograms and exceptions together. 

When commenting exceptions, it is better to describe the exception's meaning in general terms than to list all the subprograms that can cause the exception to be raised; such a list is harder to maintain. When a new routine is added, it is likely that these lists will not be updated. Also, this information is already present in the comments describing the subprograms, where all exceptions that can be raised by the subprogram should be listed. Lists of exceptions by subprogram are more useful and easier to maintain than lists of subprograms by exception. 

In the third example, the names of the record fields are short and mnemonic, but they are not completely self-explanatory. This is often the case with complex data structures involving access types. There is no way to choose the record and field names so that they completely explain the overall organization of the records and pointers into a nested set of sorted lists. The comments shown are useful in this case. Without them, the reader would not know which lists are sorted, which lists are doubly linked, or why. The comments express the intent of the author with respect to this complex data structure. The maintainer still has to read the code if he wants to be sure that the double links are all properly maintained. Keeping this in mind when reading the code makes it much easier for the maintainer to find a bug where one pointer is updated and the opposite one is not. 

See Guideline 9.3.1 for the rationale for documenting the use of redispatching operations. (Redispatching means converting an argument of one primitive operation to a class-wide type and making a dispatching call to another primitive operation.) The rationale in Guideline 9.3.1 discusses whether such documentation should be in the specification or the body. 

=== Statement Comments ===

==== guideline ====

* Minimize comments embedded among statements. 
* Use comments only to explain parts of the code that are not obvious. 
* Comment intentional omissions from the code. 
* Do not use comments to paraphrase the code. 
* Do not use comments to explain remote pieces of code, such as subprograms called by the current unit. 
* Where comments are necessary, make them visually distinct from the code. 

==== example ====
The following is an example of very poorly commented code: 

&lt;source lang=ada&gt;
...

-- Loop through all the strings in the array Strings, converting
-- them to integers by calling Convert_To_Integer on each one,
-- accumulating the sum of all the values in Sum, and counting them
-- in Count.  Then divide Sum by Count to get the average and store
-- it in Average. Also, record the maximum number in the global
-- variable Max_Number.

for I in Strings'Range loop
   -- Convert each string to an integer value by looping through
   -- the characters which are digits, until a nondigit is found,
   -- taking the ordinal value of each, subtracting the ordinal value
   -- of '0', and multiplying by 10 if another digit follows.  Store
   -- the result in Number.
   Number := Convert_To_Integer(Strings(I));
   -- Accumulate the sum of the numbers in Total.
   Sum := Sum + Number;
   -- Count the numbers.
   Count := Count + 1;

   -- Decide whether this number is more than the current maximum.
   if Number &gt; Max_Number then
      -- Update the global variable Max_Number.
      Max_Number := Number;
   end if;

end loop;
-- Compute the average.
Average := Sum / Count;
&lt;/source&gt;

The following is improved by not repeating things in the comments that are obvious from the code, not describing the details of what goes in inside of &lt;code&gt;Convert_To_Integer&lt;/code&gt;, deleting an erroneous comment (the one on the statement that accumulates the sum), and making the few remaining comments more visually distinct from the code. 

&lt;source lang=ada&gt;
Sum_Integers_Converted_From_Strings:
   for I in Strings'Range loop
      Number := Convert_To_Integer(Strings(I));
      Sum := Sum + Number;
      Count := Count + 1;

      -- The global Max_Number is computed here for efficiency.
      if Number &gt; Max_Number then
         Max_Number := Number;
      end if;

   end loop Sum_Integers_Converted_From_Strings;

Average := Sum / Count;
&lt;/source&gt;

==== rationale ====

The improvements shown in the example are not improvements merely by reducing the total number of comments; they are improvements by reducing the number of useless comments. 

Comments that paraphrase or explain obvious aspects of the code have no value. They are a waste of effort for the author to write and the maintainer to update. Therefore, they often end up becoming incorrect. Such comments also clutter the code, hiding the few important comments. 

Comments describing what goes on inside another unit violate the principle of information hiding. The details about Convert_To_Integer (deleted above) are irrelevant to the calling unit, and they are better left hidden in case the algorithm ever changes. Examples explaining what goes on elsewhere in the code are very difficult to maintain and almost always become incorrect at the first code modification. 

The advantage of making comments visually distinct from the code is that it makes the code easier to scan, and the few important comments stand out better. Highlighting unusual or special code features indicates that they are intentional. This assists maintainers by focusing attention on code sections that are likely to cause problems during maintenance or when porting the program to another implementation. 

Comments should be used to document code that is nonportable, implementation-dependent, environment-dependent, or tricky in any way. They notify the reader that something unusual was put there for a reason. A beneficial comment would be one explaining a work around for a compiler bug. If you use a lower level (not &quot;ideal&quot; in the software engineering sense) solution, comment on it. Information included in the comments should state why you used that particular construct. Also include documentation on the failed attempts, for example, using a higher level structure. This kind of comment is useful to maintainers for historical purposes. You show the reader that a significant amount of thought went into the choice of a construct. 

Finally, comments should be used to explain what is not present in the code as well as what is present. If you make a conscious decision to not perform some action, like deallocating a data structure with which you appear to be finished, be sure to add a comment explaining why not. Otherwise, a maintainer may notice the apparent omission and &quot;correct&quot; it later, thus introducing an error. 

See also Guideline 9.3.1 for a discussion of what kind of documentation you should provide regarding tagged types and redispatching. 

==== notes ====

Further improvements can be made on the above example by declaring the variables Count and Sum in a local block so that their scope is limited and their initializations occur near their usage, e.g., by naming the block Compute_Average or by moving the code into a function called Average_Of. The computation of Max_Number can also be separated from the computation of Average. However, those changes are the subject of other guidelines; this example is only intended to illustrate the proper use of comments. 

=== Marker Comments ===

==== guideline ====

* Use pagination markers to mark program unit boundaries (see Guideline 2.1.7). 
* Repeat the unit name in a comment to mark the &lt;code&gt;begin&lt;/code&gt; of a package body, subprogram body, task body, or block if the &lt;code&gt;begin&lt;/code&gt; is preceded by declarations. 
* For long or heavily nested &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, mark the end of the statement with a comment summarizing the condition governing the statement. 
* For long or heavily nested &lt;code&gt;if&lt;/code&gt; statements, mark the &lt;code&gt;else&lt;/code&gt; part with a comment summarizing the conditions governing this portion of the statement. 

==== example ====

&lt;source lang=ada&gt;
if    A_Found then
   ...
elsif B_Found then
   ...

else  -- A and B were both not found
   ...

   if Count = Max then
      ...

   end if;

   ...
end if;  -- A_Found

------------------------------------------------------------------------
package body Abstract_Strings is
   ...

   ---------------------------------------------------------------------
   procedure Concatenate (...) is
   begin
      ...
   end Concatenate;
   ---------------------------------------------------------------------

   ...
begin  -- Abstract_Strings
   ...
end Abstract_Strings;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Marker comments emphasize the structure of code and make it easier to scan. They can be lines that separate sections of code or descriptive tags for a construct. They help the reader resolve questions about the current position in the code. This is more important for large units than for small ones. A short marker comment fits on the same line as the reserved word with which it is associated. Thus, it adds information without clutter. 

The &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elsif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;end if&lt;/code&gt; of an &lt;code&gt;if&lt;/code&gt; statement are often separated by long sequences of statements, sometimes involving other &lt;code&gt;if&lt;/code&gt; statements. As shown in the first example, marker comments emphasize the association of the keywords of the same statement over a great visual distance. Marker comments are not necessary with the block statement and loop statement because the syntax of these statements allows them to be named with the name repeated at the end. Using these names is better than using marker comments because the compiler verifies that the names at the beginning and end match. 

The sequence of statements of a package body is often very far from the first line of the package. Many subprogram bodies, each containing many &lt;code&gt;begin&lt;/code&gt; lines, may occur first. As shown in the second example, the marker comment emphasizes the association of the begin with the package. 

==== notes ====

Repeating names and noting conditional expressions clutters the code if overdone. It is visual distance, especially page breaks, that makes marker comments beneficial.

== Using Types ==

Strong typing promotes reliability in software. The type definition of an object defines all legal values and operations and allows the compiler to check for and identify potential errors during compilation. In addition, the rules of type allow the compiler to generate code to check for violations of type constraints at execution time. Using these Ada compiler's features facilitates earlier and more complete error detection than that which is available with less strongly typed languages. 

=== Declaring Types ===

==== guideline ====

* Limit the range of scalar types as much as possible.
* Seek information about possible values from the application.
* Do not reuse any of the subtype names in package Standard. 
* Use subtype declarations to improve program readability (Booch 1987). 
* Use derived types and subtypes in concert (see Guideline 5.3.1). 

==== example ====
&lt;source lang=ada&gt;
subtype Card_Image is String (1 .. 80);
Input_Line : Card_Image := (others =&gt; ' ');
-- restricted integer type:
type    Day_Of_Leap_Year     is                  range 1 .. 366;
subtype Day_Of_Non_Leap_Year is Day_Of_Leap_Year range 1 .. 365;
&lt;/source&gt;

By the following declaration, the programmer means, &quot;I haven't the foggiest idea how many,&quot; but the actual base range will show up buried in the code or as a system parameter: 

&lt;source lang=ada&gt;
Employee_Count : Integer;
&lt;/source&gt;

==== rationale ====

Eliminating meaningless values from the legal range improves the compiler's ability to detect errors when an object is set to an invalid value. This also improves program readability. In addition, it forces you to carefully think about each use of objects declared to be of the subtype. 

Different implementations provide different sets of values for most of the predefined types. A reader cannot determine the intended range from the predefined names. This situation is aggravated when the predefined names are overloaded. 

The names of an object and its subtype can clarify their intended use and document low-level design decisions. The example above documents a design decision to restrict the software to devices whose physical parameters are derived from the characteristics of punch cards. This information is easy to find for any later changes, thus enhancing program maintainability. 

You can rename a type by declaring a subtype without a constraint (Ada Reference Manual 1995, §8.5). You cannot overload a subtype name; overloading only applies to callable entities. Enumeration literals are treated as parameterless functions and so are included in this rule. 

Types can have highly constrained sets of values without eliminating useful values. Usage as described in Guideline 5.3.1 eliminates many flag variables and type conversions within executable statements. This renders the program more readable while allowing the compiler to enforce strong typing constraints. 

==== notes ====

Subtype declarations do not define new types, only constraints for existing types. 

Any deviation from this guideline detracts from the advantages of the strong typing facilities of the Ada language. 

==== exceptions ====

There are cases where you do not have a particular dependence on any range of numeric values. Such situations occur, for example, with array indices (e.g., a list whose size is not fixed by any particular semantics). See Guideline 7.2.1 for a discussion of appropriate uses of predefined types. 

=== Enumeration Types ===

==== guideline ====

* Use enumeration types instead of numeric codes. 
* Only if absolutely necessary, use representation clauses to match requirements of external devices. 

==== example ====
Use: 

&lt;source lang=ada&gt;
type Color is (Blue, Red, Green, Yellow);
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
Blue   : constant := 1;
Red    : constant := 2;
Green  : constant := 3;
Yellow : constant := 4;
&lt;/source&gt;

and add the following if necessary: 

&lt;source lang=ada&gt;
for Color use (Blue   =&gt; 1,
               Red    =&gt; 2,
               Green  =&gt; 3,
               Yellow =&gt; 4);
&lt;/source&gt;

==== rationale ====

Enumerations are more robust than numeric codes; they leave less potential for errors resulting from incorrect interpretation and from additions to and deletions from the set of values during maintenance. Numeric codes are holdovers from languages that have no user-defined types. 

In addition, Ada provides a number of attributes ('Pos, 'Val, 'Succ, 'Pred, 'Image, and 'Value) for enumeration types that, when used, are more reliable than user-written operations on encodings. 

A numeric code may at first seem appropriate to match external values. Instead, these situations call for a representation clause on the enumeration type. The representation clause documents the &quot;encoding.&quot; If the program is properly structured to isolate and encapsulate hardware dependencies (see Guideline 7.1.5), the numeric code ends up in an interface package where it can be easily found and replaced if the requirements change. 

In general, avoid using representation clauses for enumeration types. When there is no obvious ordering of the enumeration literals, an enumeration representation can create portability problems if the enumeration type must be reordered to accommodate a change in representation order on the new platform. 

== Summary ==

=== spelling ===

* Use underscores to separate words in a compound name.
* Represent numbers in a consistent fashion. 
* Represent literals in a radix appropriate to the problem.
* Use underscores to separate digits the same way commas or periods (or spaces for nondecimal bases) would be used in normal text. 
* When using scientific notation, make the E consistently either uppercase or lowercase. 
* In an alternate base, represent the alphabetic characters in either all uppercase or all lowercase. 
* Make reserved words and other elements of the program visually distinct from each other.
* Do not use an abbreviation of a long word as an identifier where a shorter synonym exists.
* Use a consistent abbreviation strategy.
* Do not use ambiguous abbreviations.
* To justify its use, an abbreviation must save many characters over the full word.
* Use abbreviations that are well-accepted in the application domain.
* Maintain a list of accepted abbreviations, and use only abbreviations on that list. 

=== naming conventions ===

* Choose names that are as self-documenting as possible.
* Use a short synonym instead of an abbreviation.
* Use names given by the application, but do not use obscure jargon.
* Avoid using the same name to declare different kinds of identifiers.
* Use singular, general nouns as subtype identifiers.
* Choose identifiers that describe one of the subtype's values.
* Consider using suffixes for subtype identifiers that define visible access types, visible subranges, or visible array types.
* For private types, do not use identifier constructions (e.g., suffixes) that are unique to subtype identifiers.
* Do not use the subtype names from predefined packages.
* Use predicate clauses or adjectives for Boolean objects.
* Use singular, specific nouns as object identifiers.
* Choose identifiers that describe the object's value during execution.
* Use singular, general nouns as identifiers for record components.
* Use a consistent naming convention for tagged types and associated packages.
* Use action verbs for procedures and entries.
* Use predicate clauses for Boolean functions.
* Use nouns for non-Boolean functions.
* Give packages names that imply a higher level of organization than subprograms. Generally, these are noun phrases that describe the abstraction provided.
* Give tasks names that imply an active entity.
* Use nouns descriptive of the data being protected for protected units.
* Consider naming generic subprograms as if they were nongeneric subprograms.
* Consider naming generic packages as if they were nongeneric packages.
* Make the generic names more general than the instantiated names.
* Use symbolic values instead of literals, wherever possible.
* Use the predefined constants Ada.Numerics.Pi and Ada.Numerics.e for the mathematical constants Pi and e.
* Use constants instead of variables for constant values.
* Use a constant when the value is specific to a type or when the value must be static. 
* Use named numbers instead of constants, whenever possible.
* Use named numbers to replace numeric literals whose type or context is truly universal. 
* Use constants for objects whose values cannot change after elaboration. (United Technologies 1987).
* Show relationships between symbolic values by defining them with static expressions.
* Use linearly independent sets of literals.
* Use attributes like 'First and 'Last instead of literals, wherever possible. 
* Use a name that indicates the kind of problem the exception represents.
* Include a prefix like New, Make, or Create in naming constructors (in this sense, operations to create and/or initialize an object).
* Use names indicative of their content for child packages containing constructors. 

=== comments ===

* Make the code as clear as possible to reduce the need for comments.
* Never repeat information in a comment that is readily available in the code.
* Where a comment is required, make it concise and complete.
* Use proper grammar and spelling in comments.
* Make comments visually distinct from the code.
* Structure comments in headers so that information can be automatically extracted by a tool. 
* Put a file header on each source file.
* Place ownership, responsibility, and history information for the file in the file header.
* Put a header on the specification of each program unit.
* Place information required by the user of the program unit in the specification header.
* Do not repeat information (except unit name) in the specification header that is present in the specification.
* Explain what the unit does, not how or why it does it.
* Describe the complete interface to the program unit, including any exceptions it can raise and any global effects it can have.
* Do not include information about how the unit fits into the enclosing software system. 
* Describe the performance (time and space) characteristics of the unit. 
* Place information required by the maintainer of the program unit in the body header.
* Explain how and why the unit performs its function, not what the unit does.
* Do not repeat information (except unit name) in the header that is readily apparent from reading the code.
* Do not repeat information (except unit name) in the body header that is available in the specification header.
* Comment on all data types, objects, and exceptions unless their names are self-explanatory.
* Include information on the semantic structure of complex, pointer-based data structures.
* Include information about relationships that are maintained between data objects.
* Omit comments that merely repeat the information in the name.
* Include information on redispatching for tagged types in cases where you intend the specializations (i.e., derived types) to override these redispatching operations.
* Minimize comments embedded among statements.
* Use comments only to explain parts of the code that are not obvious.
* Comment intentional omissions from the code.
* Do not use comments to paraphrase the code.
* Do not use comments to explain remote pieces of code, such as subprograms called by the current unit.
* Where comments are necessary, make them visually distinct from the code.
* Use pagination markers to mark program unit boundaries. 
* Repeat the unit name in a comment to mark the begin of a package body, subprogram body, task body, or block if the begin is preceded by declarations. 
* For long or heavily nested if and case statements, mark the end of the statement with a comment summarizing the condition governing the statement. 
* For long or heavily nested if statements, mark the else part with a comment summarizing the conditions governing this portion of the statement. 

=== using types ===

* Limit the range of scalar types as much as possible.
* Seek information about possible values from the application.
* Do not reuse any of the subtype names in package Standard. 
* Use subtype declarations to improve program readability (Booch 1987). 
* Use derived types and subtypes in concert.
* Use enumeration types instead of numeric codes. 
* Only if absolutely necessary, use representation clauses to match requirements of external devices.

{{Chapter navigation||Program Structure}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>2gs4915enzd3kfbbw4tsw6hitairoq4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Program Structure</title>
    <ns>0</ns>
    <id>200800</id>
    <revision>
      <id>2496680</id>
      <parentid>2496665</parentid>
      <timestamp>2013-03-04T01:02:07Z</timestamp>
      <contributor>
        <username>Samcconn</username>
        <id>908335</id>
      </contributor>
      <minor />
      <comment>/* high-level structure */ added a missing space.</comment>
      <text xml:space="preserve">{{Chapter navigation|Readability|Programming Practices}}

{{TOC|limit=3|float=none}}

== Introduction ==

Proper structure improves program clarity. This is analogous to readability on lower levels and facilitates the use of the readability guidelines (Chapter 3). The various program structuring facilities provided by Ada were designed to enhance overall clarity of design. These guidelines show how to use these facilities for their intended purposes. 

The concept of child packages supports the concept of subsystem, where a subsystem is represented in Ada as a hierarchy of library units. In general, a large system should be structured as a series of subsystems. Subsystems should be used to represent logically related library units, which together implement a single, high-level abstraction or framework. 

Abstraction and encapsulation are supported by the package concept and by private types. Related data and subprograms can be grouped together and seen by a higher level as a single entity. Information hiding is enforced via strong typing and by the separation of package and subprogram specifications from their bodies. Exceptions and tasks are additional Ada language elements that impact program structure. 

== High-Level Structure ==

Well-structured programs are easily understood, enhanced, and maintained. Poorly structured programs are frequently restructured during maintenance just to make the job easier. Many of the guidelines listed below are often given as general program design guidelines. 

=== Separate Compilation Capabilities ===

==== guideline ====

* Place the specification of each library unit package in a separate file from its body. 
* Avoid defining library unit subprograms that are not intended to be used as main programs. If such subprograms are defined, then create an explicit specification, in a separate file, for each library unit subprogram. 
* Minimize the use of subunits.
* In preference to subunits, use child library units to structure a subsystem into manageable units.
* Place each subunit in a separate file.
* Use a consistent file naming convention.
* In preference to nesting in a package body, use a private child and with it to the parent body. 
* Use private child unit specifications for data and subprograms that are required by (other) child units that extend a parent unit's abstraction or services.

==== example ====
The file names below illustrate one possible file organization and associated consistent naming convention. The library unit name uses the adb suffix for the body. The suffix ads indicates the specification, and any files containing subunits use names constructed by separating the body name from the subunit name with an underscore: 

 text_io.ads                 -- the specification
 text_io.adb                 -- the body
 text_io_integer_io.adb      -- a subunit
 text_io_fixed_io.adb        -- a subunit
 text_io_float_io.adb        -- a subunit
 text_io_enumeration_io.adb  -- a subunit

Depending on what characters your file system allows you to use in file names, you could show the distinction between parent and subunit name more clearly in the file name. If your file system allows the &quot;#&quot; character, for example, you could separate the body name from the subunit name with a #: 

 text_io.ads                 -- the specification
 text_io.adb                 -- the body
 text_io#integer_io.adb      -- a subunit
 text_io#fixed_io.adb        -- a subunit
 text_io#float_io.adb        -- a subunit
 text_io#enumeration_io.adb  -- a subunit

Some operating systems are case sensitive, although Ada itself is not a case-sensitive language. For example, you could choose a convention of all lowercase file names. 

==== rationale ====

The main reason for the emphasis on separate files in this guideline is to minimize the amount of recompilation required after each change. Typically, during software development, bodies of units are updated far more often than specifications. If the body and specification reside in the same file, then the specification will be compiled each time the body is compiled, even though the specification has not changed. Because the specification defines the interface between the unit and all of its users, this recompilation of the specification typically makes recompilation of all users necessary in order to verify compliance with the specification. If the specifications and bodies of the users also reside together, then any users of these units will also have to be recompiled and so on. The ripple effect can force a huge number of compilations that could have been avoided, severely slowing the development and test phase of a project. This is why you should place specifications of all library units (nonnested units) in separate files from their bodies. 

Library unit subprograms should be minimized. The only real use for library unit subprograms is as the main subprogram. In almost all other cases, it is better to embed the subprogram into a package. This provides a place (the package body) to localize data needed by the subprogram. Moreover, it cuts down on the number of separate modules in the system. 

In general, you should use a separate specification for any library subprogram that is mentioned in a with clause. This makes the with'ing unit dependent on the library subprogram specification, not its body. 

You should minimize the use of subunits because they create maintenance problems. Declarations appearing in the parent body are visible in the subunit, increasing the amount of data global to the subunit and, thus, increasing the potential ripple effect of changes. Subunits hinder reuse because they provide an incentive to put otherwise reusable code in the subunit directly rather than in a common routine called from multiple subprograms. 

With the availability of child library units in Ada 95, you can avoid most uses of subunits. For example, instead of using a subunit for a large nested body, you should try to encapsulate this code in a child library unit and add the necessary context clauses. You can modify the body of the child unit without having to recompile any of the other units in a subsystem. 

An additional benefit of using multiple, separate files is that it allows different implementors to modify different parts of the system at the same time with conventional editors, which do not allow multiple concurrent updates to a single file. 

Finally, keeping bodies and specifications separate makes it possible to have multiple bodies for the same specification or multiple specifications for the same body. Although Ada requires that there be exactly one specification per body in a system at any given time, it can still be useful to maintain multiple bodies or multiple specifications for use in different builds of a system. For example, a single specification may have multiple bodies, each of which implements the same functionality with a different tradeoff of time versus space efficiency, or, for machine-dependent code, there may be one body for each target machine. Maintaining multiple package specifications can also be useful during development and test. You may develop one specification for delivery to your customer and another for unit testing. The first one would export only those subprograms intended to be called from outside of the package during normal operation of the system. The second one would export all subprograms of the package so that each of them could be independently tested. 

A consistent file naming convention is recommended to make it easier to manage the large number of files that may result from following this guideline. 

In implementing the abstraction defined in a package specification, you often need to write supporting subprograms that manipulate the internal representation of the data. These subprograms should not be exported on the interface. You have a choice of whether to place them in the package body of the parent program or in a child package named in a context clause of the parent package body. When you place them in the parent package body, you make them inaccessible to all clients of the parent, including extensions of the parent declared in child packages. If these subprograms are needed to implement extensions of the parent abstraction, you would be forced to modify both the parent specification and the body because you would have to declare the extensions within the parent specification. This technique would then force recompilation of the entire package (specification and body) as well as all its clients. 

Alternatively, you can implement the supporting subprograms in a private child package. Because the parent unit's specification is not modified, neither it nor its clients need to be recompiled. The data and subprograms that might have declared in the parent unit body must now be declared in the private child unit's specification to make them visible to both the parent unit body and to any child units that extend the parent unit's services or abstractions. (See also Guidelines 4.1.6 and 4.2.) This use of private child units will generally minimize recompilations within the unit family and among its clients. 

In declaring the child package private, you achieve a similar effect to declaring it in the parent package body to the extent that clients of the parent cannot name the private child in a context clause. You gain flexibility because now you can extend the parent abstraction using child packages without having to recompile the parent specification or its body, assuming that you do not otherwise modify the parent or its body. This added flexibility will usually compensate for the increased dependency between units, in this case, the additional context clause on the parent body (and other child package bodies) that names the private child package of supporting subprograms. 

=== Configuration Pragmas ===

==== guideline ====

* When possible, express configuration pragmas through compiler options or other means that do not require modifications to the source code. 
* When configuration pragmas must be placed in source code, consider isolating them to one compilation unit per partition; if specified, the main subprogram for the partition is recommended. 

==== rationale ====

Configuration pragmas are generally used to select a partition-wide or system-wide option. Usually, they reflect either high-level software architecture decisions (e.g., pragma Task_Dispatching_Policy) or the use of the software in a particular application domain (e.g., safety-critical software). If a configuration pragma is embedded within a software component and that component is reused in a different context where the pragma is no longer appropriate, then it may cause problems in the new application. Such problems can include the rejection by the compilation system of otherwise legal source code or unexpected behavior at run-time. These problems can be significant given the wide scope of a configuration pragma. In addition, maintenance of the original system may require that some of these system-wide decisions be changed. If the configuration pragmas are scattered throughout the software, it may be difficult to locate the lines that need to change. 

As a result, it is recommended that all configuration pragmas be kept in a single compilation unit if possible to make them easy to locate and modify as needed. If this compilation unit is unlikely to be reused (e.g., a main subprogram), then the likelihood of conflicts with future reusers is reduced. Finally, if these system-wide decisions are indicated without embedding them in the code at all, such as through a compiler option, then the problems described above are even less likely to occur. 

==== exceptions ====

Certain pragmas (e.g., pragma Suppress) can be used in several forms, including as a configuration pragma. This guideline does not apply to such pragmas when they are not used as a configuration pragma. 

=== Subprograms ===

==== guideline ====

* Use subprograms to enhance abstraction.
* Restrict each subprogram to the performance of a single action. 

==== example ====

Your program is required to draw a menu of user options as part of a menu-driven user interface package. Because the contents of the menu can vary depending on the user state, the proper way to do this is to write a subprogram to draw the menu. This way, the output subprogram has one purpose and the way to determine the menu content is described elsewhere. 

&lt;source lang=ada&gt;
...
----------------------------------------------------------------------
procedure Draw_Menu
      (Title   : in    String;
       Options : in    Menu) is
   ...
begin  -- Draw_Menu
   Ada.Text_IO.New_Page;
   Ada.Text_IO.New_Line;
   Ada.Text_IO.Set_Col (Right_Column);
   Ada.Text_IO.Put_Line (Title);
   Ada.Text_IO.New_Line;
   for Choice in Alpha_Numeric loop
     if Options (Choice) /= Empty_Line then
         Valid_Option (Choice) := True;
         Ada.Text_IO.Set_Col (Left_Column);
         Ada.Text_IO.Put (Choice &amp; &quot; -- &quot;);
         Ada.Text_IO.Put_Line (Options (Choice));
     end if;
     ...
   end loop;
end Draw_Menu;
----------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Subprograms are an extremely effective and well-understood abstraction technique. Subprograms increase program readability by hiding the details of a particular activity. It is not necessary that a subprogram be called more than once to justify its existence. 

==== notes ====

Guideline 10.7.1 discusses dealing with the overhead of subroutine calls. 

=== Functions ===

==== guideline ====

* Use a function when the subprogram's primary purpose is to provide a single value. 
* Minimize the side effect of a function.
* Consider using a parameterless function when the value does not need to be static. 
* Use a parameterless function (instead of a constant) if the value should be inherited by types derived from the type.
* Use a parameterless function if the value itself is subject to change.

==== example ====
Although reading a character from a file will change what character is read next, this is accepted as a minor side effect compared to the primary purpose of the following function: 

&lt;source lang=ada&gt;
function Next_Character return Character is separate;
&lt;/source&gt;

However, the use of a function like this could lead to a subtle problem. Any time the order of evaluation is undefined, the order of the values returned by the function will effectively be undefined. In this example, the order of the characters placed in Word and the order that the following two characters are given to the Suffix parameters are unknown. No implementation of the Next_Character function can guarantee which character will go where: 

&lt;source lang=ada&gt;
   Word : constant String := String'(1 .. 5 =&gt; Next_Character);
begin  -- Start_Parsing
   Parse(Keyword =&gt; Word,
         Suffix1 =&gt; Next_Character,
         Suffix2 =&gt; Next_Character);
end Start_Parsing;
&lt;/source&gt;

Of course, if the order is unimportant (as in a random number generator), then the order of evaluation is unimportant. 

The following example shows the use of a parameterless function instead of a constant: 
&lt;source lang=ada&gt;
type T is private;
function Nil return T;        -- This function is a derivable operation of type T
function Default return T;    -- Also derivable, and the value can be changed by
                              -- recompiling the body of the function
&lt;/source&gt;
This same example could have been written using constants: 
&lt;source lang=ada&gt;
type T is private;
Nil : constant T;
Default : constant T;
&lt;/source&gt;

==== rationale ====

A side effect is a change to any variable that is not local to the subprogram. This includes changes to variables by other subprograms and entries during calls from the function if the changes persist after the function returns. Side effects are discouraged because they are difficult to understand and maintain. Additionally, the Ada language does not define the order in which functions are evaluated when they occur in expressions or as actual parameters to subprograms. Therefore, a program that depends on the order in which side effects of functions occur is erroneous. Avoid using side effects anywhere. 

=== Packages ===

==== guideline ====

* Use packages for information hiding.
* Use packages with tagged types and private types for abstract data types.
* Use packages to model abstract entities appropriate to the problem domain.
* Use packages to group together related type and object declarations (e.g., common declarations for two or more library units).
* Encapsulate machine dependencies in packages. Place a software interface to a particular device in a package to facilitate a change to a different device.
* Place low-level implementation decisions or interfaces in subprograms within packages.
* Use packages and subprograms to encapsulate and hide program details that may change (Nissen and Wallis 1984). 

==== example ====
Reading the names and other attributes of external files is highly machine dependent. A package called Directory could contain type and subprogram declarations to support a generalized view of an external directory that contains external files. Its internals may, in turn, depend on other packages more specific to the hardware or operating system: 

&lt;source lang=ada&gt;
package Directory is

   type Directory_Listing is limited private;

   procedure Read_Current_Directory (D : in out Directory_Listing);

   generic
      with procedure Process (Filename : in String);
   procedure Iterate (Over : in Directory_Listing);

   ...

private

   type Directory_Listing is ...

end Directory;

---------------------------------------------------------------

package body Directory is

   -- This procedure is machine dependent
   procedure Read_Current_Directory (D : in out Directory_Listing) is separate;


   procedure Iterate (Over : in Directory_Listing) is
      ...
   begin
      ...

      Process (Filename);

      ...
   end Iterate;

   ...

end Directory;
&lt;/source&gt;

==== rationale ====

Packages are the principal structuring facility in Ada. They are intended to be used as direct support for abstraction, information hiding, and modularization. For example, they are useful for encapsulating machine dependencies as an aid to portability. A single specification can have multiple bodies isolating implementation-specific information so other parts of the code do not need to change. 

Encapsulating areas of potential change helps to minimize the effort required to implement that change by preventing unnecessary dependencies among unrelated parts of the system. 

==== notes ====

The most prevalent objection to this guideline usually involves performance penalties. See Guideline 10.7.1 for a discussion about subprogram overhead. 

=== Child Library Units ===

==== guideline ====

* If a new library unit represents a logical extension to the original abstraction, define it as a child library unit.
* If a new library unit is independent (e.g., introduces a new abstraction that depends only in part on the existing one), then encapsulate the new abstraction in a separate library unit.
* Use child packages to implement a subsystem.
* Use public child units for those parts of a subsystem that should be visible to clients of the subsystem. 
* Use private child units for those parts of a subsystem that should not be visible to clients of the subsystem.
* Use private child units for local declarations used only in implementing the package specification. 
* Use child packages to implement constructors, even when they return access values.

==== example ====

The following example of a windowing system is taken from Cohen et al. (1993) and illustrates some of the uses of child units in designing subsystems. The parent (root) package declares the types, subtypes, and constants that its clients and subsystems need. Individual child packages provide specific parts of the windowing abstraction, such as atoms, fonts, graphic output, cursors, and keyboard information: 

&lt;source lang=ada&gt;
package X_Windows is
   ...
private
   ...
end X_Windows;


package X_Windows.Atoms is
   type Atom is private;
   ...
private
   ...
end X_Windows.Atoms;


package X_Windows.Fonts is
   type Font is private;
   ...
private
   ...
end X_Windows.Fonts;


package X_Windows.Graphic_Output is
   type Graphic_Context is private;
   type Image is private;
   ...
private
   ...
end X_Windows.Graphic_Output;


package X_Windows.Cursors is
   ...
end X_Windows.Cursors;


package X_Windows.Keyboard is
   ...
end X_Windows.Keyboard;
&lt;/source&gt;

==== rationale ====

The user can create more precise packages with less cluttered interfaces, using child library packages to extend the interfaces as needed. The parent contains only the relevant functionality. The parent provides a general-purpose interface, while the child units provide more complete programming interfaces, tailored to that aspect of an abstraction that they are extending or defining. 

Child packages build on the modular strength of Ada where &quot;the distinct specification and body decouple the user interface to a package (the specification) from its implementation (the body)&quot; (Rationale 1995, §II.7). Child packages provide the added capability of being able to extend a parent package without recompiling the parent or the parent's clients. 

Child packages allow you to write logically distinct packages that share a private type. The visibility rules give the private part of the child specification and the body of the child visibility into the private part of the parent. Thus, you can avoid creating a monolithic package for the sake of developing abstractions that share a private type and need to know its representation. The private representation is not available to clients of the package, so the abstraction in the package and its children is maintained. 

Using private child packages for local declarations enables you to have available the support declarations you need when implementing both the parent package and extensions to the parent package. You enhance the maintainability of your program by using a common set of support declarations (data representations, data manipulation subprograms). You can modify the internal representation and the implementation of the support subprograms without modifying or recompiling the rest of your subsystem because these support subprograms are implemented in the body of the private child package. See also Guidelines 4.1.1, 4.2.1, 8.4.1, and 8.4.8. 

See also Guideline 9.4.1 for a discussion of the use of child library units in creating a tagged type hierarchy. 

=== Cohesion ===

==== guideline ====

* Make each package serve a single purpose. 
* Use packages to group related data, types, and subprograms.
* Avoid collections of unrelated objects and subprograms (NASA 1987; Nissen and Wallis 1984). 
* Consider restructuring a system to move two highly related units into the same package (or package hierarchy) or to move relatively independent units into separate packages. 

==== example ====
As a bad example, a package named Project_Definitions is obviously a &quot;catch all&quot; for a particular project and is likely to be a jumbled mess. It probably has this form to permit project members to incorporate a single with clause into their software. 

Better examples are packages called Display_Format_Definitions, containing all the types and constants needed by some specific display in a specific format, and Cartridge_Tape_Handler, containing all the types, constants, and subprograms that provide an interface to a special-purpose device. 

==== rationale ====

The degree to which the entities in a package are related has a direct impact on the ease of understanding packages and programs made up of packages. There are different criteria for grouping, and some criteria are less effective than others. Grouping the class of data or activity (e.g., initialization modules) or grouping data or activities based on their timing characteristics is less effective than grouping based on function or need to communicate through data (Charette 1986). 

The &quot;correct&quot; structuring of a system can make a tremendous difference in the maintainability of a system. Although it may seem painful at the time, it is important to restructure if the initial structuring is not quite right. 

See also Guideline 5.4.2 on heterogeneous data. 

==== notes ====

Traditional subroutine libraries often group functionally unrelated subroutines. Even such libraries should be broken into a collection of packages, each containing a logically cohesive set of subprograms. 

=== Data Coupling ===

==== guideline ====

* Avoid declaring variables in package specifications. 

==== example ====

This is part of a compiler. Both the package handling error messages and the package containing the code generator need to know the current line number. Rather than storing this in a shared variable of type Natural, the information is stored in a package that hides the details of how such information is represented and makes it available with access routines: 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Compilation_Status is
   type Line_Number is range 1 .. 2_500_000;
   function Source_Line_Number return Line_Number;
end Compilation_Status;
-------------------------------------------------------------------------
with Compilation_Status;
package Error_Message_Processing is
   -- Handle compile-time diagnostic.
end Error_Message_Processing;
-------------------------------------------------------------------------
with Compilation_Status;

package Code_Generation is
   -- Operations for code generation.
end Code_Generation;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Strongly coupled program units can be difficult to debug and very difficult to maintain. By protecting shared data with access functions, the coupling is lessened. This prevents dependence on the data structure, and access to the data can be controlled. 

==== notes ====

The most prevalent objection to this guideline usually involves performance penalties. When a variable is moved to the package body, subprograms to access the variable must be provided and the overhead involved during each call to those subprograms is introduced. See Guideline 10.7.1 for a discussion about subprogram overhead.

=== Tasks ===

==== guideline ====

* Use tasks to model abstract, asynchronous entities within the problem domain.
* Use tasks to define concurrent algorithms for multiprocessor architectures.
* Use tasks to perform concurrent, cyclic, or prioritized activities (NASA 1987). 

==== rationale ====
The rationale for this guideline is given under Guideline 6.1.2. Chapter 6 discusses tasking in more detail. 

=== Protected Types ===

==== guideline ====

* Use protected types to control or synchronize access to data or devices.
* Use protected types to implement synchronization tasks, such as a passive resource monitor. 

==== example ====
See example in Guideline 6.1.1. 

==== rationale ====

The rationale for this guideline is given under Guideline 6.1.1. Chapter 6 discusses concurrency and protected types in more detail. 

== Visibility ==

Ada's ability to enforce information hiding and separation of concerns through its visibility controlling features is one of the most important advantages of the language, particularly when &quot;pieces of a large system are being developed separately.&quot; Subverting these features, for example, by excessive reliance on the use clause, is wasteful and dangerous. See also Guidelines 5.7 and 9.4.1. 

=== Minimization of Interfaces ===

==== guideline ====

* Put only what is needed for the use of a package into its specification.
* Minimize the number of declarations in package specifications.
* Do not include extra operations simply because they are easy to build.
* Minimize the context (with) clauses in a package specification.
* Reconsider subprograms that seem to require large numbers of parameters.
* Do not manipulate global data within a subprogram or package merely to limit the number of parameters.
* Avoid unnecessary visibility; hide the implementation details of a program unit from its users.
* Use child library units to control the visibility of parts of a subsystem interface.
* Use private child packages for those declarations that should not be used outside the subsystem. 
* Use child library units present different views of an entity to different clients.
* Design (and redesign) interfaces after having worked out the logic of various expected clients of the interface. 

==== example ====

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Telephone_Book is
   type Listing is limited private;
   procedure Set_Name (New_Name : in     String;
                       Current  : in out Listing);
   procedure Insert (Name    : in     String;
                     Current : in out Listing);
   procedure Delete (Obsolete : in     String;
                     Current  : in out Listing);
private
   type Information;
   type Listing is access Information;
end Telephone_Book;
-------------------------------------------------------------------------
package body Telephone_Book is
   -- Full details of record for a listing
   type Information is
      record
         ...
         Next : Listing;
      end record;
   First : Listing;
   procedure Set_Name (New_Name : in     String;
                       Current  : in out Listing) is separate;
   procedure Insert (Name    : in      String;
                     Current : in out  Listing) is separate;
   procedure Delete (Obsolete : in     String;
                     Current  : in out Listing) is separate;
end Telephone_Book;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

For each entity in the specification, give careful consideration to whether it could be moved to a child package or to the parent package body. The fewer the extraneous details, the more understandable the program, package, or subprogram. It is important to maintainers to know exactly what a package interface is so that they can understand the effects of changes. Interfaces to a subprogram extend beyond the parameters. Any modification of global data from within a package or subprogram is an undocumented interface to the &quot;outside&quot; as well. 

Minimize the context clauses on a specification by moving unnecessary clauses to the body. This technique makes the reader's job easier, localizes the recompilation required when library units change, and helps prevent a ripple effect during modifications. See also Guideline 4.2.3. 

Subprograms with large numbers of parameters often indicate poor design decisions (e.g., the functional boundaries of the subprogram are inappropriate or parameters are structured poorly). Conversely, subprograms with no parameters are likely to be accessing global data. 

Objects visible within package specifications can be modified by any unit that has visibility to them. The object cannot be protected or represented abstractly by its enclosing package. Objects that must persist should be declared in package bodies. Objects whose value depends on program units external to their enclosing package are probably either in the wrong package or are better accessed by a subprogram specified in the package specification. 

Child library units can provide distinct views of the hierarchical library. The engineer can provide a different view for the client than for the implementor (Rationale 1995, §10.1). By creating private child packages, the engineer can provide facilities that are only available inside the subsystem rooted at the parent library unit. The declarations inside a private child package specification are not exported outside the subsystem. Thus, the engineer can declare utilities needed to implement an abstraction in a private child package (e.g., debugging utilities [Cohen et al. 1993]) and be certain that users of the abstraction (i.e., the clients) cannot access these utilities. 

Different clients may have different needs for essentially the same resource. Instead of having multiple versions of the resources, consider having child units that export different views for different purposes. 

Designing an interface based strictly on predicting what clients &quot;might&quot; need can produce a bloated and inappropriate interface. What then happens is that clients try to &quot;live&quot; with the interface and work around the inappropriate interfaces, repeating code that logically should be part of the shared abstraction. See Guideline 8.3.1 for a discussion of interfaces from the reusability perspective. 

==== notes ====

In some cases, subroutine libraries look like large, monolithic packages. In such cases, it may be beneficial to break these up into smaller packages, grouping them according to category (e.g., trigonometric functions). 

=== Nested Packages ===

==== guideline ====

* Use child packages rather than nested packages to present different views of the same abstraction.
* Nest package specifications within another package specification only for grouping operations or hiding common implementation details. 

==== example ====
Annex A of the Ada Reference Manual (1995) gives an example of package specification nesting. The specification of the generic package Generic_Bounded_Length is nested inside the specification of package Ada.Strings.Bounded. The nested package is a generic, grouping closely related operations.

==== rationale ====

Grouping package specifications into an encompassing package emphasizes a relationship of commonality among those packages. It also allows them to share common implementation details resulting from the relationship. Nesting packages allows you to organize the name space of the package in contrast to the semantic effect of nesting inside of subprograms or task bodies. 

An abstraction occasionally needs to present different views to different classes of users. Building one view upon another as an additional abstraction does not always suffice because the functionality of the operations presented by the views may be only partially disjointed. Nesting specifications groups the facilities of the various views, yet associates them with the abstraction they present. Abusive mixing of the views by another unit would be easy to detect due to the multiple use clauses or an incongruous mix of qualified names. 

See the rationale discussed in Guideline 4.2.1. 

=== Restricting Visibility ===

==== guideline ====

* Consider using private child packages in lieu of nesting.
* Restrict the visibility of program units as much as possible by nesting them inside package bodies (Nissen and Wallis 1984) if you cannot use a private child package.
* Minimize nesting program units inside subprograms and tasks.
* Minimize the scope within which with clauses apply. 
* Only with those units directly needed.

==== example ====

This program illustrates the use of child library units to restrict visibility. The procedure Rational_Numbers.Reduce is nested inside the body of Rational_Numbers to restrict its visibility to the implementation of this abstraction. Rather than make the text input/output facilities visible to the entire rational number hierarchy, it is only available to the body of the child library Rational_Numbers.IO. This example is adapted from the Ada Reference Manual (1995, §§7.1, 7.2, and 10.1.1): 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Rational_Numbers is
   type Rational is private;
   function &quot;=&quot; (X, Y: Rational) return Boolean;
   function &quot;/&quot; (X, Y: Integer)  return Rational;  -- construct a rational number
   function &quot;+&quot; (X, Y: Rational) return Rational;
   function &quot;-&quot; (X, Y: Rational) return Rational;
   function &quot;*&quot; (X, Y: Rational) return Rational;
   function &quot;/&quot; (X, Y: Rational) return Rational;  -- rational division
private
   ...
end Rational_Numbers;
package body Rational_Numbers is
   procedure Reduce (R :in out Rational) is . . . end Reduce;
   . . .
end Rational_Numbers;
package Rational_Numbers.IO is
   procedure Put (R : in  Rational);
   procedure Get (R : out Rational);
end Rational_Numbers.IO;
with Ada.Text_IO;
with Ada.Integer_Text_IO;
package body Rational_Numbers.IO is   -- has visibility to parent private type declaration
   procedure Put (R : in  Rational) is
   begin
      Ada.Integer_Text_IO.Put (Item =&gt; R.Numerator, Width =&gt; 0);
      Ada.Text_IO.Put (&quot;/&quot;);
      Ada.Integer_Text_IO.Put (Item =&gt; R.Denominator, Width =&gt; 0);
   end Put;
   procedure Get (R : out Rational) is . . . end Get;
end Rational_Numbers.IO;
&lt;/source&gt;

==== rationale ====

Restricting visibility of a program unit ensures that the program unit is not called from some part of the system other than that which was intended. This is done by nesting it inside the only unit that uses it, by hiding it inside a package body rather than declaring it in the package specification, or by declaring it as a private child unit. This avoids errors and eases the job of maintainers by guaranteeing that a local change in that unit will not have an unforeseen global effect. 

Restricting visibility of a library unit by using with clauses on subunits rather than on the entire parent unit is useful in the same way. In the example above, it is clear that the package Text_IO is used only by the Listing_Facilities package of the compiler. 

Nesting inside subprograms and tasks is discouraged because it leads to unreusable components. These components are essentially unreusable because they make undesirable up-level references into the defining context. Unless you truly want to ensure that the program unit is not called from some unintended part of the system, you should minimize this form of nesting. 

See also Guideline 4.2.1 for a discussion of the use of child units. 

==== notes ====

One way to minimize the coverage of a with clause is to use it only with subunits that really need it. Consider making those subunits separate compilation units when the need for visibility to a library unit is restricted to a subprogram or two. 

=== Hiding Tasks ===

==== guideline ====

* Carefully consider encapsulation of tasks.

==== example ====

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
package Disk_Head_Scheduler is
   type Words        is ...
   type Track_Number is ...
   procedure Transmit (Track : in     Track_Number;
                       Data  : in     Words);
   ...
end Disk_Head_Scheduler;
-------------------------------------------------------------------------
package body Disk_Head_Scheduler is
   ...
   task Control is
      entry Sign_In (Track : in     Track_Number);
      ...
   end Control;
   ----------------------------------------------------------------------
   task Track_Manager is
      entry Transfer(Track_Number) (Data : in     Words);
   end Track_Manager;
   ----------------------------------------------------------------------
   ...
   procedure Transmit (Track : in     Track_Number;
                       Data  : in     Words) is
   begin
      Control.Sign_In(Track);
      Track_Manager.Transfer(Track)(Data);
   end Transmit;
   ----------------------------------------------------------------------
   ...
end Disk_Head_Scheduler;
-------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The decision whether to declare a task in the specification or body of an enclosing package is not a simple one. There are good arguments for both. 

Hiding a task specification in a package body and exporting (via subprograms ) only required entries reduces the amount of extraneous information in the package specification. It allows your subprograms to enforce any order of entry calls necessary to the proper operation of the tasks. It also allows you to impose defensive task communication practices (see Guideline 6.2.2) and proper use of conditional and timed entry calls. Finally, it allows the grouping of entries into sets for export to different classes of users (e.g., producers versus consumers) or the concealment of entries that should not be made public at all (e.g., initialization, completion, signals). Where performance is an issue and there are no ordering rules to enforce, the entries can be renamed as subprograms to avoid the overhead of an extra procedure call. 

An argument, which can be viewed as an advantage or disadvantage, is that hiding the task specification in a package body hides the fact of a tasking implementation from the user. If the application is such that a change to or from a tasking implementation or a reorganization of services among tasks need not concern users of the package, then this is an advantage. However, if the package user must know about the tasking implementation to reason about global tasking behavior, then it is better not to hide the task completely. Either move it to the package specification or add comments stating that there is a tasking implementation, describing when a call may block, etc. Otherwise, it is the package implementor's responsibility to ensure that users of the package do not have to concern themselves with behaviors such as deadlock, starvation, and race conditions. 

Finally, keep in mind that hiding tasks behind a procedural interface prevents the usage of conditional and timed entry calls and entry families, unless you add parameters and extra code to the procedures to make it possible for callers to direct the procedures to use these capabilities. 


== Exceptions ==

This section addresses the issue of exceptions in the context of program structures. It discusses how exceptions should be used as part of the interface to a unit, including what exceptions to declare and raise and under what conditions to raise them. Information on how to handle, propagate, and avoid raising exceptions is found in Guideline 5.8. Guidelines on how to deal with portability issues are in Guideline 7.5. 

=== Using Exceptions to Help Define an Abstraction ===

==== guideline ====

* For unavoidable internal errors for which no user recovery is possible, declare a single user-visible exception. Inside the abstraction, provide a way to distinguish between the different internal errors.
* Do not borrow an exception name from another context.
* Export (declare visibly to the user) the names of all exceptions that can be raised.
* In a package, document which exceptions can be raised by each subprogram and task entry.
* Do not raise exceptions for internal errors that can be avoided or corrected within the unit.
* Do not raise the same exception to report different kinds of errors that are distinguishable by the user of the unit.
* Provide interrogative functions that allow the user of a unit to avoid causing exceptions to be raised.
* When possible, avoid changing state information in a unit before raising an exception.
* Catch and convert or handle all predefined and compiler-defined exceptions at the earliest opportunity.
* Do not explicitly raise predefined or implementation-defined exceptions.
* Never let an exception propagate beyond its scope.

==== example ====

This package specification defines two exceptions that enhance the abstraction: 

&lt;source lang=ada&gt;
-------------------------------------------------------------------------
generic
   type Element is private;
package Stack is

   function Stack_Empty return Boolean;
   function Stack_Full  return Boolean;

   procedure Pop  (From_Top :    out Element);
   procedure Push (Onto_Top : in     Element);

   -- Raised when Pop is used on empty stack.
   Underflow : exception;

   -- Raised when Push is used on full stack.
   Overflow  : exception;

end Stack;
-------------------------------------------------------------------------
...
----------------------------------------------------------------------
procedure Pop (From_Top :    out Element) is
begin
   ...

   if Stack_Empty then
      raise Underflow;

   else -- Stack contains at least one element
      Top_Index := Top_Index - 1;
      From_Top  := Data(Top_Index + 1);

   end if;
end Pop;
--------------------------------------------------------------------
...
&lt;/source&gt;

==== rationale ====

Exceptions should be used as part of an abstraction to indicate error conditions that the abstraction is unable to prevent or correct. Because the abstraction is unable to correct such an error, it must report the error to the user. In the case of a usage error (e.g., attempting to invoke operations in the wrong sequence or attempting to exceed a boundary condition), the user may be able to correct the error. In the case of an error beyond the control of the user, the user may be able to work around the error if there are multiple mechanisms available to perform the desired operation. In other cases, the user may have to abandon use of the unit, dropping into a degraded mode of limited functionality. In any case, the user must be notified. 

Exceptions are a good mechanism for reporting such errors because they provide an alternate flow of control for dealing with errors. This allows error-handling code to be kept separate from the code for normal processing. When an exception is raised, the current operation is aborted and control is transferred directly to the appropriate exception handler. 

Several of the guidelines above exist to maximize the ability of the user to distinguish and correct different kinds of errors. Declaring new exception names, rather than raising exceptions declared in other packages, reduces the coupling between packages and also makes different exceptions more distinguishable. Exporting the names of all exceptions that a unit can raise, rather than declaring them internally to the unit, makes it possible for users of the unit to refer to the names in exception handlers. Otherwise, the user would be able to handle the exception only with an others handler. Finally, use comments to document exactly which of the exceptions declared in a package can be raised by each subprogram or task entry making it possible for the user to know which exception handlers are appropriate in each situation. 

In situations where there are errors for which the abstraction user can take no intelligent action (e.g., there is no workaround or degraded mode), it is better to export a single internal error exception. Within the package, you should consider distinguishing between the different internal errors. For instance, you could record or handle different kinds of internal error in different ways. When you propagate the error to the user, however, you should use a special internal error exception, indicating that no user recovery is possible. You should also provide relevant information when you propagate the error, using the facilities provided in Ada.Exceptions. Thus, for any abstraction, you effectively provide N + 1 different exceptions: N different recoverable errors and one irrecoverable error for which there is no mapping to the abstraction. Both the application requirements and what the client needs/wants in terms of error information help you identify the appropriate exceptions for an abstraction. 

Because they cause an immediate transfer of control, exceptions are useful for reporting unrecoverable errors, which prevent an operation from being completed, but not for reporting status or modes incidental to the completion of an operation. They should not be used to report internal errors that a unit was able to correct invisibly to the user. 

To provide the user with maximum flexibility, it is a good idea to provide interrogative functions that the user can call to determine whether an exception would be raised if a subprogram or task entry were invoked. The function Stack_Empty in the above example is such a function. It indicates whether Underflow would be raised if Pop were called. Providing such functions makes it possible for the user to avoid triggering exceptions. 

To support error recovery by its user, a unit should try to avoid changing state during an invocation that raises an exception. If a requested operation cannot be completely and correctly performed, then the unit should either detect this before changing any internal state information or should revert to the state at the time of the request. For example, after raising the exception Underflow, the stack package in the above example should remain in exactly the same state it was in when Pop was called. If it were to partially update its internal data structures for managing the stack, then future Push and Pop operations would not perform correctly. This is always desirable, but not always possible. 

User-defined exceptions should be used instead of predefined or compiler-defined exceptions because they are more descriptive and more specific to the abstraction. The predefined exceptions are very general and can be triggered by many different situations. Compiler-defined exceptions are nonportable and have meanings that are subject to change even between successive releases of the same compiler. This introduces too much uncertainty for the creation of useful handlers. 

If you are writing an abstraction, remember that the user does not know about the units you use in your implementation. That is an effect of information hiding. If any exception is raised within your abstraction, you must catch it and handle it. The user is not able to provide a reasonable handler if the original exception is allowed to propagate out of the body of your abstraction. You can still convert the exception into a form intelligible to the user if your abstraction cannot effectively recover on its own. 

Converting an exception means raising a user-defined exception in the handler for the original exception. This introduces a meaningful name for export to the user of the unit. Once the error situation is couched in terms of the application, it can be handled in those terms. 

== Summary ==

=== high-level structure ===

* Place the specification of each library unit package in a separate file from its body. 
* Avoid defining library unit subprograms that are not intended to be used as main programs. If such subprograms are defined, then create an explicit specification, in a separate file, for each library unit subprogram.
* Minimize the use of subunits.
* In preference to subunits, use child library units to structure a subsystem into manageable units.
* Place each subunit in a separate file.
* Use a consistent file naming convention.
* In preference to nesting in a package body, use a private child and with it to the parent body. 
* Use private child unit specifications for data and subprograms that are required by (other) child units that extend a parent unit's abstraction or services.
* When possible, express configuration pragmas through compiler options or other means that do not require modifications to the source code. .
* When configuration pragmas must be placed in source code, consider isolating them to one compilation unit per partition; if specified, the main subprogram for the partition is recommended.
* Use subprograms to enhance abstraction.
* Restrict each subprogram to the performance of a single action.
* Use a function when the subprogram's primary purpose is to provide a single value.
* Minimize the side effect of a function.
* Consider using a parameterless function when the value does not need to be static.
* Use a parameterless function (instead of a constant) if the value should be inherited by types derived from the type.
* Use a parameterless function if the value itself is subject to change. 
* Use packages for information hiding.
* Use packages with tagged types and private types for abstract data types.
* Use packages to model abstract entities appropriate to the problem domain.
* Use packages to group together related type and object declarations (e.g., common declarations for two or more library units).
* Encapsulate machine dependencies in packages. Place a software interface to a particular device in a package to facilitate a change to a different device.
* Place low-level implementation decisions or interfaces in subprograms within packages. 
* Use packages and subprograms to encapsulate and hide program details that may change (Nissen and Wallis 1984).
* If a new library unit represents a logical extension to the original abstraction, define it as a child library unit.
* If a new library unit is independent (e.g., introduces a new abstraction that depends only in part on the existing one), then encapsulate the new abstraction in a separate library unit.
* Use child packages to implement a subsystem.
* Use public child units for those parts of a subsystem that should be visible to clients of the subsystem. 
* Use private child units for those parts of a subsystem that should not be visible to clients of the subsystem.
* Use private child units for local declarations used only in implementing the package specification.
* Use child packages to implement constructors, even when they return access values.
* Make each package serve a single purpose.
* Use packages to group related data, types, and subprograms.
* Avoid collections of unrelated objects and subprograms (NASA 1987; Nissen and Wallis 1984). 
* Consider restructuring a system to move two highly related units into the same package (or package hierarchy) or to move relatively independent units into separate packages.
* Avoid declaring variables in package specifications.
* Use tasks to model abstract, asynchronous entities within the problem domain.
* Use tasks to define concurrent algorithms for multiprocessor architectures.
* Use tasks to perform concurrent, cyclic, or prioritized activities (NASA 1987). 
* Use protected types to control or synchronize access to data or devices.
* Use protected types to implement synchronization tasks, such as a passive resource monitor.

=== visibility ===

* Put only what is needed for the use of a package into its specification.
* Minimize the number of declarations in package specifications.
* Do not include extra operations simply because they are easy to build.
* Minimize the context (with) clauses in a package specification.
* Reconsider subprograms that seem to require large numbers of parameters.
* Do not manipulate global data within a subprogram or package merely to limit the number of parameters.
* Avoid unnecessary visibility; hide the implementation details of a program unit from its users. 
* Use child library units to control the visibility of parts of a subsystem interface.
* Use private child packages for those declarations that should not be used outside the subsystem. 
* Use child library units to present different views of an entity to different clients.
* Design (and redesign) interfaces after having worked out the logic of various expected clients of the interface.
* Use child packages rather than nested packages to present different views of the same abstraction. 
* Nest package specifications within another package specification only for grouping operations or hiding common implementation details.
* Consider using private child packages in lieu of nesting.
* Restrict the visibility of program units as much as possible by nesting them inside package bodies (Nissen and Wallis 1984) if you cannot use a private child package.
* Minimize nesting program units inside subprograms and tasks.
* Minimize the scope within which with clauses apply. 
* Only with those units directly needed.
* Carefully consider encapsulation of tasks.

==== exceptions ====

* For unavoidable internal errors for which no user recovery is possible, declare a single user-visible exception. Inside the abstraction, provide a way to distinguish between the different internal errors.
* Do not borrow an exception name from another context.
* Export (declare visibly to the user) the names of all exceptions that can be raised.
* In a package, document which exceptions can be raised by each subprogram and task entry.
* Do not raise exceptions for internal errors that can be avoided or corrected within the unit.
* Do not raise the same exception to report different kinds of errors that are distinguishable by the user of the unit.
* Provide interrogative functions that allow the user of a unit to avoid causing exceptions to be raised.
* When possible, avoid changing state information in a unit before raising an exception.
* Catch and convert or handle all predefined and compiler-defined exceptions at the earliest opportunity.
* Do not explicitly raise predefined or implementation-defined exceptions.
* Never let an exception propagate beyond its scope.


{{Chapter navigation||Concurrency}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>kp0dlanvp49osrqfwbtkr5wt0i585ng</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Concurrency</title>
    <ns>0</ns>
    <id>200801</id>
    <revision>
      <id>2371777</id>
      <parentid>2053132</parentid>
      <timestamp>2012-07-01T16:48:20Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>Added new chapter 5: Programming Practices</comment>
      <text xml:space="preserve">{{Chapter navigation|Programming Practices|Portability}}

{{TOC|limit=3|float=none}}

== Introduction ==

Concurrency exists as either apparent concurrency or real concurrency. In a single processor environment, apparent concurrency is the result of interleaved execution of concurrent activities. In a multiprocessor environment, real concurrency is the result of overlapped execution of concurrent activities. 

Concurrent programming is more difficult and error prone than sequential programming. The concurrent programming features of Ada are designed to make it easier to write and maintain concurrent programs that behave consistently and predictably and avoid such problems as deadlock and starvation. The language features themselves cannot guarantee that programs have these desirable properties. They must be used with discipline and care, a process supported by the guidelines in this chapter. 

The correct usage of Ada concurrency features results in reliable, reusable, and portable software. Protected objects (added in Ada 95) encapsulate and provide synchronized access to their private data (Rationale 1995, §II.9). Protected objects help you manage shared data without incurring a performance penalty. Tasks model concurrent activities and use the rendezvous to synchronize between cooperating concurrent tasks. Much of the synchronization required between tasks involves data synchronization, which can be accomplished most efficiently, in general, using protected objects. Misuse of language features results in software that is unverifiable and difficult to reuse or port. For example, using task priorities or delays to manage synchronization is not portable. It is also important that a reusable component not make assumptions about the order or speed of task execution (i.e., about the compiler's tasking implementation). 

Although concurrent features such as tasks and protected objects are supported by the core Ada language, care should be taken when using these features with implementations that do not specifically support Annex D (Real-Time Systems). If Annex D is not specifically supported, features required for real-time applications might not be implemented. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Concurrency Options ==

Many problems map naturally to a concurrent programming solution. By understanding and correctly using the Ada language concurrency features, you can produce solutions that are largely independent of target implementation. Tasks provide a means, within the Ada language, of expressing concurrent, asynchronous threads of control and relieving programmers from the problem of explicitly controlling multiple concurrent activities. Protected objects serve as a building block to support other synchronization paradigms. 
Tasks cooperate to perform the required activities of the software. Synchronization and mutual exclusion are required between individual tasks. The Ada rendezvous and protected objects provide powerful mechanisms for both synchronization and mutual exclusion. 

=== Protected Objects ===

==== guideline ====

* Consider using protected objects to provide mutually exclusive access to data.
* Consider using protected objects to control or synchronize access to data shared by multiple tasks .
* Consider using protected objects to implement synchronization, such as a passive resource monitor. 
* Consider encapsulating protected objects in the private part or body of a package.
* Consider using a protected procedure to implement an interrupt handler. 
* Do not attach a protected procedure handler to a hardware interrupt if that interrupt has a maximum priority greater than the ceiling priority assigned to the handler.
* Avoid the use of global variables in entry barriers.
* Avoid the use of barrier expressions with side effects. 

==== example ====

&lt;source lang=ada&gt;
generic
   type Item is private;
   Maximum_Buffer_Size : in Positive;
package Bounded_Buffer_Package is

   subtype Buffer_Index is Positive range 1..Maximum_Buffer_Size;
   subtype Buffer_Count is Natural  range 0..Maximum_Buffer_Size;
   type    Buffer_Array is array (Buffer_Index) of Item;

   protected type Bounded_Buffer is
      entry Get (X : out Item);
      entry Put (X : in Item);
   private
      Get_Index : Buffer_Index := 1;
      Put_Index : Buffer_Index := 1;
      Count     : Buffer_Count := 0;
      Data      : Buffer_Array;
   end Bounded_Buffer;

end Bounded_Buffer_Package;

------------------------------------------------------------------
package body Bounded_Buffer_Package is

   protected body Bounded_Buffer is

      entry Get (X : out Item) when Count &gt; 0 is
      begin
         X := Data(Get_Index);
         Get_Index := (Get_Index mod Maximum_Buffer_Size) + 1;
         Count := Count - 1;
      end Get;

      entry Put (X : in Item) when Count &lt; Maximum_Buffer_Size is
      begin
         Data(Put_Index) := X;
         Put_Index  := (Put_Index mod Maximum_Buffer_Size) + 1;
         Count := Count + 1;
      end Put;

   end Bounded_Buffer;

end Bounded_Buffer_Package;
&lt;/source&gt;

==== rationale ====

Protected objects are intended to provide a &quot;lightweight&quot; mechanism for mutual exclusion and data synchronization. You should use a task only when you need to introduce explicitly a new, concurrent thread of control (see Guideline 6.1.2). 

Protected objects offer a low overhead, efficient means to coordinate access to shared data. A protected type declaration is similar to a program unit and consists of both a specification and a body. The data to be protected must be declared in the specification, as well as the operations that can be used to manipulate this data. If some operations are only allowed conditionally, entries must be provided. Ada 95 rules require that entry barriers be evaluated at the end of procedure calls and entry calls on protected objects. Entry barriers should avoid referring to global variables so that the underlying assumptions of the state of the protected object are not violated. Protected procedures and entries should be used to change the state of a protected object. 

Most clients of an abstraction do not need to know how it is implemented, whether it is a regular abstraction or a shared abstraction. A protected type is inherently a limited type, and you can use protected types to implement a limited private type exported by a package. As pointed out in Guideline 5.3.3, abstractions are best implemented using private types (possibly derived from controlled types) or limited private types, providing appropriate operations that overcome the restrictiveness imposed by the use of private types. 

The Rationale (1995, §9.1) describes the interrupt handling features that make the protected procedure the recommended building block: 

A protected procedure is very well suited to act as an interrupt handler for a number of reasons; they both typically have a short bounded execution time, do not arbitrarily block, have a limited context and finally they both have to integrate with the priority model. The nonblocking critical region matches the needs of an interrupt handler, as well as the needs of non-interrupt-level code to synchronize with an interrupt handler. The entry barrier construct allows an interrupt handler to signal a normal task by changing the state of a component of the protected object and thereby making a barrier true. 

When using protected procedures for interrupt handling, you must ensure that the ceiling priority of the handler is at least as high as the maximum possible priority of the interrupt to be handled. With priority-ceiling locking, the delivery of an interrupt with a higher priority than the ceiling priority of the handler will result in erroneous execution (Ada Reference Manual 1995, §C.3.1). 

A global variable could be changed by another task or even by a call of a protected function. These changes will not be acted upon promptly. Therefore, you should not use a global variable in an entry barrier. 

Side effects in barrier expressions can cause undesirable dependencies. Therefore, you should avoid the use of barrier expressions that can cause side effects. 

See also Guideline . 

==== exceptions ====

If the client of the abstraction containing the protected object must use a select statement with an entry call, you must expose the protected object on the package interface. 

=== Tasks ===

==== guideline ====

* Use tasks to model selected asynchronous threads of control within the problem domain. 
* Consider using tasks to define concurrent algorithms.
* Consider using rendezvous when your application requires synchronous unbuffered communication. 

==== example ====
The naturally concurrent objects within the problem domain can be modeled as Ada tasks. 

&lt;source lang=ada&gt;
-- The following example of a stock exchange simulation shows how naturally
-- concurrent objects within the problem domain can be modeled as Ada tasks.

-------------------------------------------------------------------------

-- Protected objects are used for the Display and for the Transaction_Queue
-- because they only need a mutual exclusion mechanism.

protected Display is
   entry Shift_Tape_Left;
   entry Put_Character_On_Tape (C : in Character);
end Display;

protected Transaction_Queue is
   entry Put (T : in     Transaction);
   entry Get (T :    out Transaction);
   function Is_Empty return Boolean;
end Transaction_Queue;

-------------------------------------------------------------------------

-- A task is needed for the Ticker_Tape because it has independent cyclic
-- activity.  The Specialist and the Investor are best modeled with tasks
-- since they perform different actions simultaneously, and should be
-- asynchronous threads of control.

task Ticker_Tape;

task Specialist is
   entry Buy  (Order : in Order_Type);
   entry Sell (Order : in Order_Type);
end Specialist;

task Investor;
-------------------------------------------------------------------------
task body Ticker_Tape is
   ...
begin
   loop
      Display.Shift_Tape_Left;

      if not More_To_Send (Current_Tape_String) and then
         not Transaction_Queue.Is_Empty
      then
         Transaction_Queue.Get (Current_Tape_Transaction);
         ... -- convert Transaction to string
      end if;

      if More_To_Send (Current_Tape_String) then
         Display.Put_Character_On_Tape (Next_Char);
      end if;

      delay until Time_To_Shift_Tape;
      Time_To_Shift_Tape := Time_To_Shift_Tape + Shift_Interval;
   end loop;
end Ticker_Tape;

task body Specialist is 
   ...

   loop
      select
         accept Buy  (Order : in Order_Type) do
            ...
         end Buy;
         ...
      or
         accept Sell (Order : in Order_Type) do
            ...
         end Sell;
         ...
      else
         -- match orders
         ...
         Transaction_Queue.Put (New_Transaction);
         ...
      end select;
   end loop;

end Specialist;


task body Investor is
   ...
begin

   loop
      -- some algorithm that determines whether the investor
      -- buys or sells, quantity, price, etc

      ...

      if ... then
         Specialist.Buy (Order);
      end if;

      if ... then
         Specialist.Sell (Order);
      end if;
   end loop;

end Investor;
&lt;/source&gt;

Multiple tasks that implement the decomposition of a large, matrix multiplication algorithm are an example of an opportunity for real concurrency in a multiprocessor target environment. In a single processor target environment, this approach may not be justified due to the overhead incurred from context switching and the sharing of system resources. 

A task that updates a radar display every 30 milliseconds is an example of a cyclic activity supported by a task. 

A task that detects an over-temperature condition in a nuclear reactor and performs an emergency shutdown of the systems is an example of a task to support a high-priority activity. 

==== rationale ====

These guidelines reflect the intended uses of tasks. They all revolve around the fact that a task has its own thread of control separate from the main subprogram (or environment task) of a partition. The conceptual model for a task is a separate program with its own virtual processor. This provides the opportunity to model entities from the problem domain in terms more closely resembling those entities and the opportunity to handle physical devices as a separate concern from the main algorithm of the application. Tasks also allow naturally concurrent activities that can be mapped to multiple processors within a partition when available. 

You should use tasks for separate threads of control. When you synchronize tasks, you should use the rendezvous mechanism only when you are trying to synchronize actual processes (e.g., specify a time-sensitive ordering relationship or tightly coupled interprocess communication). For most synchronization needs, however, you should use protected objects (see Guideline 6.1.1), which are more flexible and can minimize unnecessary bottlenecks. Additionally, passive tasks are probably better modeled through protected objects than active tasks. 

Resources shared between multiple tasks, such as devices, require control and synchronization because their operations are not atomic. Drawing a circle on a display might require that many low-level operations be performed without interruption by another task. A display manager would ensure that no other task accesses the display until all these operations are complete. 

=== Discriminants ===

==== guideline ====

* Consider using discriminants to minimize the need for an explicit initialization operation (Rationale 1995, §9.1).
* Consider using discriminants to control composite components of the protected objects, including setting the size of an entry family (Rationale 1995, §9.1).
* Consider using a discriminant to set the priority of a protected object (Rationale 1995, §9.1).
* Consider using a discriminant to identify an interrupt to a protected object (Rationale 1995, §9.1).
* Consider declaring a task type with a discriminant to indicate (Rationale 1995, §9.6):
** Priority, storage size, and size of entry families of individual tasks of a type
** Data associated with a task (through an access discriminant) 

==== example ====
The following code fragment shows how a task type with discriminant can be used to associate data with a task (Rationale 1995, §9.6): 

&lt;source lang=ada&gt;
type Task_Data is
   record
      ...  -- data for task to work on
   end record;
task type Worker (D : access Task_Data) is
   ...
end;
-- When you declare a task object of type Worker, you explicitly associate this task with
-- its data through the discriminant D
Data_for_Worker_X : aliased Task_Data := ...;
X : Worker (Data_for_Worker_X'Access);
&lt;/source&gt;

The following example shows how to use discriminants to associate data with tasks, thus allowing the tasks to be parameterized when they are declared and eliminating the need for an initial rendezvous with the task: 

&lt;source lang=ada&gt;
task type Producer (Channel : Channel_Number; ID : ID_Number);

task body Producer is
begin

   loop

      ... -- generate an item

      Buffer.Put (New_Item);

   end loop;
end Producer;

...

Keyboard : Producer (Channel =&gt; Keyboard_Channel, ID =&gt; 1);
Mouse    : Producer (Channel =&gt; Mouse_Channel,    ID =&gt; 2);
&lt;/source&gt;

The next example shows how an initial rendezvous can be used to associate data with tasks. This is more complicated and more error prone than the previous example. This method is no longer needed in Ada 95 due to the availability of discriminants with task types and protected types: 

&lt;source lang=ada&gt;
task type Producer is
   entry Initialize (Channel : in Channel_Number; ID : in ID_Number);
end Producer;

task body Producer is
   IO_Channel  : Channel_Number;
   Producer_ID : ID_Number;
begin

   accept Initialize (Channel : in Channel_Number; ID : in ID_Number) do
      IO_Channel  := Channel;
      Producer_ID := ID;
   end;

   loop

      ... -- generate an item

      Buffer.Put (New_Item);

   end loop;
end Producer;

...

Keyboard : Producer;
Mouse    : Producer;

...

begin
   ...
   Keyboard.Initialize (Channel =&gt; Keyboard_Channel, ID =&gt; 1);
   Mouse.Initialize    (Channel =&gt; Mouse_Channel,    ID =&gt; 2);
   ...
&lt;/source&gt;


==== rationale ====

Using discriminants to parameterize protected objects provides a low-overhead way of specializing the protected object. You avoid having to declare and call special subprograms solely for the purpose of passing this information to the protected object. 

Task discriminants provide a way for you to identify or parameterize a task without the overhead of an initial rendezvous. For example, you can use this discriminant to initialize a task or tell it who it is (from among an array of tasks) (Rationale 1995, §II.9). More importantly, you can associate the discriminant with specific data. When you use an access discriminant, you can bind the data securely to the task because the access discriminant is constant and cannot be detached from the task (Rationale 1995, §9.6). This reduces and might eliminate bottlenecks in the parallel activation of tasks (Rationale 1995, §9.6). 

==== notes ====

Using an access discriminant to initialize a task has a potential danger in that the data being referenced could change after the rendezvous. This possibility and its effects should be considered and, if necessary, appropriate actions taken (e.g., copy the referenced data and not rely on the data pointed to by the discriminant after initialization). 

=== Anonymous Task Types and Protected Types ===

==== guideline ====

* Consider using single task declarations to declare unique instances of concurrent tasks.
* Consider using single protected declarations to declare unique instances of protected objects. 

==== example ====
The following example illustrates the syntactic differences between the kinds of tasks and protected objects discussed here. Buffer is static, but its type is anonymous. No type name is declared to enable you to declare further objects of the same type. 

&lt;source lang=ada&gt;
task      Buffer;
&lt;/source&gt;

Because it is declared explicitly, the task type Buffer_Manager is not anonymous. Channel is static and has a name, and its type is not anonymous. 

&lt;source lang=ada&gt;
task type Buffer_Manager;
Channel : Buffer_Manager;
&lt;/source&gt;

==== rationale ====

The use of anonymous tasks and protected objects of anonymous type avoids a proliferation of task and protected types that are only used once, and the practice communicates to maintainers that there are no other tasks or protected objects of that type. If the need arises later to have additional tasks or protected objects of the same type, then the work required to convert an anonymous task to a task type or an anonymous protected object to a protected type is minimal. 

The consistent and logical use of task and protected types, when necessary, contributes to understandability. Identical tasks can be declared using a common task type. Identical protected objects can be declared using a common protected type. Dynamically allocated task or protected structures are necessary when you must create and destroy tasks or protected objects dynamically or when you must reference them by different names. 

==== notes ====

Though changing the task or protected object from an anonymous type to a declared type is trivial, structural changes to the software architecture might not be trivial. Introduction of multiple tasks or protected objects of the declared type might require the scope of the type to change and might change the behavior of the network of synchronizing tasks and protected objects. 

=== Dynamic Tasks ===

==== guideline ====

* Minimize dynamic creation of tasks because of the potentially high startup overhead; reuse tasks by having them wait for new work on some appropriate entry queue. 

==== example ====
The approach used in the following example is not recommended. The example shows why caution is required with dynamically allocated task and protected objects. It illustrates how a dynamic task can be disassociated from its name: 

&lt;source lang=ada&gt;
task type Radar_Track;
type      Radar_Track_Pointer is access Radar_Track;
Current_Track : Radar_Track_Pointer;
---------------------------------------------------------------------
task body Radar_Track is
begin
   loop
      -- update tracking information
      ...
      -- exit when out of range
      delay 1.0;
   end loop;
...
end Radar_Track;
---------------------------------------------------------------------
...
loop
   ...
   -- Radar_Track tasks created in previous passes through the loop
   -- cannot be accessed from Current_Track after it is updated.
   -- Unless some code deals with non-null values of Current_Track,
   -- (such as an array of existing tasks)
   -- this assignment leaves the existing Radar_Track task running with
   -- no way to signal it to abort or to instruct the system to
   -- reclaim its resources.

   Current_Track := new Radar_Track;
   ...
end loop;
&lt;/source&gt;

==== rationale ====

Starting up a task has significant overhead in many implementations. If an application has a need for dynamically created tasks, the tasks should be implemented with a top-level loop so that after such a task completes its given job, it can cycle back and wait for a new job. 

You can use dynamically allocated tasks and protected objects when you need to allow the number of tasks and protected objects to vary during execution. When you must ensure that tasks are activated in a particular order, you should use dynamically allocated tasks because the Ada language does not define an activation order for statically allocated task objects. In using dynamically allocated tasks and protected objects, you face the same issues as with any use of the heap. 

=== Priorities ===

==== guideline ====

* Do not rely on pragma Priority unless your compiler supports the Real-Time Annex (Ada Reference Manual 1995, Annex D) and priority scheduling.
* Minimize risk of priority inversion by use of protected objects and ceiling priority.
* Do not rely upon task priorities to achieve a particular sequence of task execution. 

==== example ====
For example, let the tasks have the following priorities: 

&lt;source lang=ada&gt;
task T1 is
   pragma Priority (High);
end T1;

task T2 is
   pragma Priority (Medium);
end T2;

task Server is
   entry Operation (...);
end Server;

----------------------------
task body T1 is
begin
   ...
   Server.Operation (...);
   ...
end T1;
task body T2 is
begin
   ...
   Server.Operation (...);
   ...
end T2;

task body Server is
begin
   ...
   accept Operation (...);
   ...
end Server;
&lt;/source&gt;

At some point in its execution, T1 is blocked. Otherwise, T2 and Server might never execute. If T1 is blocked, it is possible for T2 to reach its call to Server's entry (Operation) before T1. Suppose this has happened and that T1 now makes its entry call before Server has a chance to accept T2's call. 

This is the timeline of events so far: 

T1 blocks
T2 calls Server.Operation
T1 unblocks
T1 calls Server.Operation
-- Does Server accept the call from T1 or from T2?

You might expect that, due to its higher priority, T1's call would be accepted by Server before that of T2. However, entry calls are queued in first-in-first-out (FIFO) order and not queued in order of priority (unless pragma Queueing_Policy is used). Therefore, the synchronization between T1 and Server is not affected by T1's priority. As a result, the call from T2 is accepted first. This is a form of priority inversion. (Annex D can change the default policy of FIFO queues.) 

A solution might be to provide an entry for a High priority user and an entry for a Medium priority user. 
&lt;source lang=ada&gt;
---------------------------------------------------------------------
task Server is
   entry Operation_High_Priority;
   entry Operation_Medium_Priority;
   ...
end Server;
---------------------------------------------------------------------
task body Server is
begin
   loop
      select
         accept Operation_High_Priority do
            Operation;
         end Operation_High_Priority;
      else  -- accept any priority
         select
            accept Operation_High_Priority do
               Operation;
            end Operation_High_Priority;
         or
            accept Operation_Medium_Priority do
               Operation;
            end Operation_Medium_Priority;
         or
            terminate;
         end select;
      end select;
   end loop;
...
end Server;
---------------------------------------------------------------------
&lt;/source&gt;
However, in this approach, T1 still waits for one execution of Operation when T2 has already gained control of the task Server. In addition, the approach increases the communication complexity (see Guideline 6.2.6).

==== rationale ====

The pragma Priority allows relative priorities to be placed on tasks to accomplish scheduling. Precision becomes a critical issue with hard-deadline scheduling. However, there are certain problems associated with using priorities that warrant caution. 

Priority inversion occurs when lower priority tasks are given service while higher priority tasks remain blocked. In the first example, this occurred because entry queues are serviced in FIFO order, not by priority. There is another situation referred to as a race condition . A program like the one in the first example might often behave as expected as long as T1 calls Server.Operation only when T2 is not already using Server.Operation or waiting. You cannot rely on T1 always winning the race because that behavior would be due more to fate than to the programmed priorities. Race conditions change when either adding code to an unrelated task or porting this code to a new target. 

You should not rely upon task priorities to achieve an exact sequence of execution or rely upon them to achieve mutual exclusion. Although the underlying dispatching model is common to all Ada 95 implementations, there might be differences in dispatching, queuing, and locking policies for tasks and protected objects. All of these factors might lead to different sequences of execution. If you need to ensure a sequence of execution, you should make use of Ada's synchronization mechanisms, i.e., protected objects or rendezvous. 

==== notes ====

Work is being done to minimize these problems, including the introduction of a scheduling algorithm known as the priority ceiling protocol (Goodenough and Sha 1988). The priority ceiling protocol reduces the blocking time that causes priority inversion to only one critical region (defined by the entries in a task). The protocol also eliminates deadlock (unless a task recursively tries to access a critical region) by giving a ceiling priority to each task accessing a resource that is as high as the priority of any task that ever accesses that resource. This protocol is based on priority inheritance and, thus, deviates from the standard Ada tasking paradigm, which supports priority ceiling emulation instead of the priority ceiling blocking that occurs with priority inheritance. 

Priorities are used to control when tasks run relative to one another. When both tasks are not blocked waiting at an entry, the highest priority task is given precedence. However, the most critical tasks in an application do not always have the highest priority. For example, support tasks or tasks with small periods might have higher priorities because they need to run frequently. 

All production-quality validated Ada 95 compilers will probably support pragma Priority. However, you should use caution unless (Annex D is specifically supported. 

There is currently no universal consensus on how to apply the basic principles of rate monotonic scheduling (RMS) to the Ada 95 concurrency model. One basic principle of RMS is to arrange all periodic tasks so that tasks with shorter periods have higher priorities than tasks with longer periods. However, with Ada 95, it might be faster to raise the priorities of tasks whose jobs suddenly become critical than to wait for an executive task to reschedule them. In this case, priority inversion can be minimized using a protected object with pragma Locking_Policy(Ceiling_Locking) as the server instead of a task. 

=== Delay Statements ===

==== guideline ====

* Do not depend on a particular delay being achievable (Nissen and Wallis 1984).
* Use a delay until not a delay statement to delay until a specific time has been reached.
* Avoid using a busy waiting loop instead of a delay. 

==== example ====
The phase of a periodic task is the fraction of a complete cycle elapsed as measured from a specified reference point. In the following example, an inaccurate delay causes the phase of the periodic task to drift over time (i.e., the task starts later and later in the cycle): 

Periodic:
&lt;source lang=ada&gt;
   loop
      delay Interval;
      ...
   end loop Periodic;
&lt;/source&gt;

To avoid an inaccurate delay drift, you should use the delay until statement. The following example (Rationale 1995, §9.3) shows how to satisfy a periodic requirement with an average period: 

&lt;source lang=ada&gt;
task body Poll_Device is
   use type Ada.Real_Time.Time;
   use type Ada.Real_Time.Time_Span;

   Poll_Time :          Ada.Real_Time.Time := ...; -- time to start polling
   Period    : constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds (10);
begin
   loop
      delay until Poll_Time;
      ... -- Poll the device
      Poll_Time := Poll_Time + Period;
   end loop;
end Poll_Device;
&lt;/source&gt;

==== rationale ====

There are two forms of delay statement. The delay will cause a delay for at least a specified time interval. The delay until causes a delay until an absolute wake-up time. You should choose the form appropriate to your application. 

The Ada language definition only guarantees that the delay time is a minimum. The meaning of a delay or delay until statement is that the task is not scheduled for execution before the interval has expired. In other words, a task becomes eligible to resume execution as soon as the amount of time has passed. However, there is no guarantee of when (or if) it is scheduled after that time because the required resources for that task might not be available at the expiration of the delay . 

A busy wait can interfere with processing by other tasks. It can consume the very processor resource necessary for completion of the activity for which it is waiting. Even a loop with a delay can have the impact of busy waiting if the planned wait is significantly longer than the delay interval. If a task has nothing to do, it should be blocked at an accept or select statement, an entry call, or an appropriate delay. 

The expiration time for a relative delay is rounded up to the nearest clock tick. If you use the real-time clock features provided by (Annex D, however, clock ticks are guaranteed to be no greater than one millisecond (Ada Reference Manual 1995, §D.8). 

==== notes ====

You need to ensure the arithmetic precision of the calculation Poll_Time := Poll_Time + Period; to avoid drift. 

=== Extensibility and Concurrent Structures ===

==== guideline ====

* Carefully consider the placement of components of protected types within a tagged type inheritance hierarchy. 
* Consider using generics to provide extensibility of data types requiring the restrictions provided by protected objects. 

==== rationale ====
Once a component of a protected type is added to an inheritance hierarchy of an abstract data type, further extensibility of that data type is impaired. When you constrain the concurrent behavior of a type (i.e., introduce a protected type component), you lose the ability to modify that behavior in subsequent derivations. Therefore, when the need arises for a version of an abstract data type to impose the restrictions provided by protected objects, the opportunity for reuse is maximized by adding the protected objects at the leaves of the inheritance hierarchy. 

The reusability of common protected operations (e.g., mutually exclusive read/write operations) can be maximized by using generic implementations of abstract data types. These generic implementations then provide templates that can be instantiated with data types specific to individual applications. 

==== notes ====

You can address synchronization within an inheritance hierarchy in one of three ways: 

* You can declare the root as a limited tagged type with a component that belongs to a protected type and give the tagged type primitive operations that work by invoking the protected operations of that component.
* Given a tagged type implementing an abstract data type (perhaps resulting from several extensions), you can declare a protected type with a component belonging to the tagged type. The body of each protected operation would then invoke the corresponding operation of the abstract data type. The protected operations provide mutual exclusion.
* You can use a hybrid approach where you declare a protected type with a component of some tagged type. You then use this protected type to implement a new root tagged type (not a descendant of the original tagged type). 

== Communication ==

The need for tasks to communicate gives rise to most of the problems that make concurrent programming so difficult. Used properly, Ada's intertask communication features can improve the reliability of concurrent programs; used thoughtlessly, they can introduce subtle errors that can be difficult to detect and correct. 

=== Efficient Task Communication ===

==== guideline ====

* Minimize the work performed during a rendezvous.
* Minimize the work performed in the selective accept loop of a task.
* Consider using protected objects for data synchronization and communication. 

==== example ====
In the following example, the statements in the accept body are performed as part of the execution of both the caller task and the task Server, which contains Operation and Operation2. The statements after the accept body are executed before Server can accept additional calls to Operation or Operation2. 

&lt;source lang=ada&gt;
   ...
   loop
      select
         accept Operation do
            -- These statements are executed during rendezvous.
            -- Both caller and server are blocked during this time.
            ...
         end Operation;
         ...
         -- These statements are not executed during rendezvous.
         -- The execution of these statements increases the time required
         --   to get back to the accept and might be a candidate for another task.

      or
         accept Operation_2 do
            -- These statements are executed during rendezvous.
            -- Both caller and server are blocked during this time.
            ...
         end Operation_2;
      end select;
      -- These statements are also not executed during rendezvous,
      -- The execution of these statements increases the time required
      --   to get back to the accept and might be a candidate for another task.

   end loop;
&lt;/source&gt;

==== rationale ====

To minimize the time required to rendezvous, only work that needs to be performed during a rendezvous, such as saving or generating parameters, should be allowed in the accept bodies. 

When work is removed from the accept body and placed later in the selective accept loop, the additional work might still suspend the caller task. If the caller task calls entry Operation again before the server task completes its additional work, the caller is delayed until the server completes the additional work. If the potential delay is unacceptable and the additional work does not need to be completed before the next service of the caller task, the additional work can form the basis of a new task that will not block the caller task. 

Operations on protected objects incur less execution overhead than tasks and are more efficient for data synchronization and communication than the rendezvous. You must design protected operations to be bounded, short, and not potentially blocking. 

==== notes ====

In some cases, additional functions can be added to a task. For example, a task controlling a communication device might be responsible for a periodic function to ensure that the device is operating correctly. This type of addition should be done with care, realizing that the response time of the task might be impacted (see the above rationale). 

Minimizing the work performed during a rendezvous or selective accept loop of a task can increase the rate of execution only when it results in additional overlaps in processing between the caller and callee or when other tasks can be scheduled due to the shorter period of execution. Therefore, the largest increases in execution rates will be seen in multiprocessor environments. In single-processor environments, the increased execution rate will not be as significant and there might even be a small net loss. The guideline is still applicable, however, if the application could ever be ported to a multiprocessor environment. 

=== Defensive Task Communication ===

==== guideline ====

* Provide a handler for exception Program_Error whenever you cannot avoid a selective accept statement whose alternatives can all be closed (Honeywell 1986).
* Make systematic use of handlers for Tasking_Error.
* Be prepared to handle exceptions during a rendezvous .
* Consider using a when others exception handler. 

==== example ====
This block allows recovery from exceptions raised while attempting to communicate a command to another task: 

&lt;source lang=ada&gt;
Accelerate:
   begin
      Throttle.Increase(Step);
   exception
      when Tasking_Error     =&gt;     ...
      when Constraint_Error  =&gt;     ...
      when Throttle_Too_Wide =&gt;     ...
      ...
   end Accelerate;
&lt;/source&gt;

In this select statement, if all the guards happen to be closed, the program can continue by executing the else part. There is no need for a handler for Program_Error. Other exceptions can still be raised while evaluating the guards or attempting to communicate. You will also need to include an exception handler in the task Throttle so that it can continue to execute after an exception is raised during the rendezvous: 

&lt;source lang=ada&gt;
...
Guarded:
   begin
      select
         when Condition_1 =&gt;
            accept Entry_1;
      or
         when Condition_2 =&gt;
            accept Entry_2;
      else  -- all alternatives closed
         ...
      end select;
   exception
      when Constraint_Error =&gt;
         ...
   end Guarded;
&lt;/source&gt;

In this select statement, if all the guards happen to be closed, exception Program_Error will be raised. Other exceptions can still be raised while evaluating the guards or attempting to communicate: 

&lt;source lang=ada&gt;
Guarded:
   begin
      select
         when Condition_1 =&gt;
            accept Entry_1;
      or
         when Condition_2 =&gt;
            delay Fraction_Of_A_Second;
      end select;
   exception
      when Program_Error     =&gt;  ...
      when Constraint_Error  =&gt;  ...
   end Guarded;
...
&lt;/source&gt;

==== rationale ====

The exception Program_Error is raised if a selective accept statement (select statement containing accepts) is reached, all of whose alternatives are closed (i.e., the guards evaluate to False and there are no alternatives without guards), unless there is an else part. When all alternatives are closed, the task can never again progress, so there is by definition an error in its programming. You must be prepared to handle this error should it occur. 

Because an else part cannot have a guard, it can never be closed off as an alternative action; thus, its presence prevents Program_Error. However, an else part, a delay alternative, and a terminate alternative are all mutually exclusive, so you will not always be able to provide an else part. In these cases, you must be prepared to handle Program_Error. 

The exception Tasking_Error can be raised in the calling task whenever it attempts to communicate. There are many situations permitting this. Few of them are preventable by the calling task. 

If an exception is raised during a rendezvous and not handled in the accept statement, it is propagated to both tasks and must be handled in two places (see Guideline 5.8). 
The handling of the others exception can be used to avoid propagating unexpected exceptions to callers (when this is the desired effect) and to localize the logic for dealing with unexpected exceptions in the rendezvous. After handling, an unknown exception should normally be raised again because the final decision of how to deal with it might need to be made at the outermost scope of the task body. 

==== notes ====

There are other ways to prevent Program_Error at a selective accept. These involve leaving at least one alternative unguarded or proving that at least one guard will evaluate True under all circumstances. The point here is that you or your successors will make mistakes in trying to do this, so you should prepare to handle the inevitable exception. 

=== Attributes 'Count, 'Callable, and 'Terminated ===

==== guideline ====

* Do not depend on the values of the task attributes 'Callable or 'Terminated ( Nissen and Wallis 1984).
* Do not depend on attributes to avoid Tasking_Error on an entry call. 
* For tasks, do not depend on the value of the entry attribute 'Count.
* Using the 'Count attribute with protected entries is more reliable than using the 'Count attribute with task entries. 

==== example ====
In the following examples, Dispatch'Callable is a Boolean expression, indicating whether a call can be made to the task Intercept without raising the exception Tasking_Error. Dispatch'Count indicates the number of callers currently waiting at entry Transmit. Dispatch'Terminated is a Boolean expression, indicating whether the task Dispatch is in a terminated state. 

This task is badly programmed because it relies upon the values of the 'Count attributes not changing between evaluating and acting upon them: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
task body Dispatch is
...
   select
      when Transmit'Count &gt; 0 and Receive'Count = 0 =&gt;
         accept Transmit;
         ...
   or
      accept Receive;
      ...
   end select;
...
end Dispatch;
---------------------------------------------------------------------
&lt;/source&gt;

If the following code is preempted between evaluating the condition and initiating the call, the assumption that the task is still callable might no longer be valid: 

&lt;source lang=ada&gt;
...
if Dispatch'Callable then
   Dispatch.Receive;
end if;
...
&lt;/source&gt;

==== rationale ====

Attributes 'Callable, 'Terminated, and 'Count are all subject to race conditions. Between the time you reference an attribute and the time you take action, the value of the attribute might change. Attributes 'Callable and 'Terminated convey reliable information once they become False and True, respectively. If 'Callable is False, you can expect the callable state to remain constant. If 'Terminated is True, you can expect the task to remain terminated. Otherwise, 'Terminated and 'Callable can change between the time your code tests them and the time it responds to the result. 

The Ada Reference Manual (1995, §9.9) itself warns about the asynchronous increase and decrease of the value of 'Count. A task can be removed from an entry queue due to execution of an abort statement as well as expiration of a timed entry call. The use of this attribute in guards of a selective accept statement might result in the opening of alternatives that should not be opened under a changed value of 'Count. 

The value of the attribute 'Count is stable for protected units because any change to an entry queue is itself a protected action, which will not occur while any other protected action is already proceeding. Nevertheless, when you use 'Count within an entry barrier of a protected unit, you should remember that the condition of the barrier is evaluated both before and after queueing a given caller. 

=== Unprotected Shared Variables ===

==== guideline ====

* Use calls on protected subprograms or entries to pass data between tasks rather than unprotected shared variables.
* Do not use unprotected shared variables as a task synchronization device.
* Do not reference nonlocal variables in a guard .
* If an unprotected shared variable is necessary, use the pragma Volatile or Atomic. 

==== example ====
This code will either print the same line more than once, fail to print some lines, or print garbled lines (part of one line followed by part of another) nondeterministically. This is because there is no synchronization or mutual exclusion between the task that reads a command and the one that acts on it. Without knowledge about their relative scheduling, the actual results cannot be predicted: 

&lt;source lang=ada&gt;
-----------------------------------------------------------------------
task body Line_Printer_Driver is
   ...
begin
   loop
      Current_Line := Line_Buffer;
      -- send to device
   end loop;
end Line_Printer_Driver;
-----------------------------------------------------------------------
task body Spool_Server is
   ...
begin
   loop
      Disk_Read (Spool_File, Line_Buffer);
   end loop;
end Spool_Server;
-----------------------------------------------------------------------
&lt;/source&gt;

The following example shows a vending machine that dispenses the amount requested into an appropriately sized container. The guards reference the global variables Num_Requested and Item_Count, leading to a potential problem in the wrong amount being dispensed into an inappropriately sized container: 

&lt;source lang=ada&gt;
Num_Requested : Natural;
Item_Count    : Natural := 1000;
task type Request_Manager (Personal_Limit : Natural := 1) is
   entry Make_Request (Num : Natural);
   entry Get_Container;
   entry Dispense;
end Request_Manager;

task body Request_Manager is
begin
   loop
      select
         accept Make_Request (Num : Natural) do
            Num_Requested := Num;
         end Make_Request;
      or
         when Num_Requested &lt; Item_Count =&gt;
            accept Get_Container;
            ...
      or
         when Num_Requested &lt; Item_Count =&gt;
            accept Dispense do
               if Num_Requested &lt;= Personal_Limit then
                  Ada.Text_IO.Put_Line (&quot;Please pick up items.&quot;);
               else
                  Ada.Text_IO.Put_Line (&quot;Sorry! Requesting too many items.&quot;);
               end if;
            end Dispense;
      end select;
   end loop;
end Request_Manager;
R1 : Request_Manager (Personal_Limit =&gt; 10);
R2 : Request_Manager (Personal_Limit =&gt; 2);  
&lt;/source&gt;

The interleaving of the execution of R1 and R2 can lead to Num_Requested being changed before the entry call to Dispense is accepted. Thus, R1 might receive fewer items than requested or R2's request might be bounced because the request manager thinks that what R2 is requesting exceeds R2's personal limit. By using the local variable, you will dispense the correct amount. Furthermore, by using the pragma Volatile (Ada Reference Manual 1995, §C.6), you ensure that the Item_Count is reevaluated when the guards are evaluated. Given that the variable Item_Count is not updated in this task body, the compiler might otherwise have optimized the code and not generated code to reevaluate Item_Count every time it is read: 

&lt;source lang=ada&gt;
Item_Count : Natural := 1000;
pragma Volatile (Item_Count);
task body Request_Manager is
   Local_Num_Requested : Natural := 0;
begin
   loop
      select
         accept Make_Request (Num : Natural) do
            Local_Num_Requested := Num;
         end Make_Request;
      or
         when Local_Num_Requested &lt;= Personal_Limit =&gt;
            accept Get_Container;
            ...
      or
         when Local_Num_Requested &lt; Item_Count =&gt;
            accept Dispense do
               ... -- output appropriate message if couldn't service request
            end Dispense;
            Item_Count := Item_Count - Local_Num_Requested; 
      end select;
   end loop;
end Request_Manager;
&lt;/source&gt;

==== rationale ====

There are many techniques for protecting and synchronizing data access. You must program most of them yourself to use them. It is difficult to write a program that shares unprotected data correctly. If it is not done correctly, the reliability of the program suffers. 

Ada provides protected objects that encapsulate and provide synchronized access to protected data that is shared between tasks. Protected objects are expected to provide better performance than the rendezvous that usually requires introduction of an additional task to manage the shared data. The use of unprotected shared variables is more error-prone than the protected objects or rendezvous because the programmer must ensure that the unprotected shared variables are independently addressable and that the actions of reading or updating the same unprotected shared variable are sequential (Ada Reference Manual 1995, §9.10; Rationale 1995, §II.9). 

The first example above has a race condition requiring perfect interleaving of execution. This code can be made more reliable by introducing a flag that is set by Spool_Server and reset by Line_Printer_Driver. An if (condition flag) then delay ... else would be added to each task loop in order to ensure that the interleaving is satisfied. However, notice that this approach requires a delay and the associated rescheduling. Presumably, this rescheduling overhead is what is being avoided by not using the rendezvous. 

You might need to use an object in shared memory to communicate data between (Rationale 1995, §C.5): 
* Ada tasks
* An Ada program and concurrent non-Ada processes
* An Ada program and hardware devices 

If your environment supports the Systems Programming Annex (Ada Reference Manual 1995, Annex C), you should indicate whether loads and stores to the shared object must be indivisible. If you specify the pragma Atomic, make sure that the object meets the underlying hardware requirements for size and alignment. 
Multiple tasks sharing the predefined random number generator and certain input/output subprograms can lead to problems with unprotected updates to shared state. The Ada Reference Manual (1995, §A.5.2) points out the need for tasks to synchronize their access to the random number generators (packages Ada.Numerics.Float_Random and Ada.Numerics.Discrete_Random). See Guideline 7.7.5 for the I/O issue. 

=== Selective Accepts and Entry Calls ===

==== guideline ====

* Use caution with conditional entry calls to task entries. 
* Use caution with selective accept with else parts.
* Do not depend upon a particular delay in timed entry calls to task entries.
* Do not depend upon a particular delay in selective accepts with delay alternatives. 
* Consider using protected objects instead of the rendezvous for data-oriented synchronization. 

==== example ====
The conditional entry call in the following code results in a potential race condition that might degenerate into a busy waiting loop (i.e., perform the same calculation over and over). The task Current_Position containing entry Request_New_Coordinates might never execute if the loop-containing task (shown in the following code fragment) has a higher priority than Current_Position because it does not release the processing resource: 

&lt;source lang=ada&gt;
task body Calculate_Flightpath is
begin
   ...
   loop
  
      select
         Current_Position.Request_New_Coordinates (X, Y);
         -- calculate projected location based on new coordinates
         ...
  
      else
         -- calculate projected location based on last locations
         ...
      end select;
  
   end loop;
   ...
end Calculate_Flightpath;
&lt;/source&gt;

The addition of a delay, as shown, may allow Current_Position to execute until it reaches an accept for Request_New_Coordinates: 

&lt;source lang=ada&gt;
task body Calculate_Flightpath is
begin
   ...
   loop
  
      select
         Current_Position.Request_New_Coordinates(X, Y);
         -- calculate projected location based on new coordinates
         ...
  
      else
         -- calculate projected location based on last locations
         ...
  
         delay until Time_To_Execute;
         Time_To_Execute := Time_To_Execute + Period;
      end select;
  
   end loop;
   ...
end Calculate_Flightpath;
&lt;/source&gt;


The following selective accept with else again does not degenerate into a busy wait loop only because of the addition of a delay statement: 

&lt;source lang=ada&gt;
task body Buffer_Messages is

   ...

begin

   ...

   loop
      delay until Time_To_Execute;

      select
         accept Get_New_Message (Message : in     String) do
            -- copy message to parameters
            ...
         end Get_New_Message;
      else  -- Don't wait for rendezvous
         -- perform built in test Functions
         ...
      end select;

      Time_To_Execute := Time_To_Execute + Period;
   end loop;

   ...

end Buffer_Messages;
&lt;/source&gt;


The following timed entry call might be considered an unacceptable implementation if lost communications with the reactor for over 25 milliseconds results in a critical situation: 

&lt;source lang=ada&gt;
task body Monitor_Reactor is
   ...
begin
   ...
   loop
  
      select
         Reactor.Status(OK);
  
      or
         delay 0.025;
         -- lost communication for more that 25 milliseconds
         Emergency_Shutdown;
      end select;
  
      -- process reactor status
      ...
   end loop;
   ...
end Monitor_Reactor;
&lt;/source&gt;


In the following &quot;selective accept with delay&quot; example, the accuracy of the coordinate calculation function is bounded by time. For example, the required accuracy cannot be obtained unless Period is within + or - 0.005 seconds. This period cannot be guaranteed because of the inaccuracy of the delay statement: 

&lt;source lang=ada&gt;
task body Current_Position is
begin
   ...
   loop
  
      select
         accept Request_New_Coordinates (X :    out Integer;
                                         Y :    out Integer) do
            -- copy coordinates to parameters
            ...
         end Request_New_Coordinates;
  
      or
         delay until Time_To_Execute;
      end select;
  
      Time_To_Execute := Time_To_Execute + Period;
      -- Read Sensors
      -- execute coordinate transformations
   end loop;
   ...
end Current_Position;
&lt;/source&gt;

==== rationale ====

Use of these constructs always poses a risk of race conditions. Using them in loops, particularly with poorly chosen task priorities , can have the effect of busy waiting. 

These constructs are very much implementation dependent. For conditional entry calls and selective accepts with else parts, the Ada Reference Manual (1995, §9.7) does not define &quot;immediately.&quot; For timed entry calls and selective accepts with delay alternatives, implementors might have ideas of time that differ from each other and from your own. Like the delay statement, the delay alternative on the select construct might wait longer than the time required (see Guideline 6.1.7). 

Protected objects offer an efficient means for providing data-oriented synchronization. Operations on protected objects incur less execution overhead than tasks and are more efficient for data synchronization and communication than the rendezvous. See Guideline 6.1.1 for an example of this use of protected objects. 

=== Communication Complexity ===

==== guideline ====

* Minimize the number of accept and select statements per task .
* Minimize the number of accept statements per entry. 

==== example ====
Use: 

&lt;source lang=ada&gt;
accept A;
if Mode_1 then
   -- do one thing
else  -- Mode_2
   -- do something different
end if;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
if Mode_1 then
   accept A;
   -- do one thing
else  -- Mode_2
   accept A;
   -- do something different
end if;
&lt;/source&gt;

==== rationale ====

This guideline reduces conceptual complexity. Only entries necessary to understand externally observable task behavior should be introduced. If there are several different accept and select statements that do not modify task behavior in a way important to the user of the task, there is unnecessary complexity introduced by the proliferation of select/accept statements. Externally observable behavior important to the task user includes task timing behavior, task rendezvous initiated by the entry calls, prioritization of entries, or data updates (where data is shared between tasks). 

==== notes ====

Sanden (1994) argues that you need to trade off the complexity of the guards associated with the accept statements against the number of select/accept statements. Sanden (1994) shows an example of a queue controller for bank tellers where there are two modes, open and closed. You can implement this scenario with one loop and two select statements, one for the open mode and the other for the closed mode. Although you are using more select/accept statements, Sanden (1994) argues that the resulting program is easier to understand and verify. 

== Termination ==

The ability of tasks to interact with each other using Ada's intertask communication features makes it especially important to manage planned or unplanned (e.g., in response to a catastrophic exception condition) termination in a disciplined way. To do otherwise can lead to a proliferation of undesired and unpredictable side effects as a result of the termination of a single task. 
The guidelines on termination focus on the termination of tasks. Wherever possible, you should use protected objects (see Guideline 6.1.1), thus avoiding the termination problems associated with tasks. 

=== Avoiding Undesired Termination ===

==== guideline ====

* Consider using an exception handler for a rendezvous within the main loop inside each task. 

==== example ====
In the following example, an exception raised using the primary sensor is used to change Mode to Degraded still allowing execution of the system: 

&lt;source lang=ada&gt;
...
loop

   Recognize_Degraded_Mode:
      begin

         case Mode is
            when Primary =&gt;
               select
                  Current_Position_Primary.Request_New_Coordinates (X, Y);
               or
                  delay 0.25;
                  -- Decide whether to switch modes;
               end select;

            when Degraded =&gt;

               Current_Position_Backup.Request_New_Coordinates (X, Y);

         end case;

         ...
      exception
         when Tasking_Error | Program_Error =&gt;
            Mode := Degraded;
      end Recognize_Degraded_Mode;

end loop;
...
&lt;/source&gt;

==== rationale ====

Allowing a task to terminate might not support the requirements of the system. Without an exception handler for the rendezvous within the main task loop, the functions of the task might not be performed. 

==== notes ====

The use of an exception handler is the only way to guarantee recovery from an entry call to an abnormal task. Use of the 'Terminated attribute to test a task's availability before making the entry call can introduce a race condition where the tested task fails after the test but before the entry call (see Guideline 6.2.3). 

=== Normal Termination ===

==== guideline ====

* Do not create nonterminating tasks unintentionally. 
* Explicitly shut down tasks that depend on library packages.
* Confirm that a task is terminated before freeing it with Ada.Unchecked_Deallocation.
* Consider using a select statement with a terminate alternative rather than an accept statement alone.
* Consider providing a terminate alternative for every selective accept that does not require an else part or a delay .
* Do not declare or create a task within a user-defined Finalize procedure after the environment task has finished waiting for other tasks. 

==== example ====
This task will never terminate: 

&lt;source lang=ada&gt;
---------------------------------------------------------------------
task body Message_Buffer is
   ...
begin  -- Message_Buffer
   loop
      select
         when Head /= Tail =&gt; -- Circular buffer not empty
            accept Retrieve (Value :    out Element) do
               ...
            end Retrieve;
              
      or
         when not ((Head  = Index'First and then
                    Tail  = Index'Last) or else
                   (Head /= Index'First and then
                    Tail  = Index'Pred(Head))    )
                 =&gt; -- Circular buffer not full
            accept Store (Value : in     Element);
      end select;
   end loop;
...
end Message_Buffer;
---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The implicit environment task does not terminate until all other tasks have terminated. The environment task serves as a master for all other tasks created as part of the execution of the partition; it awaits termination of all such tasks in order to perform finalization of any remaining objects of the partition. Thus, a partition will exist until all library tasks are terminated. 

A nonterminating task is a task whose body consists of a nonterminating loop with no selective accept with terminate or a task that depends on a library package. Execution of a subprogram or block containing a task cannot complete until the task terminates. Any task that calls a subprogram containing a nonterminating task will be delayed indefinitely. 

A task that depends on a library package cannot be forced to terminate using a selective accept construct with alternative and should be terminated explicitly during program shutdown. One way to explicitly shut down tasks that depend on library packages is to provide them with exit entries and have the main subprogram call the exit entry just before it terminates. 

The Ada Reference Manual (1995, §13.11.2) states that a bounded error results from freeing a discriminated, unterminated task object. The danger lies in deallocating the discriminants as a result of freeing the task object. The effect of unterminated tasks containing bounded errors at the end of program execution is undefined. 

Execution of an accept statement or of a selective accept statement without an else part, a delay, or a terminate alternative cannot proceed if no task ever calls the entry(s) associated with that statement. This could result in deadlock. Following the guideline to provide a terminate alternative for every selective accept without an else or a delay entails programming multiple termination points in the task body. A reader can easily &quot;know where to look&quot; for the normal termination points in a task body. The termination points are the end of the body's sequence of statements and alternatives to select statements. 

When the environment task has been terminated, either normally or abnormally, the language does not specify whether to await a task activated during finalization of the controlled objects in a partition. While the environment task is waiting for all other tasks in the partition to complete, starting up a new task during finalization results in a bounded error (Ada Reference Manual 1995, §10.2). The exception Program_Error can be raised during creation or activation of such a task. 

==== exceptions ====

If you are implementing a cyclic executive, you might need a scheduling task that does not terminate. It has been said that no real-time system should be programmed to terminate. This is extreme. Systematic shutdown of many real-time systems is a desirable safety feature. 

If you are considering programming a task not to terminate, be certain that it is not a dependent of a block or subprogram from which the task's caller(s) will ever expect to return. Because entire programs can be candidates for reuse (see Chapter 8), note that the task (and whatever it depends upon) will not terminate. Also be certain that for any other task that you do wish to terminate, its termination does not await this task's termination. Reread and fully understand the Ada Reference Manual (1995, §9.3) on &quot;Task Dependence-Termination of Tasks.&quot; 

=== The Abort Statement ===

==== guideline ====

* Avoid using the abort statement.
* Consider using the asynchronous select statement rather than the abort statement.
* Minimize uses of the asynchronous select statement. 
* Avoid assigning nonatomic global objects from a task or from the abortable part of an asynchronous select statement. 

==== example ====
If required in the application, provide a task entry for orderly shutdown. 

The following example of asynchronous transfer of control shows a database transaction. The database operation may be cancelled (through a special input key) unless the commit transaction has begun. The code is extracted from the Rationale (1995, §9.4): 

&lt;source lang=ada&gt;
with Ada.Finalization;
package Txn_Pkg is
   type Txn_Status is (Incomplete, Failed, Succeeded);
   type Transaction is new Ada.Finalization.Limited_Controlled with private;
   procedure Finalize (Txn : in out transaction);
   procedure Set_Status (Txn    : in out Transaction;
                         Status : in     Txn_Status);
private
   type Transaction is new Ada.Finalization.Limited_Controlled with
      record
         Status : Txn_Status := Incomplete;
         pragma Atomic (Status);
         . . . -- More components
      end record;
end Txn_Pkg;
-----------------------------------------------------------------------------
package body Txn_Pkg is
   procedure Finalize (Txn : in out Transaction) is
   begin
      -- Finalization runs with abort and ATC deferred
      if Txn.Status = Succeeded then
         Commit (Txn);
      else
         Rollback (Txn);
      end if;
   end Finalize;
   . . . -- body of procedure Set_Status
end Txn_Pkg;
----------------------------------------------------------------------------
-- sample code block showing how Txn_Pkg could be used:
declare
   Database_Txn : Transaction;
   -- declare a transaction, will commit or abort during finalization
begin
   select  -- wait for a cancel key from the input device
      Input_Device.Wait_For_Cancel;
      -- the Status remains Incomplete, so that the transaction will not commit
   then abort  -- do the transaction
      begin
         Read (Database_Txn, . . .);
         Write (Database_Txn, . . .);
         . . .
         Set_Status (Database_Txn, Succeeded);
         -- set status to ensure the transaction is committed
      exception
         when others =&gt;
            Ada.Text_IO.Put_Line (&quot;Operation failed with unhandled exception:&quot;);
            Set_Status (Database_Txn, Failed);
      end;
   end select;
   -- Finalize on Database_Txn will be called here and, based on the recorded
   -- status, will either commit or abort the transaction.
end;
&lt;/source&gt;

==== rationale ====

When an abort statement is executed, there is no way to know what the targeted task was doing beforehand. Data for which the target task is responsible might be left in an inconsistent state. The overall effect on the system of aborting a task in such an uncontrolled way requires careful analysis. The system design must ensure that all tasks depending on the aborted task can detect the termination and respond appropriately. 

Tasks are not aborted until they reach an abort completion point such as beginning or end of elaboration, a delay statement, an accept statement, an entry call, a select statement, task allocation, or the execution of an exception handler. Consequently, the abort statement might not release processor resources as soon as you might expect. It also might not stop a runaway task because the task might be executing an infinite loop containing no abort completion points. There is no guarantee that a task will not abort until an abort completion point in multiprocessor systems, but the task will almost always stop running right away. 

An asynchronous select statement allows an external event to cause a task to begin execution at a new point, without having to abort and restart the task (Rationale 1995, §9.3). Because the triggering statement and the abortable statement execute in parallel until one of them completes and forces the other to be abandoned, you need only one thread of control. The asynchronous select statement improves maintainability because the abortable statements are clearly delimited and the transfer cannot be mistakenly redirected. 

In task bodies and in the abortable part of an asynchronous select, you should avoid assigning to nonatomic global objects, primarily because of the risk of an abort occurring before the nonatomic assignment completes. If you have one or more abort statements in your application and the assignment is disrupted, the target object can become abnormal, and subsequent uses of the object lead to erroneous execution (Ada Reference Manual 1995, §9.8). In the case of scalar objects, you can use the attribute 'Valid, but there is no equivalent attribute for nonscalar objects. (See Guideline 5.9.1 for a discussion of the 'Valid attribute.) You also can still safely assign to local objects and call operations of global protected objects. 

=== Abnormal Termination ===

==== guideline ====

* Place an exception handler for others at the end of a task body. 
* Consider having each exception handler at the end of a task body report the task's demise.
* Do not rely on the task status to determine whether a rendezvous can be made with the task. 

==== example ====
This is one of many tasks updating the positions of blips on a radar screen. When started, it is given part of the name by which its parent knows it. Should it terminate due to an exception, it signals the fact in one of its parent's data structures: 

&lt;source lang=ada&gt;
task type Track (My_Index : Track_Index) is
   ...
end Track;
---------------------------------------------------------------------
task body Track is
     Neutral : Boolean := True;
begin  -- Track
   select
      accept ...
      ...
   or
      terminate;
   end select;
   ...
exception
   when others =&gt;
      if not Neutral then
         Station(My_Index).Status := Dead;
      end if;
end Track;
---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

A task will terminate if an exception is raised within it for which it has no handler. In such a case, the exception is not propagated outside of the task (unless it occurs during a rendezvous). The task simply dies with no notification to other tasks in the program. Therefore, providing exception handlers within the task, and especially a handler for others, ensures that a task can regain control after an exception occurs. If the task cannot proceed normally after handling an exception, this affords it the opportunity to shut itself down cleanly and to notify tasks responsible for error recovery necessitated by the abnormal termination of the task. 

You should not use the task status to determine whether a rendezvous can be made with the task. If Task A depends on Task B and Task A checks the status flag before it rendezvouses with Task B, there is a potential that Task B fails between the status test and the rendezvous. In this case, Task A must provide an exception handler to handle the Tasking_Error exception raised by the call to an entry of an abnormal task (see Guideline 6.3.1). 

=== Circular Task Calls ===

==== guideline ====

* Do not call a task entry that directly or indirectly results in a call to an entry of the original calling task. 

==== rationale ====
A software failure known as task deadlock will occur if a task calls one of its own entries directly or indirectly via a circular chain of calls. 

=== Setting Exit Status ===

==== guideline ====

* Avoid race conditions in setting an exit status code from the main program when using the procedure Ada.Command_Line.Set_Exit_Status. 
* In a program with multiple tasks, encapsulate, serialize, and check calls to the procedure Ada.Command_Line.Set_Exit_Status. 

==== rationale ====

In accordance with the rules of Ada, tasks in library-level packages may terminate after the main program task. If the program permits multiple tasks to use Set_Exit_Status, then there can be no guarantee that any particular status value is the one actually returned. 

== Summary ==

=== concurrency options ===

* Consider using protected objects to provide mutually exclusive access to data. 
* Consider using protected objects to control or synchronize access to data shared by multiple tasks .
* Consider using protected objects to implement synchronization, such as a passive resource monitor. 
* Consider encapsulating protected objects in the private part or body of a package.
* Consider using a protected procedure to implement an interrupt handler. 
* Do not attach a protected procedure handler to a hardware interrupt if that interrupt has a maximum priority greater than the ceiling priority assigned to the handler.
* Avoid the use of global variables in entry barriers.
* Avoid the use of barrier expressions with side effects.
* Use tasks to model selected asynchronous threads of control within the problem domain. 
* Consider using tasks to define concurrent algorithms.
* Consider using rendezvous when your application requires synchronous unbuffered communication.
* Consider using discriminants to minimize the need for an explicit initialization operation (Rationale 1995, §9.1).
* Consider using discriminants to control composite components of the protected objects, including setting the size of an entry family (Rationale 1995, §9.1).
* Consider using a discriminant to set the priority of a protected object (Rationale 1995, §9.1).
* Consider using a discriminant to identify an interrupt to a protected object (Rationale 1995, §9.1).
* Consider declaring a task type with a discriminant to indicate (Rationale 1995, §9.6): 
** Priority, storage size, and size of entry families of individual tasks of a type 
** Data associated with a task (through an access discriminant)
* Consider using single task declarations to declare unique instances of concurrent tasks. 
* Consider using single protected declarations to declare unique instances of protected objects.
* Minimize dynamic creation of tasks because of the potentially high startup overhead; reuse tasks by having them wait for new work on some appropriate entry queue. 
* Do not rely on pragma Priority unless your compiler supports the Real-Time Annex (Ada Reference Manual 1995, Annex D) and priority scheduling.
* Minimize risk of priority inversion by use of protected objects and ceiling priority. 
* Do not rely upon task priorities to achieve a particular sequence of task execution. 
* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Use a delay until not a delay statement to delay until a specific time has been reached.
* Avoid using a busy waiting loop instead of a delay.
* Carefully consider the placement of components of protected types within a tagged type inheritance hierarchy. 
* Consider using generics to provide extensibility of data types requiring the restrictions provided by protected objects. 

=== communication ===

* Minimize the work performed during a rendezvous .
* Minimize the work performed in the selective accept loop of a task. 
* Consider using protected objects for data synchronization and communication. 
* Provide a handler for exception Program_Error whenever you cannot avoid a selectiveaccept statement whose alternatives can all be closed (Honeywell 1986). 
* Make systematic use of handlers for Tasking_Error. 
* Be prepared to handle exceptions during a rendezvous .
* Consider using a when others exception handler. 
* Do not depend on the values of the task attributes 'Callable or 'Terminated (Nissen and Wallis 1984).
* Do not depend on attributes to avoid Tasking_Error on an entry call. 
* For tasks, do not depend on the value of the entry attribute 'Count.
* Using the 'Count attribute with protected entries is more reliable than using the 'Count attribute with task entries. 
* Use calls on protected subprograms or entries to pass data between tasks rather than unprotected shared variables. 
* Do not use unprotected shared variables as a task synchronization device.
* Do not reference nonlocal variables in a guard .
* If an unprotected shared variable is necessary, use the pragma Volatile or Atomic. 
* Use caution with conditional entry calls to task entries. 
* Use caution with selective accepts with else parts.
* Do not depend upon a particular delay in timed entry calls to task entries.
* Do not depend upon a particular delay in selective accepts with delay alternatives. 
* Consider using protected objects instead of the rendezvous for data-oriented synchronization. 
* Minimize the number of accept and select statements per task .
* Minimize the number of accept statements per entry.

=== termination ===

* Consider using an exception handler for a rendezvous within the main loop inside each task. 
* Do not create nonterminating tasks unintentionally. 
* Explicitly shut down tasks that depend on library packages.
* Confirm that a task is terminated before freeing it with Ada.Unchecked_Deallocation.
* Consider using a select statement with a terminate alternative rather than an accept statement alone. 
* Consider providing a terminate alternative for every selective accept that does not require an else part or a delay.
* Do not declare or create a task within a user-defined Finalize procedure after the environment task has finished waiting for other tasks.
* Avoid using the abort statement.
* Consider using the asynchronous select statement rather than the abort statement.
* Minimize uses of the asynchronous select statement. 
* Avoid assigning nonatomic global objects from a task or from the abortable part of an asynchronous select statement.
* Place an exception handler for others at the end of a task body.
* Consider having each exception handler at the end of a task body report the task's demise.
* Do not rely on the task status to determine whether a rendezvous can be made with the task. 
* Do not call a task entry that directly or indirectly results in a call to an entry of the original calling task.
* Avoid race conditions in setting an exit status code from the main program when using the procedure Ada.Command_Line.Set_Exit_Status. 
* In a program with multiple tasks, encapsulate, serialize, and check calls to the procedure Ada.Command_Line.Set_Exit_Status.


{{Chapter navigation||Portability}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>oi2odp8fegkn88aawqrtqt3vdp3ll7g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Portability</title>
    <ns>0</ns>
    <id>200802</id>
    <revision>
      <id>2053135</id>
      <parentid>1550579</parentid>
      <timestamp>2011-02-22T02:44:33Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: diferences → differences, the the → the using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{Chapter navigation|Concurrency|Reusability}}

{{TOC|limit=3|float=none}}

== Introduction ==

Discussions concerning portability usually concentrate on the differences in computer systems, but the development and run-time environment may also change: 

; portability (software) : The ease with which software can be transferred from one computer system or environment to another (IEEE Dictionary 1984). 

Most portability problems are not pure language issues. Portability involves hardware (byte order, device I/O) and software (utility libraries, operating systems, run-time libraries). This chapter will not address these challenging design issues. 

This chapter does identify the more common portability problems that are specific to Ada when moving from one platform or compiler to another. It also suggests ways that nonportable code can be isolated. By using the implementation hiding features of Ada, the cost of porting can be significantly reduced. 

In fact, many language portability issues are solved by the strict definition of the Ada language itself. In most programming languages, different dialects are prevalent as vendors extend or dilute a language for various reasons: conformance to a programming environment or features for a particular application domain. The Ada Compiler Validation Capability (ACVC) was developed by the U.S. Department of Defense at the Ada Validation Facility, ASD/SIDL, Wright-Patterson Air Force Base, to ensure that implementors strictly adhered to the Ada standard. 

As part of the strict definition of Ada, certain constructs are defined to be erroneous, and the effect of executing an erroneous construct is unpredictable. Therefore, erroneous constructs are obviously not portable. Erroneous constructs and bounded errors are discussed in Guideline 5.9.10 and are not repeated in this chapter. 

Most programmers new to the language expect Ada to eliminate all portability problems; it definitely does not. Certain areas of Ada are not yet covered by validation. The definition of Ada leaves certain details to the implementor. The compiler implementor's choices, with respect to these details, affect portability. 

The revisions to the Ada language approved in the 1995 standard generate a new area of portability concerns. Some programs are intended to have a long life and may start in Ada 83 (Ada Reference Manual 1983) but transition to Ada 95 (Ada Reference Manual 1995). Although this style guide focuses on the current Ada standard and does not address transition issues, there are portability issues relating to using certain features of the language. These issues revolve around the language features designated as obsolescent in Annex J of the Ada Reference Manual (1995). 

The constructs of the language have been developed to satisfy a series of needs. These constructs can legitimately be used even though they may impact portability. There are some general principles to enhancing portability that are exemplified by many of the guidelines in this chapter. They are: 
* Recognize those Ada constructs that may adversely affect portability on the relevant implementations or platforms.
* Rely on those Ada constructs that depend on characteristics shared by all relevant implementations. Avoid the use of those constructs whose implementation characteristics vary on the relevant platforms.
* Localize and encapsulate nonportable features of a program if their use is essential.
* Highlight the use of constructs that may cause portability problems. 

These guidelines cannot be applied thoughtlessly. Many of them involve a detailed understanding of the Ada model and its implementation. In many cases, you will have to make carefully considered tradeoffs between efficiency and portability. Reading this chapter should improve your insight into the tradeoffs involved. 
The material in this chapter was largely acquired from three sources: the Ada Run-Time Environments Working Group (ARTEWG) Catalogue of Ada Runtime Implementation Dependencies (ARTEWG 1986); the Nissen and Wallis book on Portability and Style in Ada (Nissen and Wallis 1984); and a paper written for the U.S. Air Force by SofTech on Ada Portability Guidelines (Pappas 1985). The last of these sources (Pappas 1985) encompasses the other two and provides an in-depth explanation of the issues, numerous examples, and techniques for minimizing portability problems. Conti (1987) is a valuable reference for understanding the latitude allowed for implementors of Ada and the criteria often used to make decisions. 

This chapter's purpose is to provide a summary of portability issues in the guideline format of this book. The chapter does not include all issues identified in the references but only the most significant. For an in-depth presentation, see Pappas (1985). A few additional guidelines are presented here and others are elaborated upon where applicable. For further reading on Ada I/O portability issues, see Matthews (1987), Griest (1989), and CECOM (1989). 

Some of the guidelines in this chapter cross reference and place stricter constraints on other guidelines in this book. These constraints apply when portability is being emphasized. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Fundamentals ==

This section introduces some generally applicable principles of writing portable Ada programs. It includes guidelines about the assumptions you should make with respect to a number of Ada features and their implementations and guidelines about the use of other Ada features to ensure maximum portability. 

=== Obsolescent Features ===

==== guideline ====

* In programs or components intended to have a long life, avoid using the features of Ada declared as &quot;obsolescent&quot; by Annex J of the Ada Reference Manual (1995), unless the use of the feature is needed for backward compatibility with Ada 83 (Ada Reference Manual 1983).
* Document the use of any obsolescent features.
* Avoid using the following features:
** The short renamings of the packages in the predefined environment (e.g., Text_IO as opposed to Ada.Text_IO)
** The character replacements of ! for |, : for #, and % for quotation marks
** Reduced accuracy subtypes of floating-point types
** The 'Constrained attribute as applied to private types
** The predefined package ASCII
** The exception Numeric_Error
** Various representation specifications, including at clauses, mod clauses, interrupt entries, and the Storage_Size attribute 

==== rationale ====
Ten years of reflection on the use of Ada 83 led to the conclusion that some features of the original language are not as useful as originally intended. These features have been replaced with others in the Ada 95 revision. It would have been desirable to remove the obsolescent features completely, but that would have prevented the upward compatible transition of programs from Ada 83 to Ada 95. Thus, the obsolescent features remain in the language and are explicitly labeled as such in Annex J of the Ada Reference Manual (1995). The features listed in Annex J are candidates for removal from the language during its next revision. If a program's lifetime may extend beyond the next language revision, it should avoid the obsolescent language features unless backward compatibility with Ada 83 forces their use. 

==== exceptions ====

When you instantiate Ada.Text_IO.Float_IO, the values of the Default_Fore and Default_Aft fields are set from the values of the 'Fore and 'Aft attributes of the actual floating-point type used in the instantiation. If you declare a reduced accuracy floating-point type that you then use to instantiate Ada.Text_IO.Float_IO, the output field widths are determined from the reduced accuracy type, although the implementation accuracy is unchanged (Rationale 1995, §3.3). 

=== Global Assumptions ===

==== guideline ====

* Make informed assumptions about the support provided for the following on potential target platforms: 
** Number of bits available for type Integer (range constraints) 
** Number of decimal digits of precision available for floating-point types 
** Number of bits available for fixed-point types (delta and range constraints) 
** Number of characters per line of source text 
** Number of bits for Root_Integer expressions 
** Number of seconds for the range of Duration 
** Number of milliseconds for Duration'Small 
** Minimum and maximum scale for decimal types 
* Avoid assumptions about the values and the number of values included in the type Character. 

==== instantiation ====

* These are minimum values (or minimum precision in the case of Duration'Small) that a project or application might assume that an implementation provides. There is no guarantee that a given implementation provides more than the minimum, so these would be treated by the project or application as maximum values also. 
** 16 bits available for type Integer (-2**15 .. 2**15 - 1) 
** 6 decimal digits of precision available for floating-point types 
** 24 bits available for fixed-point types 
** 200 characters per line of source text 
** 16 bits for expressions 
** -86_400 .. 86_400 seconds (1 day) for the range of Duration (as specified in Ada Reference Manual [1995, §9.6]) 
** 20 milliseconds for Duration'Small (as specified in Ada Reference Manual [1995, §9.6]) 

==== rationale ====
Some assumptions must be made with respect to certain implementation-specific values. The exact values assumed should cover the majority of the target equipment of interest. Choosing the lowest common denominator for values improves portability. Implementations may supply an alternate character set specific to a locale or environment. For instance, the implementation on an IBM-compatible PC may support that machine's native character set rather than Latin 1. As a result, some character values may or may not be supported, for example, the smiley face. 

==== notes ====

Of the microcomputers currently available for incorporation within embedded systems, 16-bit and 32-bit processors are prevalent. Using current representation schemes, 6 decimal digits of floating point accuracy imply a representation mantissa at least 21 bits wide, leaving 11 bits for exponent and sign within a 32-bit representation. This correlates with the data widths of floating point hardware currently available for the embedded systems market. A 32-bit minimum on fixed-point numbers correlates with the accuracy and storage requirements of floating point numbers. The 16-bit example for Root_Integer expressions matches that for Integer storage. (The 32-bit integers can be assumed if the application will only be considered for 32-bit processors with a corresponding 32-bit operating system and supporting compiler.) 

The values for the range and accuracy of values of the predefined type Duration are the limits expressed in the Ada Reference Manual (1995, §9.6). You should not expect an implementation to provide a wider range or a finer granularity. 

A standard-mode Ada character set of Latin 1 can be assumed in most cases for the contents and internal behavior of type Character and packages Character.Latin_1, Character.Handling, and Strings.Maps. However, this does not mean that the target hardware platform is capable of displaying the entire character set. You should not use a nonstandard Ada character set unless intentionally producing a nonportable user interface with a specific purpose. 

=== Comments ===

==== guideline ====

* Use highlighting comments for each package, subprogram, and task where any nonportable features are present. 
* For each nonportable feature employed, describe the expectations for that feature. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Memory_Mapped_IO is
   -- WARNING - This package is implementation specific.
   -- It uses absolute memory addresses to interface with the I/O
   -- system. It assumes a particular printer's line length.
   -- Change memory mapping and printer details when porting.
   Printer_Line_Length : constant := 132;
   type Data is array (1 .. Printer_Line_Length) of Character;
   procedure Write_Line (Line : in     Data);
end Memory_Mapped_IO;
------------------------------------------------------------------------
with System;
with System.Storage_Elements;
package body Memory_Mapped_IO is
   -- WARNING: Implementation specific memory address

   Buffer_Address : constant System.Address
      := System.Storage_Elements.To_Address(16#200#);


   ---------------------------------------------------------------------
   procedure Write_Line (Line : in     Data) is
      Buffer : Data;
      for Buffer'Address use Buffer_Address;

   begin  -- Write_Line
       -- perform output operation through specific memory locations.
       ...
   end Write_Line;
   ---------------------------------------------------------------------
end Memory_Mapped_IO;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Explicitly commenting each breach of portability will raise its visibility and aid in the porting process. A description of the nonportable feature's expectations covers the common case where vendor documentation of the original implementation is not available to the person performing the porting process. 

=== Main Subprogram ===

==== guideline ====

* Consider using only a parameterless procedure as the main subprogram.
* Consider using Ada.Command_Line for accessing values from the environment, but recognize that this package's behavior and even its specification are nonportable (see Guideline 7.1.6).
* Encapsulate and document all uses of package Ada.Command_Line. 
==== example ====

The following example encapsulates the arguments for a hypothetical &quot;execution mode&quot; argument passed from the environment. It encapsulates both the expected position and the expected values of the argument, as well as provides a default in cases where the environment was unable to provide the information: 

&lt;source lang=ada&gt;
package Environment is

   type Execution_Mode is (Unspecified, Interactive, Batch);

   function Execution_Argument return Execution_Mode;

   ...

end Environment;

----------------------------------------------------------------------

with Ada.Command_Line;       use Ada.Command_Line;
with Ada.Strings.Unbounded;  use Ada.Strings.Unbounded;

package body Environment is

   function Execution_Argument return Execution_Mode is

      Execution_Argument_Number : constant := 1;

      Interactive_Mode_String : constant String := &quot;-i&quot;;
      Batch_Mode_String       : constant String := &quot;-b&quot;;

   begin
      if Argument_Count &lt; Execution_Argument_Number then
         return Unspecified;
      elsif To_Unbounded_String (Argument (Execution_Argument_Number)) =
               Interactive_Mode_String then
         return Interactive;
      elsif To_Unbounded_String (Argument (Execution_Argument_Number)) =
               Batch_Mode_String then
         return Batch;
      else
         return Unspecified;
      end if;
   end Execution_Argument;

end Environment;
&lt;/source&gt;

==== rationale ====

The predefined language environment declares the package Ada.Command_Line, providing a standardized way for a program to obtain the values of a command line. Because all Ada compilers must implement the packages in the predefined language environment, you can create a program that is more portable, maintainable, and readable by using this package. You should, however, be aware that even though the language defines the objects and type profiles of this package, it does not force a relationship between the function results and any other entity or operation, and thus, allows the possibility of a nonportable behavior and specification. 

The value returned by the function Ada.Command_Line.Argument_Count is implementation-dependent. Different operating systems follow different conventions regarding the parsing and meaning of command line parameters. To enhance your program's portability, assume the simplest case: that the external execution environment does not support passing arguments to a program. 

Some operating systems are capable of acquiring and interpreting returned integer values near 0 from a function, but many others cannot. Further, many real-time, embedded systems will not be designed to terminate, so a function or a procedure having parameters with modes out or in out will be inappropriate to such applications. 

This leaves procedures with in parameters. Although some operating systems can pass parameters into a program as it starts, others are not. Also, an implementation may not be able to perform type checking on such parameters even if the surrounding environment is capable of providing them. 

==== notes ====

Real-time, embedded applications may not have an &quot;operator&quot; initiating the program to supply the parameters, in which case it would be more appropriate for the program to have been compiled with a package containing the appropriate constant values or for the program to read the necessary values from switch settings or a downloaded auxiliary file. In any case, the variation in surrounding initiating environments is far too great to depend upon the kind of last-minute (program) parameterization implied by (subprogram) parameters to the main subprogram. POSIX 5 provides a standard operating system command line interface that might be a more appropriate alternative to the Ada command line facility depending on the implementation family of an application. 

=== Encapsulating Implementation Dependencies ===

==== guideline ====

* Create packages specifically designed to isolate hardware and implementation dependencies and designed so that their specification will not change when porting.
* Clearly indicate the objectives if machine or solution efficiency is the reason for hardware or implementation-dependent code.
* For the packages that hide implementation dependencies, maintain different package bodies for different target environments.
* Isolate interrupt receiving tasks into implementation-dependent packages.
* Refer to Annex M of the Ada Reference Manual (1995) for a list of implementation-dependent features. 

==== example ====
See Guideline 7.1.3. 

==== rationale ====

Encapsulating hardware and implementation dependencies in a package allows the remainder of the code to ignore them and, thus, to be fully portable. It also localizes the dependencies, making it clear exactly which parts of the code may need to change when porting the program. 

Some implementation-dependent features may be used to achieve particular performance or efficiency objectives. Commenting these objectives ensures that the programmer can find an appropriate way to achieve them when porting to a different implementation or explicitly recognize that they cannot be achieved. 

Interrupt entries are implementation-dependent features that may not be supported (e.g., VAX Ada uses pragmas to assign system traps to &quot;normal&quot; rendezvous). However, interrupt entries cannot be avoided in most embedded, real-time systems, and it is reasonable to assume that they are supported by an Ada implementation. The value for an interrupt is implementation-defined. Isolate it. 

==== notes ====

You can use Ada to write machine-dependent programs that take advantage of an implementation in a manner consistent with the Ada model but that make particular choices where Ada allows implementation freedom. These machine dependencies should be treated in the same way as any other implementation-dependent features of the code. 

=== Implementation-Added Features ===

==== guideline ====

* Avoid the use of vendor-supplied packages.
* Avoid the use of features added to the predefined packages that are not specified in the Ada language definition or Specialized Needs Annexes. 

==== rationale ====

Vendor-added features are not likely to be provided by other implementations. Even if a majority of vendors eventually provide similar additional features, they are unlikely to have identical formulations. Indeed, different vendors may use the same formulation for (semantically) entirely different features. See Guideline 7.5.2 for further information on vendor-supplied exceptions. 

Ada has introduced a number of new pragmas and attributes that were not present in Ada 83 (Ada Reference Manual 1983). These new pragmas and attributes may clash with implementation-defined pragmas and attributes. 

==== exceptions ====

There are many kinds of applications that require the use of these features. Examples include multilingual systems that standardize on a vendor's file system, applications that are closely integrated with vendor products (i.e., user interfaces), and embedded systems for performance reasons. Isolate the use of these features into packages. 

If a vendor-supplied package is provided in compilable source code form, use of the package does not make a program nonportable provided that the package does not contain any nonportable code and can be lawfully included in your program. 

=== Specialized Needs Annexes ===

==== guideline ====

* Use features defined in the Specialized Needs Annexes rather than vendor-defined features.
* Document clearly the use of any features from the Specialized Needs Annexes (systems programming, real-time systems, distributed systems, information systems, numerics, and safety and security). 

==== rationale ====
The Specialized Needs Annexes define standards for specific application areas without extending the syntax of the language. You can port a program with specific domain needs (e.g., distributed systems, information systems) across vendor implementations more easily if they support the features standardized in an annex rather than rely on specific vendor extensions. The purpose of the annexes is to provide a consistent and uniform way to address issues faced in several application areas where Ada is expected to be used. Because different compilers will support different sets of annexes if any, you may have portability problems if you rely on the features defined in any given annex. 

The Specialized Needs Annexes provide special capabilities that go beyond the core language definition. Because compilers are not required to support the special-purpose annexes, you should localize your use of these features where possible. By documenting their usage, you are leaving a record of potential porting difficulties for future programmers. 

=== Dependence on Parameter Passing Mechanism ===

==== guideline ====

* Do not write code whose correct execution depends on the particular parameter passing mechanism used by an implementation (Ada Reference Manual 1995, §6.2; Cohen 1986).
* If a subprogram has more than one formal parameter of a given subtype, at least one of which is [in] out, make sure that the subprogram can properly handle the case when both formal parameters denote the same actual object. 

==== example ====

The output of this program depends on the particular parameter passing mechanism that was used: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Ada.Integer_Text_IO;
procedure Outer is
   type Coordinates is
      record
         X : Integer := 0;
         Y : Integer := 0;
      end record;
   Outer_Point : Coordinates;
   ---------------------------------------------------------------------
   procedure Inner (Inner_Point : in out Coordinates) is
   begin
      Inner_Point.X := 5;
      -- The following line causes the output of the program to
      -- depend on the parameter passing mechanism.
      Ada.Integer_Text_IO.Put(Outer_Point.X);
   end Inner;
   ---------------------------------------------------------------------
begin  -- Outer
   Ada.Integer_Text_IO.Put(Outer_Point.X);
   Inner(Outer_Point);
   Ada.Integer_Text_IO.Put(Outer_Point.X);
end Outer;
------------------------------------------------------------------------
&lt;/source&gt;

If the parameter passing mechanism is by copy, the results on the standard output file are: 

0 0 5 

If the parameter passing mechanism is by reference, the results are: 

0 5 5 

The following code fragment shows where there is a potential for bounded error when a procedure is called with actual parameters denoting the same object: 

&lt;source lang=ada&gt;
procedure Test_Bounded_Error (Parm_1 : in out    Integer;
                              Parm_2 : in out Integer) is
   procedure Inner (Parm : in out Integer) is
   begin
      Parm := Parm * 10;
   end Inner;
begin
   Parm_2 := 5;
   Inner (Parm_1);
end Test_Bounded_Error;
&lt;/source&gt;

In executing the procedure Test_Bounded_Error, both Parm_1 and Parm_2 denote the object Actual_Parm. After executing the first statement, the object Actual_Parm has the value 5. When the procedure Inner is called, its formal parameter Parm denotes Actual_Parm. It cannot be determined whether it denotes the old value of Parm_1, in this case 1, or the new value, in this case 5. 

&lt;source lang=ada&gt;
Actual_Parm : Integer := 1;
...
Test_Bounded_Error (Actual_Parm, Actual_Parm);  -- potential bounded error
&lt;/source&gt;

==== rationale ====

Certain composite types (untagged records and arrays) can be passed either by copy or by reference. If there are two or more formal parameters of the same type, one or more of which is writable, then you should document whether you assume that these formal parameters do not denote the same actual object. Similarly, if a subprogram that has a formal parameter of a given subtype also makes an up-level reference to an object of this same type, you should document whether you assume that the formal parameter denotes a different object from the object named in the up-level reference. In these situations where an object can be accessed through distinct formal parameter paths, the exception Program_Error may be raised, the new value may be read, or the old value of the object may be used (Ada Reference Manual 1995, §6.2). 

See also Guideline 8.2.7. 

==== exceptions ====

Frequently, when interfacing Ada to foreign code, dependence on parameter-passing mechanisms used by a particular implementation is unavoidable. In this case, isolate the calls to the foreign code in an interface package that exports operations that do not depend on the parameter-passing mechanism. 

=== Arbitrary Order Dependencies ===

==== guideline ====

* Avoid depending on the order in which certain constructs in Ada are evaluated. 

==== example ====
The output of this program depends upon the order of evaluation of subprogram parameters, but the Ada Reference Manual (1995, §6.4) specifies that these evaluations are done in an arbitrary order: 

&lt;source lang=ada&gt;
package Utilities is
   function Unique_ID return Integer;
end Utilities;

package body Utilities is

   ID : Integer := 0;

   function Unique_ID return Integer is
   begin
      ID := ID + 1;
      return ID;
   end Unique_ID;

end Utilities;

--------------------------------------------------------------------------------
with Ada.Text_IO;
with Utilities; use Utilities;
procedure P is
begin
   Ada.Text_IO.Put_Line (Integer'Image(Unique_ID) &amp; Integer'Image(Unique_ID));
end P;
&lt;/source&gt;

If the parameters to the &quot;&amp;&quot; function are evaluated in textual order, the output is: 

1 2 

If the parameters are evaluated in the reverse order, the output is: 

2 1 

==== rationale ====

The Ada language defines certain evaluations to occur in arbitrary order (e.g., subprogram parameters). While a dependency on the order of evaluation may not adversely affect the program on a certain implementation, the code might not execute correctly when it is ported. For example, if two actual parameters of a subprogram call have side effects, the effect of the program could depend on the order of evaluation (Ada Reference Manual 1995, §1.1.4). Avoid arbitrary order dependencies, but also recognize that even an unintentional error of this kind could prohibit portability. 

== Numeric Types and Expressions ==

A great deal of care was taken with the design of the Ada features related to numeric computations to ensure that the language could be used in embedded systems and mathematical applications where precision was important. As far as possible, these features were made portable. However, there is an inevitable tradeoff between maximally exploiting the available precision of numeric computation on a particular machine and maximizing the portability of Ada numeric constructs. This means that these Ada features, particularly numeric types and expressions, must be used with great care if full portability of the resulting program is to be guaranteed. 

=== Predefined Numeric Types ===

==== guideline ====

* Avoid using the predefined numeric types in package Standard. Use range and digits declarations and let the implementation pick the appropriate representation. 
* For programs that require greater accuracy than that provided by the global assumptions, define a package that declares a private type and operations as needed; see Pappas (1985) for a full explanation and examples.
* Consider using predefined numeric types (Integer, Natural, Positive) for: 
** Indexes into arrays where the index type is not significant, such as type String 
** &quot;Pure&quot; numbers, that is, numbers with no associated physical unit (e.g., exponents) 
** Values whose purpose is to control a repeat or iteration count 

==== example ====
The second and third examples below are not representable as subranges of Integer on a machine with a 16-bit word. The first example below allows a compiler to choose a multiword representation, if necessary. 

Use: 

&lt;source lang=ada&gt;
type    Second_Of_Day is             range 0 .. 86_400;
&lt;/source&gt;

rather than: 

&lt;source lang=ada&gt;
type    Second_Of_Day is new Integer range 1 .. 86_400;
&lt;/source&gt;
or: 

&lt;source lang=ada&gt;
subtype Second_Of_Day is     Integer range 1 .. 86_400;
&lt;/source&gt;
==== rationale ====

An implementor is free to define the range of the predefined numeric types. Porting code from an implementation with greater accuracy to one of lesser accuracy is a time consuming and error-prone process. Many of the errors are not reported until run-time. 

This applies to more than just numerical computation. An easy-to-overlook instance of this problem occurs if you neglect to use explicitly declared types for integer discrete ranges (array sizes, loop ranges, etc.) (see Guidelines 5.5.1 and 5.5.2). If you do not provide an explicit type when specifying index constraints and other discrete ranges, a predefined integer type is assumed. 

The predefined numeric types are useful when you use them wisely. You should not use them to avoid declaring numeric types—then you lose the benefits of strong typing. When your application deals with different kinds of quantities and units, you should definitely separate them through the use of distinct numeric types. However, if you are simply counting the number of iterations in an iterative approximation algorithm, declaring a special integer type is probably overkill. The predefined exponentiation operators ** require an integer as the type of its right operand. 

You should use the predefined types Natural and Positive for manipulating certain kinds of values in the predefined language environment. The types String and Wide_String use an index of type Positive. If your code indexes into a string using an incompatible integer type, you will be forced to do type conversion, reducing its readability. If you are performing operations like slices and concatenation, the subtype of your numeric array index is probably insignificant and you are better off using a predefined subtype. On the other hand, if your array represents a table (e.g., a hash table), then your index subtype is significant, and you should declare a distinct index type. 

==== notes ====

There is an alternative that this guideline permits. As Guideline 7.1.5 suggests, implementation dependencies can be encapsulated in packages intended for that purpose. This could include the definition of a 32-bit integer type. It would then be possible to derive additional types from that 32-bit type. 

=== Accuracy Model ===

==== guideline ====

* Use an implementation that supports the Numerics Annex (Ada Reference Manual 1995, Annex G) when performance and accuracy are overriding concerns. 
==== rationale ====

The Numerics Annex defines the accuracy and performance requirements for floating- and fixed-point arithmetic. The Annex provides a &quot;strict&quot; mode in which the compiler must support these requirements. To guarantee that your program's numerical performance is portable, you should compile and link in the strict mode. If your program relies upon the numeric properties of the strict mode, then it will only be portable to other environments that support the strict numerics mode. 

The accuracy of floating-point numbers is based on what machine numbers can be represented exactly in storage. A computational result in a register can fall between two machine numbers when the register contains more bits than storage. You can step through the machine numbers using the attributes 'Pred and 'Succ. Other attributes return values of the mantissa, exponent, radix, and other characteristics of floating- and fixed-point numbers. 

=== Accuracy Analysis ===

==== guideline ====

* Carefully analyze what accuracy and precision you really need. 
==== rationale ====

Floating-point calculations are done with the equivalent of the implementation's predefined floating-point types. The effect of extra &quot;guard&quot; digits in internal computations can sometimes lower the number of digits that must be specified in an Ada declaration. This may not be consistent over implementations where the program is intended to be run. It may also lead to the false conclusion that the declared types are sufficient for the accuracy required. 

You should choose the numeric type declarations to satisfy the lowest precision (smallest number of digits) that will provide the required accuracy. Careful analysis will be necessary to show that the declarations are adequate. When you move to a machine with less precision, you probably can use the same type declaration. 

=== Accuracy Constraints ===

==== guideline ====

* Do not press the accuracy limits of the machine(s). 

==== rationale ====

Just because two different machines use the same number of digits in the mantissa of a floating-point number does not imply they will have the same arithmetic properties. Some Ada implementations may give slightly better accuracy than required by Ada because they make efficient use of the machine. Do not write programs that depend on this. 

=== Comments ===

==== guideline ====

* Comment the analysis and derivation of the numerical aspects of a program. 
==== rationale ====

Decisions and background about why certain precisions are required in a program are important to program revision or porting. The underlying numerical analysis leading to the program should be commented. 

=== Subexpression Evaluation ===

==== guideline ====

* Anticipate the range of values of subexpressions to avoid exceeding the underlying range of their base type. Use derived types, subtypes, factoring, and range constraints on numeric types (see Guidelines 3.4.1, 5.3.1, and 5.5.3). 

==== example ====

This example is adapted from the Rationale (1995, §3.3): 

&lt;source lang=ada&gt;
with Ada.Text_IO;
with Ada.Integer_Text_IO;
procedure Demo_Overflow is
-- assume the predefined type Integer has a 16-bit range
   X : Integer := 24_000;
   Y : Integer;
begin  -- Demo_Overflow
   y := (3 * X) / 4;  -- raises Constraint_Error if the machine registers used are 16-bit
  -- mathematically correct intermediate result if 32-bit registers
   Ada.Text_IO.Put (&quot;(&quot;);
   Ada.Integer_Text_IO.Put (X);
   Ada.Text_IO.Put (&quot; * 3 ) / 4 = &quot;);
   Ada.Integer_Text_IO.Put (Y);
exception
   when Constraint_Error =&gt;
      Ada.Text_IO.Put_Line (&quot;3 * X too big for register!&quot;);
end Demo_Overflow;
&lt;/source&gt;

==== rationale ====

The Ada language does not require that an implementation perform range checks on subexpressions within an expression. Ada does require that overflow checks be performed. Thus, depending on the order of evaluation and the size of the registers, a subexpression will either overflow or produce the mathematically correct result. In the event of an overflow, you will get the exception Constraint_Error. Even if the implementation on your program's current target does not result in an overflow on a subexpression evaluation, your program might be ported to an implementation that does. 

=== Relational Tests ===

==== guideline ====

* Consider using &lt;= and &gt;= to do relational tests on real valued arguments, avoiding the &lt;, &gt;, =, and /= operations. 
* Use values of type attributes in comparisons and checking for small values. 
==== example ====

The following examples test for (1) absolute &quot;equality&quot; in storage, (2) absolute &quot;equality&quot; in computation, (3) relative &quot;equality&quot; in storage, and (4) relative &quot;equality&quot; in computation: 

&lt;source lang=ada&gt;
abs (X - Y) &lt;= Float_Type'Model_Small                -- (1)
abs (X - Y) &lt;= Float_Type'Base'Model_Small           -- (2)
abs (X - Y) &lt;= abs X * Float_Type'Model_Epsilon      -- (3)
abs (X - Y) &lt;= abs X * Float_Type'Base'Model_Epsilon -- (4)
&lt;/source&gt;
And, specifically, for &quot;equality&quot; to 0: 
&lt;source lang=ada&gt;
abs X &lt;= Float_Type'Model_Small                      -- (1)
abs X &lt;= Float_Type'Base'Model_Small                 -- (2)
abs X &lt;= abs X * Float_Type'Model_Epsilon            -- (3)
abs X &lt;= abs X * Float_Type'Base'Model_Epsilon       -- (4)
&lt;/source&gt;

==== rationale ====
Strict relational comparisons ( &lt;, &gt;, =, /= ) are a general problem with computations involving real numbers. Because of the way comparisons are defined in terms of model intervals, it is possible for the values of the comparisons to depend on the implementation. Within a model interval, the result of comparing two values is nondeterministic if the values are not model numbers. In general, you should test for proximity rather than equality as shown in the examples. See also Rationale (1995, §§G.4.1 and G.4.2.).

Type attributes are the primary means of symbolically accessing the implementation of the Ada numeric model. When the characteristics of the model numbers are accessed by type attributes, the source code is portable. The appropriate model numbers of any implementation will then be used by the generated code. 

Although 0 is technically not a special case, it is often overlooked because it looks like the simplest and, therefore, safest case. But in reality, each time comparisons involve small values, you should evaluate the situation to determine which technique is appropriate. 

==== notes ====

Regardless of language, real-valued computations have inaccuracy. That the corresponding mathematical operations have algebraic properties usually introduces some confusion. This guideline explains how Ada deals with the problem that most languages face.

=== Decimal Types and the Information Systems Annex ===

==== guideline ====

* In information systems, declare different numeric decimal types to correspond to different scales (Brosgol, Eachus, and Emery 1994).
* Create objects of different decimal types to reflect different units of measure (Brosgol, Eachus, and Emery 1994).
* Declare subtypes of the appropriately scaled decimal type to provide appropriate range constraints for application-specific types.
* Encapsulate each measure category in a package (Brosgol, Eachus, and Emery 1994).
* Declare as few decimal types as possible for unitless data (Brosgol, Eachus, and Emery 1994). 
* For decimal calculations, determine whether the result should be truncated toward 0 or rounded.
* Avoid decimal types and arithmetic on compilers that do not support the Information Systems Annex (Ada Reference Manual 1995, Annex F) in full. 

==== example ====

&lt;source lang=ada&gt;
-- The salary cap today is $500,000; however this can be expanded to $99,999,999.99.
type Executive_Salary is delta 0.01 digits 10 range 0 .. 500_000.00;

------------------------------------------------------------------------------
package Currency is

   type Dollars is delta 0.01 digits 12;

   type Marks   is delta 0.01 digits 12;

   type Yen     is delta 0.01 digits 12;

   function To_Dollars (M : Marks) return Dollars;
   function To_Dollars (Y : Yen)   return Dollars;

   function To_Marks (D : Dollars) return Marks;
   function To_Marks (Y : Yen)     return Marks;

   function To_Yen (D : Dollars) return Yen;
   function To_Yen (M : Marks)   return Yen;

end Currency;
&lt;/source&gt;

==== rationale ====

The Ada language does not provide any predefined decimal types. Therefore, you need to declare decimal types for the different scales you will need to use. Differences in scale and precision must be considered in deciding whether or not a common type will suffice (Brosgol, Eachus, and Emery 1994). 

You need different types for objects measured in different units. This allows the compiler to detect mismatched values in expressions. If you declare all decimal objects to be of a single type, you forego the benefits of strong typing. For example, in an application that involves several currencies, each currency should be declared as a separate type. You should provide appropriate conversions between different currencies. 

You should map data with no particular unit of measure to a small set of types or a single type to avoid the explosion of conversions between numeric types. 

Separate the range requirement on a decimal type from its precision, i.e., the number of significant digits required. From the point of view of planning for change and ease of maintenance, you can use the digit's value to accommodate future growth in the values to be stored in objects of the type. For example, you may want to anticipate growth for database values and report formats. You can constrain the values of the type through a range constraint that matches current needs. It is easier to modify the range and avoid redefining databases and reports. 

Ada automatically truncates toward 0. If your requirements are to round the decimal result, you must explicitly do so using the 'Round attribute. 

The core language defines the basic syntax of and operations on decimal types. It does not specify, however, the minimum number of significant digits that must be supported. Nor does the core language require the compiler to support values of Small other than powers of 2, thus enabling the compiler effectively to reject a decimal declaration (Ada Reference Manual 1995, §3.5.9). The Information Systems Annex provides additional support for decimal types. It requires a minimum of 18 significant digits. It also specifies a Text_IO.Editing package that provides support analogous to the COBOL picture approach. 

=== Storage Control ===

The management of dynamic storage can vary between Ada environments. In fact, some environments do not provide any deallocation. The following Ada storage control mechanisms are implementation-dependent and should be used with care in writing portable programs. 

=== Representation Clause ===

==== guideline ====

* Do not use a representation clause to specify number of storage units. 
==== rationale ====

The meaning of the 'Storage_Size attribute is ambiguous; specifying a particular value will not improve portability. It may or may not include space allocated for parameters, data, etc. Save the use of this feature for designs that must depend on a particular vendor's implementation. 

==== notes ====

During a porting activity, it can be assumed that any occurrence of storage specification indicates an implementation dependency that must be redesigned. 

=== Access-to-Subprogram Values ===

==== guideline ====

* Do not compare access-to-subprogram values. 
==== rationale ====

The Ada Reference Manual (1995, §3.10.2) explains that an &quot;implementation may consider two access-to-subprogram values to be unequal, even though they designate the same subprogram. This might be because one points directly to the subprogram, while the other points to a special prologue that performs an Elaboration_Check and then jumps to the subprogram.&quot; The Ada Reference Manual (1995, §4.5.2) states that it is &quot;unspecified whether two access values that designate the same subprogram but are the result of distinct evaluations of Access attribute references are equal or unequal.&quot; 

See also Guideline 5.3.4. 

==== exceptions ====

If you must compare an access-to-subprogram value, you should define a constant using the access-to-subprogram value and make all future comparisons against the constant. However, if you attempt to compare access-to-subprogram values with different levels of indirection, the values might still be unequal, even if designating the same subprogram. 

=== Storage Pool Mechanisms ===

==== guideline ====

* Consider using explicitly defined storage pool mechanisms. 

==== example ====

See the Ada Reference Manual 1995, §13.11.2). 

You use allocators as before. Instead of using unchecked deallocation, you maintain your own free lists of objects that are no longer in use and available for reuse. 

You use allocators and possibly unchecked deallocation; however, you implement a storage pool and associate it with the access type(s) via a Storage_Pool clause. You can use this technique to implement a mark/release storage management paradigm, which might be significantly faster than an allocate/deallocate paradigm. Some vendors may provide a mark/release package as part of their Ada environment. 

You do not use allocators, but instead use unchecked conversion from the address and do all your own default initialization, etc. It is unlikely you would use this last option because you lose automatic default initialization.

== Tasking ==

The definition of tasking in the Ada language leaves many characteristics of the tasking model up to the implementor. This allows a vendor to make appropriate tradeoffs for the intended application domain, but it also diminishes the portability of designs and code employing the tasking features. In some respects, this diminished portability is an inherent characteristic of concurrency approaches (see Nissen and Wallis 1984, 37). 
A discussion of Ada tasking dependencies when employed in a distributed target environment is beyond the scope of this book. For example, multiprocessor task scheduling, interprocessor rendezvous, and the distributed sense of time through package Calendar are all subject to differences between implementations. For more information, Nissen and Wallis (1984) and ARTEWG (1986) touch on these issues, and Volz et al. (1985) is one of many research articles available. 

If the Real-Time Systems Annex is supported, then many concurrency aspects are fully defined and, therefore, a program can rely on these features while still being portable to other implementations that conform to the Real-Time Systems Annex. The following sections provide guidelines based on the absence of this annex. 

=== Task Activation Order ===

==== guideline ====

* Do not depend on the order in which task objects are activated when declared in the same declarative list. 
==== rationale ====

The order in which task objects are activated is left undefined in the Ada Reference Manual (1995, §9.2). See also Guideline 6.1.5. 

=== Delay Statements ===

==== guideline ====

* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Never use knowledge of the execution pattern of tasks to achieve timing requirements. 

==== rationale ====
The rationale for this appears in Guideline 6.1.7. In addition, the treatment of delay statements varies from implementation to implementation, thereby hindering portability. 

Using knowledge of the execution pattern of tasks to achieve timing requirements is nonportable. Ada does not specify the underlying scheduling algorithm, and there is no guarantee that system clock ticks will be consistently precise between different systems. Thus, when you change system clocks, your delay behavior also changes. 

=== Package Calendar, Type Duration, and System.Tick ===

==== guideline ====

* Do not assume a correlation between System.Tick and type Duration (see Guidelines 6.1.7 and 7.4.2). 

==== rationale ====
Such a correlation is not required, although it may exist in some implementations. 

=== Select Statement Evaluation Order ===

==== guideline ====

* Do not depend on the order in which guard conditions are evaluated or on the algorithm for choosing among several open select alternatives. 

==== rationale ====
The language does not define the order of these conditions, so assume that they are arbitrary. 


=== Task Scheduling Algorithm ===

==== guideline ====

* Do not assume that tasks execute uninterrupted until they reach a synchronization point.
* Use pragma Priority to distinguish general levels of importance only (see Guideline 6.1.6). 

==== rationale ====
The Ada tasking model requires that tasks be synchronized only through the explicit means provided in the language (i.e., rendezvous, task dependence, pragma Atomic). The scheduling algorithm is not defined by the language and may vary from time sliced to preemptive priority. Some implementations provide several choices that a user may select for the application. 

==== notes ====

The number of priorities may vary between implementations. In addition, the manner in which tasks of the same priority are handled may vary between implementations even if the implementations use the same general scheduling algorithm. 

==== exceptions ====

In real-time systems, it is often necessary to tightly control the tasking algorithm to obtain the required performance. For example, avionics systems are frequently driven by cyclic events with limited asynchronous interruptions. A nonpreemptive tasking model is traditionally used to obtain the greatest performance in these applications. Cyclic executives can be programmed in Ada, as can a progression of scheduling schemes from cyclic through multiple-frame-rate to full asynchrony (MacLaren 1980), although an external clock is usually required. 

=== Abort ===

==== guideline ====

* Avoid using the abort statement. 

==== rationale ====

The rationale for this appears in Guideline 6.3.3. In addition, treatment of the abort statement varies from implementation to implementation, thereby hindering portability. 

=== Unprotected Shared Variables and Pragmas Atomic and Volatile ===

==== guideline ====

* Do not use unprotected shared variables.
* Consider using protected types to provide data synchronization.
* Have tasks communicate through the rendezvous mechanism. 
* Do not use unprotected shared variables as a task synchronization device. 
* Consider using protected objects to encapsulate shared data.
* Use pragma Atomic or Volatile only when you are forced to by run-time system deficiencies. 

==== example ====
See Guidelines 6.1.1 and 6.1.2. 

==== rationale ====

The rationale for this appears in Guidelines 6.1.1 and 6.2.4. In addition, the treatment of unprotected shared variables varies from implementation to implementation, thereby hindering portability. 

== Exceptions ==

You should exercise care when using predefined exceptions because aspects of their treatment may vary between implementations. Implementation-specific exceptions must, of course, be avoided. See Guidelines 4.3 an 5.8 for further information on exceptions. See Guideline 7.1.6 for further information on vendor-supplied features. 

=== Predefined and User-Defined Exceptions ===

==== guideline ====

* Do not depend on the exact locations at which predefined exceptions are raised. 
* Do not rely on the behavior of Ada.Exceptions beyond the minimum defined in the language. 

==== rationale ====
The Ada Reference Manual (1995, §11) states that, among implementations, a predefined exception for the same cause may be raised from different locations. You will not be able to discriminate between the exceptions. Further, each of the predefined exceptions is associated with a variety of conditions. Any exception handler written for a predefined exception must be prepared to deal with any of these conditions. 

Guideline 5.6.9 discusses the use of blocks to define local exception handlers that can catch exceptions close to their point of origin. 

=== Implementation-Specific Exceptions ===

==== guideline ====

* Do not raise implementation-specific exceptions.
* Convert implementation-specific exceptions within interface packages to visible user-defined exceptions. 

==== rationale ====
No exception defined specifically by an implementation can be guaranteed to be portable to other implementations whether or not they are from the same vendor. Not only may the names be different, but the range of conditions triggering the exceptions may be different also. 

If you create interface packages for the implementation-specific portions of your program, those packages can catch or recognize implementation-specific exceptions and convert them into user-defined exceptions that have been declared in the specification. Do not allow yourself to be forced to find and change the name of every handler you have written for these exceptions when the program is ported. 

== Representation Clauses And Implementation-Dependent Features ==

Ada provides many implementation-dependent features that permit greater control over and interaction with the underlying hardware architecture than is normally provided by a high-order language. These mechanisms are intended to assist in systems programming and real-time programming to obtain greater efficiency (e.g., specific size and layout of variables through representation clauses) and direct hardware interaction (e.g., interrupt entries) without having to resort to assembly level programming. 
Given the objectives for these features, it is not surprising that you must usually pay a significant price in portability to use them. In general, where portability is the main objective, do not use these features. When you must use these features, encapsulate them in packages that are well-commented as interfacing to the particular target environment. This section identifies the various features and their recommended use with respect to portability. 

=== Representation Clauses ===

==== guideline ====

* Use algorithms that do not depend on the representation of the data and, therefore, do not need representation clauses. 
* Consider using representation clauses when accessing or defining interface data or when a specific representation is needed to implement a design. 
* Do not assume that sharing source files between programs guarantees the same representation of data types in those files. 

==== rationale ====
In many cases, it is easy to use representation clauses to implement an algorithm, even when it is not necessary. There is also a tendency to document the original programmer's assumptions about the representation for future reference. But there is no guarantee that another implementation will support the representation chosen. Unnecessary representation clauses also confuse porting or maintenance efforts, which must assume that the programmer depends on the documented representation. 

Interfaces to external systems and devices are the most common situations where a representation clause is needed. Uses of pragma Import and address clauses should be evaluated during design and porting to determine whether a representation clause is needed. 

Without representation clauses, the language does not require two compilations of an unchanged file to result in the same data representation. Things that can change the representation between compilations include: 

* A change in a file earlier in the compilation order 
* A change in the optimization strategy or level 
* A change in versions of the compiler 
* A change in actual compilers 
* A change in the availability of system resources 

Therefore, two independently linked programs or partitions should only share data that has their representations explicitly controlled. 
==== notes ====

During a porting effort, all representation clauses can be evaluated as either design artifacts or specifications for accessing interface data that might change with a new implementation. 

=== Package System ===

==== guideline ====

* Avoid using package System constants except in attempting to generalize other machine-dependent constructs. 

==== rationale ====
Because the values in this package are implementation-provided, unexpected effects can result from their use. 

==== notes ====

If you must guarantee that physical record layouts will remain the same between implementations, you can express record fields by their first and last bit positions as shown in the Ada Reference Manual (1995, §13.5.1). Static expressions and named numbers should be used to let the compiler compute the endpoints of each range in terms of earlier fields. In this case, greater portability can be achieved by using System.Storage_Unit to let the compiler compute the value of the named number. However, this method might not work for all values of System.Storage_Unit. 

==== exceptions ====

Do use package System constants to parameterize other implementation-dependent features (see Pappas (1985, §13.7.1). 

=== Machine Code Inserts ===

==== guideline ====

* Avoid machine code inserts. 

==== rationale ====
The Ada Reference Manual (1995, Annex C) suggests that the package that implements machine code inserts is optional. Additionally, it is not standardized so that machine code inserts are most likely not portable. In fact, it is possible that two different vendors' syntax will differ for an identical target, and differences in lower-level details, such as register conventions, will hinder portability. 

==== exceptions ====

If machine code inserts must be used to meet another project requirement, recognize and document the portability decreasing effects. 

In the declarative region of the body of the routine where machine code inserts are being used, insert comments explaining what functions inserts provide and (especially) why the inserts are necessary. Comment the necessity of using machine code inserts by delineating what went wrong with attempts to use other higher level constructs. 

=== Interfacing to Foreign Languages ===

==== guideline ====

* Use the package Interfaces and its language-defined child packages rather than implementation-specific mechanisms. 
* Consider using pragma Import rather than access-to-subprogram types for interfacing to subprograms in other languages.  (Preferably using the &quot;External_Name =&gt;&quot; argument.)
* Isolate all subprograms employing pragmas Import, Export, and Convention to implementation-specific (interface) package bodies. 

==== example ====

This example shows how to interface with the following cube root function written in C: 

&lt;source lang=c&gt;
double cbrt (double x);
&lt;/source&gt;

&lt;source lang=ada&gt;
package Math_Utilities is

   Argument_Error : exception;

   function Cube_Root (X : Float) return Float;

   ...

end Math_Utilities;
   
------------------------------------------------------------------------------
with Interfaces.C;
package body Math_Utilities is

   function Cube_Root (X : Float) return Float is

      function C_Cbrt (X : Interfaces.C.Double) return Interfaces.C.Double;
      pragma Import (Convention    =&gt; C,
                     Entity        =&gt; C_Cbrt,
                     External_Name =&gt; &quot;cbrt&quot;);

   begin
      if X &lt; 0.0 then
         raise Argument_Error;
      else
         return Float (C_Cbrt (Interfaces.C.Double (X)));
      end if;
   end Cube_Root;

   ...

end Math_Utilities;
&lt;/source&gt;

==== rationale ====

For static interfacing to subprograms in other languages, the pragma Import provides a better solution than access to subprograms because no indirection is required. The pragma Interface (Ada Reference Manual 1983) has been replaced by pragmas Import, Export, and Convention. Annex B of the Rationale (1995) discusses how to use these pragmas in conjunction with the access-to-subprogram types in interfacing to other languages. 

Note especially the distinction between the &quot;External_Name =&gt;&quot; and &quot;Link_Name =&gt;&quot; parameters to pragma Import which are frequently confused.  External_Name specifies the procedure name as it appears in the source code of the other language (such as C or Fortran).  Link_Name specifies the name used by the linker.  Typically, only one of these parameters is specified, and generally External_Name is the preferred choice for portability.

Access to subprogram types is useful for implementing callbacks in a separate subsystem, such as the X Window system. 

The problems with interfacing to foreign languages are complex. These problems include pragma syntax differences, conventions for linking/binding Ada to other languages, and mapping Ada variables to foreign language variables. By hiding these dependencies within interface packages, the amount of code modification can be reduced. 

==== exceptions ====

It is often necessary to interact with other languages, if only an assembly language, to reach certain hardware features. In these cases, clearly comment the requirements and limitations of the interface and pragma Import, Export, and Conventions usage.

=== Implementation-Specific Pragmas and Attributes ===

==== guideline ====

* Avoid pragmas and attributes added by the compiler implementor. 

==== rationale ====
The Ada Reference Manual (1995) permits an implementor to add pragmas and attributes to exploit a particular hardware architecture or software environment. These are obviously even more implementation-specific and therefore less portable than an implementor's interpretations of the predefined pragmas and attributes. However, the Ada Reference Manual (1995) defines a set of annexes that have a uniform and consistent approach to certain specialized needs, namely, real-time systems, distributed systems, information systems, numerics, interfacing to foreign languages, and safety and security. You should always prefer the facilities defined in the annexes to any vendor-defined pragmas and attributes. 

=== Unchecked Deallocation ===

==== guideline ====

* Avoid dependence on Ada.Unchecked_Deallocation (see Guideline 5.9.2). 

==== rationale ====
The unchecked storage deallocation mechanism is one method for overriding the default time at which allocated storage is reclaimed. The earliest default time is when an object is no longer accessible, for example, when control leaves the scope where an access type was declared (the exact point after this time is implementation-dependent). Any unchecked deallocation of storage performed prior to this may result in an erroneous Ada program if an attempt is made to access the object. 

This guideline is stronger than Guideline 5.9.2 because of the extreme dependence on the implementation of Ada.Unchecked_Deallocation. Using it could cause considerable difficulty with portability. 

==== notes ====

Ada.Unchecked_Deallocation is a supported feature in all Ada implementations. The portability issue arises in that unchecked storage deallocations might cause varying results in different implementations. 

==== exceptions ====

Using unchecked deallocation of storage can be beneficial in local control of highly iterative or recursive algorithms where available storage may be exceeded. 

=== Unchecked Access ===

==== guideline ====

* Avoid dependence on the attribute Unchecked_Access (see Guideline 5.9.2). 

==== rationale ====
Access values are subject to accessibility restrictions. Using the attribute Unchecked_Access prevents these rules from being checked, and the programmer runs the risk of having dangling references. 

=== Unchecked Conversion ===

==== guideline ====

* Avoid dependence on Ada.Unchecked_Conversion (see Guideline 5.9.1). 

==== rationale ====
The unchecked type conversion mechanism is, in effect, a means of bypassing the strong typing facilities in Ada. An implementation is free to limit the types that may be matched and the results that occur when object sizes differ. 

==== exceptions ====

Unchecked type conversion is useful in implementation-dependent parts of Ada programs where lack of portability is isolated and where low-level programming and foreign language interfacing are the objectives. 

If an enumeration representation clause is used, unchecked type conversion is the only language-provided way to retrieve the internal integer code of an enumeration value. 

=== Run-Time Dependencies ===

==== guideline ====

* Avoid the direct invocation of or implicit dependence upon an underlying host operating system or Ada run-time support system, except where the interface is explicitly defined in the language (e.g., Annex C or D of the Ada Reference Manual [1995]). 
* Use standard bindings and the package Ada.Command_Line when you need to invoke the underlying run-time support system. 
* Use features defined in the Annexes rather than vendor-defined features. 

==== rationale ====
Features of an implementation not specified in the Ada Reference Manual (1995) will usually differ between implementations. Specific implementation-dependent features are not likely to be provided in other implementations. In addition to the mandatory predefined language environment, the annexes define various packages, attributes, and pragmas to standardize implementation-dependent features for several specialized domains. You enhance portability when you use the features declared in the packages in the Annexes because you can port your program to other vendor environments that implement the same Annexes you have used. Even if a majority of vendors eventually provide similar features, they are unlikely to have identical formulations. Indeed, different vendors may use the same formulation for (semantically) entirely different features. 

When coding, try to avoid depending on the underlying operating system. Consider the consequences of including system calls in a program on a host development system. If these calls are not flagged for removal and replacement, the program could go through development and testing only to be unusable when moved to a target environment that lacks the facilities provided by those system calls on the host. 

Guideline 7.1.5 discusses the use of the package Ada.Command_Line. If an Ada environment implements a standard binding to operating system services, such as POSIX/Ada, and you write POSIX-compliant calls, your program should be portable across more systems. 

==== exceptions ====

In real-time, embedded systems, making calls to low-level support system facilities may often be unavoidable. Isolating the uses of these facilities may be too difficult. Comment them as you would machine code inserts (see Guideline 7.6.3); they are, in a sense, instructions for the virtual machine provided by the support system. When isolating the uses of these features, provide an interface for the rest of your program to use, which can be ported through replacement of the interface's implementation. 

== Input/Output ==

I/O facilities in Ada are not a part of the syntactic definition of the language. The constructs in the language have been used to define a set of packages for this purpose. These packages are not expected to meet all the I/O needs of all applications, in particular, embedded systems. They serve as a core subset that may be used on straightforward data and that can be used as examples of building I/O facilities upon the low-level constructs provided by the language. Providing an I/O definition that could meet the requirements of all applications and integrate with the many existing operating systems would result in unacceptable implementation dependencies. 
The types of portability problems encountered with I/O tend to be different for applications running with a host operating system versus embedded targets where the Ada run-time is self-sufficient. Interacting with a host operating system offers the added complexity of coexisting with the host file system structures (e.g., hierarchical directories), access methods (e.g., indexed sequential access method [ISAM]), and naming conventions (e.g., logical names and aliases based on the current directory). The section on Input/Output in ARTEWG (1986) provides some examples of this kind of dependency. Embedded applications have different dependencies that often tie them to the low-level details of their hardware devices. 

The major defense against these inherent implementation dependencies in I/O is to try to isolate their functionality in any given application. The majority of the following guidelines are focused in this direction. 

=== Name and Form Parameters ===

==== guideline ====

* Use constants and variables as symbolic actuals for the Name and Form parameters on the predefined I/O packages. Declare and initialize them in an implementation dependency package. 

==== rationale ====
The format and allowable values of these parameters on the predefined I/O packages can vary greatly between implementations. Isolation of these values facilitates portability. Not specifying a Form string or using a null value does not guarantee portability because the implementation is free to specify defaults. 

==== notes ====

It may be desirable to further abstract the I/O facilities by defining additional Create and Open procedures that hide the visibility of the Form parameter entirely (see Pappas 1985, 54-55). 

=== File Closing ===

==== guideline ====

* Close all files explicitly. 

==== rationale ====
The Ada Reference Manual (1995, §A.7) does not define what happens to external files after completion of the main subprogram (in particular, if corresponding files have not been closed). 

The disposition of a closed temporary file may vary, perhaps affecting performance and space availability (ARTEWG 1986). 

=== Input/Output on Access Types ===

==== guideline ====

* Avoid performing I/O on access types. 

==== rationale ====
The Ada Reference Manual (1995, §A.7) does not specify the effects of I/O on access types. When such a value is written, it is placed out of reach of the implementation. Thus, it is out of reach of the reliability-enhancing controls of strong type checking. 

Consider the meaning of this operation. One possible implementation of the values of access types is virtual addresses. If you write such a value, how can you expect another program to read that value and make any sensible use of it? The value cannot be construed to refer to any meaningful location within the reader's address space, nor can a reader infer any information about the writer's address space from the value read. The latter is the same problem that the writer would have trying to interpret or use the value if it is read back in. To wit, a garbage collection and/or heap compaction scheme may have moved the item formerly accessed by that value, leaving that value &quot;pointing&quot; at space that is now being put to indeterminable uses by the underlying implementation. 

=== Package Ada.Streams.Stream_IO ===

==== guideline ====

* Consider using Sequential_IO or Direct_IO instead of Stream_IO unless you need the low-level, heterogeneous I/O features provided by Stream_IO. 

==== rationale ====
Sequential_IO and Direct_IO are still well suited for processing homogeneous files. Additionally, in cases where the intent is to process homogeneous files, the use of Sequential_IO or Direct_IO has the advantage of enforcing this intent at compile time. 

Stream_IO should be reserved for processing heterogeneous files. In this case, a file is not a sequence of objects of all the same type but rather a sequence of objects of varying types. To read a heterogeneous sequence of objects in the correct order requires some application-specific knowledge. 

=== Current Error Files ===

==== guideline ====

* Consider using Current_Error and Set_Error for run-time error messages. 

==== example ====

&lt;source lang=ada&gt;
with Ada.Text_IO;

...

begin
   Ada.Text_IO.Open (File =&gt; Configuration_File,
                     Mode =&gt; Ada.Text_IO.In_File,
                     Name =&gt; Configuration_File_Name);
exception
   when Ada.Text_IO.Name_Error =&gt;
      Ada.Text_IO.Put_Line (File =&gt; Ada.Text_IO.Standard_Error,
                            Item =&gt; &quot;Can't open configuration file.&quot;);
      ...
end;
&lt;/source&gt;

==== rationale ====

The package Text_IO includes the concept of a current error file. You should report errors to the user through the associated subprograms Current_Error and Set_Error instead of the standard output facilities. In interactive applications, using the Text_IO error facilities increases the portability of your user interface. 

==== notes ====

In a program with multiple tasks for I/O, you need to be careful of two or more tasks trying to set Current_Input, Current_Output, or Current_Error. The potential problem lies in unprotected updates to the &quot;shared&quot; state associated with a package, in this case, the package Text_IO. Guidelines 6.1.1 and 6.2.4 discuss the related issues of unprotected shared variables. 

== Summary ==

=== fundamentals ===

* In programs or components intended to have a long life, avoid using the features of Ada declared as &quot;obsolescent&quot; by Annex J of the Ada Reference Manual (1995), unless the use of the feature is needed for backward compatibility with Ada 83 (Ada Reference Manual 1983). 
* Document the use of any obsolescent features. 
* Avoid using the following features: 
** The short renamings of the packages in the predefined environment (e.g., Text_IO as opposed to Ada.Text_IO) 
** The character replacements of ! for |, : for #, and % for quotation marks 
** Reduced accuracy subtypes of floating-point types 
** The 'Constrained attribute as applied to private types 
** The predefined package ASCII 
** The exception Numeric_Error 
** Various representation specifications, including at clauses, mod clauses, interrupt entries, and the Storage_Size attribute 
* Make informed assumptions about the support provided for the following on potential target platforms: 
** Number of bits available for type Integer (range constraints) 
** Number of decimal digits of precision available for floating-point types 
** Number of bits available for fixed-point types (delta and range constraints) 
** Number of characters per line of source text 
** Number of bits for Root_Integer expressions 
** Number of seconds for the range of Duration 
** Number of milliseconds for Duration'Small 
** Minimum and maximum scale for decimal types 
* Avoid assumptions about the values and the number of values included in the type Character. 
* Use highlighting comments for each package, subprogram, and task where any nonportable features are present. 
* For each nonportable feature employed, describe the expectations for that feature. 
* Consider using only a parameterless procedure as the main subprogram. 
* Consider using Ada.Command_Line for accessing values from the environment, but recognize that this package's behavior and even its specification are nonportable. 
* Encapsulate and document all uses of package Ada.Command_Line. 
* Create packages specifically designed to isolate hardware and implementation dependencies and designed so that their specification will not change when porting. 
* Clearly indicate the objectives if machine or solution efficiency is the reason for hardware or implementation-dependent code. 
* For the packages that hide implementation dependencies, maintain different package bodies for different target environments. 
* Isolate interrupt receiving tasks into implementation-dependent packages. 
* Refer to Annex M of the Ada Reference Manual (1995) for a list of implementation-dependent features. 
* Avoid the use of vendor-supplied packages. 
* Avoid the use of features added to the predefined packages that are not specified in the Ada language definition or Specialized Needs Annexes. 
* Use features defined in the Specialized Needs Annexes rather than vendor-defined features. 
* Document clearly the use of any features from the Specialized Needs Annexes (systems programming, real-time systems, distributed systems, information systems, numerics, and safety and security). 
* Do not write code whose correct execution depends on the particular parameter passing mechanism used by an implementation (Ada Reference Manual 1995, §6.2; Cohen 1986). 
* If a subprogram has more than one formal parameter of a given subtype, at least one of which is [in] out, make sure that the subprogram can properly handle the case when both formal parameters denote the same actual object. 
* Avoid depending on the order in which certain constructs in Ada are evaluated . 

=== numeric types and expressions ===

* Avoid using the predefined numeric types in package Standard . Use range and digits declarations and let the implementation pick the appropriate representation. 
* For programs that require greater accuracy than that provided by the global assumptions, define a package that declares a private type and operations as needed; see Pappas (1985) for a full explanation and examples. 
* Consider using predefined numeric types (Integer, Natural, Positive) for: 
** Indexes into arrays where the index type is not significant, such as type String 
** &quot;Pure&quot; numbers, that is, numbers with no associated physical unit (e.g., exponents) 
** Values whose purpose is to control a repeat or iteration count 
* Use an implementation that supports the Numerics Annex (Ada Reference Manual 1995, Annex G) when performance and accuracy are overriding concerns . 
* Carefully analyze what accuracy and precision you really need. 
* Do not press the accuracy limits of the machine(s). 
* Comment the analysis and derivation of the numerical aspects of a program. 
* Anticipate the range of values of subexpressions to avoid exceeding the underlying range of their base type. Use derived types, subtypes, factoring, and range constraints on numeric types. 
* Consider using &lt;= and &gt;= to do relational tests on real valued arguments, avoiding the &lt;, &gt;, =, and /= operations. 
* Use values of type attributes in comparisons and checking for small values. 
* In information systems, declare different numeric decimal types to correspond to different scales (Brosgol, Eachus, and Emery 1994). 
* Create objects of different decimal types to reflect different units of measure (Brosgol, Eachus, and Emery 1994). 
* Declare subtypes of the appropriately scaled decimal type to provide appropriate range constraints for application-specific types. 
* Encapsulate each measure category in a package (Brosgol, Eachus, and Emery 1994). 
* Declare as few decimal types as possible for unitless data (Brosgol, Eachus, and Emery 1994). 
* For decimal calculations, determine whether the result should be truncated toward 0 or rounded. 
* Avoid decimal types and arithmetic on compilers that do not support the Information Systems Annex (Ada Reference Manual 1995, Annex F) in full. 

=== storage control ===

* Do not use a representation clause to specify number of storage units. 
* Do not compare access-to-subprogram values. 
* Consider using explicitly defined storage pool mechanisms. 

=== tasking ===

* Do not depend on the order in which task objects are activated when declared in the same declarative list. 
* Do not depend on a particular delay being achievable (Nissen and Wallis 1984). 
* Never use knowledge of the execution pattern of tasks to achieve timing requirements. 
* Do not assume a correlation between System.Tick and type Duration. 
* Do not depend on the order in which guard conditions are evaluated or on the algorithm for choosing among several open select alternatives. 
* Do not assume that tasks execute uninterrupted until they reach a synchronization point. 
* Use pragma Priority to distinguish general levels of importance only. 
* Avoid using the abort statement. 
* Do not use unprotected shared variables. 
* Consider using protected types to provide data synchronization. 
* Have tasks communicate through the rendezvous mechanism. 
* Do not use unprotected shared variables as a task synchronization device. 
* Consider using protected objects to encapsulate shared data. 
* Use pragma Atomic or Volatile only when you are forced to by run-time system deficiencies. 

==== exceptions ====

* Do not depend on the exact locations at which predefined exceptions are raised. 
* Do not rely on the behavior of Ada.Exceptions beyond the minimum defined in the language. 
* Do not raise implementation-specific exceptions. 
* Convert implementation-specific exceptions within interface packages to visible user-defined exceptions. 

=== representation clauses and implementation-dependent features ===

* Use algorithms that do not depend on the representation of the data and, therefore, do not need representation clauses. 
* Consider using representation clauses when accessing or defining interface data or when a specific representation is needed to implement a design . 
* Do not assume that sharing source files between programs guarantees the same representation of data types in those files. 
* Avoid using package System constants except in attempting to generalize other machine-dependent constructs. 
* Avoid machine code inserts. 
* Use the package Interfaces and its language-defined child packages rather than implementation-specific mechanisms. 
* Consider using pragma Import rather than access-to-subprogram types for interfacing to subprograms in other languages. 
* Isolate all subprograms employing pragmas Import, Export, and Convention to implementation-specific (interface) package bodies. 
* Avoid pragmas and attributes added by the compiler implementor. 
* Avoid dependence on Ada.Unchecked_Deallocation. 
* Avoid dependence on the attribute Unchecked_Access. 
* Avoid dependence on Ada.Unchecked_Conversion. 
* Avoid the direct invocation of or implicit dependence upon an underlying host operating system or Ada run-time support system, except where the interface is explicitly defined in the language (e.g., Annex C or D of the Ada Reference Manual [1995]). 
* Use standard bindings and the package Ada.Command_Line when you need to invoke the underlying 
run-time support system. 
* Use features defined in the Annexes rather than vendor-defined features. 

=== input/output ===

* Use constants and variables as symbolic actuals for the Name and Form parameters on the predefined I/O packages. Declare and initialize them in an implementation dependency package. 
* Close all files explicitly. 
* Avoid performing I/O on access types. 
* Consider using Sequential_IO or Direct_IO instead of Stream_IO unless you need the low-level, heterogeneous I/O features provided by Stream_IO. 
* Consider using Current_Error and Set_Error for run-time error messages.


{{Chapter navigation||Reusability}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>nrvbw387ilv5hdim1bgwbpu41o2fvoy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Reusability</title>
    <ns>0</ns>
    <id>200803</id>
    <revision>
      <id>1550573</id>
      <parentid>1549819</parentid>
      <timestamp>2009-06-28T09:11:25Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Portability|Object-Oriented Features}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Portability|Object-Oriented Features}}

{{TOC|limit=3|float=none}}

== Introduction ==

Reusability is the extent to which code can be used in different applications with minimal change. As code is reused in a new application, that new application partially inherits the attributes of that code. If the code is maintainable, the application is more maintainable. If it is portable, then the application is more portable. So this chapter's guidelines are most useful when all of the other guidelines in this book are also applied. 
Several guidelines are directed at the issue of maintainability. Maintainable code is easy to change to meet new or changing requirements. Maintainability plays a special role in reuse. When attempts are made to reuse code, it is often necessary to change it to suit the new application. If the code cannot be changed easily, it is less likely to be reused. 

There are many issues involved in software reuse: whether to reuse parts, how to store and retrieve reusable parts in a library, how to certify parts, how to maximize the economic value of reuse, how to provide incentives to engineers and entire companies to reuse parts rather than reinvent them, and so on. This chapter ignores these managerial, economic, and logistic issues to focus on the single technical issue of how to write software parts in Ada to increase reuse potential. The other issues are just as important but are outside of the scope of this book. 

One of the design goals of Ada was to facilitate the creation and use of reusable parts to improve productivity. To this end, Ada provides features to develop reusable parts and to adapt them once they are available. Packages, visibility control, and separate compilation support modularity and information hiding (see guidelines in Sections 4.1, 4.2, 5.3, and 5.7). This allows the separation of application-specific parts of the code, maximizes the general purpose parts suitable for reuse, and allows the isolation of design decisions within modules, facilitating change. The Ada type system supports localization of data definitions so that consistent changes are easy to make. The Ada inheritance features support type extension so that data definitions and interfaces may be customized for an application. Generic units directly support the development of general purpose, adaptable code that can be instantiated to perform specific functions. The Ada 95 improvements for object-oriented techniques and abstraction support all of the above goals. Using these features carefully and in conformance to the guidelines in this book, produces code that is more likely to be reusable. 

Reusable code is developed in many ways. Code may be scavenged from a previous project. A reusable library of code may be developed from scratch for a particularly well-understood domain, such as a math library. Reusable code may be developed as an intentional byproduct of a specific application. Reusable code may be developed a certain way because a design method requires it. These guidelines are intended to apply in all of these situations. 

The experienced programmer recognizes that software reuse is much more a requirements and design issue than a coding issue. The guidelines in this section are intended to work within an overall method for developing reusable code. This section will not deal with artifacts of design, testing, etc. Some research into reuse issues related specifically to the Ada language can be found in AIRMICS (1990), Edwards (1990), and Wheeler (1992). 

* Regardless of development method, experience indicates that reusable code has certain characteristics, and this chapter makes the following assumptions: 
* Reusable parts must be understandable. A reusable part should be a model of clarity. The requirements for commenting reusable parts are even more stringent than those for parts specific to a particular application. 
* Reusable parts must be of the highest possible quality. They must be correct, reliable, and robust. An error or weakness in a reusable part may have far-reaching consequences, and it is important that other programmers can have a high degree of confidence in any parts offered for reuse. 
* Reusable parts must be adaptable. To maximize its reuse potential, a reusable part must be able to adapt to the needs of a wide variety of users. 
* Reusable parts should be independent. It should be possible to reuse a single part without also adopting many other parts that are apparently unrelated. 

In addition to these criteria, a reusable part must be easier to reuse than to reinvent, must be efficient, and must be portable. If it takes more effort to reuse a part than to create one from scratch or if the reused part is simply not efficient enough, reuse does not occur as readily. For guidelines on portability, see Chapter 7. 
This chapter should not be read in isolation. In many respects, a well-written, reusable component is simply an extreme example of a well-written component. All of the guidelines in the previous chapters and in Chapter 9 apply to reusable components as well as components specific to a single application. As experience increases with the 1995 revision to the Ada standard, new guidelines may emerge while others may change. The guidelines listed here apply specifically to reusable components. 

Guidelines in this chapter are frequently worded &quot;consider . . .&quot; because hard and fast rules cannot apply in all situations. The specific choice you can make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs. 

== Understanding and Clarity ==

It is particularly important that parts intended for reuse should be easy to understand. What the part does, how to use it, what anticipated changes might be made to it in the future, and how it works are facts that must be immediately apparent from inspection of the comments and the code itself. For maximum readability of reusable parts, follow the guidelines in Chapter 3, some of which are repeated more strongly below. 

=== Application-Independent Naming ===

==== guideline ====

* Select the least restrictive names possible for reusable parts and their identifiers . 
* Select the generic name to avoid conflicting with the naming conventions of instantiations of the generic. 
* Use names that indicate the behavioral characteristics of the reusable part, as well as its abstraction. 

==== example ====
General-purpose stack abstraction: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Item is private;
package Bounded_Stack is
   procedure Push (New_Item    : in     Item);
   procedure Pop  (Newest_Item :    out Item);
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

Renamed appropriately for use in current application: 

&lt;source lang=ada&gt;
with Bounded_Stack;

...

   type Tray is ...
   package Tray_Stack is 
      new Bounded_Stack (Item =&gt; Tray);
&lt;/source&gt;

==== rationale ====

Choosing a general or application-independent name for a reusable part encourages its wide reuse. When the part is used in a specific context, it can be instantiated (if generic) or renamed with a more specific name. 

When there is an obvious choice for the simplest, clearest name for a reusable part, it is a good idea to leave that name for use by the reuser of the part, choosing a longer, more descriptive name for the reusable part. Thus, Bounded_Stack is a better name than Stack for a generic stack package because it leaves the simpler name Stack available to be used by an instantiation. 

Include indications of the behavioral characteristics (but not indications of the implementation) in the name of a reusable part so that multiple parts with the same abstraction (e.g., multiple stack packages) but with different restrictions (bounded, unbounded, etc.) can be stored in the same Ada library and used as part of the same Ada program. 

=== Abbreviations ===

==== guideline ====

* Do not use abbreviations in identifier or unit names. 

==== example ====
&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Ada.Calendar;
package Greenwich_Mean_Time is
   function Clock return Ada.Calendar.Time;
   ...
end Greenwich_Mean_Time;
------------------------------------------------------------------------
&lt;/source&gt;

The following abbreviation may not be clear when used in an application: 

&lt;source lang=ada&gt;
with Ada.Calendar;
with Greenwich_Mean_Time;
...
   function Get_GMT return Ada.Calendar.Time renames
          Greenwich_Mean_Time.Clock;
&lt;/source&gt;

==== rationale ====

This is a stronger guideline than Guideline 3.1.4. However well commented, an abbreviation may cause confusion in some future reuse context. Even universally accepted abbreviations, such as GMT for Greenwich Mean Time, can cause problems and should be used only with great caution. 

The difference between this guideline and Guideline 3.1.4 involves issues of domain. When the domain is well-defined, abbreviations and acronyms that are accepted in that domain will clarify the meaning of the application. When that same code is removed from its domain-specific context, those abbreviations may become meaningless. 

In the example above, the package, Greenwich_Mean_Time, could be used in any application without loss of meaning. But the function Get_GMT could easily be confused with some other acronym in a different domain. 

==== notes ====

See Guideline 5.7.2 concerning the proper use of the renames clause. If a particular application makes extensive use of the Greenwich_Mean_Time domain, it may be appropriate to rename the package GMT within that application: 

with Greenwich_Mean_Time;
...
   package GMT renames Greenwich_Mean_Time;

=== Generic Formal Parameters ===

==== guideline ====

* Document the expected behavior of generic formal parameters just as you document any package specification. 

==== example ====
The following example shows how a very general algorithm can be developed but must be clearly documented to be used: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   -- Index provides access to values in a structure.  For example,
   -- an array, A.
   type Index is (&lt;&gt;);
   type Element is private;
   type Element_Array is array (Index range &lt;&gt;) of Element;
   -- The function, Should_Precede, does NOT compare the indexes
   -- themselves; it compares the elements of the structure.
   -- The function Should_Precede is provided rather than a &quot;Less_Than&quot; function
   -- because the sort criterion need not be smallest first.
   with function Should_Precede (Left  : in     Element;
                                 Right : in     Element)
     return Boolean;
   -- This procedure swaps values of the structure (the mode won't
   -- allow the indexes themselves to be swapped!)
   with procedure Swap (Index1 : in     Index;
                        Index2 : in     Index;
                        A      : in out Element_Array);
   -- After the call to Quick_Sort, the indexed structure will be
   -- sorted:
   --     For all i,j in First..Last :  i&lt;j  =&gt;  A(i) &lt; A(j).
procedure Quick_Sort (First : in     Index := Index'First;
                      Last  : in     Index := Index'Last);
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The generic capability is one of Ada's strongest features because of its formalization. However, not all of the assumptions made about generic formal parameters can be expressed directly in Ada. It is important that any user of a generic know exactly what that generic needs in order to behave correctly. 

In a sense, a generic specification is a contract where the instantiator must supply the formal parameters and, in return, receives a working instance of the specification. Both parties are best served when the contract is complete and clear about all assumptions. 

== Robustness ==

The following guidelines improve the robustness of Ada code. It is easy to write code that depends on an assumption that you do not realize that you are making. When such a part is reused in a different environment, it can break unexpectedly. The guidelines in this section show some ways in which Ada code can be made to automatically conform to its environment and some ways in which it can be made to check for violations of assumptions. Finally, some guidelines are given to warn you about errors that Ada does not catch as soon as you might like. 

=== Named Numbers ===

==== guideline ====

* Use named numbers and static expressions to allow multiple dependencies to be linked to a small number of symbols. 

==== example ====
&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Disk_Driver is
   -- In this procedure, a number of important disk parameters are
   -- linked.
   Number_Of_Sectors  : constant :=     4;
   Number_Of_Tracks   : constant :=   200;
   Number_Of_Surfaces : constant :=    18;
   Sector_Capacity    : constant := 4_096;
   Track_Capacity   : constant := Number_Of_Sectors  * Sector_Capacity;
   Surface_Capacity : constant := Number_Of_Tracks   * Track_Capacity;
   Disk_Capacity    : constant := Number_Of_Surfaces * Surface_Capacity;
   type Sector_Range  is range 1 .. Number_Of_Sectors;
   type Track_Range   is range 1 .. Number_Of_Tracks;
   type Surface_Range is range 1 .. Number_Of_Surfaces;
   type Track_Map   is array (Sector_Range)  of ...;
   type Surface_Map is array (Track_Range)   of Track_Map;
   type Disk_Map    is array (Surface_Range) of Surface_Map;
begin  -- Disk_Driver
   ...
end Disk_Driver;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

To reuse software that uses named numbers and static expressions appropriately, just one or a small number of constants need to be reset, and all declarations and associated code are changed automatically. Apart from easing reuse, this reduces the number of opportunities for error and documents the meanings of the types and constants without using error-prone comments. 

=== Unconstrained Arrays ===

==== guideline ====

* Use unconstrained array types for array formal parameters and array return values.
* Make the size of local variables depend on actual parameter size, where appropriate. 

==== example ====

&lt;source lang=ada&gt;
   ...
   type Vector is array (Vector_Index range &lt;&gt;) of Element;
   type Matrix is array
           (Vector_Index range &lt;&gt;, Vector_Index range &lt;&gt;) of Element;
   ...
   ---------------------------------------------------------------------
   procedure Matrix_Operation (Data : in     Matrix) is
      Workspace   : Matrix (Data'Range(1), Data'Range(2));
      Temp_Vector : Vector (Data'First(1) .. 2 * Data'Last(1));
   ...
   ---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Unconstrained arrays can be declared with their sizes dependent on formal parameter sizes. When used as local variables, their sizes change automatically with the supplied actual parameters. This facility can be used to assist in the adaptation of a part because necessary size changes in local variables are taken care of automatically. 

=== Minimizing and Documenting Assumptions ===

==== guideline ====

* Minimize the number of assumptions made by a unit. 
* For assumptions that cannot be avoided, use subtypes or constraints to automatically enforce conformance. 
* For assumptions that cannot be automatically enforced by subtypes, add explicit checks to the code. 
* Document all assumptions. 
* If the code depends upon the implementation of a specific Special Needs Annex for proper operation, document this assumption in the code. 

==== example ====
The following poorly written function documents but does not check its assumption: 

&lt;source lang=ada&gt;
   -- Assumption:  BCD value is less than 4 digits.
   function Binary_To_BCD (Binary_Value : in     Natural)
     return BCD;
&lt;/source&gt;

The next example enforces conformance with its assumption, making the checking automatic and the comment unnecessary: 

&lt;source lang=ada&gt;
   subtype Binary_Values is Natural range 0 .. 9_999;
   function Binary_To_BCD (Binary_Value : in     Binary_Values)
     return BCD;
&lt;/source&gt;

The next example explicitly checks and documents its assumption: 

&lt;source lang=ada&gt;
   ---------------------------------------------------------------------
   -- Out_Of_Range raised when BCD value exceeds 4  digits.
   function Binary_To_BCD (Binary_Value : in     Natural)
     return BCD is
      Maximum_Representable : constant Natural := 9_999;
   begin  -- Binary_To_BCD
      if Binary_Value &gt; Maximum_Representable then
         raise Out_Of_Range;
      end if;
      ...
   end Binary_To_BCD;
   ---------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Any part that is intended to be used again in another program, especially if the other program is likely to be written by other people, should be robust. It should defend itself against misuse by defining its interface to enforce as many assumptions as possible and by adding explicit defensive checks on anything that cannot be enforced by the interface. By documenting dependencies on a Special Needs Annex, you warn the user that he should only reuse the component in a compilation environment that provides the necessary support. 

==== notes ====

You can restrict the ranges of values of the inputs by careful selection or construction of the subtypes of the formal parameters. When you do so, the compiler-generated checking code may be more efficient than any checks you might write. Indeed, such checking is part of the intent of the strong typing in the language. This presents a challenge, however, for generic units where the user of your code selects the types of the parameters. Your code must be constructed to deal with any value of any subtype the user may choose to select for an instantiation. 

=== Subtypes in Generic Specifications ===

==== guideline ====

* Use first subtypes when declaring generic formal objects of mode in out. 
* Beware of using subtypes as subtype marks when declaring parameters or return values of generic formal subprograms. 
* Use attributes rather than literal values. 

==== example ====
In the following example, it appears that any value supplied for the generic formal object Object would be constrained to the range 1..10. It also appears that parameters passed at run-time to the Put routine in any instantiation and values returned by the Get routine would be similarly constrained: 

&lt;source lang=ada&gt;
   subtype Range_1_10 is Integer range 1 .. 10;
   ---------------------------------------------------------------------
   generic
      Object : in out Range_1_10;
      with procedure Put (Parameter : in     Range_1_10);
      with function  Get return Range_1_10;
   package Input_Output is
      ...
   end Input_Output;
   ---------------------------------------------------------------------
&lt;/source&gt;

However, this is not the case. Given the following legal instantiation: 

&lt;source lang=ada&gt;
   subtype Range_15_30 is Integer range 15 .. 30;
   Constrained_Object : Range_15_30 := 15;
   procedure Constrained_Put (Parameter : in     Range_15_30);
   function  Constrained_Get return Range_15_30;
   package Constrained_Input_Output is
      new Input_Output (Object =&gt; Constrained_Object,
                        Put    =&gt; Constrained_Put,
                        Get    =&gt; Constrained_Get);
   ...
&lt;/source&gt;

Object, Parameter, and the return value of Get are constrained to the range 15..30. Thus, for example, if the body of the generic package contains an assignment statement: 
&lt;source lang=ada&gt;
Object := 1;
&lt;/source&gt;

Constraint_Error is raised when this instantiation is executed. 

==== rationale ====

The language specifies that when constraint checking is performed for generic formal objects and parameters and return values of generic formal subprograms, the constraints of the actual subtype (not the formal subtype) are enforced (Ada Reference Manual 1995, §§12.4&quot;&gt; and 12.6).Thus, the subtype specified in a formal in out object parameter and the subtypes specified in the profile of a formal subprogram need not match those of the actual object or subprogram. 

Thus, even with a generic unit that has been instantiated and tested many times and with an instantiation that reported no errors at instantiation time, there can be a run-time error. Because the subtype constraints of the generic formal are ignored, the Ada Reference Manual (1995, §§12.4 and 12.6) suggests using the name of a base type in such places to avoid confusion. Even so, you must be careful not to assume the freedom to use any value of the base type because the instantiation imposes the subtype constraints of the generic actual parameter. To be safe, always refer to specific values of the type via symbolic expressions containing attributes like 'First, 'Last, 'Pred, and 'Succ rather than via literal values. 

For generics, attributes provide the means to maintain generality. It is possible to use literal values, but literals run the risk of violating some constraint. For example, assuming that an array's index starts at 1 may cause a problem when the generic is instantiated for a zero-based array type. 

==== notes ====

Adding a generic formal parameter that defines the subtype of the generic formal object does not address the ramifications of the constraint checking rule discussed in the above rationale. You can instantiate the generic formal type with any allowable subtype, and you are not guaranteed that this subtype is the first subtype: 

&lt;source lang=ada&gt;
generic
   type Object_Range is range &lt;&gt;;
   Objects : in out Object_Range;
   ...
package X is
   ...
end X;
&lt;/source&gt;

You can instantiate the subtype Object_Range with any Integer subtype, for example, Positive. However, the actual variable Object can be of Positive'Base, i.e., Integer and its value are not guaranteed to be greater than 0. 

=== Overloading in Generic Units ===

==== guideline ====

* Be careful about overloading the names of subprograms exported by the same generic package. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Item is limited private;
package Input_Output is
   procedure Put (Value : in     Integer);
   procedure Put (Value : in     Item);
end Input_Output;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

If the generic package shown in the example above is instantiated with Integer (or any subtype of Integer) as the actual type corresponding to generic formal Item, then the two Put procedures have identical interfaces, and all calls to Put are ambiguous. Therefore, this package cannot be used with type Integer. In such a case, it is better to give unambiguous names to all subprograms. See the Ada Reference Manual (1995, §12.3) for more information. 

=== Hidden Tasks ===

==== guideline ====

* Within a specification , document any tasks that would be activated by with'ing the specification and by using any part of the specification. 
* Document which generic formal parameters are accessed from a task hidden inside the generic unit.
* Document any multithreaded components. 

==== rationale ====
The effects of tasking become a major factor when reusable code enters the domain of real-time systems. Even though tasks may be used for other purposes, their effect on scheduling algorithms is still a concern and must be clearly documented. With the task clearly documented, the real-time programmer can then analyze performance, priorities, and so forth to meet timing requirements, or, if necessary, he can modify or even redesign the component.

Concurrent access to datastructures must be carefully planned to avoid errors, especially for data structures that are not atomic (see Chapter 6 for details). If a generic unit accesses one of its generic formal parameters (reads or writes the value of a generic formal object or calls a generic formal subprogram that reads or writes data) from within a task contained in the generic unit, then there is the possibility of concurrent access for which the user may not have planned. In such a case, the user should be warned by a comment in the generic specification. 

=== Exceptions ===

==== guideline ====

* Propagate exceptions out of reusable parts. Handle exceptions within reusable parts only when you are certain that the handling is appropriate in all circumstances. 
* Propagate exceptions raised by generic formal subprograms after performing any cleanup necessary to the correct operation of future invocations of the generic instantiation. 
* Leave state variables in a valid state when raising an exception. 
* Leave parameters unmodified when raising an exception. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Number is limited private;
   with procedure Get (Value :    out Number);
procedure Process_Numbers;

------------------------------------------------------------------------
procedure Process_Numbers is
   Local : Number;
   procedure Perform_Cleanup_Necessary_For_Process_Numbers is separate;
   ...
begin  -- Process_Numbers
   ...
   Catch_Exceptions_Generated_By_Get:
      begin
         Get (Local);
      exception
         when others =&gt;
            Perform_Cleanup_Necessary_For_Process_Numbers;
            raise;
      end Catch_Exceptions_Generated_By_Get;
   ...
end Process_Numbers;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

On most occasions, an exception is raised because an undesired event (such as floating-point overflow) has occurred. Such events often need to be dealt with entirely differently with different uses of a particular software part. It is very difficult to anticipate all the ways that users of the part may wish to have the exceptions handled. Passing the exception out of the part is the safest treatment. 

In particular, when an exception is raised by a generic formal subprogram, the generic unit is in no position to understand why or to know what corrective action to take. Therefore, such exceptions should always be propagated back to the caller of the generic instantiation. However, the generic unit must first clean up after itself, restoring its internal data structures to a correct state so that future calls may be made to it after the caller has dealt with the current exception. For this reason, all calls to generic formal subprograms should be within the scope of a when others exception handler if the internal state is modified, as shown in the example above. 

When a reusable part is invoked, the user of the part should be able to know exactly what operation (at the appropriate level of abstraction) has been performed. For this to be possible, a reusable part must always do all or none of its specified function; it must never do half. Therefore, any reusable part that terminates early by raising or propagating an exception should return to the caller with no effect on the internal or external state. The easiest way to do this is to test for all possible exceptional conditions before making any state changes (modifying internal state variables, making calls to other reusable parts to modify their states, updating files, etc.). When this is not possible, it is best to restore all internal and external states to the values that were current when the part was invoked before raising or propagating the exception. Even when this is not possible, it is important to document this potentially hazardous situation in the comment header of the specification of the part. 

A similar problem arises with parameters of mode out or in out when exceptions are raised. The Ada language distinguishes between &quot;by-copy&quot; and &quot;by-reference&quot; parameter passing. In some cases, &quot;by-copy&quot; is required; in other cases, &quot;by-reference&quot; is required; and in the remaining cases, either mechanism is allowed. The potential problem arises in those cases where the language does not specify the parameter passing mechanism to use. When an exception is raised, the copy-back does not occur, but for an Ada compiler, which passes parameters by reference (in those cases where a choice is allowed), the actual parameter has already been updated. When parameters are passed by copy, the update does not occur. To reduce ambiguity, increase portability, and avoid situations where some but not all of the actual parameters are updated when an exception is raised, it is best to treat values of out and in out parameters like state variables, updating them only after it is certain that no exception will be raised. 
See also Guideline 7.1.8. 

==== notes ====

A reusable part could range from a low-level building block (e.g., data structure, sorting algorithm, math function) to a large reusable subsystem. The lower level the building block, the less likely that the reusable part will know how to handle exceptions or produce meaningful results. Thus, the low-level parts should propagate exceptions. A large reusable subsystem, however, should be able to handle any anticipated exceptions independently of the variations across which it is reused. 

== Adaptability ==

Reusable parts often need to be changed before they can be used in a specific application. They should be structured so that change is easy and as localized as possible. One way of achieving adaptability is to create general parts with complete functionality, only a subset of which might be needed in a given application. Another way to achieve adaptability is to use Ada's generic construct to produce parts that can be appropriately instantiated with different parameters. Both of these approaches avoid the error-prone process of adapting a part by changing its code but have limitations and can carry some overhead. 
Anticipated changes, that is, changes that can be reasonably foreseen by the developer of the part, should be provided for as far as possible. Unanticipated changes can only be accommodated by carefully structuring a part to be adaptable. Many of the considerations pertaining to maintainability apply. If the code is of high quality, clear, and conforms to well-established design principles such as information hiding, it is easier to adapt in unforeseen ways. 

=== Complete Functionality ===

==== guideline ====

* Provide core functionality in a reusable part or set of parts so that the functionality in this abstraction can be meaningfully extended by its reusers. 
* More specifically, provide initialization and finalization procedures for every data structure that may contain dynamic data. 
* For data structures needing initialization and finalization, consider deriving them, when possible, from the types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. 

==== example ====

&lt;source lang=ada&gt;
   Incoming : Queue;
   ...
   Set_Initial (Incoming);     -- initialization operation
   ...
   if Is_Full (Incoming) then  -- query operation
      ...
   end if;
   ...
   Clean_Up (Incoming);        -- finalization operation
&lt;/source&gt;

==== rationale ====

This functionality is particularly important in designing/programming an abstraction. You have to balance the completeness of the abstraction against its extensibility. Completeness ensures that you have configured the abstraction correctly, without built-in assumptions about its execution environment. It also ensures the proper separation of functions so that they are useful to the current application and, in other combinations, to other applications. Extensibility ensures that reusers can add functionality by extension, using tagged type hierarchies (see Guideline 8.4.8 and Chapter 9) or child library packages (see Guidelines 4.1.6, 8.4.1, and 9.4.1). 

In designing for reuse, you need to think in terms of clean abstractions. If you provide too little functionality and rely on your reusers to extend the abstraction, they risk having an abstraction that lacks cohesion. This hodgepodge abstraction has inherited many operations, not all of which are necessary or work together. 

When a reusable part can be implemented reasonably using dynamic data, then any application that must control memory can use the initialization and finalization routines to guard against memory leakage. Then, if data structures become dynamic, the applications that are sensitive to these concerns can be easily adapted. 

The predefined types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled provide automatic, user-definable initialization, adjustment, and finalization procedures. When you declare controlled types and objects, you are guaranteed that the compiler will insert the necessary calls to initialization, adjustment, and finalization, making your code less error-prone and more maintainable. When overriding the Initialize and Finalize routines on the controlled types, make sure to call the parent Initialize or Finalize. 

==== notes ====

The example illustrates end condition functions. An abstraction should be automatically initialized before its user gets a chance to damage it. When that is not possible, it should be supplied with initialization operations. In any case, it needs finalization operations. One way to supply the initialization and finalization operations is to derive the abstraction from the predefined types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. Wherever possible, query operations should be provided to determine when limits are about to be exceeded, so that the user can avoid causing exceptions to be raised. 

It is also useful to provide reset operations for many objects. To see that a reset and an initiation can be different, consider the analogous situation of a &quot;warm boot&quot; and a &quot;cold boot&quot; on a personal computer. 

Even if all of these operations are not appropriate for the abstraction, the exercise of considering them aids in formulating a complete set of operations, others of which may be used by another application. 

Some implementations of the language link all subprograms of a package into the executable file, ignoring whether they are used or not, making unused operations a liability (see Guideline 8.4.5). In such cases, where the overhead is significant, create a copy of the fully functional part and comment out the unused operations with an indication that they are redundant in this application. 

=== Generic Units ===

==== guideline ====

* Use generic units to avoid code duplication. 
* Parameterize generic units for maximum adaptability. 
* Reuse common instantiations of generic units, as well as the generic units themselves. 

==== rationale ====
Ada does not allow data types to be passed as actual parameters to subprograms during execution. Such parameters must be specified as generic formal parameters to a generic unit when it is instantiated. Therefore, if you want to write a subprogram for which there is variation from call to call in the data type of objects on which it operates, then you must write the subprogram as a generic unit and instantiate it once for each combination of data type parameters. The instantiations of the unit can then be called as regular subprograms. 

You can pass subprograms as actual parameters either by declaring access-to-subprogram values or generic formal subprogram parameters. See Guideline 5.3.4 for a discussion of the tradeoffs. 

If you find yourself writing two very similar routines differing only in the data type they operate on or the subprograms they call, then it is probably better to write the routine once as a generic unit and instantiate it twice to get the two versions you need. When the need arises later to modify the two routines, the change only needs to be made in one place. This greatly facilitates maintenance. 

Once you have made such a choice, consider other aspects of the routine that these two instances may have in common but that are not essential to the nature of the routine. Factor these out as generic formal parameters. When the need arises later for a third similar routine, it can be automatically produced by a third instantiation if you have foreseen all the differences between it and the other two. A parameterized generic unit can be very reusable. 

It may seem that the effort involved in writing generic rather than nongeneric units is substantial. However, making units generic is not much more difficult or time-consuming than making them nongeneric once you become familiar with the generic facilities. It is, for the most part, a matter of practice. Also, any effort put into the development of the unit will be recouped when the unit is reused, as it surely will be if it is placed in a reuse library with sufficient visibility. Do not limit your thinking about potential reuse to the application you are working on or to other applications with which you are very familiar. Applications with which you are not familiar or future applications might be able to reuse your software. 

After writing a generic unit and placing it in your reuse library, the first thing you are likely to do is to instantiate it once for your particular needs. At this time, it is a good idea to consider whether there are instantiations that are very likely to be widely used. If so, place each such instantiation in your reuse library so that they can be found and shared by others. 

See also Guideline 9.3.5. 

=== Formal Private and Limited Private Types ===

==== guideline ====

* Consider using a limited private type for a generic formal type when you do not need assignment on objects of the type inside the generic body. 
* Consider using a nonlimited private type for a generic formal type when you need normal assignment on objects of the type inside the body of the generic. 
* Consider using a formal tagged type derived from Ada.Finalization.Controlled when you need to enforce special assignment semantics on objects of the type in the body of the generic. 
* Export the least restrictive type that maintains the integrity of the data and abstraction while allowing alternate implementations. 
* Consider using a limited private abstract type for generic formal types of a generic that extends a formal private tagged type. 

==== example ====
The first example shows a case of a template providing only a data structure, a case in which assignment is clearly not needed in the body of the generic: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element_Type is limited private;
package Generic_Doubly_Linked_Lists is
   type Cell_Type;
   type List_Type is access all Element_Type;
   type Cell_Type is
      record
         Data     : Element_Type;
         Next     : List_Type;
         Previous : List_Type;
      end record;
end Generic_Doubly_Linked_Lists;
&lt;/source&gt;

The second example shows a template that composes new operations out of (nonassignment) operations passed as generic formal parameters: 

&lt;source lang=ada&gt;
generic
   type Element_Type is limited private;
   with procedure Process_Element (X : in out Element_Type);
   type List_Type is array (Positive range &lt;&gt;) of Element_Type;
procedure Process_List (L : in out List_Type);
procedure Process_List (L : in out List_Type) is
begin -- Process_List
   for I in L'Range loop
      Process_Element (L(I));
   end loop;
end Process_List;
------------------------------------------------------------------------
generic
   type Domain_Type is limited private;
   type Intermediate_Type is limited private;
   type Range_Type is limited private;
   with function Left (X : Intermediate_Type) return Range_Type;
   with function Right (X : Domain_Type) return Intermediate_Type;
function Generic_Composition (X : Domain_Type) return Range_Type;
-- the function Left o Right
function Generic_Composition (X : Domain_Type) return Range_Type is
begin  -- generic_Composition
   return Left (Right (X));
end Generic_Composition;
&lt;/source&gt;

The third example shows how to use Ada's controlled types to provide special assignment semantics: 

&lt;source lang=ada&gt;
with Ada.Finalization;
generic
   type Any_Element is new Ada.Finalization.Controlled with private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   type Stack is private;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Any_Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Any_Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
&lt;/source&gt;

==== rationale ====

For a generic component to be usable in as many contexts as possible, it should minimize the assumptions that it makes about its environment and should make explicit any assumptions that are necessary. In Ada, the assumptions made by generic units can be stated explicitly by the types of the generic formal parameters. A limited private generic formal type prevents the generic unit from making any assumptions about the structure of objects of the type or about operations defined for such objects. A private (nonlimited) generic formal type allows the assumption that assignment and equality comparison operations are defined for the type. Thus, a limited private data type cannot be specified as the actual parameter for a private generic formal type. 

In general, you should choose the private or limited private generic formal type based on the need for assignment inside a generic. Limited private types should be used for abstractions that do not need assignment, as in the first two examples above. In the third example, where assignment is needed, a type derived from a controlled type is specified to ensure that the correct assignment semantics will be available. If you need equality in the body of the generic, you may need to redefine equality as well to get the correct semantics; you would then need to include a formal generic subprogram parameter for the = function. 

The situation is reversed for types exported by a reusable part. For exported types, the restrictions specified by limited and limited private are restrictions on the user of the part, not on the part itself. To provide maximum capability to the user of a reusable part, export types with as few restrictions as possible. Apply restrictions as necessary to protect the integrity of the exported data structures and the abstraction for the various implementations envisioned for that generic. 

Because they are so restrictive, limited private types are not always the best choice for types exported by a reusable part. In a case where it makes sense to allow the user to make copies of and compare data objects, and when the underlying data type does not involve access types (so that the entire data structure gets copied or compared), then it is better to export a (nonlimited) private type. In a case where it makes sense to allow the user to make copies of and compare data objects and when the underlying data type involves access types (so that the entire data structure gets copied or compared), then it is better to export a controlled type and an (overridden) equality operation. In cases where it does not detract from the abstraction to reveal even more about the type, then a nonprivate type (e.g., a numeric, enumerated, record, or array type) should be used. 

One use of generic units is to create a mixin generic (see Guideline 8.3.8) to extend a tagged type. In this situation, you want to use the most restrictive type as the generic formal type, that is, a formal type that is both limited and abstract. When you instantiate the generic, if the actual type is nonlimited, the type extension will also be nonlimited. In the generic package, you must declare the type extension as abstract. The instantiator of the generic can then extend the type again to achieve the desired mixin configuration. 

==== notes ====

The predefined packages, Sequential_IO and Direct_IO, take private types. This will complicate I/O requirements for limited private types and should be considered during design. 

There are also some cases where you must use a limited private formal type. These cases arise when the formal type has an access discriminant, or the formal is used as the parent type in defining a type extension that itself includes a component of a limited type (e.g., task type), or the formal defines a new discriminant part with an access discriminant. 

=== Using Generic Units to Encapsulate Algorithms ===

==== guideline ====

* Use generic units to encapsulate algorithms independently of data type. 

==== example ====
This is the specification of a generic sort procedure: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   type Data    is array (Positive range &lt;&gt;) of Element;
   with function Should_Precede (Left  : in     Element;
                                 Right : in     Element)
          return Boolean is &lt;&gt;;
 with procedure Swap (Left  : in out Element;
                        Right : in out Element) is &lt;&gt;;
procedure Generic_Sort (Data_To_Sort : in out Data);
------------------------------------------------------------------------
&lt;/source&gt;

The generic body looks just like a regular procedure body and can make full use of the generic formal parameters in implementing the sort algorithm: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
procedure Generic_Sort (Data_To_Sort : in out Data) is
begin
   ...
   for I in Data_To_Sort'Range loop
      ...
         ...
         if Should_Precede (Data_To_Sort(J), Data_To_Sort(I)) then
            Swap(Data_To_Sort(I), Data_To_Sort(J));
         end if;
         ...
      ...
   end loop;
   ...
end Generic_Sort;
------------------------------------------------------------------------
&lt;/source&gt;

The generic procedure can be instantiated as: 

&lt;source lang=ada&gt;
   type Integer_Array is array (Positive range &lt;&gt;) of Integer;
   function Should_Precede (Left  : in     Integer;
                            Right : in     Integer)
     return Boolean;

   procedure Swap (Left  : in out Integer;
                   Right : in out Integer);
   procedure Sort is
      new Generic_Sort (Element =&gt; Integer,
                        Data    =&gt; Integer_Array);
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
   subtype String_80    is String (1 .. 80);
   type    String_Array is array (Positive range &lt;&gt;) of String_80;
   function Should_Precede (Left  : in     String_80;
                            Right : in     String_80)
     return Boolean;

   procedure Swap (Left  : in out String_80;
                   Right : in out String_80);

   procedure Sort is
      new Generic_Sort (Element =&gt; String_80,
                        Data    =&gt; String_Array);
&lt;/source&gt;

and called as: 

&lt;source lang=ada&gt;
   Integer_Array_1 : Integer_Array (1 .. 100);
   ...
   Sort (Integer_Array_1);
&lt;/source&gt;

or: 

&lt;source lang=ada&gt;
   String_Array_1  : String_Array  (1 .. 100);
   ...
   Sort (String_Array_1);
&lt;/source&gt;

==== rationale ====

A sort algorithm can be described independently of the data type being sorted. This generic procedure takes the Element data type as a generic limited private type parameter so that it assumes as little as possible about the data type of the objects actually being operated on. It also takes Data as a generic formal parameter so that instantiations can have entire arrays passed to them for sorting. Finally, it explicitly requires the two operators that it needs to do the sort: Should_Precede and Swap. The sort algorithm is encapsulated without reference to any data type. The generic can be instantiated to sort an array of any data type. 
8.3.5 Using Generic Units for Data Abstraction 
==== guideline ====

* Consider using abstract data types (not to be confused with Ada's abstract types) in preference to abstract data objects. 
* Consider using generic units to implement abstract data types independently of their component data type. 

==== example ====
This example presents a series of different techniques that can be used to generate abstract data types and objects. A discussion of the merits of each follows in the rationale section below. The first is an abstract data object (ADO), which can be used to encapsulate an abstract state machine. It encapsulates one stack of integers: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Bounded_Stack is
   subtype Element is Integer;
   Maximum_Stack_Size : constant := 100;
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The second example is an abstract data type (ADT). It differs from the ADO by exporting the Stack type, which allows the user to declare any number of stacks of integers. Because multiple stacks may now exist, it is necessary to specify a Stack argument on calls to Push and Pop: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Bounded_Stack is
   subtype Element is Integer;
   type    Stack   is limited private;
   Maximum_Stack_Size : constant := 100;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The third example is a parameterless generic abstract data object (GADO). It differs from the ADO (the first example) simply by being generic, so that the user can instantiate it multiple times to obtain multiple stacks of integers: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
package Bounded_Stack is
   subtype Element is Integer;
   Maximum_Stack_Size : constant := 100;
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The fourth example is a slight variant on the third, still a GADO but with parameters. It differs from the third example by making the data type of the stack a generic parameter so that stacks of data types other than Integer can be created. Also, Maximum_Stack_Size has been made a generic parameter that defaults to 100 but can be specified by the user, rather than a constant defined by the package: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   procedure Push (New_Element : in     Element);
   procedure Pop  (Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

The fifth example is a generic abstract data type (GADT). It differs from the GADO in the fourth example in the same way that the ADT in the second example differed from the ADO in the first example; it exports the Stack type, which allows the user to declare any number of stacks: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is private;
   Maximum_Stack_Size : in Natural := 100;
package Bounded_Stack is
   type Stack is private;
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element);
   procedure Pop  (From_Top    : in out Stack;
                   Top_Element :    out Element);
   Overflow  : exception;
   Underflow : exception;
   ...
private
   type Stack_Information;
   type Stack is access Stack_Information;
end Bounded_Stack;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The biggest advantage of an ADT over an ADO (or a GADT over a GADO) is that the user of the package can declare as many objects as desired with an ADT. These objects can be declared as standalone variables or as components of arrays and records. They can also be passed as parameters. None of this is possible with an ADO, where the single data object is encapsulated inside of the package. Furthermore, an ADO provides no more protection of the data structure than an ADT. When a private type is exported by the ADT package, as in the example above, then for both the ADO and ADT, the only legal operations that can modify the data are those defined explicitly by the package (in this case, Push and Pop). For these reasons, an ADT or GADT is almost always preferable to an ADO or GADO, respectively. 

A GADO is similar to an ADT in one way: it allows multiple objects to be created by the user. With an ADT, multiple objects can be declared using the type defined by the ADT package. With a GADO (even a GADO with no generic formal parameters, as shown in the third example), the package can be instantiated multiple times to produce multiple objects. However, the similarity ends there. The multiple objects produced by the instantiations suffer from all restrictions described above for ADOs; they cannot be used in arrays or records or passed as parameters. Furthermore, the objects are each of a different type, and no operations are defined to operate on more than one of them at a time. For example, there cannot be an operation to compare two such objects or to assign one to another. The multiple objects declared using the type defined by an ADT package suffer from no such restrictions; they can be used in arrays and records and can be passed as parameters. Also, they are all declared to be of the same type, so that it is possible for the ADT package to provide operations to assign, compare, copy, etc. For these reasons, an ADT is almost always preferable to a parameterless GADO. 

The biggest advantage of a GADT or GADO over an ADT or ADO, respectively, is that the GADT and GADO are generic and can thus be parameterized with types, subprograms, and other configuration information. Thus, as shown above, a single generic package can support bounded stacks of any data type and any stack size, while the ADT and ADO above are restricted to stacks of Integer, no more than 100 in size. For this reason, a GADO or GADT is almost always preferable to an ADO or ADT. 

The list of examples above is given in order of increasing power and flexibility, starting with an ADO and ending with a GADT. These advantages are not expensive in terms of complexity or development time. The specification of the GADT above is not significantly harder to write or understand than the specification of the ADO. The bodies are also nearly identical. 

Compare the body for the simplest version, the ADO: 

------------------------------------------------------------------------
package body Bounded_Stack is
   type Stack_Slots is array (Natural range &lt;&gt;) of Element;
   type Stack_Information is
      record
         Slots : Stack_Slots (1 .. Maximum_Stack_Size);
         Index : Natural := 0;
      end record;
   Stack : Stack_Information;
   ---------------------------------------------------------------------
   procedure Push (New_Element : in     Element) is
   begin
      if Stack.Index &gt;= Maximum_Stack_Size then
         raise Overflow;
      end if;
      Stack.Index := Stack.Index + 1;
      Stack.Slots(Stack.Index) := New_Element;
   end Push;
   ---------------------------------------------------------------------
   procedure Pop (Top_Element :    out Element) is
   begin
      if Stack.Index &lt;= 0 then
         raise Underflow;
      end if;
      Top_Element := Stack.Slots(Stack.Index);
      Stack.Index := Stack.Index - 1;
   end Pop;
   ---------------------------------------------------------------------
   ...
end Bounded_Stack;
------------------------------------------------------------------------

with the body for the most powerful and flexible version, the GADT: 

------------------------------------------------------------------------
package body Bounded_Stack is
   type Stack_Slots is array (Natural range &lt;&gt;) of Element;
   type Stack_Information is
      record
         Slots : Stack_Slots (1 .. Maximum_Stack_Size);
         Index : Natural := 0;
      end record;
   ---------------------------------------------------------------------
   procedure Push (On_Top      : in out Stack;
                   New_Element : in     Element) is
   begin
      if On_Top.Index &gt;= Maximum_Stack_Size then
         raise Overflow;
      end if;
      On_Top.Index := On_Top.Index + 1;
      On_Top.Slots(On_Top.Index) := New_Element;
   end Push;
   ---------------------------------------------------------------------
   procedure Pop (From_Top    : in out Stack;
                  Top_Element :    out Element) is
   begin
      if From_Top.Index &lt;= 0 then
         raise Underflow;
      end if;
      Top_Element := From_Top.Slots(From_Top.Index);

      From_Top.Index := From_Top.Index - 1;
   end Pop;
   ---------------------------------------------------------------------
   ...
end Bounded_Stack;
------------------------------------------------------------------------

There is only one difference. The ADO declares a local object called Stack, while the GADT has one additional parameter (called Stack) on each of the exported procedures Push and Pop. 

=== Iterators ===

==== guideline ====

* Provide iterators for traversing complex data structures within reusable parts. 
* Consider providing both active and passive iterators. 
* Protect the iterators from errors due to modification of the data structure during iteration. 
* Document the behavior of the iterators when the data structure is modified during traversal. 

==== example ====
Ada provides several mechanisms for building reusable iterators. The following examples discuss the alternatives of &quot;simple&quot; generics, access discriminants, and type extension. The terms active and passive are used to differentiate whether the iteration mechanism (i.e., the way in which the complex data structure is traversed) is exposed or hidden. A passive iterator hides the traversal (e.g., looping mechanism) and consists of a single operation, iterate, that is parameterized by the processing you do on each element of the data structure. By contrast, an active iterator exposes the primitive operations by which you traverse the data structure (Booch 1987). 

The first example shows a generic package that defines an abstract list data type, with both active and passive iterators for traversing a list: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   type Element is limited private;
   ...
package Unbounded_List is
   type List is limited private;
   procedure Insert (New_Element : in     Element;
                     Into        : in out List);
   -- Passive (generic) iterator.
   generic
      with procedure Process (Each : in out Element);
   procedure Iterate (Over : in     List);
   -- Active iterator
   type Iterator is limited private;

   procedure Initialize (Index         : in out Iterator;
                         Existing_List : in     List);

   function  More       (Index         : in     Iterator)
     return Boolean;

   -- The procedure Get_Next combines an &quot;Advance&quot; and &quot;Current&quot; function
   procedure Get_Next   (Index           : in out Iterator;
                         Current_Element :    out Element);
   ...
private
   ...
end Unbounded_List;
------------------------------------------------------------------------
&lt;/source&gt;

After instantiating the generic package and declaring a list as: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Unbounded_List;
procedure List_User is
   type Employee is ...;
   package Roster is
      new Unbounded_List (Element =&gt; Employee, ...);
   Employee_List : Roster.List;
&lt;/source&gt;

the passive iterator is instantiated, specifying the name of the routine that should be called for each list element when the iterator is called. 

&lt;source lang=ada&gt;
   ---------------------------------------------------------------------
   procedure Process_Employee (Each : in out Employee) is
   begin
      ...
      -- Perform the required action for EMPLOYEE here.
   end Process_Employee;
   ---------------------------------------------------------------------
   procedure Process_All is
      new Roster.Iterate (Process =&gt; Process_Employee);
&lt;/source&gt;

The passive iterator can then be called as: 

&lt;source lang=ada&gt;
begin  -- List_User
   Process_All (Employee_List);
end List_User;
------------------------------------------------------------------------
&lt;/source&gt;

Alternatively, the active iterator can be used without the second instantiation required by the passive iterator: 

&lt;source lang=ada&gt;
   Iterator         : Roster.Iterator;
   Current_Employee : Employee;
   procedure Process_Employee (Each : in     Employee) is separate;
begin  -- List_User
   Roster.Initialize (Index         =&gt; Iterator,
                      Existing_List =&gt; Employee_List);

   while Roster.More (Iterator) loop

      Roster.Get_Next (Index           =&gt; Iterator,
                       Current_Element =&gt; Current_Employee);

      Process_Employee (Current_Employee);

   end loop;
end List_User;
------------------------------------------------------------------------
&lt;/source&gt;

The second example shows a code excerpt from Rationale (1995, §3.7.1) on how to construct iterators using access discriminants: 

&lt;source lang=ada&gt;
generic
   type Element is private;
package Sets is
   type Set is limited private;
   ... -- various set operations
   type Iterator (S : access Set) is limited private;
   procedure Start (I : Iterator);
   function Done (I : Iterator) return Boolean;
   procedure Next (I : in out Iterator);
   ...  -- other iterator operations
private
   type Node;
   type Ptr is access Node;
   type Node is
      record
         E    : Element;
         Next : Ptr;
      end record;
   type Set is new Ptr;
   type Iterator (S : access Set) is
      record
         This : Ptr;
      end record;
end Sets;
package body Sets is
   ...  -- bodies of the various set operations
   procedure Start (I : in out Iterator) is
   begin
      I.This := Ptr(I.S.all);
   end Start;
   function Done (I : Iterator) return Boolean is
   begin
      return I.This = null;
   end Done;
   procedure Next (I : in out Iterator) is
   begin
      I.This := I.This.Next;
   end Next;
   ...
end Sets;
&lt;/source&gt;

The iterator operations allow you to iterate over the elements of the set with the component This of the iterator object accessing the current element. The access discriminant always points to the enclosing set to which the current element belongs. 

The third example uses code fragments from Rationale (1995, §4.4.4) to show an iterator using type extension and dispatching: 

&lt;source lang=ada&gt;
type Element is ...
package Sets is
   type Set is limited private;
   -- various set operations
   type Iterator is abstract tagged null record;
   procedure Iterate (S : in Set; IC : in out Iterator'Class);
   procedure Action (E : in out Element;
                     I : in out Iterator) is abstract;
private
   -- definition of Node, Ptr (to Node), and Set
end Sets;
package body Sets is
   ...
   procedure Iterate (S : in Set; IC : in out Iterator'Class) is
      This : Ptr := Ptr (S);
   begin
      while This /= null loop
         Action (This.E, IC);  -- dispatch
         This := This.Next;
      end loop;
   end Iterate;
end Sets;
&lt;/source&gt;

The general purpose iterator looks like this: 

&lt;source lang=ada&gt;
package Sets.Something is
   procedure Do_Something (S : Set; P : Parameters);
end Sets.Something;
package body Sets.Something is
   type My_Iterator is new Iterator with
      record
         -- components for parameters and workspace
      end record;
   procedure Action (E : in out Element;
                     I : in out My_Iterator) is
   begin
      -- do something to element E using data from iterator I
   end Action;
   procedure Do_Something (S : Set; P : Parameters) is
      I : My_Iterator;
   begin  -- Do_Something
      ...  -- copy parameters into iterator
      Iterate (S, I);
      ... copy any results from iterator back to parameters
   end Do_Something;

end Sets.Something;
&lt;/source&gt;

==== rationale ====

Iteration over complex data structures is often required and, if not provided by the part itself, can be difficult to implement without violating information hiding principles. 

Active and passive iterators each have their advantages, but neither is appropriate in all situations. Therefore, it is recommended that both be provided to give the user a choice of which to use in each situation. 

Passive iterators are simpler and less error-prone than active iterators, in the same way that the for loop is simpler and less error-prone than the while loop. There are fewer mistakes that the user can make in using a passive iterator. Simply instantiate it with the routine to be executed for each list element, and call the instantiation for the desired list. Active iterators require more care by the user. Care must be taken to invoke the iterator operations in the proper sequence and to associate the proper iterator variable with the proper list variable. It is possible for a change made to the software during maintenance to introduce an error, perhaps an infinite loop. 

On the other hand, active iterators are more flexible than passive iterators. With a passive iterator, it is difficult to perform multiple, concurrent, synchronized iterations. For example, it is much easier to use active iterators to iterate over two sorted lists, merging them into a third sorted list. Also, for multidimensional data structures, a small number of active iterator routines may be able to replace a large number of passive iterators, each of which implements one combination of the active iterators. Finally, active iterators can be passed as generic formal parameters while passive iterators cannot because passive iterators are themselves generic, and generic units cannot be passed as parameters to other generic units. 

For either type of iterator, semantic questions can arise about what happens when the data structure is modified as it is being iterated. When writing an iterator, be sure to consider this possibility, and indicate with comments the behavior that occurs in such a case. It is not always obvious to the user what to expect. For example, to determine the &quot;closure&quot; of a mathematical &quot;set&quot; with respect to some operation, a common algorithm is to iterate over the members of the set, generating new elements and adding them to the set. In such a case, it is important that elements added to the set during the iteration be encountered subsequently during the iteration. On the other hand, for other algorithms, it may be important that the iterated set is the same set that existed at the beginning of the iteration. In the case of a prioritized list data structure, if the list is iterated in priority order, it may be important that elements inserted at lower priority than the current element during iteration not be encountered subsequently during the iteration but that elements inserted at a higher priority should be encountered. In any case, make a conscious decision about how the iterator should operate, and document that behavior in the package specification. 

Deletions from the data structure also pose a problem for iterators. It is a common mistake for a user to iterate over a data structure, deleting it piece by piece during the iteration. If the iterator is not prepared for such a situation, it is possible to end up dereferencing a null pointer or committing a similar error. Such situations can be prevented by storing extra information with each data structure, which indicates whether it is currently being iterated, and using this information to disallow any modifications to the data structure during iteration. When the data structure is declared as a limited private type, as should usually be the case when iterators are involved, the only operations defined on the type are declared explicitly in the package that declares the type, making it possible to add such tests to all modification operations. 

The Rationale (1995, §4.4.4) notes that the access discriminant and type extension techniques are inversions of each other. In the access discriminant approach, you have to write out the looping mechanism for each action. In the type extension approach, you write one loop and dispatch to the desired action. Thus, an iterator that uses the access discriminant technique would be considered active, while an iterator that uses the type extension technique would be considered passive. 

==== notes ====

You can use an access to subprogram type as an alternative to generic instantiation, using a nongeneric parameter as a pointer to subprogram. You would then apply the referenced subprogram to every element in a collection ( Rationale 1995, §3.7.2). There are drawbacks to this approach, however, because you cannot use it to create a general purpose iterator. Anonymous access to subprogram parameters is not allowed in Ada; thus, the following fragment is illegal: 

&lt;source lang=ada&gt;
procedure Iterate (C      : Collection;
                   Action : access procedure (E : in out Element));
&lt;/source&gt;

The formal parameter Action must be of a named access subtype, as in: 

&lt;source lang=ada&gt;
type Action_Type is access procedure (E : in out Element);
procedure Iterate (C      : Collection;
                   Action : Action_Type);
&lt;/source&gt;

In order for this to work, you must make sure that the action subprogram is in scope and not defined internal to another subprogram. If it is defined as a nested procedure, it would be illegal to access it. See the Rationale (1995, §4.4.4) for a more complete example. 

For further discussion of passive and active iterators, see the Rationale (1995, §3.7.1 and §4.4.4), Ross (1989), and Booch (1987). 

=== Decimal Type Output and Information Systems Annex ===

==== guideline ====

* Localize the currency symbol, digits separator, radix mark, and fill character in picture output. 
* Consider using the # character in picture layouts so that the edited numeric output lengths are invariant across currency symbols of different lengths. 

==== example ====

&lt;source lang=ada&gt;
with Ada.Text_IO.Editing;
package Currency is

   type Dollars is delta 0.01 digits 10;
   type Marks   is delta 0.01 digits 10;

   package Dollar_Output is
      new Ada.Text_IO.Editing.Decimal_Output
             (Num                =&gt; Dollars,
              Default_Currency   =&gt; &quot;$&quot;,
              Default_Fill       =&gt; '*',
              Default_Separator  =&gt; ',',
              Default_Radix_Mark =&gt; '.');

   package Mark_Output is
      new Ada.Text_IO.Editing.Decimal_Output
             (Num                =&gt; Marks,
              Default_Currency   =&gt; &quot;DM&quot;,
              Default_Fill       =&gt; '*',
              Default_Separator  =&gt; '.',
              Default_Radix_Mark =&gt; ',');

end Currency;
with Ada.Text_IO.Editing;
with Currency;  use Currency;
procedure Test_Picture_Editing is

   DM_Amount     : Marks;
   Dollar_Amount : Dollars;

   Amount_Picture : constant Ada.Text_IO.Editing.Picture 
      := Ada.Text_IO.Editing.To_Picture (&quot;##ZZ_ZZZ_ZZ9.99&quot;);

begin   -- Test_Picture_Editing

   DM_Amount     := 1_234_567.89;
   Dollar_Amount := 1_234_567.89;

   DM_Output.Put (Item =&gt; DM_Amount,
                  Pic  =&gt; Amount_Picture);

   Dollar_Output.Put (Item =&gt; Dollar_Amount,
                      Pic  =&gt; Amount_Picture);
   
end Test_Picture_Editing;
&lt;/source&gt;

==== rationale ====

Currencies differ in how they are displayed in a report. Currencies use different symbols of different lengths (e.g., the American $, the German DM, and the Austrian ÖS). They use different symbols to separate digits. The United States and the United Kingdom use the comma to separate groups of thousands, whereas Continental Europe uses the period. The United States and the United Kingdom use a period as a decimal point; Continental Europe uses the comma. For a program involving financial calculations that is to be reused across countries, you need to take these differences into account. By encapsulating them, you limit the impact of change in adapting the financial package. 

=== Implementing Mixins ===

==== guideline ====

* Consider using abstract tagged types and generics to define reusable units of functionality that can be &quot;mixed into&quot; core abstractions (also known as mixins). 

==== example ====
Note the use of an abstract tagged type as a generic formal parameter and as the exported extended type in the pattern that follows, excerpted from the Rationale (1995, §4.6.2): 

&lt;source lang=ada&gt;
generic
   type S is abstract tagged private;
package P is
   type T is abstract new S with private;
   -- operations on T
private
   type T is abstract new S with
      record
         -- additional components
      end record;
end P;
&lt;/source&gt;

The following code shows how the generic might be instantiated to &quot;mixin&quot; the desired features in the final type extension. See also Guideline 9.5.1 for a related example of code. 

&lt;source lang=ada&gt;
-- Assume that packages P1, P2, P3, and P4 are generic packages which take a tagged
-- type as generic formal type parameter and which export a tagged type T
package Q is
   type My_T is new Basic_T with private;
   ... -- exported operations
private
   package Feature_1 is new P1 (Basic_T);
   package Feature_2 is new P2 (Feature_1.T);
   package Feature 3 is new P3 (Feature_2.T);
   package Feature_4 is new P4 (Feature_3.T);
   -- etc.
   type My_T is new Feature_4.T with null record;
end Q;
&lt;/source&gt;

==== rationale ====

The Rationale (1995, §4.6.2) discusses the use of a generic template to define the properties to be mixed in to your abstraction: 

The generic template defines the mixin. The type supplied as generic actual parameter determines the parent . . . the body provides the operations and the specification exports the extended type.

If you have defined a series of generic mixin packages, you would then serialize the instantiations. The actual parameter to the next instantiation is the exported tagged type from the previous instantiation. This is shown in the second code segment in the example. Each extension is derived from a previous extension, so you have a linearized succession of overriding subprograms. Because they are linearized, you have a derivation order you can use to resolve any conflicts. 

You should encapsulate one extension (and related operations) per generic package. This provides a better separation of concerns and more maintainable, reusable components. 

See Guideline 9.5.1 for a full discussion of the use of mixins. 

== Independence ==

A reusable part should be as independent as possible from other reusable parts. A potential user is less inclined to reuse a part if that part requires the use of other parts that seem unnecessary. The &quot;extra baggage&quot; of the other parts wastes time and space. A user would like to be able to reuse only that part that is perceived as useful. 
The concept of a &quot;part&quot; is intentionally vague here. A single package does not need to be independent of each other package in a reuse library if the &quot;parts&quot; from that library that are typically reused are entire subsystems. If the entire subsystem is perceived as providing a useful function, the entire subsystem is reused. However, the subsystem should not be tightly coupled to all the other subsystems in the reuse library so that it is difficult or impossible to reuse the subsystem without reusing the entire library. Coupling between reusable parts should only occur when it provides a strong benefit perceptible to the user. 

=== Subsystem Design ===

==== guideline ====

* Consider structuring subsystems so that operations that are only used in a particular context are in different child packages than operations used in a different context. 
* Consider declaring context-independent functionality in the parent package and context-dependent functionality in child packages. 

==== rationale ====
The generic unit is a basic building block. Generic parameterization can be used to break dependencies between program units so that they can be reused separately. However, it is often the case that a set of units, particularly a set of packages, are to be reused together as a subsystem. In this case, the packages can be collected into a hierarchy of child packages, with private packages to hide internal details. The hierarchy may or may not be generic. Using the child packages allows subsystems to be reused without incorporating too many extraneous operations because the unused child packages can be discarded in the new environment. 

See also Guidelines 4.1.6 and 8.3.1. 

=== Using Generic Parameters to Reduce Coupling ===

==== guideline ====

* Minimize with clauses on reusable parts, especially on their specifications. 
* Consider using generic parameters instead of with statements to reduce the number of context clauses on a reusable part. 
* Consider using generic formal package parameters to import directly all the types and operations defined in an instance of a preexisting generic. 

==== example ====
A procedure like the following: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Package_A;
procedure Produce_And_Store_A is
   ...
begin  -- Produce_And_Store_A
   ...
   Package_A.Produce (...);
   ...
   Package_A.Store (...);
   ...
end Produce_And_Store_A;
------------------------------------------------------------------------
&lt;/source&gt;

can be rewritten as a generic unit: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
generic
   with procedure Produce (...);
   with procedure Store   (...);
procedure Produce_And_Store;
------------------------------------------------------------------------
procedure Produce_And_Store is
   ...
begin  -- Produce_And_Store
   ...
   Produce (...);
   ...
   Store   (...);
   ...
end Produce_And_Store;
------------------------------------------------------------------------
&lt;/source&gt;

and then instantiated: 

&lt;source lang=ada&gt;
------------------------------------------------------------------------
with Package_A;
with Produce_And_Store;
procedure Produce_And_Store_A is
   new Produce_And_Store (Produce =&gt; Package_A.Produce,
                          Store   =&gt; Package_A.Store);
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Context (with) clauses specify the names of other units upon which this unit depends. Such dependencies cannot and should not be entirely avoided, but it is a good idea to minimize the number of them that occur in the specification of a unit. Try to move them to the body, leaving the specification independent of other units so that it is easier to understand in isolation. Also, organize your reusable parts in such a way that the bodies of the units do not contain large numbers of dependencies on each other. Partitioning your library into independent functional areas with no dependencies spanning the boundaries of the areas is a good way to start. Finally, reduce dependencies by using generic formal parameters instead of with statements, as shown in the example above. If the units in a library are too tightly coupled, then no single part can be reused without reusing most or all of the library. 

The first (nongeneric) version of Produce_And_Store_A above is difficult to reuse because it depends on Package_A that may not be general purpose or generally available. If the operation Produce_And_Store has reuse potential that is reduced by this dependency, a generic unit and an instantiation should be produced as shown above. The with clause for Package_A has been moved from the Produce_And_Store generic procedure, which encapsulates the reusable algorithm to the Produce_And_Store_A instantiation. Instead of naming the package that provides the required operations, the generic unit simply lists the required operations themselves. This increases the independence and reusability of the generic unit. 

This use of generic formal parameters in place of with clauses also allows visibility at a finer granularity. The with clause on the nongeneric version of Produce_And_Store_A makes all of the contents of Package_A visible to Produce_And_Store_A, while the generic parameters on the generic version make only the Produce and Store operations available to the generic instantiation. 

Generic formal packages allow for &quot;safer and simpler composition of generic abstractions&quot; ( Rationale 1995, §12.6). The generic formal package allows you to group a set of related types and their operations into a single unit, avoiding having to list each type and operation as an individual generic formal parameter. This technique allows you to show clearly that you are extending the functionality of one generic with another generic, effectively parameterizing one abstraction with another. 

=== Coupling Due to Pragmas ===

==== guideline ====

* In the specification of a generic library unit, use pragma Elaborate_Body. 

==== example ====
&lt;source lang=ada&gt;
---------------------------------------------------------------------------
generic
   ...
package Stack is

   pragma Elaborate_Body (Stack); -- in case the body is not yet elaborated

   ...
end Stack;
---------------------------------------------------------------------------
with Stack;
package My_Stack is
   new Stack (...);
---------------------------------------------------------------------------
package body Stack is
begin
   ...
end Stack;
---------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

The elaboration order of compilation units is only constrained to follow the compilation order. Furthermore, any time you have an instantiation as a library unit or an instantiation in a library package, Ada requires that you elaborate the body of the generic being instantiated before elaborating the instantiation itself. Because a generic library unit body may be compiled after an instantiation of that generic, the body may not necessarily be elaborated at the time of the instantiation, causing a Program_Error. Using pragma Elaborate_Body avoids this by requiring that the generic unit body be elaborated immediately after the specification, whatever the compilation order. 

When there is clear requirement for a recursive dependency, you should use pragma Elaborate_Body. This situation arises, for example, when you have a recursive dependency (i.e., package A's body depends on package B's specification and package B's body depends on package A's specification). 

==== notes ====

Pragma Elaborate_All controls the order of elaboration of one unit with respect to another. This is another way of coupling units and should be avoided when possible in reusable parts because it restricts the number of configurations in which the reusable parts can be combined. Recognize, however, that pragma Elaborate_All provides a better guarantee of elaboration order because if using this pragma uncovers elaboration problems, they will be reported at link time (as opposed to a run-time execution error). 

Any time you call a subprogram (typically a function) during the elaboration of a library unit, the body of the subprogram must have been elaborated before the library unit. You can ensure this elaboration happens by adding a pragma Elaborate_Body for the unit containing the function. If, however, that function calls other functions, then it is safer to put a pragma Elaborate_All on the unit containing the function. 

For a discussion of the pragmas Pure and Preelaborate, see also the Ada Reference Manual (1995, §10.2.1) and the Rationale (1995, §10.3). If you use either pragma Pure or Preelaborate, you will not need the pragma Elaborate_Body. 

The idea of a registry is fundamental to many object-oriented programming frameworks. Because other library units will need to call it during their elaboration, you need to make sure that the registry itself is elaborated early. Note that the registry should only depend on the root types of the type hierarchies and that the registry should only hold &quot;class-wide&quot; pointers to the objects, not more specific pointers. The root types should not themselves depend on the registry. See Chapter 9 for a more complete discussion of the use of object-oriented features. 

=== Part Families ===

==== guideline ====

* Create families of generic or other parts with similar specifications. 

==== example ====
The Booch parts (Booch 1987) are an example of the application of this guideline. 

==== rationale ====

Different versions of similar parts (e.g., bounded versus unbounded stacks) may be needed for different applications or to change the properties of a given application. Often, the different behaviors required by these versions cannot be obtained using generic parameters. Providing a family of parts with similar specifications makes it easy for the programmer to select the appropriate one for the current application or to substitute a different one if the needs of the application change. 

==== notes ====

A reusable part that is structured from subparts that are members of part families is particularly easy to tailor to the needs of a given application by substitution of family members. 

Guideline 9.2.4 discusses the use of tagged types in building different versions of similar parts (i.e., common interface, multiple implementations). 

=== Conditional Compilation ===

==== guideline ====

* Structure reusable code to take advantage of dead code removal by the compiler. 

==== example ====

&lt;source lang=ada&gt;
------------------------------------------------------------------------
package Matrix_Math is
   ...
   type Algorithm is (Gaussian, Pivoting, Choleski, Tri_Diagonal);
   generic
      Which_Algorithm : in     Algorithm := Gaussian;
   procedure Invert ( ... );
end Matrix_Math;
------------------------------------------------------------------------
package body Matrix_Math is
   ...
   ---------------------------------------------------------------------
   procedure Invert ( ... ) is
      ...
   begin  -- Invert
      case Which_Algorithm is
         when Gaussian     =&gt; ... ;
         when Pivoting     =&gt; ... ;
         when Choleski     =&gt; ... ;
         when Tri_Diagonal =&gt; ... ;
      end case;
   end Invert;
   ---------------------------------------------------------------------
end Matrix_Math;
------------------------------------------------------------------------
&lt;/source&gt;

==== rationale ====

Some compilers omit object code corresponding to parts of the program that they detect can never be executed. Constant expressions in conditional statements take advantage of this feature where it is available, providing a limited form of conditional compilation. When a part is reused in an implementation that does not support this form of conditional compilation, this practice produces a clean structure that is easy to adapt by deleting or commenting out redundant code where it creates an unacceptable overhead. 

This feature should be used when other factors prevent the code from being separated into separate program units. In the above example, it would be preferable to have a different procedure for each algorithm. But the algorithms may differ in slight but complex ways to make separate procedures difficult to maintain. 

==== caution ====

Be aware of whether your implementation supports dead code removal, and be prepared to take other steps to eliminate the overhead of redundant code if necessary. 

=== Table-Driven Programming ===

==== guideline ====

* Write table-driven reusable parts wherever possible and appropriate. 

==== example ====
The epitome of table-driven reusable software is a parser generation system. A specification of the form of the input data and of its output, along with some specialization code, is converted to tables that are to be &quot;walked&quot; by preexisting code using predetermined algorithms in the parser produced. Other forms of &quot;application generators&quot; work similarly. 

==== rationale ====

Table-driven (sometimes known as data-driven) programs have behavior that depends on data with'ed at compile time or read from a file at run-time. In appropriate circumstances, table-driven programming provides a very powerful way of creating general-purpose, easily tailorable, reusable parts. 

See Guideline 5.3.4 for a short discussion of using access-to-subprogram types in implementing table-driven programs. 

==== notes ====

Consider whether differences in the behavior of a general-purpose part could be defined by some data structure at compile- or run-time, and if so, structure the part to be table-driven. The approach is most likely to be applicable when a part is designed for use in a particular application domain but needs to be specialized for use in a specific application within the domain. Take particular care in commenting the structure of the data needed to drive the part. 

Table-driven programs are often more efficient and easier to read than the corresponding case or 
if-elsif-else networks to compute the item being sought or looked up. 

=== String Handling ===

==== guideline ====

* Use the predefined packages for string handling. 

==== example ====
Writing code such as the following is no longer necessary in Ada 95: 

&lt;source lang=ada&gt;
function Upper_Case (S : String) return String is

   subtype Lower_Case_Range is Character range 'a'..'z';

   Temp : String := S;
   Offset : constant := Character'Pos('A') - Character'Pos('a');

begin
   for Index in Temp'Range loop
      if Temp(Index) in Lower_Case_Range then
         Temp(Index) := Character'Val (Character'Pos(Temp(Index)) + Offset);
      end if;
   end loop;
   return Temp;
end Upper_Case;


with Ada.Characters.Latin_1;
function Trim (S : String) return String is
   Left_Index  : Positive := S'First;
   Right_Index : Positive := S'Last;
   Space : constant Character := Ada.Characters.Latin_1.Space;
begin
   while (Left_Index &lt; S'Last) and then (S(Left_Index) = Space) loop
      Left_Index := Positive'Succ(Left_Index);
   end loop;

   while (Right_Index &gt; S'First) and then (S(Right_Index) = Space) loop
      Right_Index := Positive'Pred(Right_Index);
   end loop;

   return S(Left_Index..Right_Index);
end Trim;
&lt;/source&gt;

Assuming a variable S of type String, the following expression: 

&lt;source lang=ada&gt;
Upper_Case(Trim(S))
&lt;/source&gt;

can now be replaced by more portable and preexisting language-defined operations such as: 

&lt;source lang=ada&gt;
with Ada.Characters.Handling;  use Ada.Characters.Handling;
with Ada.Strings;              use Ada.Strings;
with Ada.Strings.Fixed;        use Ada.Strings.Fixed;

...
To_Upper (Trim (Source =&gt; S, Side =&gt; Both))
&lt;/source&gt;

==== rationale ====

The predefined Ada language environment includes string handling packages to encourage portability. They support different categories of strings: fixed length, bounded length, and unbounded length. They also support subprograms for string construction, concatenation, copying, selection, ordering, searching, pattern matching, and string transformation. You no longer need to define your own string handling packages. 

=== Tagged Type Hierarchies ===

==== guideline ====

* Consider using hierarchies of tagged types to promote generalization of software for reuse.
* Consider using a tagged type hierarchy to decouple a generalized algorithm from the details of dependency on specific types. 

==== example ====

&lt;source lang=ada&gt;
with Wage_Info;
package Personnel is
   type Employee is abstract tagged limited private;
   type Employee_Ptr is access all Employee'Class;
   ...
   procedure Compute_Wage (E : Employee) is abstract;
private
   type Employee is tagged limited record
      Name  : ...;
      SSN   : ... ;
      Rates : Wage_Info.Tax_Info;
      ...
   end record;
end Personnel;
package Personnel.Part_Time is
   type Part_Timer is new Employee with private;
   ...
   procedure Compute_Wage (E : Part_Timer);
private
   ...
end Personnel.Part_Time;
package Personnel.Full_Time is
   type Full_Timer is new Employee with private;
   ...
   procedure Compute_Wage (E : Full_Timer);
private
   ...
end Personnel.Full_Time;
&lt;/source&gt;

Given the following array declaration: 

&lt;source lang=ada&gt;
type Employee_List is array (Positive range &lt;&gt;) of Personnel.Employee_Ptr;
&lt;/source&gt;

you can write a procedure that computes the wage of each employee, regardless of the different types of employees that you create. The Employee_List consists of an array of pointers to the various kinds of employees, each of which has an individual Compute_Wage procedure. (The primitive Compute_Wage is declared as an abstract procedure and, therefore, must be overridden by all descendants.) You will not need to modify the payroll code as you specialize the kinds of employees: 

&lt;source lang=ada&gt;
procedure Compute_Payroll (Who : Employee_List) is
begin -- Compute_Payroll
   for E in Who'Range loop
      Compute_Wage (Who(E).all);
   end loop;
end Compute_Payroll;
&lt;/source&gt;

==== rationale ====

The general algorithm can depend polymorphically on objects of the class-wide type of the root tagged type without caring what specialized types are derived from the root type. The generalized algorithm does not need to be changed if additional types are added to the type hierarchy. See also Guideline 5.4.2. Furthermore, the child package hierarchy then mirrors the inheritance hierarchy. 

A general root tagged type can define the common properties and have common operations for a hierarchy of more specific types. Software that depends only on this root type will be general, in that it can be used with objects of any of the more specific types. Further, the general algorithms of clients of the root type do not have to be changed as more specific types are added to the type hierarchy. This is a particularly effective way to organize object-oriented software for reuse. 

Separating the hierarchy of derived tagged types into individual packages enhances reusability by reducing the number of items in package interfaces. It also allows you to with only the capabilities needed. 

See also Guidelines 9.2, 9.3.1, 9.3.5, and 9.4.1. 

== Summary ==

=== understanding and clarity ===

* Select the least restrictive names possible for reusable parts and their identifiers. 
* Select the generic name to avoid conflicting with the naming conventions of instantiations of the generic. 
* Use names that indicate the behavioral characteristics of the reusable part, as well as its abstraction . 
* Do not use abbreviations in identifier or unit names.
* Document the expected behavior of generic formal parameters just as you document any package specification. 

=== robustness ===

* Use named numbers and static expressions to allow multiple dependencies to be linked to a small number of symbols. 
* Use unconstrained array types for array formal parameters and array return values. 
* Make the size of local variables depend on actual parameter size, where appropriate. 
* Minimize the number of assumptions made by a unit. 
* For assumptions that cannot be avoided, use subtypes or constraints to automatically enforce conformance. 
* For assumptions that cannot be automatically enforced by subtypes, add explicit checks to the code. 
* Document all assumptions. 
* If the code depends upon the implementation of a specific Special Needs Annex for proper operation, document this assumption in the code. 
* Use first subtypes when declaring generic formal objects of mode in out. 
* Beware of using subtypes as subtype marks when declaring parameters or return values of generic formal subprograms. 
* Use attributes rather than literal values. 
* Be careful about overloading the names of subprograms exported by the same generic package. 
* Within a specification, document any tasks that would be activated by with'ing the specification and by using any part of the specification. 
* Document which generic formal parameters are accessed from a task hidden inside the generic unit. 
* Document any multithreaded components. 
* Propagate exceptions out of reusable parts. Handle exceptions within reusable parts only when you are certain that the handling is appropriate in all circumstances. 
* Propagate exceptions raised by generic formal subprograms after performing any cleanup necessary to the correct operation of future invocations of the generic instantiation. 
* Leave state variables in a valid state when raising an exception. 
* Leave parameters unmodified when raising an exception. 

=== adaptability ===

* Provide core functionality in a reusable part or set of parts so that the functionality in this abstraction can be meaningfully extended by its reusers. 
* More specifically, provide initialization and finalization procedures for every data structure that may contain dynamic data. 
* For data structures needing initialization and finalization, consider deriving them, when possible, from the types Ada.Finalization.Controlled or Ada.Finalization.Limited_Controlled. 
* Use generic units to avoid code duplication. 
* Parameterize generic units for maximum adaptability. 
* Reuse common instantiations of generic units, as well as the generic units themselves. 
* Consider using a limited private type for a generic formal type when you do not need assignment on objects of the type inside the generic body. 
* Consider using a nonlimited private type for a generic formal type when you need normal assignment on objects of the type inside the body of the generic. 
* Consider using a formal tagged type derived from Ada.Finalization.Controlled when you need to enforce special assignment semantics on objects of the type in the body of the generic. 
* Export the least restrictive type that maintains the integrity of the data and abstraction while allowing alternate implementations. 
* Consider using a limited private abstract type for generic formal types of a generic that extends a formal private tagged type. 
* Use generic units to encapsulate algorithms independently of data type. 
* Consider using abstract data types (not to be confused with Ada's abstract types) in preference to abstract data objects. 
* Consider using generic units to implement abstract data types independently of their component data type. 
* Provide iterators for traversing complex data structures within reusable parts. 
* Consider providing both active and passive iterators. 
* Protect the iterators from errors due to modification of the data structure during iteration. 
* Document the behavior of the iterators when the data structure is modified during traversal. 
* Localize the currency symbol, digits separator, radix mark, and fill character in picture output. 
* Consider using the # character in picture layouts so that the edited numeric output lengths are invariant across currency symbols of different lengths. 
* Consider using abstract tagged types and generics to define reusable units of functionality that can be &quot;mixed into&quot; core abstractions (also known as mixins). 
* Consider structuring subsystems so that operations that are only used in a particular context are in different child packages than operations used in a different context. 
* Consider declaring context-independent functionality in the parent package and context-dependent functionality in child packages. 

=== independence ===

* Minimize with clauses on reusable parts, especially on their specifications. 
* Consider using generic parameters instead of with statements to reduce the number of context clauses on a reusable part. 
* Consider using generic formal package parameters to import directly all the types and operations defined in an instance of a preexisting generic. 
* In the specification of a generic library unit, use pragma Elaborate_Body. 
* Create families of generic or other parts with similar specifications. 
* Structure reusable code to take advantage of dead code removal by the compiler. 
* Write table-driven reusable parts wherever possible and appropriate. 
* Use the predefined packages for string handling. 
* Consider using hierarchies of tagged types to promote generalization of software for reuse. 
* Consider using a tagged type hierarchy to decouple a generalized algorithm from the details of dependency on specific types.

{{Chapter navigation||Object-Oriented Features}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>l1v4z3iwwqgyxoejrl0ax7g7eni7nbd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Object-Oriented Features</title>
    <ns>0</ns>
    <id>200804</id>
    <revision>
      <id>2307265</id>
      <parentid>2053134</parentid>
      <timestamp>2012-04-16T07:12:17Z</timestamp>
      <contributor>
        <username>Metamorf</username>
        <id>615983</id>
      </contributor>
      <minor />
      <comment>/* Introduction */ Spelling Error</comment>
      <text xml:space="preserve">{{Chapter navigation|Reusability|Improving Performance}}

{{TOC|limit=3|float=none}}

== Introduction ==

This chapter recommends ways of using Ada's object-oriented features. Ada supports inheritance and polymorphism, providing the programmer some effective techniques and building blocks. Disciplined use of these features will promote programs that are easier to read and modify. These features also give the programmer flexibility in building reusable components. 

The following definitions are provided in order to make this chapter more understandable. The essential characteristics of object-oriented programming are encapsulation, inheritance, and polymorphism. These are defined as follows in the Rationale (1995, §§4.1 and III.1.2): 

; Inheritance: A means for incrementally building new abstractions from an existing one by &quot;inheriting&quot; their properties without disturbing the implementation of the original abstraction or the existing clients. 
; Multiple Inheritance: The means of inheriting components and operations from two or more parent abstractions. 
; Mixin Inheritance: Multiple inheritance in which one or more of the parent abstractions cannot have instances of their own and exist only to provide a set of properties for abstractions inheriting from them. 
;Polymorphism: A means of factoring out the differences among a collection of abstractions, such that programs may be written in terms of the common properties. 

* Static polymorphism is provided through the generic parameter mechanism whereby a generic unit may be instantiated at compile time with any type from a class of types. 
* Dynamic polymorphism is provided through the use of so-called class-wide types and the distinction is then made at runtime on the basis of the value of the tag (&quot;effectively a hidden discriminant identifying the type&quot; [Rationale 1995, §II.1]). 

As stated in the Ada Reference Manual (1995, Annex N): 

:A type has an associated set of values and a set of primitive operations that implement the fundamental aspects of its semantics. 

A class is a set of types that is closed under derivation, which means that if a given type is in the class, then all types derived from that type are also in the class. The set of types of a class share common properties, such as their primitive operations. The semantics of a class include expected behavior and exceptions. 

An object is either a constant or variable defined from a type (class). An object contains a value. A subcomponent of an object is itself an object. 

Guidelines in this chapter are frequently worded &quot;consider ...&quot; because hard and fast rules cannot apply in all situations. The specific choice you make in a given situation involves design tradeoffs. The rationale for these guidelines is intended to give you insight into some of these tradeoffs.

== Object-Oriented Design ==

You will find it easier to take advantage of many of the concepts in this chapter if you have done an object-oriented design. The results of an object-oriented design would include a set of meaningful abstractions and hierarchy of classes. The abstractions need to include the definition of the design objects, including structure and state, the operations on the objects, and the intended encapsulation for each object. The details on designing these abstractions and the hierarchy of classes are beyond the scope of this book. A number of good sources exist for this detail, including Rumbaugh et al. (1991), Jacobson et al. (1992), Software Productivity Consortium (1993), and Booch (1994). 

An important part of the design process is deciding on the overall organization of the system. Looking at a single type, a single package, or even a single class of types by itself is probably the wrong place to start. The appropriate level to start is more at the level of &quot;subsystem&quot; or &quot;framework.&quot; You should use child packages (Guidelines 4.1.1 and 4.2.2) to group sets of abstractions into subsystems representing reusable frameworks. You should distinguish the &quot;abstract&quot; reusable core of the framework from the particular &quot;instantiation&quot; of the framework. Presuming the framework is constructed properly, the abstract core and its instantiation can be separated into distinct subsystems within the package hierarchy because the internals of an abstract reusable framework probably do not need to be visible to a particular instantiation of the framework. 

== Tagged Type Hierarchies ==

You should use inheritance primarily as a mechanism for implementing a class hierarchy from an object-oriented design. A class hierarchy should be a generalization/specialization (&quot;is-a&quot;) relationship. This relationship may also be referred to as &quot;is-a-kind-of,&quot; not to be confused with &quot;is an instance of.&quot; This &quot;is-a&quot; usage of inheritance is in contrast to other languages in which inheritance is used also to provide the equivalent of the Ada context clauses with and use. In Ada, you first identify the external modules of interest via with clauses and then choose selectively whether to make only the name of the module (package) visible or its contents (via a use clause). 

=== Tagged Types ===

==== guideline ====

* Consider using type extension when designing an is-a (generalization/specialization) hierarchy. 
* Use tagged types to preserve a common interface across differing implementations (Taft 1995a). 
* When defining a tagged type in a package, consider including a definition of a general access type to the corresponding class-wide type. 
* In general, define only one tagged type per package. 

==== example ====

Consider the type structure for a set of two-dimensional geometric objects positioned in a Cartesian coordinate system (Barnes 1996). The ancestor or root type Object is a tagged record. The components common to this type and all its descendants are an x and y coordinate. Various descendant types include points, circles, and arbitrary shapes. Except for points, these descendant types extend the root type with additional components; for example, the circle adds a radius component: 

&lt;source lang=ada&gt;
type Object is tagged
   record
      X_Coord : Float;
      Y_Coord : Float;
   end record;

type Circle is new Object with
   record
      Radius : Float;
   end record;

type Point is new Object with null record;

type Shape is new Object with
   record
      -- other components
      ...
   end record;
&lt;/source&gt;

The following is an example of general access type to the corresponding class-wide type: 

&lt;source lang=ada&gt;
package Employee is
   type Object is tagged limited private;
   type Reference is access all Object'class;
   ...
private
   ...
end Employee;
&lt;/source&gt;

==== rationale ====

You can derive new types from both tagged and untagged types, but the effects of this derivation are different. When you derive from an untagged type, you are creating a new type whose implementation is identical to the parent. Values of the derived types are subject to strong type checking; thus, you cannot mix the proverbial apples and oranges. When you derive a new type from an untagged type, you are not allowed to extend it with new components. You are effectively creating a new interface without changing the underlying implementation (Taft 1995a). 

In deriving from a tagged type, you can extend the type with new components. Each descendant can extend a common interface (the parent's). The union of a tagged type and its descendants form a class, and a class offers some unique features not available to untagged derivations. You can write class-wide operations that can be applied to any object that is a member of the class. You can also provide new implementations for the descendants of tagged types, either by overriding inherited primitive operations or by creating new primitive operations. Finally, tagged types can be used as the basis for multiple inheritance building blocks (see Guideline 9.5.1). 

Reference semantics are very commonly used in object-oriented programming. In particular, heterogeneous polymorphic data structures based on tagged types require the use of access types. It is convenient to have a common definition for such a type provided to any client of the package defining the tagged type. A heterogeneous polymorphic data structure is a composite data structure (such as an array) whose elements have a homogeneous interface (i.e., an access to class-wide type) and whose elements' implementations are heterogeneous (i.e., the implementation of the elements uses different specific types). See also Guidelines 9.3.5 on polymorphism and 9.4.1 on managing visibility of tagged type hierarchies. 

In Ada, the primitive operations of a type are implicitly associated with the type through scoping rules. The definition of a tagged type and a set of operations corresponds together to the &quot;traditional&quot; object-oriented programming concept of a &quot;class.&quot; Putting these into a package provides a clean encapsulation mechanism. 

==== exceptions ====

If the root of the hierarchy does not define a complete set of values and operations, then use an abstract tagged type (see Guideline 9.2.4). This abstract type can be thought of as the least common denominator of the class, essentially a conceptual and incomplete type. 

If a descendant needs to remove one of the components or primitive operations of its ancestor, it may not be appropriate to extend the tagged type. 

An exception to using reference semantics is when a type is exported that would not be used in a data structure or made part of a collection. 

If the implementation of two tagged types requires mutual visibility and the two types are generally used together, then it may be best to define them together in one package, though thought should be given to using child packages instead (see Guideline 9.4.1). Also, it can be convenient to define a small hierarchy of (completely) abstract types (or a small part of a larger hierarchy) all in one package specification; however, the negative impact on maintainability may outweigh the convenience. You do not provide a package body in this situation unless you have declared nonabstract operations on members of the hierarchy. 

=== Properties of Dispatching Operations ===

==== guideline ====

* The implementation of the dispatching operations of each type in a derivation class rooted in a tagged type T should conform to the expected semantics of the corresponding dispatching operations of the class-wide type T'Class. 

==== example ====
The key point of both of the alternatives in the following example is that it must be possible to use the 
class-wide type Transaction.Object'Class polymorphically without having to study the implementations of each of the types derived from the root type Transaction.Object. In addition, new transactions can be added to the derivation class without invalidating the existing transaction processing code. These are the important practical consequences of the design rule captured in the guideline: 

&lt;source lang=ada&gt;
with Database;
package Transaction is

   type Object (Data : access Database.Object'Class) is abstract tagged limited
      record
         Has_Executed : Boolean := False;
      end record;

   function Is_Valid (T : Object) return Boolean;
   -- checks that Has_Executed is False

   procedure Execute (T : in out Object);
   -- sets Has_Executed to True

   Is_Not_Valid : exception;

end Transaction;
&lt;/source&gt;

The precondition of Execute(T) for all T in Transaction.Object'Class is that Is_Valid(T) is True. The postcondition is the T.Has_Executed = True. This model is trivially satisfied by the root type Transaction.Object. 

Consider the following derived type: 

&lt;source lang=ada&gt;
with Transaction;
with Personnel;
package Pay_Transaction is
   type Object is new Transaction.Object with
      record
         Employee     : Personnel.Name;
         Hours_Worked : Personnel.Time;
      end record;
   function Is_Valid (T : Object) return Boolean;
   -- checks that Employee is a valid name, Hours_Worked is a valid
   -- amount of work time and Has_Executed = False
   procedure Has_Executed (T : in out Object);
   -- computes the pay earned by the Employee for the given Hours_Worked
   -- and updates this in the database T.Data, then sets Has_Executed to True
end Pay_Transaction;
&lt;/source&gt;

The precondition for the specific operation Pay_Transaction.Execute(T) is that Pay_Transaction.Is_Valid(T) is True, which is the same precondition as for the dispatching operation Execute on the class-wide type. (The actual validity check is different, but the statement of the &quot;precondition&quot; is the same.) The postcondition for Pay_Transaction.Execute(T) includes T.Has_Executed = True but also includes the appropriate condition on T.Data for computation of pay. 

The class-wide transaction type can then be properly used as follows: 

&lt;source lang=ada&gt;
type Transaction_Reference is access all Transaction.Object'Class;
type Transaction_List is array (Positive range &lt;&gt;) of Transaction_Reference;
procedure Process (Action : in Transaction_List) is
begin
   for I in Action'Range loop
   -- Note that calls to Is_Valid and Execute are dispatching
      if Transaction.Is_Valid(Action(I).all) then
         -- the precondition for Execute is satisfied
         Transaction.Execute(Action(I).all);
         -- the postcondition Action(I).Has_Executed = True is
         -- guaranteed to be satisfied (as well as any stronger conditions
         -- depending on the specific value of Action(I))
      else
         -- deal with the error
         ...
      end if;
   end loop;
end Process;
&lt;/source&gt;

If you had not defined the operation Is_Valid on transactions, then the validity condition for pay computation (valid name and hours worked) would have to directly become the precondition for Pay_Transaction.Execute. But this would be a &quot;stronger&quot; precondition than that on the class-wide dispatching operation, violating the guideline. As a result of this violation, there would be no way to guarantee the precondition of a dispatching call to Execute, leading to unexpected failures. 

An alternative resolution to this problem is to define an exception to be raised by an Execute operation when the transaction is not valid. This behavior becomes part of the semantic model for the class-wide type: the precondition for Execute(T) becomes simply True (i.e., always valid), but the postcondition becomes &quot;either&quot; the exception is not raised and Has_Executed = True &quot;or&quot; the exception is raised and Has_Executed = False. The implementations of Execute in all derived transaction types would then need to satisfy the new postcondition. It is important that the &quot;same&quot; exception be raised by &quot;all&quot; implementations because this is part of the expected semantic model of the class-wide type. 

With the alternative approach, the above processing loop becomes: 

&lt;source lang=ada&gt;
procedure Process (Action : in Transaction_List) is
begin

   for I in Action'Range loop

    Process_A_Transaction:
      begin

         -- there is no precondition for Execute
         Transaction.Execute (Action(I).all);
         -- since no exception was raised, the postcondition
         -- Action(I).Has_Executed = True is guaranteed (as well as
         -- any stronger condition depending on the specific value of
         -- Action(I))

      exception
         when Transaction.Is_Not_Valid =&gt;
            -- the exception was raised, so Action(I).Has_Executed = False

            -- deal with the error
            ...

      end Process_A_Transaction;

   end loop;

end Process;
&lt;/source&gt;

==== rationale ====

All the properties expected of a class-wide type by clients of that type should be meaningful for any specific types in the derivation class of the class-wide type. This rule is related to the object-oriented programming 
&quot;substitutability principle&quot; for consistency between the semantics of an object-oriented superclass and its subclasses (Wegner and Zdonik 1988). However, the separation of the polymorphic class-wide type T'Class from the root specific type T in Ada 95 clarifies this principle as a design rule on derivation classes rather than a correctness principle for derivation itself. 

When a dispatching operation is used on a variable of a class-wide type T'Class, the actual implementation executed will depend dynamically on the actual tag of the value in the variable. In order to rationally use T'Class, it must be possible to understand the semantics of the operations on T'Class without having to study the implementation of the operations for each of the types in the derivation class rooted in T. Further, a new type added to this derivation class should not invalidate this overall understanding of T'Class because this could invalidate existing uses of the class-wide type. Thus, there needs to be an overall set of semantic properties of the operations of T'Class that is preserved by the implementations of the corresponding dispatching operations of all the types in the derivation class. 

One way to capture the semantic properties of an operation is to define a &quot;precondition&quot; that must be true before the operation is invoked and a &quot;postcondition&quot; that must be true (given the precondition) after the operation has executed. You can (formally or informally) define pre- and postconditions for each operation of T'Class without reference to the implementations of dispatching operations of specific types. These semantic properties define the &quot;minimum&quot; set of properties common to all types in the derivation class. To preserve this minimum set of properties, the implementation of the dispatching operations of all the types in the derivation class rooted in T (including the root type T) should have (the same or) weaker preconditions than the corresponding operations of T'Class and (the same or) stronger postconditions than the T'Class operations. This means that any invocation of a dispatching operation on T'Class will result in the execution of an implementation that requires no more than what is expected of the dispatching operation in general (though it could require less) and delivers a result that is no less than what is expected (though it could do more). 

==== exceptions ====

Tagged types and type extension may sometimes be used primarily for type implementation reasons rather than for polymorphism and dispatching. In particular, a nontagged private type may be implemented using a type extension of a tagged type. In such cases, it may not be necessary for the implementation of the derived type to preserve the semantic properties of the class-wide type because the membership of the new type in the tagged type derivation class will not generally be known to clients of the type. 

=== Controlled Types ===

==== guideline ====

* Consider using a controlled type whenever a type allocates resources that must be deallocated or otherwise &quot;cleaned up&quot; on destruction or overwriting. 
* Use a derivation from a controlled type in preference to providing an explicit &quot;cleanup&quot; operation that must be called by clients of the type. 
* When overriding the adjustment and finalization procedures derived from controlled types, define the finalization procedure to undo the effects of the adjustment procedure. 
* Derived type initialization procedures should call the initialization procedure of their parent as part of their type-specific initialization. 
* Derived type finalization procedures should call the finalization procedure of their parent as part of their type-specific finalization. 
* Consider deriving a data structure's components rather than the enclosing data structure from a controlled type. 

==== example ====
The following example demonstrates the use of controlled types in the implementation of a simple linked list. Because the Linked_List type is derived from Ada.Finalization.Controlled, the Finalize procedure will be called automatically when objects of the Linked_List type complete their scope of execution: 

&lt;source lang=ada&gt;
with Ada.Finalization;
package Linked_List_Package is
   type Iterator is private;
   type Data_Type is ...
   type Linked_List is new Ada.Finalization.Controlled with private;
   function Head (List : Linked_List) return Iterator;
   procedure Get_Next (Element  : in out Iterator;
                       Data     :    out Data_Type);
   procedure Add (List     : in out Linked_List;
                  New_Data : in     Data_Type);
   procedure Finalize (List : in out Linked_List); -- reset Linked_List structure
   -- Initialize and Adjust are left to the default implementation.
private
   type Node;
   type Node_Ptr is access Node;
   type Node is
      record
         Data : Data_Type;
         Next : Node_Ptr;
      end record;
   type Iterator is new Node_Ptr;
   type Linked_List is new Ada.Finalization.Controlled with
      record
         Number_Of_Items : Natural := 0;
         Root            : Node_Ptr;
      end record;
end Linked_List_Package;
--------------------------------------------------------------------------
package body Linked_List_Package is

   function Head (List : Linked_List) return Iterator is
      Head_Node_Ptr : Iterator;
   begin
      Head_Node_Ptr := Iterator (List.Root);
      return Head_Node_Ptr;  -- Return the head element of the list
   end Head;

   procedure Get_Next (Element : in out Iterator;
                       Data    :    out Data_Type) is
   begin
      --
      -- Given an element, return the next element (or null)
      --
   end Get_Next;

   procedure Add (List     : in out Linked_List;
                  New_Data : in     Data_Type) is
   begin
      --
      -- Add a new element to the head of the list
      --
   end Add;

   procedure Finalize (List : in out Linked_List) is
   begin
      -- Release all storage used by the linked list
      --   and reinitialize.
   end Finalize;

end Linked_List_Package;
&lt;/source&gt;
==== rationale ====

The three controlling operations, Initialize, Adjust, and Finalize, serve as automatically called procedures that control three primitive activities in the life of an object (Ada Reference Manual 1995, §7.6). When an assignment to an object of a type derived from Controlled occurs, adjustment and finalization work in tandem. Finalization cleans up the object being overwritten (e.g., reclaims heap space), then adjustment finishes the assignment work once the value being assigned has been copied (e.g., to implement a deep copy). 

You can ensure that the derived type's initialization is consistent with that of the parent by calling the parent type's initialization from the derived type's initialization. 

You can ensure that the derived type's finalization is consistent with that of the parent by calling the parent type's finalization from the derived type's finalization. 

In general, you should call parent initialization before descendant-specific initialization. Similarly, you should call parent finalization after descendant-specific finalization. (You may position the parent initialization and/or finalization at the beginning or end of the procedure.) 

=== Abstract Types ===

==== guideline ====

* Consider using abstract types and operations in creating classification schemes, for example, a taxonomy, in which only the leaf objects will be meaningful in the application. 
* Consider declaring root types and internal nodes in a type tree as abstract. 
* Consider using abstract types for generic formal derived types. 
* Consider using abstract types to develop different implementations of a single abstraction. 

==== example ====
In a banking application, there are a wide variety of account types, each with different features and restrictions. Some of the variations are fees, overdraft protection, minimum balances, allowable account linkages (e.g., checking and savings), and rules on opening the account. Common to all bank accounts are ownership attributes: unique account number, owner name(s), and owner tax identification number(s). Common operations across all types of accounts are opening, depositing, withdrawing, providing current balance, and closing. The common attributes and operations describe the conceptual bank account. This idealized bank account can form the root of a generalization/specialization hierarchy that describes the bank's array of products. By using abstract tagged types, you ensure that only account objects corresponding to a specific product will be created. Because any abstract operations must be overridden with each derivation, you ensure that any restrictions for a specialized account are implemented (e.g., how and when the account-specific fee structure is applied): 

&lt;source lang=ada&gt;
--------------------------------------------------------------------------
package Bank_Account_Package is

   type Bank_Account_Type is abstract tagged limited private;
   type Money is delta 0.01 digits 15;

   -- The following abstract operations must be overridden for
   --   each derivation, thus ensuring that any restrictions
   --   for specialized accounts will be implemented.

   procedure Open (Account : in out Bank_Account_Type) is abstract;

   procedure Close (Account : in out Bank_Account_Type) is abstract;

   procedure Deposit (Account : in out Bank_Account_Type;
                      Amount  : in     Money) is abstract;

   procedure Withdraw (Account : in out Bank_Account_Type;
                       Amount  : in     Money) is abstract;

   function Balance (Account : Bank_Account_Type)
     return Money is abstract;

private
   type Account_Number_Type is ...
   type Account_Owner_Type  is ...
   type Tax_ID_Number_Type  is ...

   type Bank_Account_Type is abstract tagged limited
      record
         Account_Number : Account_Number_Type;
         Account_Owner  : Account_Owner_Type;
         Tax_ID_Number  : Tax_ID_Number_Type;
      end record;
end Bank_Account_Package;
--------------------------------------------------------------------------
-- Now, other specialized accounts such as a savings account can
-- be derived from Bank_Account_Type as in the following example.
-- Note that abstract types are still used to ensure that only
-- account objects corresponding to specific products will be
-- created.with Bank_Account_Package;
with Bank_Account_Package;
package Savings_Account_Package is
   type Savings_Account_Type is abstract
      new Bank_Account_Package.Bank_Account_Type with private;
   -- We must override the abstract operations provided
   --   by Bank_Account_Package.  Since we are still declaring
   --   these operations to be abstract, they must also be
   --   overridden by the specializations of Savings_Account_Type.
   procedure Open (Account : in out Savings_Account_Type) is abstract;
   procedure Close (Account : in out Savings_Account_Type) is abstract;

   procedure Deposit (Account : in out Savings_Account_Type;
                      Amount  : in     Bank_Account_Package.Money) is abstract;


   procedure Withdraw (Account : in out Savings_Account_Type;
                       Amount  : in     Bank_Account_Package.Money) is abstract;

   function Balance (Account : Savings_Account_Type)
     return Bank_Account_Package.Money is abstract;

private
   type Savings_Account_Type is abstract
      new Bank_Account_Package.Bank_Account_Type with
         record
            Minimum_Balance : Bank_Account_Package.Money;
         end record;
end Savings_Account_Package;

--------------------------------------------------------------------------
&lt;/source&gt;
See the abstract set package in Guideline 9.5.1 for an example of creating an abstraction with a single interface and the potential for multiple implementations. The example only shows one possible implementation; however, you could provide an alternate implementation of the Hashed_Set abstraction using other data structures. 

==== rationale ====

In many classification schemes, for example, a taxonomy, only objects at the leaves of the classification tree are meaningful in the application. In other words, the root of the hierarchy does not define a complete set of values and operations for use by the application. The use of &quot;abstract&quot; guarantees that there will be no objects of the root or intermediate nodes. Concrete derivations of the abstract types and subprograms are required so that the leaves of the tree become objects that a client can manipulate. 

You can only declare abstract subprograms when the root type is also abstract. This is useful as you build an abstraction that forms the basis for a family of abstractions. By declaring the primitive subprograms to be abstract, you can write the &quot;common class-wide parts of a system . . . without being dependent on the properties of any specific type at all&quot; (Rationale 1995, §4.2). 

Abstract types and operations can help you resolve problems when your tagged type hierarchy violates the expected semantics of the class-wide type dispatching operations. The Rationale (1995, §4.2) explains: 

:When building an abstraction that is to form the basis of a class of types, it is often convenient not to provide actual subprograms for the root type but just abstract subprograms which can be replaced when inherited. This is only allowed if the root type is declared as abstract; objects of an abstract type cannot exist. This technique enables common class-wide parts of a system to be written without being dependent on the properties of any specific type at all. Dispatching always works because it is known that there can never be any objects of the abstract type and so the abstract subprograms could never be called. 

See Guidelines 8.3.8 and 9.2.1. 

The multiple inheritance techniques discussed in Guideline 9.5.1 make use of abstract tagged types. The basic abstraction is defined using an abstract tagged (limited) private type (whose full type declaration is a null record) with a small set of abstract primitive operations. While abstract operations have no bodies and thus cannot be called, they are inherited. Derivatives of the abstraction then extend the root type with components that provide the data representation and override the abstract operations to provide callable implementations (Rationale 1995, §4.4.3). This technique allows you to build multiple implementations of a single abstraction. You declare a single interface and vary the specifics of the data representation and operation implementation. 

==== notes ====

When you use abstract data types as described in this guideline, you can have multiple implementations of the same abstraction available to you within a single program. This technique differs from the idea of writing multiple package bodies to provide different implementations of the abstraction defined in a package specification because with the package body technique, you can only include one of the implementations (i.e., bodies) in your program. 

== Tagged Type Operations ==
You can use three options when you define the operations on a tagged type and its descendants. These categories are primitive abstract, primitive nonabstract, and class-wide operations. An abstract operation must be overridden for a nonabstract derived type. A nonabstract operation may be redefined for a subclass. A class-wide operation cannot be overridden by a subclass definition. A class-wide operation can be redefined for the derivation class rooted in the derived type; however, this practice is discouraged because of the ambiguities it introduces in the code. 
Through careful usage of these options, you can ensure that your abstractions preserve class-wide properties, as discussed in Guideline 9.2.1. As stated above, this principle requires that any type that is visibly derived from some parent type must fully support the semantics of the parent type. 

=== Primitive Operations and Redispatching ===

==== guideline ====

* Consider declaring a primitive abstract operation based on the absence of a meaningful &quot;default&quot; behavior. 
* Consider declaring a primitive nonabstract operation based on the presence of a meaningful &quot;default&quot; behavior. 
* When overriding an operation, the overriding subprogram should not raise exceptions that are not known to the users of the overridden subprogram. 
* If redispatching is used in the implementation of the operations of a type, with the specific intent that some of the redispatched-to operations be overridden by specializations for the derived types, then document this intent clearly in the specification as part of the &quot;interface&quot; of a parent type with its derived types. 
* When redispatching is used (for any reason) in the implementation of a primitive operation of a tagged type, then document (in some project-consistent way) this use in the body of the operation subprogram so that it can be easily found during maintenance. 

==== example ====
This example (Volan 1994) is intended to show a clean derivation of a square from a rectangle. You do not want to derive Square from Rectangle because Rectangle has semantics that are inappropriate for Square. (For instance, you can make a rectangle with any arbitrary height and width, but you should not be able to make a square this way.) Instead, both Square and Rectangle should be derived from some common abstract type, such as: 

&lt;source lang=ada&gt;
Any_Rectangle:
type Figure is abstract tagged
   record
      ...
   end record;
type Any_Rectangle is abstract new Figure with private;
-- No Make function for this; it's abstract.
function Area (R: Any_Rectangle) return Float;
  -- Overrides abstract Area function inherited from Figure.
  -- Computes area as Width(R) * Height(R), which it will
  -- invoke via dispatching calls.
function Width (R: Any_Rectangle) return Float is abstract;
function Height (R: Any_Rectangle) return Float is abstract;
type Rectangle is new Any_Rectangle with private;
function Make_Rectangle (Width, Height: Float) return Rectangle;
function Width (R: Rectangle) return Float;
function Height (R: Rectangle) return Float;
-- Area for Rectangle inherited from Any_Rectangle
type Square is new Any_Rectangle with private;
function Make_Square (Side_Length: Float) return Square;
function Side_Length (S: Square) return Float;
function Width (S: Square) return Float;
function Height (S: Square) return Float;
-- Area for Square inherited from Any_Rectangle
...
-- In the body, you could just implement Width and Height for
-- Square as renamings of Side_Length:
function Width (S: Square) return Float renames Side_Length;
function Height (S: Square) return Float renames Side_Length;
function Area (R: Any_Rectangle) return Float is
begin
  return Width(Any_Rectangle'Class(R)) * Height(Any_Rectangle'Class(R));
  -- Casting [sic, i.e., converting] to the class-wide type causes the function calls to
  -- dynamically dispatch on the 'Tag of R.
  -- [sic, i.e., redispatch on the tag of R.]
end Area;

Alternatively, you could just wait until defining types Rectangle and Square to provide actual Area functions: 

type Any_Rectangle is abstract new Figure with private;
-- Inherits abstract Area function from Figure,
-- but that's okay, Any_Rectangle is abstract too.
function Width (R: Any_Rectangle) return Float is abstract;
function Height (R: Any_Rectangle) return Float is abstract;
type Rectangle is new Any_Rectangle with private;
function Make_Rectangle (Width, Height: Float) return Rectangle;
function Width (R: Rectangle) return Float;
function Height (R: Rectangle) return Float;
function Area (R: Rectangle) return Float; -- Overrides Area from Figure
type Square is new Any_Rectangle with private;
function Make_Square (Side_Length: Float) return Square;
function Side_Length (S: Square) return Float;
function Width (S: Square) return Float;
function Height (S: Square) return Float;
function Area (S: Square) return Float;  -- Overrides Area from Figure
...
function Area (R: Rectangle) return Float is
begin
  return Width(R) * Height(R); -- Non-dispatching calls
end Area;
function Area (S: Square) return Float is
begin
  return Side_Length(S) ** 2;
end Area;
&lt;/source&gt;

==== rationale ====

The behavior of a nonabstract operation can be interpreted as the expected behavior for all members of the class; therefore, the behavior must be a meaningful default for all descendants. If the operation must be tailored based on the descendant abstraction (e.g., computing the area of a geometric shape depends on the specific shape), then the operation should be primitive and possibly abstract. The effect of making the operation abstract is that it guarantees that each descendant must define its own version of the operation. Thus, when there is no acceptable basic behavior, an abstract operation is appropriate because a new version of the operation must be provided with each derivation. 

All operations declared in the same package as the tagged type and following the tagged type's declaration but before the next type declaration are considered its primitive operations. Therefore, when a new type is derived from the tagged type, it inherits the primitive operations. If there are any operations that you do not want to be inherited, you must choose whether to declare them as class-wide operations (see Guideline 9.3.2) or to declare them in a separate package (e.g., a child package). 

Exceptions are part of the semantics of the class. By modifying the exceptions, you are violating the semantic properties of the class-wide type (see Guideline 9.2.1). 

There are (at least) two distinct users of a tagged type and its primitives. The &quot;ordinary&quot; user uses the type and its primitives without enhancement. The &quot;extending&quot; user extends the type by deriving a type based on the existing (tagged) type. Extending users and maintainers must determine the ramifications of a possibly incorrect extension. The guidelines here try to strike a balance between too much documentation (that can then easily get out of synch with the actual code) and an appropriate level of documentation to enhance the maintainability of the code. 

One of the major maintenance headaches associated with inheritance and dynamic binding relates to undocumented interdependencies among primitive (dispatching) operations of tagged types (the equivalent of &quot;methods&quot; in typical object-oriented terminology). If a derived type inherits some and overrides other primitive operations, there is the question of what indirect effects on the inherited primitives are produced. If no redispatching is used, the primitives may be inherited as &quot;black boxes.&quot; If redispatching is used internally, then when inherited, the externally visible behavior of an operation may change, depending on what other primitives are overridden. Maintenance problems (here, finding and fixing bugs) occur when someone overrides incorrectly (on purpose or by accident) an operation used in redispatching. Because this overriding can invalidate the functioning of another operation defined perhaps several levels of inheritance up from the incorrect operation, it can be extremely difficult to track down. 

In the object-oriented paradigm, redispatching is often used to parameterize abstractions. In other words, certain primitives are intended to be overridden precisely because they are redispatching. These primitives may even be declared as abstract, requiring that they be overridden. Because they are redispatching, they act as &quot;parameters&quot; for the other operations. Although in Ada much of this parameterization can be done using generics, there are cases where the redispatching approach leads to a clearer object-oriented design. When you document the redispatching connection between the operations that are to be overridden and the operations that use them, you make the intended use of the type much clearer. 

Hence, any use of redispatching within a primitive should be considered part of the &quot;interface&quot; of the primitive, at least as far as any inheritor, and requires documentation at the specification level. The alternative (i.e., not providing such documentation in the specification) is to have to delve deep into the code of all the classes in the derivation hierarchy in order to map out the redispatching calls. Such detective work compromises the black-box nature of object-oriented class definitions. Note that if you follow Guideline 9.2.1 on preserving the semantics of the class-wide dispatching operations in the extensions of derived types, you will minimize or avoid the problems discussed here about redispatching. 

=== Class-Wide Operations ===

==== guideline ====

* Consider using a class-wide operation (i.e., an operation with parameter[s] of a class-wide type) when an operation can be written, compiled, and tested without knowing all the possible descendants of a given tagged type (Barnes 1996). 
* Consider using a class-wide operation when you do not want an operation to be inherited and/or overridden. 

==== example ====
The following example is adapted from Barnes (1996) using the geometric objects from the example of Guideline 9.2.1 and declaring the following functions as primitives in the package specification: 
&lt;source lang=ada&gt;

function Area (O : in Object) return Float;

function Area (C : in Circle) return Float;

function Area (S : in Shape) return Float;

&lt;/source&gt;

A function for computing the moment of a force about a fulcrum can now be created using a class-wide type as follows: 
&lt;source lang=ada&gt;

function Moment (OC : Object'Class) return Float is
begin
   return OC.X_Coord*Area(OC);
end Moment;
&lt;/source&gt;

Because Moment accepts the class-wide formal parameter of Object'Class, it can be called with an actual parameter that is any derivation of type Object. Assuming that all derivations of type object have defined a function for Area, Moment will dispatch to the appropriate function when called. For example:

&lt;source lang=ada&gt;
C : Circle;
M : Float;

...

-- Moment will dispatch to the Area function for the Circle type.
M := Moment(C);
&lt;/source&gt;

==== rationale ====

The use of class-wide operations avoids unnecessary duplication of code. Run-time dispatching may be used where necessary to invoke appropriate type-specific operations based on an operand's tag. 

See also Guideline 8.4.3 for a discussion of class-wide pointers in an object-oriented programming framework registry. 

=== Constructors ===

Ada does not define a unique syntax for constructors. In Ada a constructor for a type is defined as an operation that produces as a result a constructed object, i.e., an initialized instance of the type. 

==== guideline ====

* Avoid declaring a constructor as a primitive abstract operation. 
* Use a primitive abstract operation to declare an initialization function or constructor only when objects of the inheriting derived types will not require additional parameters for initialization. 
* Consider using access discriminants to provide parameters to default initialization. 
* Use constructors for explicit initialization. 
* Consider splitting the initialization and construction of an object. 
* Consider declaring a constructor operation in a child package. 
* Consider declaring a constructor operation to return an access value to the constructed object (Dewar 1995). 

==== example ====
The following example illustrates the declaration of a constructor in a child package: 
&lt;source lang=ada&gt;
--------------------------------------------------------------------------
package Game is
   type Game_Piece is tagged ...
   ...

end Game;
--------------------------------------------------------------------------
package Game.Constructors is
   function Make_Piece return Game_Piece;
   ...
end Game.Constructors;
--------------------------------------------------------------------------
&lt;/source&gt;

The following example shows how to split the initialization and construction of an object: 
&lt;source lang=ada&gt;
type Vehicle is tagged ...

procedure Initialize (Self : in out Vehicle;
                      Make : in     String);

...

type Car is new Vehicle with ... ;
type Car_Ptr is access all Car'Class;

...

procedure Initialize (Self  : in out Car_Ptr;
                      Make  : in     String;
                      Model : in     String) is
begin -- Initialize
   Initialize (Vehicle (Self.all), Make);
   ...
   -- initialization of Car
end Initialize;

function Create (Make  : in String;
                 Model : in String) return Car_Ptr is
   Temp_Ptr : Car_Ptr;
begin -- Create
   Temp_Ptr := new Car;
   Initialize (Temp_Ptr, Make, Model);
   return Temp_Ptr;
end Create;
&lt;/source&gt;

==== rationale ====

Constructor operations for the types in a type hierarchy (assuming tagged types and their derivatives) usually differ in their parameter profiles. The constructor will typically need more parameters because of the added components in the descendant types. You run into a problem when you let constructor operations be inherited because you now have operations for which there is no meaningful implementation (default or overridden). Effectively, you violate the class-wide properties (see Guideline 9.2.1) because the root constructor will not successfully construct a descendant object. Inherited operations cannot add parameters to their parameter profile, so these are inappropriate to use as constructors. 

You cannot initialize a limited type at its declaration, so you may need to use an access discriminant and rely on default initialization. For a tagged type, however, you should not assume that any default initialization is sufficient, and you should declare constructors. For limited types, the constructors must be separate procedures or functions that return an access to the limited type. 

The example shows using a constructor in a child package. By declaring constructor operations in either a child package or a nested package, you avoid the problems associated with making them primitive operations. Because they are no longer primitive operations, they cannot be inherited. By declaring them in a child package (see also Guidelines 4.1.6 and 4.2.2 on using child packages versus nested packages), you gain the ability to change them without affecting the clients of the parent package (Taft 1995b). 

You should put the construction logic and initialization logic in distinct subprograms so that you are able to call the initialization routine for the parent tagged type. 

==== notes ====

When you extend a tagged type (regardless whether it is an abstract type), you can choose to declare as abstract some of the additional operations. Doing so, however, means that the derived type must also be declared as abstract. If this newly derived type has inherited any functions that name it as the return type, these inherited functions now also become abstract (Barnes 1996). If one of these primitive functions served as the constructor function, you have now violated the first guideline in that the constructor has become a primitive abstract operation. 

=== Equality ===

==== guideline ====

* When you redefine the &quot;=&quot; operator on a tagged type, make sure that it has the expected behavior in extensions of this type and override it if necessary. 

==== example ====
The following example is adapted from the discussion of equality and inheritance in Barnes (1996): 
&lt;source lang=ada&gt;
----------------------------------------------------------------------------
package Object_Package is

   Epsilon : constant Float := 0.01;

   type Object is tagged
      record
         X_Coordinate : Float;
         Y_Coordinate : Float;
      end record;

   function &quot;=&quot; (A, B : Object) return Boolean;

end Object_Package;
----------------------------------------------------------------------------
package body Object_Package is

   -- redefine equality to be when two objects are located within a delta
   -- of the same point
   function &quot;=&quot; (A, B : Object) return Boolean is
   begin
      return (A.X_Coordinate - B.X_Coordinate) ** 2
           + (A.Y_Coordinate - B.Y_Coordinate) ** 2 &lt; Epsilon**2;
   end &quot;=&quot;;

end Object_Package;

----------------------------------------------------------------------------
with Object_Package;  use Object_Package;
package Circle_Package_1 is
   type Circle is new Object with
      record
         Radius : Float;
      end record;
  function &quot;=&quot; (A, B : Circle) return Boolean;
end Circle_Package_1;
----------------------------------------------------------------------------
package body Circle_Package_1 is

   -- Equality is overridden, otherwise two circles must have exactly
   -- equal radii to be considered equal.
   function &quot;=&quot; (A, B : Circle) return Boolean is
   begin
      return (Object(A) = Object(B)) and
             (abs (A.Radius - B.Radius) &lt; Epsilon);
   end &quot;=&quot;;

end Circle_Package_1;
----------------------------------------------------------------------------
with Object_Package;  use Object_Package;
package Circle_Package_2 is

   type Circle is new Object with
      record
         Radius : Float;
      end record;

   -- don't override equality in this package

end Circle_Package_2;
----------------------------------------------------------------------------
with Object_Package;
with Circle_Package_1;
with Circle_Package_2;
with Ada.Text_IO;
procedure Equality_Test is
   use type Object_Package.Object;
   use type Circle_Package_1.Circle;
   use type Circle_Package_2.Circle;
   Object_1 : Object_Package.Object;
   Object_2 : Object_Package.Object;
   Circle_1 : Circle_Package_1.Circle;
   Circle_2 : Circle_Package_1.Circle;
   Circle_3 : Circle_Package_2.Circle;
   Circle_4 : Circle_Package_2.Circle;
begin
   Object_1 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000);
   Object_2 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000);
   -- These Objects are considered equal.  Equality has been redefined to be
   -- when two objects are located within a delta of the same point.
   if Object_1 = Object_2 then
      Ada.Text_IO.Put_Line (&quot;Objects equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Objects not equal.&quot;);
   end if;
   Circle_1 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.000);
   Circle_2 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.005);
   -- These Circles are considered equal.  Equality has been redefined to be
   -- when the X-Y locations of the circles and their radii are both within
   -- the delta.
   if Circle_1 = Circle_2 then
      Ada.Text_IO.Put_Line (&quot;Circles equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Circles not equal.&quot;);
   end if;
   Circle_3 := (X_Coordinate =&gt; 1.000, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.000);
   Circle_4 := (X_Coordinate =&gt; 1.005, Y_Coordinate =&gt; 2.000, Radius =&gt; 5.005);
   -- These Circles are not considered equal because predefined equality of
   -- the extension component Radius will evaluate to False.
   if Circle_3 = Circle_4 then
      Ada.Text_IO.Put_Line (&quot;Circles equal.&quot;);
   else
      Ada.Text_IO.Put_Line (&quot;Circles not equal.&quot;);
   end if;
end Equality_Test;
&lt;/source&gt;

==== rationale ====

Equality is applied to all components of a record. When you extend a tagged type and compare two objects of the derived type for equality, the parent components as well as the new extension components will be compared. Therefore, when you redefine equality on a tagged type and define extensions on this type, the parent components are compared using the redefined equality. The extension components are also compared, using either predefined equality or some other redefined equality if appropriate. The behavior of inherited equality differs from the behavior of other inherited operations. When other primitives are inherited, if you do not override the inherited primitive, it can only operate on the parent components of the object of the extended type. Equality, on the other hand, generally does the right thing. 

=== Polymorphism ===

==== guideline ====

* Consider using class-wide programming to provide run-time, dynamic polymorphism when constructing larger, reusable, extensible frameworks. 
* When possible, use class-wide programming rather than variant records. 
* Use class-wide programming to provide a consistent interface across the set of types in the tagged type hierarchy (i.e., class). 
* Consider using generics to define a new type in terms of an existing type, either as an extension or as a container, collection, or composite data structure. 
* Avoid using type extensions for parameterized abstractions when generics provide a more appropriate mechanism. 

==== example ====
&lt;source lang=ada&gt;
  generic
     type Element is private;
  package Stack is
     ...
  end Stack;

is preferable to: 

  package Stack is
     type Element is tagged null record;
     -- Elements to be put on the stack must be of a descendant type
     -- of this type.
     ...
  end Stack;
&lt;/source&gt;

==== rationale ====

Both generics and class-wide types allow a single algorithm to be applicable to multiple, specific types. With generics, you achieve polymorphism across unrelated types because the type used in the instantiation must match the generic formal part. You specify required operations using generic formal subprograms, constructing them as needed for a given instantiation. Generics are ideal for capturing relatively small, reusable algorithms and programming idioms, for example, sorting algorithms, maps, bags, and iterators. As generics become large, however, they become unwieldy, and each instantiation may involve additional generated code. Class-wide programming, including class-wide types and type extension, is more appropriate for building a large subsystem because you avoid the additional generated code and unwieldy properties of generics.

Class-wide programming enables you to take a set of heterogeneous data structures and provide a homogeneous-looking interface across the whole set. See also Guideline 9.2.1 on using tagged types to describe heterogeneous polymorphic data. 

In object-oriented programming languages without generic capabilities, it was common to use inheritance to achieve much the same effect. However, this technique is generally less clear and more cumbersome to use than the equivalent explicit generic definition. The nongeneric, inheritance approach can always be recovered using a specific instantiation of the generic. Also see Guidelines 5.3.2 and 5.4.7 for a discussion of 
self-referential data structures. 

== Managing Visibility ==
=== Derived Tagged Types ===
==== guideline ====

* Consider giving derived tagged types the same visibility to the parent type as other clients of the parent. 
* Define a derived tagged type in a child of the package that defines the base type if the implementation of the derived type requires greater visibility into the implementation of the base type than other clients of the base type require. 

==== example ====
The following example illustrates the need for a derived type to have greater visibility into the implementation of the base type than other clients of the base type. In this example of a stack class hierarchy, Push and Pop routines provide a homogeneous interface for all variations of stacks. However, the implementation of these operations requires greater visibility into the base types due to the differences in the data elements. This example is adapted from Barbey, Kempe, and Strohmeier (1994): 

&lt;source lang=ada&gt;
generic
   type Item_Type is private;
package Generic_Stack is
   type Abstract_Stack_Type is abstract tagged limited private;
   procedure Push (Stack : in out Abstract_Stack_Type;
                   Item  : in     Item_Type) is abstract;
   procedure Pop (Stack : in out Abstract_Stack_Type;
                  Item  :    out Item_Type) is abstract;
   function Size (Stack : Abstract_Stack_Type) return Natural;
   Full_Error  : exception; -- May be raised by Push
   Empty_Error : exception; -- May be raised by Pop
private
   type Abstract_Stack_Type is abstract tagged limited
      record
         Size : Natural := 0;
      end record;
end Generic_Stack;
package body Generic_Stack is
   function Size (Stack : Abstract_Stack_Type)
      return Natural is
   begin
      return Stack.Size;
   end Size;
end Generic_Stack;
--
-- Now, a bounded stack can be derived in a child package as follows:
--
----------------------------------------------------------------------
generic
package Generic_Stack.Generic_Bounded_Stack is
   type Stack_Type (Max : Positive) is
      new Abstract_Stack_Type with private;
   -- override all abstract subprograms
   procedure Push (Stack : in out Stack_Type;
                   Item  : in     Item_Type);
   procedure Pop (Stack : in out Stack_Type;
                  Item  :    out Item_Type);
private
   type Table_Type is array (Positive range &lt;&gt;) of Item_Type;
   type Stack_Type (Max : Positive) is new Abstract_Stack_Type with
      record
         Table : Table_Type (1 .. Max); 
      end record;
end Generic_Stack.Generic_Bounded_Stack;
----------------------------------------------------------------------
package body Generic_Stack.Generic_Bounded_Stack is

   procedure Push (Stack : in out Stack_Type;
                   Item  : in     Item_Type) is
   begin

      -- The new bounded stack needs visibility into the base type
      --   in order to update the Size element of the stack type
      --   when adding or removing items.

      if (Stack.Size = Stack.Max) then
         raise Full_Error;
      else
         Stack.Size := Stack.Size + 1;
         Stack.Table(Stack.Size) := Item;
      end if;
   end Push;

   procedure Pop (Stack : in out Stack_Type;
                  Item  :    out Item_Type) is
   begin
      ...
   end Pop;

end Generic_Stack.Generic_Bounded_Stack;
&lt;/source&gt;

==== rationale ====

If the derived type can be defined without any special visibility of the base type, this provides for the best possible decoupling of the implementation of the derived type from changes in the implementation of the base type. On the other hand, the operations of an extension of a tagged type may need additional information from the base type that is not commonly needed by other clients. 

When the implementation of a derived tagged type requires visibility of the implementation of the base type, use a child package to define the derived type. Rather than providing additional public operations for this information, it is better to place the definition of the derived type in a child package. This gives the derived type the necessary visibility without risking misuse by other clients. 

This situation is likely to arise when you build a data structure with a homogeneous interface but whose data elements have a heterogeneous implementation. See also Guidelines 8.4.8, 9.2.1, and 9.3.5. 

== Multiple Inheritance ==
Ada provides several mechanisms to support multiple inheritance, where multiple inheritance is a means for incrementally building new abstractions from existing ones, as defined at the beginning of this chapter. Specifically, Ada supports multiple inheritance module inclusion (via multiple with/use clauses), multiple inheritance &quot;is-implemented-using&quot; via private extensions and record composition, and multiple inheritance mixins via the use of generics, formal packages, and access discriminants (Taft 1994). 

=== Multiple Inheritance Techniques ===

==== guideline ====

* Consider using type composition for implementation, as opposed to interface, inheritance. 
* Consider using a generic to &quot;mix in&quot; functionality to a derivative of some core abstraction. 
* Consider using access discriminants to support &quot;full&quot; multiple inheritance where an object must be referenceable as an entity of two or more distinct unrelated abstractions. 

==== example ====
Both examples that follow are taken directly from Taft (1994). The first shows how to use multiple inheritance techniques to create an abstract type whose interface inherits from one type and whose implementation inherits from another type. The second example shows how to enhance the functionality of a basic abstraction by mixing in new features. 

The abstract type Set_Of_Strings provides the interface to inherit: 
&lt;source lang=ada&gt;

type Set_Of_Strings is abstract tagged limited private;
type Element_Index is new Natural;  -- Index within set.
No_Element : constant Element_Index := 0;
Invalid_Index : exception;
procedure Enter(
  -- Enter an element into the set, return the index
  Set : in out Set_Of_Strings;
  S : String;
  Index : out Element_Index) is abstract;
procedure Remove(
  -- Remove an element from the set; ignore if not there
  Set : in out Set_Of_Strings;
  S : String) is abstract;
procedure Combine(
  -- Combine Additional_Set into Union_Set
  Union_Set : in out Set_Of_Strings;
  Additional_Set : Set_Of_Strings) is abstract;
procedure Intersect(
  -- Remove all elements of Removal_Set from Intersection_Set
  Intersection_Set : in out Set_Of_Strings;
  Removal_Set : Set_Of_Strings) is abstract;
function Size(Set : Set_Of_Strings) return Element_Index 
  is abstract;
  -- Return a count of the number of elements in the set
function Index(
  -- Return the index of a given element;
  -- return No_Element if not there.
  Set : Set_Of_Strings;
  S : String) return Element_Index is abstract;
function Element(Index : Element_Index) return String is abstract;
  -- Return element at given index position
  -- raise Invalid_Index if no element there.
private
  type Set_Of_Strings is abstract tagged limited ...

The type Hashed_Set derives its interface from Set_of_Strings and its implementation from an existing (concrete) type Hash_Table: 

type Hashed_Set(Table_Size : Positive) is
  new Set_Of_Strings with private;
-- Now we give the specs of the operations being implemented
procedure Enter(
  -- Enter an element into the set, return the index
  Set : in out Hashed_Set;
  S : String;
  Index : out Element_Index);
procedure Remove(
  -- Remove an element from the set; ignore if not there
  Set : in out Hashed_Set;
  S : String);
  -- . . . etc.
private
  type Hashed_Set(Table_Size : Positive) is
    new Set_Of_Strings with record
      Table : Hash_Table(1..Table_Size);
    end record;
&lt;/source&gt;

In the package body, you define the bodies of the operations (i.e., Enter, Remove,Combine, Size, etc.) using the operations available on Hash_Table. You must also provide any necessary &quot;glue&quot; code. 

In this second example, the type Basic_Window responds to various events and calls: 

&lt;source lang=ada&gt;

type Basic_Window is tagged limited private;
procedure Display(W : Basic_Window);
procedure Mouse_Click(W     : in out Basic_Window;
                      Where :        Mouse_Coords);
          . . .
&lt;/source&gt;

You use mixins to add features such as labels, borders, menu bar, etc.: 
&lt;source lang=ada&gt;
generic
  type Some_Window is new Window with private;
  -- take in any descendant of Window
package Label_Mixin is
  type Window_With_Label is new Some_Window with private;
    -- Jazz it up somehow.
  -- Overridden operations:
  procedure Display(W : Window_With_Label);
  -- New operations:
  procedure Set_Label(W : in out Window_With_Label; S : String);
    -- Set the label
  function Label(W : Window_With_Label) return String;
    -- Fetch the label
private
  type Window_With_Label is
    new Some_Window with record
      Label : String_Quark := Null_Quark;
        -- An XWindows-Like unique ID for a string
    end record;
&lt;/source&gt;

In the generic body, you implement any overridden operations as well as the new operations. For example, you could implement the overridden Display operation using some of the inherited operations: 
&lt;source lang=ada&gt;
procedure Display(W : Window_With_Label) is
begin
    Display(Some_Window(W));
      -- First display the window normally,
      -- by passing the buck to the parent type.
    if W.Label /= Null_Quark then
      -- Now display the label if it is not null
        Display_On_Screen(XCoord(W), YCoord(W)-5, Value(W.Label));
          -- Use two inherited functions on Basic_Window
          -- to get the coordinates where to display the label.
    end if;
end Display;
&lt;/source&gt;

Assuming you have defined several generics with these additional features, to create the desired window, you use a combination of generic instantiations and private type extension, as shown in the following code: 
&lt;source lang=ada&gt;

  type My_Window is new Basic_Window with private;
  . . .
private
  package Add_Label is new Label_Mixin(Basic_Window);
  package Add_Border is
    new Border_Mixin(Add_Label.Window_With_Label);
  package Add_Menu_Bar is
    new Menu_Bar_Mixin(Add_Border.Window_With_Border);
  type My_Window is
    new Add_Menu_Bar.Window_With_Menu_Bar with null record;
      -- Final window is a null extension of Window_With_Menu_Bar.
      -- We could instead make a record extension and
      -- add components for My_Window over and above those
      -- needed by the mixins.
&lt;/source&gt;
The following example shows &quot;full&quot; multiple inheritance. 

Assume previous definition of packages for Savings_Account and Checking_Account. The following example shows the definition of an interest-bearing checking account (NOW account): 
&lt;source lang=ada&gt;
with Savings_Account;
with Checking_Account;
package NOW_Account is

   type Object is tagged limited private;

   type Savings (Self : access Object'Class) is
      new Savings_Account.Object with null record;

   -- These need to be overridden to call through to &quot;Self&quot;
   procedure Deposit (Into_Account : in out Savings; ...);
   procedure Withdraw (...);
   procedure Earn_Interest (...);
   function Interest (...) return Float;
   function Balance (...) return Float;
   type Checking (Self : access Object'Class) is
      new Checking_Account.Object with null record;

   procedure Deposit (Into_Account : in out Checking; ...);
   ...
   function Balance (...) return Float;

   -- These operations will call-through to Savings_Account or
   -- Checking_Account operations. &quot;Inherits&quot; in this way all savings and
   -- checking operations

   procedure Deposit (Into_Account : in out Object; ...);
   ...
   procedure Earn_Interest (...);
   ...
   function Balance (...) return Float;

private

   -- Could alternatively have Object be derived from either
   -- Savings_Account.Object or Checking_Account.Object
   type Object is tagged
      record
         As_Savings  : Savings (Object'Access);
         As_Checking : Checking (Object'Access);
      end record;

end NOW_Account;
&lt;/source&gt;

Another possibility is that the savings and checking accounts are both implemented based on a common Account abstraction, resulting in inheriting a Balance state twice for NOW_Account.Object. To resolve this ambiguity, you need to use an abstract type hierarchy for the multiple inheritance of interface and separate mixins for the multiple inheritance of implementation.

==== rationale ====

In other languages such as Eiffel and C++, multiple inheritance serves many purposes. In Eiffel, for instance, you must use inheritance both for module inclusion and for inheritance itself (Taft 1994). Ada provides context clauses for module inclusion and child libraries for finer modularization control. Ada does not provide a separate syntax for multiple inheritance. Rather, it provides a set of building blocks in type extension and composition that allow you to mix in additional behaviors. 

A library of mixins allows the client to mix and match in order to develop an implementation. Also see Guideline 8.3.8 about implementing mixins. 

You should not use multiple inheritance to derive an abstraction that is essentially unrelated to its parent(s). Thus, you should not try to derive a menu abstraction by inheriting from a command line type and a window type. However, if you have a basic abstraction such as a window, you can use multiple inheritance mixins to create a more sophisticated abstraction, where a mixin is the package containing the type(s) and operations that will extend the parent abstraction. 

Use self-referential data structures to implement types with &quot;full&quot; multiple inheritance (&quot;multiple polymorphism&quot;). 

A common mistake is to use multiple inheritance for parts-of relations. When a type is composed of several others types, you should use heterogeneous data structuring techniques, discussed in Guideline 5.4.2. 

== Summary ==

=== tagged type hierarchies ===

* Consider using type extension when designing an is-a (generalization/specialization) hierarchy. 
* Use tagged types to preserve a common interface across differing implementations (Taft 1995a). 
* When defining a tagged type in a package, consider including a definition of a general access type to the corresponding class-wide type. 
* In general, define only one tagged type per package. 
* The implementation of the dispatching operations of each type in a derivation class rooted in a tagged type T should conform to the expected semantics of the corresponding dispatching operations of the class-wide type T'Class. 
* Consider using a controlled type whenever a type allocates resources that must be deallocated or otherwise &quot;cleaned up&quot; on destruction or overwriting. 
* Use a derivation from a controlled type in preference to providing an explicit &quot;cleanup&quot; operation that must be called by clients of the type. 
* When overriding the adjustment and finalization procedures derived from controlled types, define the finalization procedure to undo the effects of the adjustment procedure. 
* Derived type initialization procedures should call the initialization procedure of their parent as part of their type-specific initialization. 
* Derived type finalization procedures should call the finalization procedure of their parent as part of their type-specific finalization. 
* Consider deriving a data structure's components rather than the enclosing data structure from a controlled type. 
* Consider using abstract types and operations in creating classification schemes, for example, a taxonomy, in which only the leaf objects will be meaningful in the application. 
* Consider declaring root types and internal nodes in a type tree as abstract. 
* Consider using abstract types for generic formal derived types. 
* Consider using abstract types to develop different implementations of a single abstraction. 

=== tagged type operations ===

* Consider declaring a primitive abstract operation based on the absence of a meaningful &quot;default&quot; behavior. 
* Consider declaring a primitive nonabstract operation based on the presence of a meaningful &quot;default&quot; behavior. 
* When overriding an operation, the overriding subprogram should not raise exceptions that are not known to the users of the overridden subprogram. 
* If redispatching is used in the implementation of the operations of a type, with the specific intent that some of the redispatched-to operations be overridden by specializations for the derived types, then document this intent clearly in the specification as part of the &quot;interface&quot; of a parent type with its derived types. 
* When redispatching is used (for any reason) in the implementation of a primitive operation of a tagged type, then document (in some project-consistent way) this use in the body of the operation subprogram so that it can be easily found during maintenance. 
* Consider using a class-wide operation (i.e., an operation with parameter[s] of a class-wide type) when an operation can be written, compiled, and tested without knowing all the possible descendants of a given tagged type (Barnes 1996). 
* Consider using a class-wide operation when you do not want an operation to be inherited and/or overridden. 
* Avoid declaring a constructor as a primitive abstract operation. 
* Use a primitive abstract operation to declare an initialization function or constructor only when objects of the inheriting derived types will not require additional parameters for initialization. 
* Consider using access discriminants to provide parameters to default initialization. 
* Use constructors for explicit initialization. 
* Consider splitting the initialization and construction of an object. 
* Consider declaring a constructor operation in a child package. 
* Consider declaring a constructor operation to return an access value to the constructed object (Dewar 1995). 
* When you redefine the &quot;=&quot; operator on a tagged type, make sure that it has the expected behavior in extensions of this type and override it if necessary. 
* Consider using class-wide programming to provide run-time, dynamic polymorphism when constructing larger, reusable, extensible frameworks. 
* When possible, use class-wide programming rather than variant records. 
* Use class-wide programming to provide a consistent interface across the set of types in the tagged type hierarchy (i.e., class). 
* Consider using generics to define a new type in terms of an existing type, either as an extension or as a container, collection, or composite data structure. 
* Avoid using type extensions for parameterized abstractions when generics provide a more appropriate mechanism. 

=== managing visibility ===

* Consider giving derived tagged types the same visibility to the parent type as other clients of the parent. 
* Define a derived tagged type in a child of the package that defines the base type if the implementation of the derived type requires greater visibility into the implementation of the base type than other clients of the base type require. 

=== multiple inheritance ===

* Consider using type composition for implementation, as opposed to interface, inheritance. 
* Consider using a generic to &quot;mix in&quot; functionality to a derivative of some core abstraction. 
* Consider using access discriminants to support &quot;full&quot; multiple inheritance where an object must be referenceable as an entity of two or more distinct unrelated abstractions.


{{Chapter navigation||Improving Performance}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>eqem0rros5meg894n2q5xe6eb58ejvh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Improving Performance</title>
    <ns>0</ns>
    <id>200805</id>
    <revision>
      <id>2054421</id>
      <parentid>2053133</parentid>
      <timestamp>2011-02-22T19:15:21Z</timestamp>
      <contributor>
        <username>ManuelGR</username>
        <id>3056</id>
      </contributor>
      <minor />
      <comment>Undid revision 2053133 by [[Special:Contributions/Avicennasis|Avicennasis]] ([[User talk:Avicennasis|discuss]]) It was not an error, but an Ada programming language operator.</comment>
      <text xml:space="preserve">{{Chapter navigation|Object-Oriented Features|Portable Dining Philosophers Example}}

{{TOC|limit=3|float=none}}

== Introduction ==

In many ways, performance is at odds with maintainability and portability. To achieve improved speed or memory usage, the most clear algorithm sometimes gives way to confusing code. To exploit special purpose hardware or operating system services, non-portable implementation dependencies are introduced. When concerned about performance, you must decide how well each algorithm meets its performance and maintainability goals. Use the guidelines in this chapter with care; they may be hazardous to your software. 

The best way to build a system that satisfies its performance requirements is through good design. You should not assume that speeding up your code will result in a visible increase in system execution. In most applications, the overall throughput of the system is not defined by the execution speed of the code but by the interaction between concurrent processes and the response time of the system peripherals. 

Most of the guidelines in this chapter read &quot;... when measured performance indicates.&quot; &quot;Indicates&quot; means that you have determined that the benefit in increased performance to your application in your environment outweighs the negative side effects on understandability, maintainability, and portability of the resulting code. Many of the guideline examples show the alternatives that you will need to measure in order to determine if the guideline is indicated. 

== Performance Issues ==
Performance has at least four aspects: execution speed, code size, compilation speed, and linking speed. Although all four are important, most people think of execution speed when performance is mentioned, and most of the guidelines in this chapter focus on execution speed. 

Performance is influenced by many factors, including the compilation software, hardware, system load, and coding style. While only coding style is typically under the control of the programmer, the other factors have so much influence that it is impossible to make flat statements such as &quot;case statements are more efficient than if-then-else structures.&quot; When performance is critical, you cannot assume that a coding style that proves more efficient on one system will also be more efficient on another. Decisions made for the sake of performance must be made on the basis of testing the alternatives on the actual system on which the application will be fielded. 

== Performance Measurement ==

While most well-known tools for measuring performance are stand-alone programs that concentrate on execution speed, there is a comprehensive tool that covers all four aspects of performance. The Ada Compiler Evaluation System (ACES) is the result of merging two earlier products: the United States Department of Defense's Ada Compiler Evaluation Capability and the United Kingdom Ministry of Defence's Ada Evaluation System. It offers a comprehensive set of nearly 2,000 performance tests along with automated setup, test management, and analysis software. This system reports (and statistically analyzes) compilation time, linking time, execution time, and code size. The analysis tools make comparisons among multiple compilation-execution systems and also provide comparisons of the run-time performance of tests using different coding styles to achieve similar purposes. 

Performance Issues Working Group (PIWG) suite. The Quick-Look facility is advertised as being easy to download, install, and execute in less than a day, while providing information that is as useful as that generated by the PIWG suite. In addition, sw-eng.falls-church.va.us, directory /public/AdaIC/testing/aces. For World Wide Web access, use the following uniform resource locator (URL): http://sw-eng.falls-church.va.us/AdaIC/testing/aces/. 

While measuring performance may seem to be a relatively straightforward matter, there are significant issues that must be addressed by any person or toolset planning to do such measurement. For detailed information, see the following sources: ACES (1995a, 1995b, 1995c); Clapp, Mudge, and Roy (1990); Goforth, Collard, and Marquardt (1990); Knight (1990); Newport (1995); and Weidermann (1990). 

== Program Structure ==
=== Blocks ===
==== guideline ====

* Use blocks (see Guideline 5.6.9) to introduce late initialization when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   ...
   Initial : Matrix;

begin  -- Find_Solution

   Initialize_Solution_Matrix:
      for Row in Initial'Range(1) loop
         for Col in Initial'Range(2) loop
            Initial (Row, Col) := Get_Value (Row, Col);
         end loop;
      end loop Initialize_Solution_Matrix;

   Converge_To_The_Solution:
      declare

         Solution       : Matrix           := Identity;
         Min_Iterations : constant Natural := ...;

      begin  -- Converge_To_The_Solution
         for Iterations in 1 .. Min_Iterations loop
            Converge (Solution, Initial);
         end loop;

      end Converge_To_The_Solution;

   ...
end Find_Solution;
&lt;/source&gt;

==== rationale ====

Late initialization allows a compiler more choices in register usage optimization. Depending on the circumstance, this may introduce a significant performance improvement. 

Some compilers incur a performance penalty when declarative blocks are introduced. Careful analysis and timing tests by the programmer may identify those declarative blocks that should be removed. 

==== notes ====

It is difficult to accurately predict through code inspections which declarative blocks improve performance and which degrade performance. However, with these general guidelines and a familiarity with the particular implementation, performance can be improved. 

== Data Structures ==
=== Dynamic Arrays ===
==== guideline ====

* Use constrained arrays when measured performance indicates. 

==== rationale ====
If array bounds are not known until run-time, then calculations of these bounds may affect run-time performance. Using named constants or static expressions as array bounds may provide better performance than using variables or nonstatic expressions. Thus, if the values of Lower and Upper are not determined until run-time, then: 

... is array (Lower .. Upper) of ...

may cause address and offset calculations to be delayed until run-time, introducing a performance penalty. See NASA (1992) for a detailed discussion of the tradeoffs and alternatives. 

=== Zero-Based Arrays ===

==== guideline ====
* Use zero-based indexing for arrays when measured performance indicates. 

==== rationale ====
For some compilers, offset calculations for an array whose lower bound is 0 (either the integer zero or the first value of an enumeration type) are simplified. For other compilers, optimization is more likely if the lower bound is 1. 

=== Unconstrained Records ===

==== guideline ====

* Use fixed-size components for records when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
subtype Line_Range   is Integer range 0 .. Max_Lines;
subtype Length_Range is Integer range 0 .. Max_Length;

-- Note that Max_Lines and Max_Length need to be static
type Paragraph_Body is array (Line_Range range &lt;&gt;, Length_Range range &lt;&gt;) of Character;

type Paragraph (Lines : Line_Range := 0; Line_Length : Length_Range := 0) is
   record
      Text : Paragraph_Body (1 .. Lines, 1 .. Line_Length);
   end record;
&lt;/source&gt;

==== rationale ====

Determine the size and speed impact of unconstrained records having components depending on discriminants. Some compilers will allocate the maximum possible size to each object of the type; others will use pointers to the dependent components, incurring a possible heap performance penalty. Consider the possibility of using fixed-size components. 

=== Records and Arrays ===

==== guideline ====

* Define arrays of records as parallel arrays when measured performance indicates. 
==== example ====
&lt;source lang=ada&gt;
    -- Array of records
    Process (Student (Index).Name, Student (Index).Grade);
    -- Record of arrays
    Process (Student.Name (Index), Student.Grade (Index));
    -- Parallel arrays
    Process (Name (Index), Grade (Index));
&lt;/source&gt;
==== rationale ====

Determine the impact of structuring data as arrays of records, records containing arrays, or parallel arrays. Some implementations of Ada will show significant performance differences among these examples. 

=== Record and Array Aggregates ===

==== guideline ====

* Use a sequence of assignments for an aggregation when measured performance indicates. 

==== rationale ====
Determine the impact of using an aggregate versus a sequence of assignments. Using an aggregate generally requires the use of a temporary variable. If the aggregate is &quot;static&quot; (i.e., its size and components are known at compile- or link-time, allowing link-time allocation and initialization), then it will generally be more efficient than a sequence of assignments. If the aggregate is &quot;dynamic,&quot; then a series of assignments may be more efficient because no temporary variable is needed. 

See Guideline 5.6.10 for a discussion of aggregates from the point of view of readability and maintainability. 

See Guideline 10.6.1 for a discussion of extension aggregates. 

== Algorithms ==

=== Mod and rem Operators ===
==== guideline ====

* Use incremental schemes instead of mod and rem when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Using mod
   for I in 0 .. N loop
      Update (Arr (I mod Modulus));
   end loop;

   -- Avoiding mod
   J := 0;
   for I in 0 .. N loop
      Update (Arr (J));
      J := J + 1;
      if J = Modulus then
         J := 0;
      end if;
   end loop;
&lt;/source&gt;

==== rationale ====

Determine the impact of using the mod and rem operators. One of the above styles may be significantly more efficient than the other. 

=== Short-Circuit Operators ===

==== guideline ====

* Use the short-circuit control form when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Nested &quot;if&quot;
   if Last &gt;= Target_Length then
      if Buffer (1 .. Target_Length) = Target then
         ...
      end if;
   end if;

   -- &quot;and then&quot;
   if Last &gt;= Target_Length and then Buffer (1 .. Target_Length) = Target then
      ...
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using nested if statements versus using the &lt;code&gt;and then&lt;/code&gt; or &lt;code&gt;or else&lt;/code&gt; operator. One of the above may be significantly more efficient than the other. 

=== Case Statement Versus elsif ===

==== guideline ====

* Use the case statement when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   subtype Small_Int is Integer range 1 .. 5;
   Switch : Small_Int;
   ...
   -- Case statement
   case Switch is
      when 1 =&gt; ...
      when 2 =&gt; ...
      when 3 =&gt; ...
      when 4 =&gt; ...
      when 5 =&gt; ...
   end case;

   -- &quot;elsif construct&quot;
   if Switch = 1 then
      ...
   elsif Switch = 2 then
      ...
   elsif Switch = 3 then
      ...
   elsif Switch = 4 then
      ...
   elsif Switch = 5 then
      ...
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using case statements versus the elsif construct. If the case statement is implemented using a small jump table, then it may be significantly more efficient than the if .. then .. elsif construct. 

See also Guideline 8.4.6 for a discussion of the table-driven programming alternative. 

=== Checking for Constraint Errors ===

==== guideline ====

* Use hard-coded constraint checking when measured performance indicates. 

==== example ====

&lt;source lang=ada&gt;
   subtype Small_Int is Positive range Lower .. Upper;
   Var : Small_Int;
   ...

   -- Using exception handler
   Double:
      begin
         Var := 2 * Var;
      exception
         when Constraint_Error =&gt;
            ...
      end Double;

      -- Using hard-coded check
      if Var &gt; Upper / 2 then
         ...
      else
         Var := 2 * Var;
      end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of using exception handlers to detect constraint errors. If the exception handling mechanism is slow, then hard-coded checking may be more efficient. 

=== Order of Array Processing ===

==== guideline ====

* Use column-first processing of two-dimensional arrays when measured performance indicates. 

==== example ====

&lt;source lang=ada&gt;
    type Table_Type is array (Row_Min .. Row_Max, Col_Min .. Col_Max) of ...
    Table : Table_Type;
    ...
    -- Row-order processing
    for Row in Row_Min .. Row_Max loop
       for Col in Col_Min .. Col_Max loop
          -- Process Table (Row, Col)
       end loop;
    end loop;
    -- Column-order processing
    for Col in Col_Min .. Col_Max loop
       for Row in Row_Min .. Row_Max loop
          -- Process Table (Row, Col)
       end loop;
    end loop;
&lt;/source&gt;

==== rationale ====

Determine the impact of processing two-dimensional arrays in row-major order versus column-major order. While most Ada compilers are likely to use row-major order, it is not a requirement. In the presence of good optimization, there may be no significant difference in the above examples. Using static array bounds is also likely to be significant here. See Guidelines 10.4.1 and 10.4.2. 

=== Assigning Alternatives ===

==== guideline ====

* Use overwriting for conditional assignment when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- Using &quot;if .. else&quot;
   if Condition then
      Var := One_Value;
   else
      Var := Other_Value;
   end if;
   -- Using overwriting
   Var := Other_Value;
   if Condition then
      Var := One_Value;
   end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of styles of assigning alternative values. The examples illustrate two common methods of doing this; for many systems, the performance difference is significant. 

=== Packed Boolean Array Shifts ===

==== guideline ====

* When measured performance indicates, perform packed Boolean array shift operations by using slice assignments rather than repeated bit-wise assignment. 

==== example ====
&lt;source lang=ada&gt;
   subtype Word_Range is Integer range 0 .. 15;
   type Flag_Word is array (Word_Range) of Boolean;
   pragma Pack (Flag_Word);
   Word : Flag_Word;
   ...

   -- Loop to shift by one bit
   for Index in 0 .. 14 loop
      Word (Index) := Word (Index + 1);
   end loop;
   Word (15) := False;

   -- Use slice assignment to shift by one bit
   Word (0 .. 14) := Word (1 .. 15);
   Word (15) := False;
&lt;/source&gt;

==== rationale ====

Determine the impact of slice manipulation when shifting packed Boolean arrays. For Ada 83 implementations using packed Boolean arrays, shift operations may be much faster when slice assignments are used as opposed to for loop moving one component at a time. For Ada 95 implementations, consider using modular types instead (see Guideline 10.6.3). 

=== Subprogram Dispatching ===

==== guideline ====

* Use static subprogram dispatching when measured performance indicates. 
==== example ====

The term &quot;static dispatching&quot; in this example refers to the use of if/elsif sequences to explicitly determine which subprograms to call based on certain conditions: 

&lt;source lang=ada&gt;
    -- (1) Dispatching where tag is not known at compile time
    --     (See ACES V2.0 test &quot;a9_ob_class_wide_dynamic_01&quot;)
    -- Object_Type is a tagged type
    -- The_Pointer designates Object_Type'Class;
    -- Subclass1_Pointer designates Subclass1 (derived from Object_Type)
    -- Subclass2_Pointer designates Subclass2 (derived from Subclass1)
    -- Subclass3_Pointer designates Subclass3 (derived from Subclass2)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       The_Pointer := Subclass1_Pointer;
    elsif Random_Value &gt; 2.0/3.0 then
       The_Pointer := Subclass2_Pointer;
    else
       The_Pointer := Subclass3_Pointer;
    end if;
    Process (The_Pointer.all);  -- Tag is unknown
    -- (2) Tag is determinable at compile time (static dispatching)
    --     (See ACES V2.0, test &quot;a9_ob_class_wide_static_01&quot;)
    -- Object_Type is a tagged type
    -- The_Pointer designates Object_Type'Class;
    -- Subclass1_Pointer designates Subclass1 (derived from Object_Type)
    -- Subclass2_Pointer designates Subclass2 (derived from Subclass1)
    -- Subclass3_Pointer designates Subclass3 (derived from Subclass2)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       Process (Subclass1_Pointer.all);
    elsif Random_Value &gt; 2.0/3.0 then
       Process (Subclass2_Pointer.all);
    else
       Process (Subclass3_Pointer.all);
    end if;
    -- (3) No tagged types are involved (no dispatching)
    --     (See ACES V2.0, test &quot;ap_ob_class_wide_01&quot;)
    -- Object_type is a discriminated type with variants; possible
    -- discriminant values are Subclass1, Subclass2, and Subclass3
    -- All the pointers designate values of Object_Type
    -- Subclass1_Pointer := new Object_Type (Subclass1);
    -- Subclass2_Pointer := new Object_Type (Subclass2);
    -- Subclass3_Pointer := new Object_Type (Subclass3);
    -- There is only one &quot;Process&quot; procedure (operating on Object_Type)
    Random_Value := Simple_Random; -- Call to a random number generator
    if Random_Value &lt; 1.0/3.0 then
       Process (Subclass1_Pointer.all);
    elsif Random_Value &gt; 2.0/3.0 then
       Process (Subclass2_Pointer.all);
    else
       Process (Subclass3_Pointer.all);
    end if;
&lt;/source&gt;

==== rationale ====

Determine the impact of dynamic and static subprogram dispatching. The compiler may generate much more efficient code for one form of dispatching than the other. 

==== notes ====

Dynamic dispatching will almost certainly be more efficient than an explicit if . . . elsif sequence. However, you should be aware of any optimizing decisions made by a compiler that might affect this situation. 

== Types ==

=== Aggregates for Type Extensions ===

==== guideline ====

* Use only simple aggregates when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   type Parent is tagged
      record
         C1 : Float;
         C2 : Float;
      end record;

   type Extension is new Parent with
      record
         C3 : Float;
         C4 : Float;
      end record;

   Parent_Var : Parent := (C1 =&gt; Float_Var1, C2 =&gt; Float_Var2);
   Exten_Var  : Extension;
   ...
   -- Simple aggregate
   -- (See ACES V2.0, test &quot;a9_ob_simp_aggregate_02&quot;)
   Exten_Var := (C1 =&gt; Float_Var1, C2 =&gt; Float_Var2,
                 C3 =&gt; Float_Var3, C4 =&gt; Float_Var4);
   -- Extension aggregate
   -- (See ACES V2.0, test &quot;a9_ob_ext_aggregate_02&quot;)
   Exten_Var := (Parent_Var with C3 =&gt; Float_Var3, C4 =&gt; Float_Var4);
&lt;/source&gt;

==== rationale ====

Determine the impact of using extension aggregates. There may be a significant performance difference between evaluation of simple aggregates and evaluation of extension aggregates. 

=== Protected Types ===

==== guideline ====

* For mutual exclusion, when measured performance indicates, use protected types as an alternative to tasking rendezvous. 
* To implement an interrupt handler, when performance measurement indicates, use a protected procedure. 

==== example ====
&lt;source lang=ada&gt;
   -- (1) Using protected objects
   --     (See ACES V2.0, test &quot;a9_pt_prot_access_02&quot;)
   protected Object is
      function Read return Float;
      procedure Write (Value : in Float);
   private
      Data : Float;
   end Object;
   protected body Object is
      function Read return Float is
      begin
         return Data;
      end Read;
      procedure Write (Value : in Float) is
      begin
         Data := Value;
      end Write;
   end Object;
   task type Modify is
   end Modify;
   type Mod_Bunch is array (1 .. 5) of Modify;
   task body Modify is
      ...
   begin -- Modify
      for I in 1 .. 200 loop
         The_Value := Object.Read;
         Object.Write (The_Value - 0.125);
         if The_Value &lt; -1.0E7 then
            The_Value := 1.0;
         end if;
      end loop;
   end Modify;
   ...
   -- Block statement to be timed
   declare
      Contending_Tasks : array (1 .. 5) of Modify;
   begin
      null;  -- 5 tasks contend for access to protected data
   end;
   ------------------------------------------------------------------------------
   -- (2) Using monitor task
   --     (See ACES V2.0, test &quot;tk_rz_entry_access_02&quot;)
   Task Object is
      entry Write (Value : in     Float);
      entry Read  (Value :    out Float);
   end Object;
   task body Object is
      Data : Float;
   begin -- Object
      loop
         select
            accept Write (Value : in     Float) do
               Data := Value;
            end Write;
         or
            accept Read  (Value :    out Float) do
               Value := Data;
            end Read;
         or
            terminate;
         end select;
      end loop;
   end Object;
   -- Task type Modify declared as above
   -- Block statement to be timed as above
&lt;/source&gt;
==== rationale ====

Protected objects are meant to be much faster than tasks used for the same purpose (see Guideline 6.1.1). Determine the impact of using protected objects to provide access safely to encapsulated data in a concurrent program. 

=== Bit Operations on Modular Types ===

==== guideline ====

* Use modular types rather than packed Boolean arrays when measured performance indicates. 

==== example ====
&lt;source lang=ada&gt;
   -- (1) Packed Boolean arrays
   --     (See ACES V2.0, test &quot;dr_ba_bool_arrays_11&quot;)

   type Set is array (0 .. 15) of Boolean;
   pragma Pack (Set);

   S1     : Set;
   S2     : Set;
   Empty  : Set := (Set'Range =&gt; False);
   Result : Boolean;

   ...

   -- Is S1 a subset of S2?
   Result := ((S1 and not S2) = Empty);

   ---------------------------------------------------------------------

   -- (2) Modular types
   --     (See ACES V2.0, test &quot;a9_ms_modular_oper_02&quot;)

   type Set is mod 16;

   S1     : Set;
   S2     : Set;
   Empty  : Set := 0;
   Result : Boolean;

   ...

   -- Is S1 a subset of S2?
   Result := ((S1 and not S2) = Empty);
&lt;/source&gt;

==== rationale ====

Determine the impact of performing bit-wise operations on modular types. The performance of these operations may be significantly different from similar operations on packed Boolean arrays. See also Guideline 10.5.7. 

=== Bounded Strings ===

==== guideline ====

* Use the predefined bounded strings when predictable performance is an issue and measured performance indicates. 

==== rationale ====
The unbounded strings may be allocated on the heap. If bounded strings are not allocated on the heap, then they may provide better performance. Determine the impact of using the string type declared in instantiations of Ada.Strings.Bounded.Generic_Bounded_Length versus the type declared in Ada.Strings.Unbounded. 

The predefined Ada 95 language environment defines packages that support both bounded and unbounded strings. Using bounded strings may avoid the unpredictable duration of delays associated with using heap storage. 

=== String Handling Subprograms ===

==== guideline ====

* Use the procedural form of the string handling subprograms when measured performance indicates. 

==== rationale ====
Determine the relative performance cost of functions and procedures having the same name and functionality in Ada.Strings.Fixed, Ada.Strings.Bounded, Ada.Strings.Unbounded and the corresponding child packages whose names include Wide. 

While functional notation typically leads to clearer code, it may cause the compiler to generate additional copying operations. 

=== Constraint Checking ===

==== guideline ====

* Use strong typing with carefully selected constraints to reduce run-time constraint checking when measured performance indicates. 

==== example ====
In this example, two potential constraint checks are eliminated. If the function Get_Response returns String, then the initialization of the variable Input would require constraint checking. If the variable Last is type Positive, then the assignment inside the loop would require constraint checking: 

&lt;source lang=ada&gt;
   ...
   subtype Name_Index is Positive range 1 .. 32;
   subtype Name       is String (Name_Index);
   ...
   function Get_Response return Name is separate;
   ...
begin
   ...
   Find_Last_Period:
      declare
         -- No Constraint Checking needed for initialization
         Input       : constant Name       := Get_Response;
         Last_Period :          Name_Index := 1;
      begin  -- Find_Last_Period
         for I in Input'Range loop
            if Input(I) = '.' then
               -- No Constraint Checking needed in  this `tight' loop
               Last_Period := I;
            end if;
         end loop;
         ...
      end Find_Last_Period;
&lt;/source&gt;

==== rationale ====

Because run-time constraint checking is associated with slow performance, it is not intuitive that the addition of constrained subtypes could actually improve performance. However, the need for constraint checking appears in many places regardless of the use of constrained subtypes. Even assignments to variables that use the predefined subtypes may need constraint checks. By consistently using constrained subtypes, many of the unnecessary run-time checking can be eliminated. Instead, the checking is usually moved to less frequently executed code involved in system input. In the example, the function Get_Response may need to check the length of a user-supplied string and raise an exception. 

Some compilers can do additional optimizations based on the information provided by constrained subtypes. For example, although an unconstrained array does not have a fixed size, it has a maximum size that can be determined from the range of its index. Performance can be improved by limiting this maximum size to a &quot;reasonable&quot; number. Refer to the discussion on unconstrained arrays found in NASA (1992). 

=== Real-Time System Annex ===

==== guideline ====

* For cases where both rendezvous and protected types are inefficient, consider the use of the Real-Time Systems Annex (Ada Reference Manual 1995, Annex D). 

==== rationale ====
The packages Ada.Synchronous_Task_Control and Ada.Asynchronous_Task_Control have been defined to provide an alternative to tasking and protected types for use in applications where a minimal run-time is desired (Ada Reference Manual 1995, Annex D). 

== Pragmas ==
=== Pragma Inline ===

==== guideline ====

* When measured performance indicates, use pragma Inline when calling overhead is a significant portion of the routine's execution time. 

==== example ====
&lt;source lang=ada&gt;
procedure Assign (Variable : in out Integer;
                  Value    : in     Integer);
pragma Inline (Assign);
...
procedure Assign (Variable : in out Integer;
                  Value    : in     Integer) is
begin
   Variable := Value;
end Assign;
&lt;/source&gt;

==== rationale ====

If calling overhead is a significant portion of a subprogram's execution time, then using pragma Inline may reduce execution time. 

Procedure and function invocations include overhead that is unnecessary when the code involved is very small. These small routines are usually written to maintain the implementation hiding characteristics of a package. They may also simply pass their parameters unchanged to another routine. When one of these routines appears in some code that needs to run faster, either the implementation-hiding principle needs to be violated or a pragma Inline can be introduced. 

The use of pragma Inline does have its disadvantages. It can create compilation dependencies on the body; that is, when the specification uses a pragma Inline, both the specification and corresponding body may need to be compiled before the specification can be used. As updates are made to the code, a routine may become more complex (larger) and the continued use of a pragma Inline may no longer be justified. 

==== exceptions ====

Although it is rare, inlining code may increase code size, which can lead to slower performance caused by additional paging. A pragma Inline may actually thwart a compiler's attempt to use some other optimization technique, such as register optimization. 

When a compiler is already doing a good job of selecting routines to be inlined, the pragma may accomplish little, if any, improvement in execution speed. 

=== Pragma Restrictions ===

==== guideline ====

* Use pragma Restrictions to express the user's intent to abide by certain restrictions. 

==== rationale ====
This may facilitate the construction of simpler run-time environments (Ada Reference Manual 1995, §§13.12, D.7, and H.4). 

=== Pragma Preelaborate ===

==== guideline ====

* Use pragma Preelaborate where allowed. 

==== rationale ====
This may reduce memory write operations after load time (Ada Reference Manual 1995, §§10.2.1 and C.4). 

=== Pragma Pure ===

==== guideline ====

* Use pragma Pure where allowed. 

==== rationale ====
This may permit the compiler to omit calls on library-level subprograms of the library unit if the results are not needed after the call (Ada Reference Manual 1995, §10.2.1). 

=== Pragma Discard_Names ===

==== guideline ====

* Use pragma Discard_Names when the names are not needed by the application and data space is at a premium. 

==== rationale ====
This may reduce the memory needed to store names of Ada entities, where no operation uses those names (Ada Reference Manual 1995, §C.5). 

=== Pragma Suppress ===

==== guideline ====

* Use pragma Suppress where necessary to achieve performance requirements. 

==== rationale ====
See Guideline 5.9.5. 

=== Pragma Reviewable ===

==== guideline ====

* Use pragma Reviewable to aid in the analysis of the generated code. 

==== rationale ====
See the Ada Reference Manual (1995, Annex H). 

== Summary ==

* Use the guidelines in this chapter with care; they may be hazardous to your software. 

==== program structure ====

* Use blocks to introduce late initialization when measured performance indicates . 

=== data structures ===

* Use constrained arrays when measured performance indicates. 
* Use zero-based indexing for arrays when measured performance indicates. 
* Use fixed-size components for records when measured performance indicates. 
* Define arrays of records as parallel arrays when measured performance indicates. 
* Use a sequence of assignments for an aggregation when measured performance indicates. 

=== algorithms ===

* Use incremental schemes instead of mod and rem when measured performance indicates. 
* Use the short-circuit control form when measured performance indicates. 
* Use the case statement when measured performance indicates. 
* Use hard-coded constraint checking when measured performance indicates. 
* Use column-first processing of two-dimensional arrays when measured performance indicates. 
* Use overwriting for conditional assignment when measured performance indicates. 
* When measured performance indicates, perform packed Boolean array shift operations by using slice assignments rather than repeated bit-wise assignment. 
* Use static subprogram dispatching when measured performance indicates.&lt; 

=== types ===

* Use only simple aggregates when measured performance indicates. 
* For mutual exclusion, when measured performance indicates, use protected types as an alternative to tasking rendezvous. 
* To implement an interrupt handler, when measured performance indicates, use a protected procedure. 
* Use modular types rather than packed Boolean arrays when measured performance indicates. 
* Use the predefined bounded strings when predictable performance is an issue and measured performance indicates. 
* Use the procedural form of the string handling subprograms when measured performance indicates. 
* Use strong typing with carefully selected constraints to reduce run-time constraint checking when measured performance indicates. 
* For cases where both rendezvous and protected types are inefficient, consider the use of the Real-Time Systems Annex (Ada Reference Manual 1995, Annex D). 

=== pragmas ===

* When measured performance indicates, use pragma Inline when calling overhead is a significant portion of the routine's execution time. 
* Use pragma Restrictions to express the user's intent to abide by certain restrictions. 
* Use pragma Preelaborate where allowed. 
* Use pragma Pure where allowed. 
* Use pragma Discard_Names when the names are not needed by the application and data space is at a premium. 
* Use pragma Suppress where necessary to achieve performance requirements. 
* Use pragma Reviewable to aid in the analysis of the generated code.


{{Chapter navigation||Portable Dining Philosophers Example}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>5mwh50igpw1cyzah3uwnfrtg7lp09jh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Portable Dining Philosophers Example</title>
    <ns>0</ns>
    <id>200806</id>
    <revision>
      <id>1550576</id>
      <parentid>1549804</parentid>
      <timestamp>2009-06-28T09:14:28Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Improving Performance|References}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Improving Performance|References}}


This chapter presents an elaborate implementation of Edsger Dijkstra's famous [[w:Dining Philosophers|Dining Philosophers]]; a classical demonstration of [[w:deadlock|deadlock]] problems in concurrent programming. This example demonstrates the portability of Ada packages and tasking and illustrates many of the Ada 95 quality and style guidelines. Since many of the guidelines leave the program writer to decide what is best, there is no single best or correct example of how to use Ada. Instead, you will find several styles that differ from your own that may deserve consideration. 


&lt;source lang=ada&gt;
--::::::::::
--random_generic.ads
--::::::::::
generic
  type Result_Subtype is (&lt;&gt;);
package Random_Generic is
 
  -- Simple integer pseudo-random number generator package.
  -- Michael B. Feldman, The George Washington University, 
  -- June 1995.
 
  function Random_Value return Result_Subtype;  
 
end Random_Generic;
--::::::::::
--screen.ads
--::::::::::
package Screen is

  -- simple ANSI terminal emulator
  -- Michael Feldman, The George Washington University
  -- July, 1995

  ScreenHeight : constant Integer := 24;
  ScreenWidth  : constant Integer := 80;

  subtype Height is Integer range 1 .. ScreenHeight;
  subtype Width  is Integer range 1 .. ScreenWidth;

  type Position is record
    Row    : Height := 1;
    Column : Width  := 1;
  end record;

  procedure Beep; 
  -- Pre:  none
  -- Post: the terminal beeps once
  
  procedure ClearScreen; 
  -- Pre:  none
  -- Post: the terminal screen is cleared
  
  procedure MoveCursor (To : in Position);
  -- Pre:  To is defined
  -- Post: the terminal cursor is moved to the given position
  
end Screen;   
--::::::::::
--windows.ads
--::::::::::
with Screen;
package Windows is

  -- manager for simple, nonoverlapping screen windows
  -- Michael Feldman, The George Washington University
  -- July, 1995

  type Window is private;

  function Open (UpperLeft : Screen.Position;
                 Height    : Screen.Height;
                 Width     : Screen.Width) return Window;
  -- Pre:  W, Height, and Width are defined
  -- Post: returns a Window with the given upper-left corner,
  --   height, and width

  procedure Title (W     : in out Window;
                   Name  : in     String;
                   Under : in     Character);
  -- Pre:  W, Name, and Under are defined
  -- Post: Name is displayed at the top of the window W, underlined
  -- with the character Under. 

  procedure Borders (W      : in out Window;
                     Corner : in     Character
                     Down   : in     Character
                     Across : in     Character);
  -- Pre:  All parameters are defined
  -- Post: Draw border around current writable area in window with 
  -- characters specified.  Call this BEFORE Title.  

  procedure MoveCursor (W : in out Window;
                        P : in     Screen.Position);
  -- Pre:  W and P are defined, and P lies within the area of W
  -- Post: Cursor is moved to the specified position.
  --   Coordinates are relative to the
  --   upper left corner of W, which is (1, 1) 

  procedure Put (W  : in out Window;
                 Ch : in     Character);
  -- Pre:  W and Ch are defined.
  -- Post: Ch is displayed in the window at 
  --   the next available position.
  --   If end of column, go to the next row.
  --   If end of window, go to the top of the window. 

  procedure Put (W : in out Window;
                 S : in     String);
  -- Pre:  W and S are defined
  -- Post: S is displayed in the window, &quot;line-wrapped&quot; if necessary

  procedure New_Line (W : in out Window);
  -- Pre:  W is defined
  -- Post: Cursor moves to beginning of next line of W;
  --   line is not blanked until next character is written  

private
  type Window is record
    First   : Screen.Position; -- coordinates of upper left
    Last    : Screen.Position; -- coordinates of lower right
    Current : Screen.Position; -- current cursor position
  end record;

end Windows;
--::::::::::
--Picture.ads
--::::::::::
with Windows;
with Screen;
package Picture is

  -- Manager for semigraphical presentation of the philosophers
  -- i.e. more application oriented windows, build on top of
  -- the windows package.
  -- Each picture has an orientation, which defines which borders
  -- top-bottom, bottom-top, left-right, or right-left correspond
  -- to the left and right hand of the philosopher.
  --
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995

  type Root is abstract tagged private;
  type Root_Ptr is access Root'Class;

  procedure Open (W         : in out Root;
                  UpperLeft : in     Screen.Position;
                  Height    : in     Screen.Height;
                  Width     : in     Screen.Width);
  -- Pre:  Not opened
  -- Post: An empty window exists

  procedure Title (W     : in out Root;
                   Name  : in     String);
  -- Pre:  An empty window
  -- Post: Name and a border is drawn.

  procedure Put_Line (W : in out Root; 
                      S : in     String);

  procedure Left_Fork  (W    : in out Root; 
                        Pick : in     Boolean) is abstract;
  procedure Right_Fork (W    : in out Root; 
                        Pick : in     Boolean) is abstract;
  -- left and right relates to philosopher position around table

  type North is new Root with private;
  type South is new Root with private;
  type East  is new Root with private;
  type West  is new Root with private;


private
  type Root is abstract tagged record
      W : Windows.Window;
  end record;

  type North is new Root with null record;
  type South is new Root with null record;
  type East  is new Root with null record;
  type West  is new Root with null record;

  procedure Left_Fork  (W    : in out North; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out North; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out South; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out South; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out East; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out East; 
                        Pick : in     Boolean);

  procedure Left_Fork  (W    : in out West; 
                        Pick : in     Boolean);
  procedure Right_Fork (W    : in out West; 
                        Pick : in     Boolean);

end Picture;
--::::::::::
--chop.ads
--::::::::::
package Chop is

  -- Dining Philosophers - Ada 95 edition
  -- Chopstick is an Ada 95 protected type
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
  protected type Stick is
    entry Pick_Up;
    procedure Put_Down;
  private
    In_Use: Boolean := False;
  end Stick;
 
end Chop;

--::::::::::
--society.ads
--::::::::::
package Society is

  -- Dining Philosophers - Ada 95 edition
  -- Society gives unique ID's to people, and registers their names
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.

  subtype Unique_DNA_Codes is Positive range 1 .. 5;

  Name_Register : array (Unique_DNA_Codes) of String (1 .. 18) :=

     (&quot;Edsger Dijkstra   &quot;,
      &quot;Bjarne Stroustrup &quot;,
      &quot;Chris Anderson    &quot;,
      &quot;Tucker Taft       &quot;,
      &quot;Jean Ichbiah      &quot;);

end Society;
--::::::::::
--phil.ads
--::::::::::
with Society;
package Phil is
 
  -- Dining Philosophers - Ada 95 edition
  -- Philosopher is an Ada 95 task type with discriminant
  -- Michael B. Feldman, The George Washington University,
  -- July 1995
  --
  -- Revisions:
  -- July 1995. Bjorn Kallberg, CelsiusTech
  --            Reporting left or right instead of first stick

  task type Philosopher (My_ID : Society.Unique_DNA_Codes) is
 
    entry Start_Eating (Chopstick1 : in Positive;
                        Chopstick2 : in Positive);
 
  end Philosopher;
 
  type States is (Breathing, Thinking, Eating, Done_Eating, 
                  Got_Left_Stick, Got_Right_Stick, Got_Other_Stick, Dying);

end Phil;
--::::::::::
--room.ads
--::::::::::
with Chop;
with Phil;
with Society;
package Room is
 
  -- Dining Philosophers - Ada 95 edition

  -- Room.Maitre_D is responsible for assigning seats at the
  --   table, &quot;left&quot; and &quot;right&quot; chopsticks, and for reporting
  --   interesting events to the outside world.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.

  Table_Size : constant := 5;
  subtype Table_Type is Positive range 1 .. Table_Size;
 
  Sticks : array (Table_Type) of Chop.Stick;
 
  task Maitre_D is
    entry Start_Serving;
    entry Report_State (Which_Phil : in Society.Unique_DNA_Codes;
                        State      : in Phil.States;
                        How_Long   : in Natural := 0;
                        Which_Meal : in Natural := 0);
  end Maitre_D;
 
end Room;
--::::::::::
--random_generic.adb
--::::::::::
with Ada.Numerics.Discrete_Random;
package body Random_Generic is
 
  -- Body of random number generator package.
  -- Uses Ada 95 random number generator; hides generator parameters
  -- Michael B. Feldman, The George Washington University, 
  -- June 1995.
 
  package Ada95_Random is new Ada.Numerics.Discrete_Random
    (Result_Subtype =&gt; Result_Subtype);

  G : Ada95_Random.Generator;

  function Random_Value return Result_Subtype is 
  begin
    return Ada95_Random.Random (Gen =&gt; G);
  end Random_Value;

begin -- Random_Generic

  Ada95_Random.Reset (Gen =&gt; G);  -- time-dependent initialization

end Random_Generic;
--::::::::::
--screen.adb
--::::::::::
with Text_IO;
package body Screen is

  -- simple ANSI terminal emulator
  -- Michael Feldman, The George Washington University
  -- July, 1995

  -- These procedures will work correctly only if the actual
  -- terminal is ANSI compatible. ANSI.SYS on a DOS machine
  -- will suffice.

  package Int_IO is new Text_IO.Integer_IO (Num =&gt; Integer);

  procedure Beep is
  begin
    Text_IO.Put (Item =&gt; ASCII.BEL);
  end Beep;

  procedure ClearScreen is
  begin
    Text_IO.Put (Item =&gt; ASCII.ESC);
    Text_IO.Put (Item =&gt; &quot;[2J&quot;);
  end ClearScreen;

  procedure MoveCursor (To : in Position) is
  begin                                                
    Text_IO.New_Line;
    Text_IO.Put (Item =&gt; ASCII.ESC);
    Text_IO.Put (&quot;[&quot;);
    Int_IO.Put (Item =&gt; To.Row, Width =&gt; 1);
    Text_IO.Put (Item =&gt; ';');
    Int_IO.Put (Item =&gt; To.Column, Width =&gt; 1);
    Text_IO.Put (Item =&gt; 'f');
  end MoveCursor;  

end Screen;
--::::::::::
--windows.adb
--::::::::::
with Text_IO, with Screen;
package body Windows is

  -- manager for simple, nonoverlapping screen windows
  -- Michael Feldman, The George Washington University
  -- July, 1995

  function Open (UpperLeft : Screen.Position;
                 Height    : Screen.Height;
                 Width     : Screen.Width) return Window is
    Result : Window;
  begin
    Result.Current := UpperLeft;
    Result.First   := UpperLeft;
    Result.Last    := (Row    =&gt; UpperLeft.Row + Height - 1, 
                       Column =&gt; UpperLeft.Column + Width - 1);
    return Result; 
  end Open;

  procedure EraseToEndOfLine (W : in out Window) is
  begin
    Screen.MoveCursor (W.Current);
    for Count in W.Current.Column .. W.Last.Column loop
      Text_IO.Put (' ');
    end loop;
    Screen.MoveCursor (W.Current);
  end EraseToEndOfLine;

  procedure Put (W  : in out Window;
                 Ch : in     Character) is
  begin

    -- If at end of current line, move to next line 
    if W.Current.Column &gt; W.Last.Column then
      if W.Current.Row = W.Last.Row then
        W.Current.Row := W.First.Row;
      else
        W.Current.Row := W.Current.Row + 1;
      end if;
      W.Current.Column := W.First.Column;
    end if;

    -- If at First char, erase line
    if W.Current.Column = W.First.Column then
      EraseToEndOfLine (W);
    end if;

    Screen.MoveCursor (To =&gt; W.Current);

     -- here is where we actually write the character!
     Text_IO.Put (Ch);
     W.Current.Column := W.Current.Column + 1;
 
  end Put;

  procedure Put (W : in out Window;
                 S : in     String) is
  begin
    for Count in S'Range loop
      Put (W, S (Count));
    end loop;
  end Put;

  procedure New_Line (W : in out Window) is
  begin
    if W.Current.Column = 1 then
      EraseToEndOfLine (W);
    end if;
    if W.Current.Row = W.Last.Row then
      W.Current.Row := W.First.Row;
    else
      W.Current.Row := W.Current.Row + 1;
    end if;
    W.Current.Column := W.First.Column;
  end New_Line;
  procedure Title (W     : in out Window;
                   Name  : in     String;
                   Under : in     Character) is
  begin
    -- Put name on top line
    W.Current := W.First;
    Put (W, Name);
    New_Line (W);
    -- Underline name if desired, and reduce the writable area
    -- of the window by one line
    if Under = ' ' then   -- no underlining
      W.First.Row := W.First.Row + 1;      
    else                  -- go across the row, underlining
      for Count in W.First.Column .. W.Last.Column loop 
        Put (W, Under);
      end loop;
      New_Line (W);
      W.First.Row := W.First.Row + 2; -- reduce writable area
    end if;
  end Title;
 
  procedure Borders (W       : in out Window;
                     Corner  : in     Character
                     Down    : in     Character
                     Across  : in     Character is
, 
  begin
    -- Put top line of border
    Screen.MoveCursor (W.First);
    Text_IO.Put (Corner);
    for Count in W.First.Column + 1 .. W.Last.Column - 1 loop
      Text_IO.Put (Across);
    end loop;
    Text_IO.Put (Corner);

    -- Put the two side lines
    for Count in W.First.Row + 1 .. W.Last.Row - 1 loop
      Screen.MoveCursor ((Row =&gt; Count, Column =&gt; W.First.Column));
      Text_IO.Put (Down);
      Screen.MoveCursor ((Row =&gt; Count, Column =&gt; W.Last.Column));
      Text_IO.Put (Down);
    end loop;

    -- Put the bottom line of the border
    Screen.MoveCursor ((Row =&gt; W.Last.Row, Column =&gt; W.First.Column));
    Text_IO.Put (Corner);
    for Count in W.First.Column + 1 .. W.Last.Column - 1 loop
      Text_IO.Put (Across);
    end loop;
    Text_IO.Put (Corner);

    -- Make the Window smaller by one character on each side
    W.First   := (Row =&gt; W.First.Row + 1, Column =&gt; W.First.Column + 1);
    W.Last    := (Row =&gt; W.Last.Row - 1,  Column =&gt; W.Last.Column - 1);
    W.Current := W.First;
  end Borders;

  procedure MoveCursor (W : in out Window;
                        P : in     Screen.Position) is
    -- Relative to writable Window boundaries, of course
  begin 
    W.Current.Row    := W.First.Row + P.Row;
    W.Current.Column := W.First.Column + P.Column;
  end MoveCursor;

begin -- Windows

  Text_IO.New_Line;
  Screen.ClearScreen;
  Text_IO.New_Line;

end Windows;
--------------------
package Windows.Util is
  --
  -- Child package to change the borders of an existing window
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995.
  
  -- call these procedures after border and title
  procedure Draw_Left   (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Right  (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Top    (W  : in out Window; 
                         C  : in     Character);
  procedure Draw_Bottom (W  : in out Window; 
                         C  : in     Character);

end Windows.Util;
--------------------
with Text_IO;
package body Windows.Util is

  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995.
 
  -- When making borders and titles, the size has shrunk, so
  -- we must now draw outside the First and Last points


   procedure Draw_Left (W  : in out Window; 
                        C  : in     Character) is
   begin
     for R in W.First.Row - 3  .. W.Last.Row + 1 loop
       Screen.MoveCursor ((Row =&gt; R, Column =&gt; W.First.Column-1));
       Text_IO.Put (C);
      end loop;
   end;
 
   procedure Draw_Right (W  : in out Window; 
                         C  : in     Character) is
   begin
     for R in W.First.Row - 3  .. W.Last.Row + 1 loop
       Screen.MoveCursor ((Row =&gt; R, Column =&gt; W.Last.Column + 1));
       Text_IO.Put (C);
     end loop;
   end;

   procedure Draw_Top (W  : in out Window; 
                       C  : in     Character) is
   begin
     for I in W.First.Column - 1 .. W.Last.Column + 1 loop
       Screen.MoveCursor ((Row =&gt; W.First.Row - 3, Column =&gt; I));
       Text_IO.Put (C);
     end loop;
   end;

   procedure Draw_Bottom (W  : in out Window; 
                          C  : in     Character) is
   begin
     for I in W.First.Column - 1 .. W.Last.Column + 1 loop
       Screen.MoveCursor ((Row =&gt; W.Last.Row + 1, Column =&gt; I));
       Text_IO.Put (C);
     end loop;
   end;

end Windows.Util;

--::::::::::
--Picture.adb
--::::::::::
with Windows.Util;
package body Picture is
  -- 
  -- Bjorn Kallberg, CelsiusTech Systems, Sweden
  -- July, 1995


  function Vertical_Char (Stick : Boolean) return Character is
  begin
     if Stick then 
        return '#'; 
     else 
       return ':'; 
     end if;
  end;

  function Horizontal_Char (Stick : Boolean) return Character is
  begin
    if Stick then 
       return '#'; 
    else 
       return '-'; 
    end if;
  end;


  procedure Open (W         : in out Root;
                  UpperLeft : in     Screen.Position;
                  Height    : in     Screen.Height;
                  Width     : in     Screen.Width) is
  begin 
     W.W := Windows.Open (UpperLeft, Height, Width);
  end;


  procedure Title (W     : in out Root;
                   Name  : in     String) is
  -- Pre:  An empty window
  -- Post: Name and a boarder is drawn.

  begin
      Windows.Borders (W.W, '+', ':', '-');
      Windows.Title (W.W, Name,'-');
  end;
 
  procedure Put_Line (W : in out Root; 
                      S : in     String) is
  begin
     Windows.Put (W.W, S);
     Windows.New_Line (W.W);
  end;


  -- North
  procedure Left_Fork  (W    : in out North; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Right (W.W, Vertical_Char (Pick));
  end; 

  procedure Right_Fork  (W    : in out North; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Left (W.W, Vertical_Char (Pick));
  end;


  -- South
  procedure Left_Fork  (W    : in out South; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Left (W.W, Vertical_Char (Pick));
  end;

  procedure Right_Fork  (W    : in out South; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Right (W.W, Vertical_Char (Pick));
  end;


  -- East
  procedure Left_Fork  (W    : in out East; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Bottom (W.W, Horizontal_Char (Pick));
  end;
  procedure Right_Fork  (W    : in out East; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Top (W.W, Horizontal_Char (Pick));
  end;


  -- West
  procedure Left_Fork  (W    : in out West; 
                        Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Top (W.W, Horizontal_Char (Pick));
  end;

  procedure Right_Fork  (W    : in out West; 
                         Pick : in     Boolean) is
  begin
     Windows.Util.Draw_Bottom (W.W, Horizontal_Char (Pick));
  end;


end Picture;

--::::::::::
--chop.adb
--::::::::::
package body Chop is

  -- Dining Philosophers - Ada 95 edition
  -- Chopstick is an Ada 95 protected type
  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
  protected body Stick is

    entry Pick_Up when not In_Use is
    begin
      In_Use := True;
    end Pick_Up;

    procedure Put_Down is
    begin
      In_Use := False;
    end Put_Down;

  end Stick;
 
end Chop;
--::::::::::
--phil.adb
--::::::::::
with Society;
with Room;
with Random_Generic;
package body Phil is
 
  -- Dining Philosophers - Ada 95 edition
  -- Philosopher is an Ada 95 task type with discriminant.

  -- Chopsticks are assigned by a higher authority, which
  --   can vary the assignments to show different algorithms.
  -- Philosopher always grabs First_Grab, then Second_Grab.
  -- Philosopher is oblivious to outside world, but needs to
  --   communicate is life-cycle events the Maitre_D.
  -- Chopsticks assigned to one philosopher must be
  -- consecutive numbers, or the first and last chopstick.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
  -- Revisions:
  -- July, 1995. Bjorn Kallberg, CelsiusTech

  subtype Think_Times is Positive range 1 .. 8;
  package Think_Length is 
    new Random_Generic (Result_Subtype =&gt; Think_Times);

  subtype Meal_Times is Positive range 1 .. 10;
  package Meal_Length is
    new Random_Generic (Result_Subtype =&gt; Meal_Times);

  task body Philosopher is  -- My_ID is discriminant
 
    subtype Life_Time is Positive range 1 .. 5;
 
    Who_Am_I    : Society.Unique_DNA_Codes := My_ID; -- discriminant
    First_Grab  : Positive;
    Second_Grab : Positive;
    Meal_Time   : Meal_Times; 
    Think_Time  : Think_Times;
    First_Stick : States;
     
  begin
      -- get assigned the first and second chopsticks here
    accept Start_Eating (Chopstick1 : in Positive;
                         Chopstick2 : in Positive) do
      First_Grab  := Chopstick1;
      Second_Grab := Chopstick2;
      if (First_Grab mod Room.Table_Type'Last) + 1 = Second_Grab then
         First_Stick := Got_Right_Stick;
      else
         First_Stick := Got_Left_Stick;
      end if;
    end Start_Eating;
    Room.Maitre_D.Report_State (Who_Am_I, Breathing);
 
    for Meal in Life_Time loop
      Room.Sticks (First_Grab).Pick_Up;
      Room.Maitre_D.Report_State (Who_Am_I, First_Stick, First_Grab);
      Room.Sticks (Second_Grab).Pick_Up;
      Room.Maitre_D.Report_State (Who_Am_I, Got_Other_Stick, Second_Grab);
      Meal_Time := Meal_Length.Random_Value;
      Room.Maitre_D.Report_State (Who_Am_I, Eating, Meal_Time, Meal);
      delay Duration (Meal_Time);
      Room.Maitre_D.Report_State (Who_Am_I, Done_Eating);
      Room.Sticks (First_Grab).Put_Down;
      Room.Sticks (Second_Grab).Put_Down;
      Think_Time := Think_Length.Random_Value; 
      Room.Maitre_D.Report_State (Who_Am_I, Thinking, Think_Time);
      delay Duration (Think_Time);
    end loop;
    Room.Maitre_D.Report_State (Who_Am_I, Dying);
  end Philosopher;
end Phil;
--::::::::::
--room.adb
--::::::::::
with Picture;
with Chop;
with Phil;
with Society;
with Calendar;
pragma Elaborate (Phil);
package body Room is
 
  -- Dining Philosophers, Ada 95 edition
  -- A line-oriented version of the Room package
  -- Michael B. Feldman, The George Washington University, 
  -- July, 1995.
  -- Revisions
  -- July, 1995. Bjorn Kallberg, CelsiusTech Systems, Sweden.
  --             Pictorial display of stick in use 

  -- philosophers sign into dining room, giving Maitre_D their DNA code
 
  Dijkstra   : aliased Phil.Philosopher (My_ID =&gt; 1);
  Stroustrup : aliased Phil.Philosopher (My_ID =&gt; 2);
  Anderson   : aliased Phil.Philosopher (My_ID =&gt; 3);
  Taft       : aliased Phil.Philosopher (My_ID =&gt; 4);
  Ichbiah    : aliased Phil.Philosopher (My_ID =&gt; 5);
 
  type Philosopher_Ptr is access all Phil.Philosopher;

  Phils      : array (Table_Type) of Philosopher_Ptr;
  Phil_Pics  : array (Table_Type) of Picture.Root_Ptr;
  Phil_Seats : array (Society.Unique_DNA_Codes) of Table_Type;

  task body Maitre_D is
 
    T          : Natural;
    Start_Time : Calendar.Time;
    Blanks     : constant String := &quot;     &quot;;


  begin
 
    accept Start_Serving;

    Start_Time := Calendar.Clock;
 
    -- now Maitre_D assigns phils to seats at the table

    Phils :=
      (Dijkstra'Access,
       Anderson'Access,
       Ichbiah'Access,
       Taft'Access,
       Stroustrup'Access);
  
    -- Which seat each phil occupies.
    for I in Table_Type loop
       Phil_Seats (Phils(I).My_Id) := I;
    end loop;

    Phil_Pics :=
       (new Picture.North, 
        new Picture.East, 
        new Picture.South,
        new Picture.South,
        new Picture.West);
  
    Picture.Open (Phil_Pics(1).all,( 1, 24), 7, 30);
    Picture.Open (Phil_Pics(2).all,( 9, 46), 7, 30);
    Picture.Open (Phil_Pics(3).all,(17, 41), 7, 30);
    Picture.Open (Phil_Pics(4).all,(17,  7), 7, 30);
    Picture.Open (Phil_Pics(5).all,( 9,  2), 7, 30);


    -- and assigns them their chopsticks.

    Phils (1).Start_Eating (1, 2);
    Phils (3).Start_Eating (3, 4);
    Phils (2).Start_Eating (2, 3);
    Phils (5).Start_Eating (1, 5);
    Phils (4).Start_Eating (4, 5);
 
    loop
      select
        accept Report_State (Which_Phil : in Society.Unique_DNA_Codes;
                             State      : in Phil.States;
                             How_Long   : in Natural := 0;
                             Which_Meal : in Natural := 0) do

          T := Natural (Calendar.&quot;-&quot; (Calendar.Clock, Start_Time));
 
          case State is
 
            when Phil.Breathing =&gt;
              Picture.Title (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     Society.Name_Register (Which_Phil));
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Breathing...&quot;);

            when Phil.Thinking =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Thinking&quot; 
                      &amp; Integer'Image (How_Long) &amp; &quot; seconds.&quot;);

            when Phil.Eating =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Meal&quot;  
                      &amp; Integer'Image (Which_Meal)
                      &amp; &quot;,&quot;  
                      &amp; Integer'Image (How_Long) &amp; &quot; seconds.&quot;);

            when Phil.Done_Eating =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Yum-yum (burp)&quot;);
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, False);
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, False);

            when Phil.Got_Left_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;First chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Got_Right_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;First chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Got_Other_Stick =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Second chopstick&quot; 
                      &amp; Integer'Image (How_Long));
              Picture.Left_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);
              Picture.Right_Fork (Phil_Pics (Phil_Seats (Which_Phil)).all, True);

            when Phil.Dying =&gt;
              Picture.Put_line (Phil_Pics (Phil_Seats (Which_Phil)).all,
                     &quot;T =&quot; &amp; Integer'Image (T) &amp; &quot; &quot; 
                      &amp; &quot;Croak&quot;);

          end case; -- State
          
        end Report_State;
 
      or
        terminate;
      end select;
 
    end loop;
 
  end Maitre_D;
 
end Room;

--::::::::::
--diners.adb
--::::::::::
with Text_IO;
with Room;
procedure Diners is

  -- Dining Philosophers - Ada 95 edition

  -- This is the main program, responsible only for telling the
  --   Maitre_D to get busy.

  -- Michael B. Feldman, The George Washington University,
  -- July, 1995.
 
begin
  --Text_IO.New_Line;     -- artifice to flush output buffer
  Room.Maitre_D.Start_Serving;
end Diners;
&lt;/source&gt;


This version of the Dining Philosophers example was provided by Dr. Michael B. Feldman of the George Washington University and Bjorn Kallberg of CelciusTech Systems, Sweden. This example was compiled using the GNAT Ada 95 compiler, version 2.07, on a Sun platform.


{{Chapter navigation||References}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>qq4qs4fxtatcrr7y9cmd46aca6fmbb7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/References</title>
    <ns>0</ns>
    <id>200807</id>
    <revision>
      <id>1550577</id>
      <parentid>1550565</parentid>
      <timestamp>2009-06-28T09:15:13Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>{{Chapter navigation|Portable Dining Philosophers Example|Bibliography}}</comment>
      <text xml:space="preserve">{{Chapter navigation|Portable Dining Philosophers Example|Bibliography}}

{{TOC|limit=3|float=none}}

* ACES
** 1995a. Ada Compiler Evaluation System Primer, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
** 1995b. Ada Compiler Evaluation System Reader's Guide, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
** 1995c. Ada Compiler Evaluation System User's Guide, version 2.0. Wright-Patterson Air Force Base, Ohio: High Order Language Control Facility (88 CG/SCTL). 
* Ada Reference Manual
** 1983. Reference Manual for the Ada Programming Language. Department of Defense, ANSI/MIL-STD-1815A. 
** 1995. Ada 95 Reference Manual, ISO/8652-1995 Cambridge, Massachusetts: Intermetrics, Inc. 
*AIRMICS - 1990 . Software Reuse Guidelines, ASQB-GI-90-015. U.S. Army Institute for Research in Management Information, Communications, and Computer Sciences. 
* Anderson, T., and R.W. Witty - 1978. Safe Programming. BIT (Tidscrift Nordisk for Informations Behandling) 18:1-8. 
* ARTEWG - 1986. Catalogue of Ada Runtime Implementation Dependencies. Draft version. Association for Computing Machinery, Special Interest Group for Ada, Ada Run-Time Environments Working Group. 
* Baker, Henry G. - 1991. &quot;A Heavy Thought . . .&quot; Ada Letters. 11,2:45. 
* Barbey, S., M. Kempe, and A. Strohmeier - 1994. &quot;Advanced Object-Oriented Programming With Ada 9X.&quot; TRI-Ada '94 Tutorial Proceedings, pp. 373-467. 
* Barnes, J.G.P.
** 1989. Programming in Ada. 3d ed. Reading, Massachusetts: Addison-Wesley. 
** 1996. Programming in Ada 95. Reading, Massachusetts: Addison-Wesley. 
* Booch, G.
** 1986. Software Engineering With Ada. 2d ed. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
** 1987. Software Components With Ada-Structures, Tools and Subsystems. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
** 1994. Object-Oriented Analysis and Design. 2d ed. Menlo Park, California: The Benjamin/Cummings Publishing Company, Inc. 
* Brosgol, B., R. Eachus, and D. Emery - 1994. Ada for Information Systems: A Style Guide. Bedford, Massachusetts: MITRE. 
* CECOM - 1989. CECOM &quot;Final Report-Catalogue of Ada Runtime Implementation Dependencies,&quot; CIN; C02092JNB0001. 
* Charette, R.N. - 1986. Software Engineering Environments Concepts and Technology. Intertext Publications Inc. New York, New York: McGraw-Hill Inc. 
* Clapp, R.M, T. Mudge, and D.M. Roy - 1990. &quot;Rationale,&quot; Ada Letters. 10,3. 
* Cohen, N.H. 
** 1986. Ada as a Second Language. New York, New York: McGraw-Hill Inc. 
** 1996. Ada as a Second Language. 2nd edition. New York, New York: McGraw-Hill Inc. 
* Cohen, N., M. Kamrad, E. Schonberg, and R. Dewar - 1993.&quot;Ada 9X as a Second Ada.&quot; TRI-Ada '93 Tutorial Proceedings, pp. 1115-1196. 
* Conti, R.A. - 1987. Critical Run-Time Design Tradeoffs in an Ada Implementation. Proceedings of the Joint Ada Conference, Fifth National Conference on Ada Technology and Washington Ada Symposium. pp. 486-495. 
* Dewar, R. - 1995. Newsgroup discussion on comp.lang.ada. February 11, 1994. Subject: Constructor in ADA9X. 
* Edwards, S. - 1990. An Approach for Constructing Reusable Software Components in Ada, IDA Paper P-2378. Institute for Defense Analyses. 
* Goforth, A., P. Collard, and M. Marquardt - 1990. &quot;Performance Measurement of Parallel Ada,&quot; Ada Letters. 10,3. 
* Gonzalez, Dean W. - 1991. &quot;'=' Considered Harmful,&quot; Ada Letters. 11,2:56. 
* Goodenough, J., and L. Sha - 1988. The Priority Ceiling Protocol: A Method for Minimizing the Blocking of High Priority Ada Tasks, Tech. Rep. SEI-SSR-4. Pittsburgh, Pennsylvania: Software Engineering Institute. 
* Griest - 1989. &quot;Limitations on the Portability of Real Time Ada Programs,&quot; Proceedings of the 1989 Tri-Ada Conference, Tom Griest. 
* Hefley, W., J. Foreman, C. Engle, and J. Goodenough - 1992. Ada Adoption Handbook: A Program Manager's Guide, version 2.0. CMU/SEI-92-TR-29. Pittsburgh, Pennsylvania: Software Engineering Institute. 
* Honeywell - 1986. A Guidebook for Writing Reusable Source Code in Ada. Corporate Systems Development Division. Version 1.1. CSC-86-3:8213. 
* IEEE Dictionary - 1984. IEEE Standard Dictionary of Electrical and Electronics Terms. ANSI/IEEE STD 100-1984. 
* Intermetrics - 1995. Changes to Ada-1987 to 1995, version 6.0. ISO/IEC 8652:1995(E), 1995. 
* Jacobson, I. et al. - 1992. Object-Oriented Software Engineering. Reading, Massachusetts: Addison-Wesley. 
* Knight, J. - 1990. &quot;On the Assessment of Ada Performance,&quot; Ada Letters. 10,3. 
* MacLaren, L. - 1980. Evolving Toward Ada in Real Time Systems. ACM Sigplan Notices. 15(11):146-155. 
* Matthews, E.R. - 1987. Observations on the Portability of Ada I/O. ACM Ada Letters. VII(5): 100-103. 
* Melliar-Smith, P.M., and B. Randell - 1987. Software Reliability: The Role of Programmed Exception Handling. ACM Sigplan Notices.12(3):95-100. 
* NASA 1987. Ada Style Guide. Version 1.1, SEL-87-002. Greenbelt, Maryland: NASA, Goddard Space Flight Center. 
* 1992. Ada Efficiency Guide. Technical Note 552-FDD-91/068R0UD0. Greenbelt, Maryland: NASA, Goddard Space Flight Center. 
* Newport, J.R. - 1995. &quot;A Performance Model for Real-Time Systems,&quot; Ada Letters. 15,2. 
* Nissen, J., and P. Wallis - 1984. Portability and Style in Ada. Cambridge University Press. 
* Pappas, F. - 1985. Ada Portability Guidelines. DTIC/NTIS #AD-A160 390. 
* Pyle, I.C. - 1985. The Ada Programming Language. 2d ed. United Kingdom: Prentice-Hall International. 
* Rationale - 1995. Ada 95 Rationale, Cambridge, Massachusetts: Intermetrics, Inc. 
* Rosen, J.P. 1987. In Defense of the 'Use' Clause. ACM Ada Letters. VII(7):77-81. 
* 1995. A Naming Convention for Classes in Ada 9X. ACM Ada Letters. VXV(2):54-58. 
* Ross, D. - 1989. The Form of a Passive Iterator. ACM Ada Letters. IX(2):102-105.
* Rumbaugh, J., M. Blaha, W. Premerlani, F. Eddy, and W. Lorensen - 1991. Object-Oriented Modeling and Design. Englewood Cliffs, New Jersey: Prentice-Hall. 
* Sanden, B. - 1994. Software Systems Construction With Examples in Ada. Englewood Cliffs, New Jersey: Prentice-Hall. 
* Schneiderman, B. - 1986. Empirical Studies of Programmers: The Territory, Paths and Destinations. Empirical Studies of Programmers, edited by E. Soloway and S. Iyengar. Norwood, NJ: Ablex Publishing Corp. pp. 1-12. 
* Software Productivity Consortium
** 1992. Ada Quality and Style: Guidelines for Professional Programmers, SPC-91061-CMC, version 02.01.01. Herndon, Virginia: Software Productivity Consortium. 
** 1993. ADARTS Guidebook, SPC-91104-MC, version 03.00.09. 2 vols. Herndon, Virginia: Software Productivity Consortium. 
* Soloway, E., J. Pinto, S. Fertig, S. Letovsky, R. Lampert, D. Littman, and K. Ewing - 1986. Studying Software Documentation From a Cognitive Perspective: A Status Report. Proceedings of the Eleventh Annual Software Engineering Workshop. Report SEL-86-006, Software Engineering Laboratory. Greenbelt, Maryland: NASA, Goddard Space Flight Center.
* Taft, S.T.
** 1994. Multiple Inheritance in Ada 9X. Cambridge, Massachusetts: Intermetrics, Inc. 
** 1995a. Newsgroup discussion on comp.lang.ada. January 22, 1995. Subject: Ada.strings.bounded problems?
** 1995b. Newsgroup discussion on comp.lang.ada. February 11, 1995. Subject: Constructor in ADA9X. 
* Taylor, B. - 1995. Ada Compatibility Guide, version 6.0. United Kingdom: Transition Technology Limited. 
* United Technologies - 1987. CENC Programmer's Guide. Appendix A: Ada Programming Standards. 
* Volan, J. - 1994. Newsgroup discussion on comp.lang.ada. December 9, 1995. Subject: Type extension vs. inheritance. 
* Volz, R.A., Mudge, Naylor, and Mayer - 1985. Some Problems in Distributing Real-Time Ada Programs Across Machines. Ada in Use, Proceedings of the Ada International Conference. pp. 14-16. Paris. 
* Wegner, P., and S.B. Zdonik - 1988. Inheritance as an Incremental Modification Mechanism or What Like Is and Isn't Like. Proceedings of the European Conference on Object-Oriented Programming. LNCS 322. Springer-Verlag. 
* Weidermann, N. - 1990. &quot;Hartstone: Synthetic Benchmark Requirements for Hard Real-Time Applications,&quot; Ada Letters. 10,3. 
* Wheeler, David A. - 1992. Analysis and Guidelines for Reusable Ada Software. IDA Paper P-2765. Alexandria, Virginia: Institute for Defense Analyses.


{{Chapter navigation||Bibliography}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>n9ut143vv6oauta5edqry4qkrnftp40</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Bibliography</title>
    <ns>0</ns>
    <id>200808</id>
    <revision>
      <id>1550585</id>
      <parentid>1550584</parentid>
      <timestamp>2009-06-28T10:09:16Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>URL and DOI for each Ada-Letters paper</comment>
      <text xml:space="preserve">{{Chapter navigation|References|}}


*ACVC (Ada Compiler Validation Capability). Ada Validation Facility, ASD/SIOL. Wright-Patterson Air Force Base, Ohio.
*{{cite book
 |    author = AIRMICS
 |     title = Software Reuse Guidelines
 |   edition = 
 |      date = 
 |      year = 1990
 |     month = 
 |        id = ASQB-GI-90-015
 | publisher = U.S. Army Institute for Research in Management Information, Communications, and Computer Sciences
 |  location = 
 }}
*{{cite conference
 |    author = Ausnit, C., and K.A. Johnson. 
 |     title = Ada 95 Quality and Style
 | booktitle = Proceedings of the Thirteenth Annual National Conference on Ada Technology
 |     month = March 
 |      year = 1995
 }}
*{{Ada/Cite ACM
 |     author = Bardin, Thompson
 |      title = Composable Ada Software Components and the Re-Export Paradigm
 |       year = 1988
 |      month = January/February
 |     volume = VIII
 |      issue = 1
 |      pages = 58&amp;ndash;79
 |        doi = 10.1145/44766.44769
 |        url = http://portal.acm.org/citation.cfm?id=44766.44769
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{Ada/Cite ACM
 |     author = Bardin, Thompson
 |      title = Using the Re-Export Paradigm to Build Composable Ada Software Components
 |       year = 1988
 |      month = March/April
 |     volume = VIII
 |      issue = 2
 |      pages = 39&amp;ndash;54
 |        doi = 10.1145/45380.45381
 |        url = http://portal.acm.org/citation.cfm?id=45380.45381
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{cite book
 |     author = Brooks, F.B
 |      title = The Mythical Man-Month. Essays on Software Engineering
 |    edition = 
 |       date = 
 |       year = 1975
 |      month = 
 |         id = 
 |  publisher = Addison-Wesley
 |   location = Reading, Massachusetts
 }}
*{{cite journal
 |     author = Cristian, F
 |       year = 1984
 |      month = March
 |      title = Correct and Robust Programs
 |    journal = IEEE Transactions on Software Engineering
 |     volume = 10
 |      issue = 2
 |      pages = 163&amp;ndash;174
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 | accessdate = 
 }}
* Department of Defense, Ada Joint Program Office. Rationale for the Design of the Ada Programming Language, 1984. 
* Department of Defense, Ada Joint Program Office. Reference Manual for the Ada Programming Language. ANSI/MIL-STD-1815A, January 1983. 
*{{cite book
 |     author = Foreman, J., and J. Goodenough
 |      title = Ada Adoption Handbook: A Program Manager's Guide
 |    edition = Version 1.0
 |       date = 
 |       year = 1987
 |      month = May
 |         id = CMU/SEI-87-TR-9 ESD-TR-87-110
 |  publisher = Software Engineering Institute
 |   location = Pittsburgh, Pennsylvania
 }}
*{{cite book
 |     author = Gary, B., and D. Pokrass
 |      title = Understanding Ada: A Software Engineering Approach
 |    edition = 
 |       date = 
 |       year = 1985
 |      month = 
 |         id = 
 |  publisher = John Wiley &amp; Sons
 |   location = 
 }}
*{{cite paper
 |     author = Goodenough, J. B.
 |      title = A Sample of Ada Programmer Errors
 |    version = 
 |      pages = 
 |  publisher = 
 |      month = March
 |       year = 1986
 |        url = 
 |     format = 
 |         id = Unpublished draft resident in the Ada Repository under file name PD2:&lt;ADA.EDUCATION&gt;PROGERRS.DOC.2
 | accessdate = 
 }}
*{{cite paper
 |     author = Herr, C.S.
 |      title = Compiler Validation and Reusable Software
 |    version = 
 |      pages = 
 |  publisher = McDonnell Douglas Astronautics Company
 |   location = St. Louis, Missouri
 |       date = 
 |       year = 1987
 |      month = August
 |        url = 
 |     format = 
 |         id = 
 | accessdate = 
 }} A Report from the CAMP Project
* International Workshop on Real-Time Ada Issues. ACM Ada Letters. VII(6). Mortonhampstead, Devon, U.K., 1987.
* International Workshop on Real-Time Ada Issues II. ACM Ada Letters. VIII(6). Mortonhampstead, Devon, U.K., 1988.
*{{Ada/Cite cla
 |     author = Magnus Kempe
 |      title = Ada Programmer's Frequently Asked Questions (FAQ)
 |       date = 1995-08-19
 |        url = http://groups.google.es/group/news.answers/msg/f001f14822b17426
 |      quote = 
 | accessdate = 2009-06-28
}} [http://groups.google.es/group/comp.lang.ada/msg/33004d41f35bdead Part 2], [http://groups.google.es/group/news.answers/msg/0731234b0047f985 Part 3]
*{{cite book
 |     author = Kernighan, B., and P.J. Plauger
 |      title = The Elements of Programming Style
 |    edition = 
 |       date = 
 |       year = 1978
 |      month = 
 |         id = 
 |  publisher = McGraw-Hill, Inc.
 |   location = New York, New York
 }}
*{{cite journal
 |     author = MacLaren, L.
 |       year = 1980
 |      month = November
 |      title = Evolving Toward Ada in Real Time Systems
 |    journal = ACM Sigplan Notices
 |     volume = 15
 |      issue = 11
 |      pages = 146&amp;ndash;155
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 | accessdate = 
 }}
*{{cite paper
 |     author = Mowday, B.L., and E. Normand
 |      title = Ada Programming Standards
 |    version = 
 |      pages = 
 |  publisher = General Dynamics Data Systems Division Departmental Instruction
 |      month = November
 |       year = 1986
 |        url = 
 |     format = 
 |         id = 414.717
 | accessdate = 
 }}
*{{Ada/Cite ACM
 |     author = Nissen, J.C.D., P. Wallis, B.A. Wichmann, et al.
 |      title = Ada-Europe Guidelines for the Portability of Ada Programs
 |       year = 1982
 |      month = March/April
 |     volume = I
 |      issue = 3
 |      pages = 44&amp;ndash;61
 |        doi = 10.1145/989791.989793
 |        url = http://portal.acm.org/citation.cfm?id=989791.989793
 |      quote = 
 | accessdate = 2009-06-28
 }}
*{{cite paper
 |     author = Rymer, J., and T. McKeever
 |      title = The FSD Ada Style Guide
 |    version = 
 |      pages = 
 |  publisher = IBM Federal Systems Division Ada Coordinating Group
 |       date = 
 |       year = 1986
 |      month = September
 |        url = 
 |     format = 
 |         id = 
 | accessdate = 
 }}
*{{cite paper
 |     author = SofTech Inc.
 |      title = ISEC Reusability Guidelines
 |    version = 
 |      pages = 
 |  publisher = 
 |       year = 1985
 |      month = December
 |        url = 
 |     format = Report 3285-4-247/2
 |         id = 
 | accessdate = 
 }} Also U.S. Army Information Systems Engineering Command. Waltham, Massachusetts. 
*{{cite conference
 |     author = Stark M., and E. Seidewitz
 |      title = Towards A General Object-Oriented Ada Lifecycle
 | conference = Fifth National Conference on Ada Technology and Washington Ada Symposium
 |  booktitle = Proceedings of the Joint Ada Conference
 |      month = March
 |       year = 1987
 |      pages = 213&amp;ndash;222
 |        doi = 
 |         id = 
 |        url = 
 |     format = 
 }}
*{{cite book
 |     author = St. Dennis, R.
 |      title = A Guidebook for Writing Reusable Source Code in Ada
 |    edition = version 1.1
 |       date = 
 |       year = 1986
 |      month = May
 |         id = Report CSC-86-3:8213
 |  publisher = Honeywell Corporate Systems Development Division
 |   location = Golden Valley, Minnesota
 }}
*{{Ada/Cite ACM
 |     author = VanNeste, K.F.
 |      title = Ada Coding Standards and Conventions
 |       year = 1986
 |      month = January/February
 |     volume = VI
 |      issue = 1
 |      pages = 41&amp;ndash;48
 |        doi = 10.1145/382256.382796
 |        url = http://portal.acm.org/citation.cfm?id=382256.382796
 |      quote = 
 | accessdate = 2009-06-28
 }}


{{Chapter navigation||}}

[[Category:Ada Style Guide|{{SUBPAGENAME}}]]</text>
      <sha1>k2c6ojix3ozbj6jsbkfpdjqucme1ogv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:15sa1898</title>
    <ns>3</ns>
    <id>200809</id>
    <revision>
      <id>1549875</id>
      <parentid>1549771</parentid>
      <timestamp>2009-06-27T18:39:32Z</timestamp>
      <contributor>
        <username>15sa1898</username>
        <id>247265</id>
      </contributor>
      <text xml:space="preserve">==  Gholam Ali Nuri ==





Gholam ALI Nuri (غلامعلي نوري) Born june,13, 1968 ,Kermanshah ,Iran
Iranian physician &amp; scientist.
His works have been extended in many

subjects:mathematics,chemistry,physics, persian litrerature,
Quran interpretation,medical practice &amp; philosophy,... some of his attractive works are brought below for instance: 1- Expression of speed of light by abstract mathematics as following: c = 670^3-99^3-6^3-3^3 = velocity of light in vacuum = 299792458 Another equality is: square root 2 multiplied by c is an integer number i.e 423970560 =2^8×1656135 . &quot; As constant pi(3.1415926...)that can be exhibited by pure math (e.g Wallis formula) speed of the light (as an universal constant) can also be expressed by abstract mathematical series or sequential real numbers&quot; Nuri says. 2-Getting exact percentage&amp; ratio of the Earth‘s hydrosphere versus land (73.33% vs 26.66%)by means of holy Quran(ie total repetitions of the word (بحر = sea) in Quran is 33 times , and total repetitions of the word (بر = land) in Quran is 12 times.Then,33 divided by 12 results in 2.75,the same as hydrosphere/land ratio.

This article, (with new cases)  to be continued in future.</text>
      <sha1>il7ty7r9a7odw6juu1i8zghizwi35s2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Ada Style Guide</title>
    <ns>14</ns>
    <id>200810</id>
    <revision>
      <id>1549774</id>
      <timestamp>2009-06-27T16:56:01Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>[[Category:Ada programming language]]</comment>
      <text xml:space="preserve">{{center|This category contains pages that are part of the [[{{PAGENAME}}]] book.}}
{{CategoryTOC}}

[[Category:Ada programming language]]</text>
      <sha1>erp5mkr46kc4mcfqhjfrvsl0kisapti</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Summer Flowers of Northern New England/Blue and Purple Flowers</title>
    <ns>111</ns>
    <id>200811</id>
    <revision>
      <id>1549800</id>
      <timestamp>2009-06-27T17:26:38Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Created page with 'To create new pages, paste this text in and fill it in. &lt;pre&gt; {{WJ Flower |common name = |binomial = |image1 = |caption1 = |image2= |caption2= |image3 = |caption3= |description =...'</comment>
      <text xml:space="preserve">To create new pages, paste this text in and fill it in.
&lt;pre&gt;
{{WJ Flower
|common name =
|binomial =
|image1 =
|caption1 =
|image2=
|caption2=
|image3 =
|caption3=
|description =
|facts = 
}}

&lt;/pre&gt;</text>
      <sha1>is5eur0nmzzropeiw6r6vje81igmwzv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Summer Flowers of Northern New England/Solanum dulcamara</title>
    <ns>110</ns>
    <id>200812</id>
    <revision>
      <id>1876076</id>
      <parentid>1549810</parentid>
      <timestamp>2010-07-07T18:34:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Summer Flowers of Northern New England/Solanum dulcamara&quot; [Default: Stable, Precedence: Pristine]</comment>
      <text xml:space="preserve">{{WJ Flower
|common name =Bittersweet Nightshade
|binomial =Solanum dulcamara
|image1 =Solanum dulcamara ENBLA03.jpg
|caption1 =Flower
|image2=Morelle douce-amere (Solanum dulcamara) (2543000478).jpg
|caption2=Flowers, vine, leaves, and an unripe berry
|image3 =XN Solanum dulcamara 00.jpg
|caption3=Flowers and ripe berries
|description =Bittersweet Nightshade is a poisonous plant related to tomatoes and potatoes.  The flowers have five purple petals, with a yellow ''style'' coming out of the center.  The leaves and berries of this plant are poisonous to humans and cattle, but not to birds.  Birds eat the berries and spread the seeds over wide areas.  The leaves have an arrowhead shape, sometimes with a lobe near the base.  The berries start off green, but ripen to a bright red.  

Bittersweet Nightshade can climb to a height of 13 feet, but six feet is more common.
|facts = The poison in Bittersweet is called ''solanine'' and is named after this plant's genus ''Solanum''.  Note that the leaves of tomatoes and potatoes (which are in the same genus) are poisonous too!
}}</text>
      <sha1>fwgj7lrdtgcijnd4jw2w5yi1c62dnax</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userbox design templates</title>
    <ns>14</ns>
    <id>200813</id>
    <revision>
      <id>1549849</id>
      <timestamp>2009-06-27T18:17:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">These templates allow for the creation of new userboxes through their transclusion on a userbox's template page. See [[Wikibooks:Userboxes]] for details.

[[Category:Userboxes| {{PAGENAME}}]]</text>
      <sha1>stfvsoy0357671ud8i4h6lwdyqyectv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userbox layout templates</title>
    <ns>14</ns>
    <id>200814</id>
    <revision>
      <id>1549857</id>
      <timestamp>2009-06-27T18:21:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">These templates assist in the positioning or display of userboxes on your user page.

[[Category:Userboxes| {{PAGENAME}}]]</text>
      <sha1>74qoihl9ddrmvofjtu8jdeqo7cwfz5u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Computer-related user templates</title>
    <ns>14</ns>
    <id>200815</id>
    <revision>
      <id>1549862</id>
      <timestamp>2009-06-27T18:27:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Website user templates</title>
    <ns>14</ns>
    <id>200816</id>
    <revision>
      <id>1549866</id>
      <timestamp>2009-06-27T18:33:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Computer-related user templates]]</text>
      <sha1>a1zqpjzgsg9aipzacdgpfiyeysymz0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Launchballer</title>
    <ns>3</ns>
    <id>200818</id>
    <revision>
      <id>1607492</id>
      <parentid>1607380</parentid>
      <timestamp>2009-08-15T07:58:36Z</timestamp>
      <contributor>
        <username>Launchballer</username>
        <id>247791</id>
      </contributor>
      <comment>/* How to use a Bullworker */ +comment</comment>
      <text xml:space="preserve">Welcome, Launchballer!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally.

==[[How to use a Bullworker]]==
{{mbox|type=warning|msg='''Wikibooks cannot accept [[Wikibooks:Copyrights|copyrighted]] materials.'''&lt;br/&gt;We [[Wikibooks:Welcome, newcomers|welcome]] and appreciate your contributions. If [[:How to use a Bullworker]] uses an acceptable copyleft license or the copyright holder(s) are willing to give [[Wikibooks:Boilerplate_request_for_permission|permission]] to use it under an acceptable copyleft license, then you need to include the licensing information with it. Please read [[Wikibooks:Media]] to learn more about the requirements. After 7 days if this is not addressed appropriately we will have to delete it [[WB:COPYVIO|per policy]]. If you have any questions you can ask me personally or ask in the [[WB:HELP|reading room]]. Thank you; Happy editing! }}
:Please provide elaboration on the claim of public domain? [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 18:44, 3 August 2009 (UTC)
::It is ineligible.--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 18:45, 3 August 2009 (UTC)
:::On page 1 of the manual you uploaded there is a copyright 1980 statement. How is it ineligible? [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 19:03, 3 August 2009 (UTC)
::::Where?--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 08:24, 4 August 2009 (UTC)
:::::[http://en.wikibooks.org/wiki/File:Bullworker_(chapter_one,_page_three).png Here] [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 18:46, 4 August 2009 (UTC)
::::::That copyright is for the product itself, not the instruction manual.--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 05:51, 5 August 2009 (UTC)
:::::::Copyright is only applicable to works, like books. The Bullworker itself would be under patent. I am inclined to believe that the manual is copyright because it has a copyright statement, was created within the last 70 years, and all material is automatically copyrighted when created in the US. [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 16:05, 5 August 2009 (UTC)
::::::::You've got the wrong end of the stick. The manual may have a copyright statement, but that is for the bullworker. &lt;span class=explain title=&quot;® BULLWORKER is a Registered Trademark.&quot;&gt;Quote.&lt;/span&gt;--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 18:50, 5 August 2009 (UTC)
:::::::::Why would the copyright statement for a book be in a manual? [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 19:53, 7 August 2009 (UTC)
::::::::::Because the book ''is'' the manual.--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 21:44, 7 August 2009 (UTC)
:::::::::::Then the manual is copyrighted. [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 01:25, 8 August 2009 (UTC)
::::::::::::Sorry, I've made a mistake, which I've corrected. &lt;span class=&quot;explain&quot; title=&quot;It's alright saving your own pisterior part, but not saving your own? Suicide.&quot;&gt;The Bullworker's copyright is in the manual, but the manual does not specify a copyright for itself.&lt;/span&gt;--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 08:35, 8 August 2009 (UTC)
:::::::::::::As I explained before, you cannot copyright a invention, only a book. The copyright cannot apply to the Bullworker. [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 03:35, 9 August 2009 (UTC)
::::::::::::::That's foolish. Suppose I decided to erect a similar thing to a Bullworker, put it on the market, got sued for copyright. Gfb would not be able to sue me if the bullworker was not under copyright.--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 09:55, 9 August 2009 (UTC)
:::::::::::::::The Bullworker is protected under patent and trademark protections. Copyright is a separate category of intellectual property reserved for written, audio, or visual works, i.e. a manual. [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 15:44, 10 August 2009 (UTC)
::::::::::::::::Why? Did someone have disambiguation, pedanticy and the want to make people's lives Hell by making things preposterously perplexing?--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 21:00, 10 August 2009 (UTC)
:::::::::::::::::That is the way I.P. laws are written. If you don't like it, give your M.C./M.P. a ring and start petitioning to unify the laws. [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 21:37, 10 August 2009 (UTC)
::::::::::::::::::What on earth is an IP law?--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 13:13, 11 August 2009 (UTC)
:::::::::::::::::::Intellectual Property law [[User:Geoff Plourde|Geoff Plourde]] ([[User talk:Geoff Plourde|talk]]) 19:24, 14 August 2009 (UTC)
::::::::::::::::::::Care to elaborate on how housing relates to copyright?--[[User:Launchballer|Launchballer]] ([[User talk:Launchballer|talk]]) 07:58, 15 August 2009 (UTC)

==Recently uploaded images==
 
Thanks for uploading images on Wikibooks. However, the images may soon be deleted unless we can determine the copyright holder and copyright status. The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about the images included in Wikibooks because of [[w:Copyright|copyright law]] (see Wikibooks' [[Wikibooks:Copyright|Copyright policy]]).

The copyright holder is usually the creator, the creator's employer, or the last person who was transferred ownership rights. Copyright information on images is signified using copyright templates. The three basic license types on Wikibooks are [[w:open content|open content]], [[w:public domain|public domain]], and [[w:fair use|fair use]]. Find the appropriate template in [[Wikibooks:Image copyright tags]] and place it on the image page like this: &lt;code&gt;{&amp;#123;TemplateName}}&lt;/code&gt;.

Please signify the copyright information on [http://en.wikibooks.org/w/index.php?title=Special%3ALog&amp;type=upload&amp;user={{urlencode:{{PAGENAME}}}} all images you have uploaded] or will upload. Remember that images without this important information or giving false information can be deleted by an administrator. If you have any questions, ask them in the [[Wikibooks:Reading room|Reading room]]. Thank you.</text>
      <sha1>q5d4pci5v56i80aebslgdq0uq7w719g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Browser user templates</title>
    <ns>14</ns>
    <id>200819</id>
    <revision>
      <id>1549881</id>
      <timestamp>2009-06-27T18:45:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Software user templates]]</text>
      <sha1>8jvsd19xmjouvpwsnbju6ak3syda206</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Software user templates</title>
    <ns>14</ns>
    <id>200820</id>
    <revision>
      <id>1549882</id>
      <timestamp>2009-06-27T18:46:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Graphics software user templates</title>
    <ns>14</ns>
    <id>200822</id>
    <revision>
      <id>1549904</id>
      <timestamp>2009-06-27T18:59:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Software user templates]]</text>
      <sha1>8jvsd19xmjouvpwsnbju6ak3syda206</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Music software user templates</title>
    <ns>14</ns>
    <id>200824</id>
    <revision>
      <id>1549911</id>
      <timestamp>2009-06-27T19:08:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Software user templates]]</text>
      <sha1>8jvsd19xmjouvpwsnbju6ak3syda206</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Operating system user templates</title>
    <ns>14</ns>
    <id>200825</id>
    <revision>
      <id>1549913</id>
      <timestamp>2009-06-27T19:09:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Software user templates]]</text>
      <sha1>8jvsd19xmjouvpwsnbju6ak3syda206</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Ada Style Guide/Print version</title>
    <ns>0</ns>
    <id>200826</id>
    <revision>
      <id>2371794</id>
      <parentid>1549934</parentid>
      <timestamp>2012-07-01T17:11:52Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>Added new chapter 5: Programming Practices</comment>
      <text xml:space="preserve">{{Print version notice|Ada Style Guide}}

&lt;noinclude&gt;
----
[[File:Ada Lovelace 1838.jpg|right|caption|thumbnail|270px|[[w:Ada Lovelace|Augusta Ada King]], Countess of Lovelace.]]

{{TOC|limit=4|float=none}}&lt;/noinclude&gt;

{{:Ada Style Guide}}
= Introduction =
{{:Ada Style Guide/Introduction}}
= Source Code Presentation =
{{:Ada Style Guide/Source Code Presentation}}
= Readability =
{{:Ada Style Guide/Readability|}}
= Program Structure =
{{:Ada Style Guide/Program Structure}}
= Programming Practices =
{{:Ada Style Guide/Programming Practices}}
= Concurrency =
{{:Ada Style Guide/Concurrency}}
= Portability =
{{:Ada Style Guide/Portability}}
= Reusability =
{{:Ada Style Guide/Reusability}}
= Object-Oriented Features =
{{:Ada Style Guide/Object-Oriented Features}}
= Improving Performance =
{{:Ada Style Guide/Improving Performance}}
= Portable Dining Philosophers Example =
{{:Ada Style Guide/Portable Dining Philosophers Example}}
= References =
{{:Ada Style Guide/References}}
= Bibliography =
{{:Ada Style Guide/Bibliography}}
= GNU Free Documentation License =
{{:GNU Free Documentation License}}

&lt;noinclude&gt;
[[Category:Ada Style Guide|{{SUBPAGENAME}}]]
[[Category:Ada Style Guide/Print version|{{SUBPAGENAME}}]]
&lt;/noinclude&gt;</text>
      <sha1>80cnjb9btuidk9bjpw6lrt8a2ydinoa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Bsod</title>
    <ns>10</ns>
    <id>200827</id>
    <redirect title="Template:User bsod" />
    <revision>
      <id>1549927</id>
      <timestamp>2009-06-27T19:16:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Bsod]] to [[Template:User bsod]]: Consistency with other userboxes</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User bsod]]</text>
      <sha1>0k01qqs95keioudc07j2ibj9nafiab6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Ada Style Guide/Print version</title>
    <ns>14</ns>
    <id>200828</id>
    <revision>
      <id>1993027</id>
      <parentid>1549932</parentid>
      <timestamp>2010-12-07T15:14:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">[[Help:Print versions|Printable version]] of [[Ada Style Guide]].


[[Category:Ada Style Guide]]</text>
      <sha1>9lwwrbbtjoq4f1h32pdpxgzfu4t25b8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Food user templates</title>
    <ns>14</ns>
    <id>200829</id>
    <revision>
      <id>1549946</id>
      <timestamp>2009-06-27T19:29:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Food</title>
    <ns>4</ns>
    <id>200830</id>
    <revision>
      <id>1555921</id>
      <parentid>1551973</parentid>
      <timestamp>2009-07-02T15:10:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">==Eating==
===Eating ethics===


===Eating habits===


==Foods==
{{usbktop}}
{{usbk|User fries}}
{{usbk|User pancakes}}
{{usbk|User pizza}}
{{usbk|User spaghetti}}
{{usbkbottom}}

===Fruits===


===Grains===


===Meat &amp; Eggs===


===Sweets===
{{usbktop}}
{{usbk|User brownie}}
{{usbkbottom}}

===Vegetables===


==Restaurants==


==International cuisines==

{{BookCat}}</text>
      <sha1>mg9k89u0t60hrysl29nv3spn3dch8wn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Music user templates</title>
    <ns>14</ns>
    <id>200831</id>
    <revision>
      <id>1549952</id>
      <timestamp>2009-06-27T19:37:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Music</title>
    <ns>4</ns>
    <id>200832</id>
    <revision>
      <id>1664516</id>
      <parentid>1560018</parentid>
      <timestamp>2009-11-24T17:26:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">==Genres==
{{usbktop}}
{{usbk|User heavy metal}}
{{usbk|User hip hop}}
{{usbk|User punk}}
{{usbk|User rock}}
{{usbkbottom}}

==Instruments==
{{usbktop}}
{{usbk|User guitar}}
{{usbkbottom}}

==Other==
{{usbktop}}
{{usbk|User audiobooks}}
{{usbkbottom}}
{{BookCat}}</text>
      <sha1>iy9u7ep9xdim52fnxwz1evrs4ynv5r5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Location</title>
    <ns>4</ns>
    <id>200833</id>
    <revision>
      <id>1551966</id>
      <parentid>1549970</parentid>
      <timestamp>2009-06-29T22:50:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">*[[/Africa/]]
*[[/Asia/]]
*[[/Europe/]]
*[[/North America/]]
*[[/Oceania/]]
*[[/South America/]]

{{BookCat}}</text>
      <sha1>6xdti6pzvn8zxt64rb5kvgs96y63qvp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:United States user templates</title>
    <ns>14</ns>
    <id>200834</id>
    <revision>
      <id>2014038</id>
      <parentid>1549956</parentid>
      <timestamp>2011-01-07T21:44:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>{{template category|type=userbox}}</comment>
      <text xml:space="preserve">{{template category|type=userbox}}

[[Category:North American user templates]]</text>
      <sha1>p8nzl8jmudpvfph6b6m0s7k80qhz3d3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:North American user templates</title>
    <ns>14</ns>
    <id>200835</id>
    <revision>
      <id>2014046</id>
      <parentid>2014037</parentid>
      <timestamp>2011-01-07T21:52:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topic</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/North America]]}}

[[Category:Location user templates]]</text>
      <sha1>ai1x1ro5lxqkeqrg41bxj4jqv9jh8c3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Location/North America</title>
    <ns>4</ns>
    <id>200836</id>
    <revision>
      <id>1560242</id>
      <parentid>1555942</parentid>
      <timestamp>2009-07-05T01:42:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Moving to subpages.</comment>
      <text xml:space="preserve">:[[/Canada/]]
:[[/Mexico/]]
:[[/United States/]]

{{BookCat}}</text>
      <sha1>oveuj1iq887mpwq119qmdm0a4euorpr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Iniquity/Collections/123</title>
    <ns>2</ns>
    <id>200837</id>
    <revision>
      <id>1549962</id>
      <timestamp>2009-06-27T19:51:47Z</timestamp>
      <contributor>
        <username>Iniquity</username>
        <id>135482</id>
      </contributor>
      <comment>Created page with '{{saved_book}}  :[[Geometry for elementary school/Constructing equilateral triangle]]  [[Category:Collections|123]]'</comment>
      <text xml:space="preserve">{{saved_book}}

:[[Geometry for elementary school/Constructing equilateral triangle]]

[[Category:Collections|123]]</text>
      <sha1>fwj3mpp42rtk3f3ge4eo0u7fizlslje</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Oceanic user templates</title>
    <ns>14</ns>
    <id>200838</id>
    <revision>
      <id>2014047</id>
      <parentid>2014039</parentid>
      <timestamp>2011-01-07T21:52:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topic</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/Oceania]]}}

[[Category:Location user templates]]</text>
      <sha1>1miw97yi78zy6fw04ctf2p2yak8mal9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Location/Oceania</title>
    <ns>4</ns>
    <id>200839</id>
    <revision>
      <id>1560286</id>
      <parentid>1555943</parentid>
      <timestamp>2009-07-05T02:01:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Added template.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User Australia}}
{{usbk|User New Zealand}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>5sm50mvuezc5n4yelulv1vuyp7u7dbp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:South American user templates</title>
    <ns>14</ns>
    <id>200840</id>
    <revision>
      <id>2014048</id>
      <parentid>2014034</parentid>
      <timestamp>2011-01-07T21:53:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topic</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/South America]]}}

[[Category:Location user templates]]</text>
      <sha1>d3o63nued726neh8s170r85yf4p8fzm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:European user templates</title>
    <ns>14</ns>
    <id>200841</id>
    <revision>
      <id>2014045</id>
      <parentid>2014036</parentid>
      <timestamp>2011-01-07T21:51:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topic</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/Europe]]}}

[[Category:Location user templates]]</text>
      <sha1>kgpc44uurw4mks9t3fb5y5t7s35zcy4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Asian user templates</title>
    <ns>14</ns>
    <id>200842</id>
    <revision>
      <id>2014044</id>
      <parentid>2014035</parentid>
      <timestamp>2011-01-07T21:51:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topic</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/Asia]]}}

[[Category:Location user templates]]</text>
      <sha1>m5593afbt184tasu0jmuzjiiws8cph2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:African user templates</title>
    <ns>14</ns>
    <id>200843</id>
    <revision>
      <id>2014043</id>
      <parentid>2014042</parentid>
      <timestamp>2011-01-07T21:51:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>forgot parameter</comment>
      <text xml:space="preserve">{{template category|type=userbox|topic=[[Wikibooks:Userboxes/Location/Africa]]}}

[[Category:Location user templates]]</text>
      <sha1>q78zv2i80c6wjxpvqcxmw8ya634lta9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Science user templates</title>
    <ns>14</ns>
    <id>200844</id>
    <revision>
      <id>1549973</id>
      <timestamp>2009-06-27T20:04:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Userbox category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Science</title>
    <ns>4</ns>
    <id>200845</id>
    <revision>
      <id>1560014</id>
      <parentid>1555938</parentid>
      <timestamp>2009-07-04T22:57:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added mathematics templates.</comment>
      <text xml:space="preserve">==General==


==Astronomy==


==Biology==


==Chemistry==


==Earth sciences==


==Engineering==
{{usbktop}}
{{usbk|User engineering}}
{{usbkbottom}}

==Health sciences==


==Mathematics==
{{usbktop}}
{{usbk|User mathematics}}
{{usbk|User metric}}
{{usbkbottom}}

==Physics==
{{usbktop}}
{{usbk|User physics}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>s6o77hnhc8y94hddn86cpjc51zmdac8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User hobby:Electronics</title>
    <ns>10</ns>
    <id>200846</id>
    <redirect title="Template:User electronics" />
    <revision>
      <id>1549979</id>
      <timestamp>2009-06-27T20:07:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User hobby:Electronics]] to [[Template:User electronics]]: Simplification</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User electronics]]</text>
      <sha1>qdbtb73q0h67yu7mbwiqfg78bkiwqag</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Hobby user templates</title>
    <ns>14</ns>
    <id>200847</id>
    <revision>
      <id>1549981</id>
      <timestamp>2009-06-27T20:08:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Userbox category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Hobbies</title>
    <ns>4</ns>
    <id>200848</id>
    <revision>
      <id>1664525</id>
      <parentid>1555928</parentid>
      <timestamp>2009-11-24T17:32:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User diy}}
{{usbk|User electronics}}
{{usbk|User newspaper}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>h0isjsv02lu408pxzhpl8b29c79r3dp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Buffalo Wings</title>
    <ns>102</ns>
    <id>200854</id>
    <revision>
      <id>2433736</id>
      <parentid>1697959</parentid>
      <timestamp>2012-11-04T19:45:08Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <minor />
      <comment>added cooking temperature in celcius</comment>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 48 chicken wingettes
* [[Cookbook:Poultry Shake|Poultry Shake]], as needed
* 1/2 cup unsalted butter, melted
* 1/2 cup [[Cookbook:Smoky Chipotle Hot Sauce|Smoky Chipotle Hot Sauce]] 
* 1/4 cup tomato paste
* 1 tbsp soy sauce
* Oil for deep frying

== Procedure ==
#Sprinkle chicken with Shake. Fry at 350°F / 180°C for 11 minutes. Drain on a cooling rack.
#Meanwhile, combine remaining ingredients. Add wings and toss to coat and serve.

[[Category:Chicken recipes]]</text>
      <sha1>etpvn50hq05d8fdv54afttydmnrqxla</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cayenne Hot Sauce</title>
    <ns>102</ns>
    <id>200855</id>
    <revision>
      <id>1700473</id>
      <parentid>1550033</parentid>
      <timestamp>2010-01-19T14:51:00Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <text xml:space="preserve">{{recipe}}

This sauce tastes very much like Tabasco and other vinegar-based cayenne hot sauces.

== Ingredients ==
*3/4 cup malt vinegar
*1/4 cup cayenne pepper
*1 tbsp salt

== Procedure ==
#Combine all ingredients. Store at room temperature in a squirt bottle for, well, forever.

[[Category:Sauce recipes]]</text>
      <sha1>11l3aezv50gyzxl3plgjcewi1px4f7s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User c++</title>
    <ns>14</ns>
    <id>200857</id>
    <revision>
      <id>1551336</id>
      <parentid>1550454</parentid>
      <timestamp>2009-06-29T05:12:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed template</comment>
      <text xml:space="preserve">{{Usersprogram|c++}}</text>
      <sha1>mcf3vf17kuo99ppmpsumg7i6br762sq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cpp</title>
    <ns>10</ns>
    <id>200862</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551304</id>
      <parentid>1550043</parentid>
      <timestamp>2009-06-29T04:33:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:How to Make a Great Burger</title>
    <ns>102</ns>
    <id>200863</id>
    <revision>
      <id>1735804</id>
      <parentid>1550073</parentid>
      <timestamp>2010-03-14T16:59:20Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}}

== Introduction ==

Some people make &quot;meatloaf&quot; burgers. They put all these seasonings, eggs, and breadcrumbs inside. I want it to taste like a burger, not a grilled meatloaf! In this article, I put some tips on how to cook great burgers that make everyone happy.

== Cuts ==

I know fat's not healthy, and we don't like it, but I'll tell you a secret. All the fitness freaks, get out first. Okay, are they gone? So, you may not like the fat, but that's where all the flavor is. How about we make a compromise? 80/20 ground chuck, I'll say, alright? Good.

== Seasoning ==

I actually like to sprinkle the seasonings on the patties once they're formed. That helps make a nice crust. I like to keep it simple. Kosher salt, black pepper, maybe steak rub or cayenne. No garlic, no onion, no meatloaf business.

== Forming ==

Making patties is probably the hardest part of burger making. Too much pressure and you get a tough, dry burger. To counteract this, I like to pass the meat between my hands. Also, you'll want to make a depression in the center because when you cook it, the center swells and if you didn't put a depression, you'd end up with a UFO burger! Hah hah.

== Cooking ==

Of course, you can always grill your burger, but you can also cook it by frying, broiling, smoking, baking, and sautéing.

== Cheese ==

To me, burger means cheese on top. My standard is pepper jack since I like spicy food, but that's just me. You can use anything you like. Also, putting some cheese in the center of the burger is worth a try. If you want it nice and melted, place the slice on top and cover for one minute.

== Fixings ==

To me, lettuce, pickles, and onions are a salad. We're having hamburgers. You can always dress it with ketchup, mustard, and mayo. I actually like to flavor my condiment. Chipotles work great mixed into ketchup or mayo. Mayo also helps to keep your bread soggy by being sort of a fat barrier blocking the meat juices.

Bye! Hopefully you'll stop grilling meatloaf and start grilling burgers! 

[[Category:Beef recipes]]</text>
      <sha1>69cdpgn589ocz9v00tjfhqm16lrwu2y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Collections/Ada Programming</title>
    <ns>4</ns>
    <id>200864</id>
    <revision>
      <id>2064072</id>
      <parentid>2052754</parentid>
      <timestamp>2011-03-04T19:14:33Z</timestamp>
      <contributor>
        <username>ManuelGR</username>
        <id>3056</id>
      </contributor>
      <comment>Template options</comment>
      <text xml:space="preserve">{{saved_book|cover_image=Ada_Lovelace.jpg|cover-color=Black|text-color=White|title=Ada Programming|subtitle=The wikibook}}

== Ada Programming ==

:[[Wikibooks:Collections Preface]]

; Preface
:[[Ada Programming]]
; Getting Started
:[[Ada Programming/Basic|Basic]]
:[[Ada Programming/Installing|Installing]]
:[[Ada Programming/Building|Building]]
; Control Statements
:[[Ada Programming/Control|Control]]
; Type System
:[[Ada Programming/Type System|Type System]]
:[[Ada Programming/Types/range|Integer types]]
:[[Ada Programming/Types/mod|Unsigned integer types]]
:[[Ada Programming/Types/Enumeration|Enumerations]]
:[[Ada Programming/Types/digits|Floating point types]]
:[[Ada Programming/Types/delta|Fixed point types]]
:[[Ada Programming/Types/array|Arrays]]
:[[Ada Programming/Types/record|Recods]]
:[[Ada Programming/Types/access|Access types]]
:[[Ada Programming/Types/limited|Limited types]]
:[[Ada Programming/Strings|Strings]]
; Subprograms
:[[Ada Programming/Subprograms|Subprograms]]
; Packages
:[[Ada Programming/Packages|Packages]]
; Input Output
:[[Ada Programming/Input Output|Input Output]]
; Exceptions
:[[Ada Programming/Exceptions|Exceptions]]
; Generics
:[[Ada Programming/Generics|Generics]]
; Tasking
:[[Ada Programming/Tasking|Tasking]]
; Object Orientation
:[[Ada Programming/Object Orientation|Object Orientation]]
; Ada Versions
:[[Ada Programming/Ada 80|Ada 80 (preliminary version)]]
:[[Ada Programming/Ada 83|Ada 83]]
:[[Ada Programming/Ada 95|Ada 95]]
:[[Ada Programming/Ada 2005|Ada 2005]]
:[[Ada Programming/Containers|Containers]]
; Interfacing
:[[Ada Programming/Interfacing|Interfacing]]
; Coding Standards
:[[Ada Programming/Coding standards|Coding standards]]
; Tips
:[[Ada Programming/Tips|Tips]]
; Common Errors
:[[Ada Programming/Errors|Common Errors]]
; Algorithms
:[[Ada Programming/Algorithms|Algorithms]]
; Function overloading
:[[Ada Programming/Function overloading|Function overloading]]
; Mathematical calculations
:[[Ada Programming/Mathematical calculations|Mathematical calculations]]
; Statements
:[[Ada Programming/Statements|Statements]]
; Variables
:[[Ada Programming/Variables|Variables]]
; Lexical elements
:[[Ada Programming/Lexical elements|Lexical elements]]
:[[Ada Programming/Keywords|Keywords]]
:[[Ada Programming/Delimiters|Delimiters]]
; Operators
:[[Ada Programming/Operators|Operators]]
; Attributes
:[[Ada Programming/Attributes|Attributes]]
; Pragmas
:[[Ada Programming/Pragmas|Pragmas]]
; Libraries
:[[Ada Programming/Libraries|Libraries]]
:[[Ada Programming/Libraries/Standard|Standard]]
:[[Ada Programming/Libraries/Ada|Ada]]
:[[Ada Programming/Libraries/Interfaces|Interfaces]]
:[[Ada Programming/Libraries/System|System]]
:[[Ada Programming/Libraries/GNAT|GNAT]]
:[[Ada Programming/Libraries/MultiPurpose|Multipurpose]]
:[[Ada Programming/Libraries/Container|Container]]
:[[Ada Programming/Libraries/GUI|GUI]]
:[[Ada Programming/Libraries/Distributed|Distributed Systems]]
:[[Ada Programming/Libraries/Database|Database]]
:[[Ada Programming/Libraries/Web|Web]]
:[[Ada Programming/Libraries/IO|Input/Output]]
; Platform Support
:[[Ada Programming/Platform|Platform Support]]
:[[Ada Programming/Platform/Linux|Linux]]
:[[Ada Programming/Platform/Windows|Windows]]
:[[Ada Programming/Platform/VM|Virtual Machines]]
; External resources
:[[Ada Programming/Portals|Portals]]
:[[Ada Programming/Tutorials|Tutorials]]
:[[Ada Programming/Web 2.0|Web 2.0]]

[[Category:Collections]]</text>
      <sha1>7p0si4z3aiunn5szkeqlmponj9rfk40</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User c-4</title>
    <ns>10</ns>
    <id>200871</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551306</id>
      <parentid>1550875</parentid>
      <timestamp>2009-06-29T04:34:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>#REDIRECT[[Template:Programming language]] - unified template</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Hittu2k</title>
    <ns>3</ns>
    <id>200874</id>
    <revision>
      <id>1550113</id>
      <timestamp>2009-06-27T21:47:51Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>Created page with '{{subst:welcome}} --~~~~  {{subst:nothanks|Data Coding Theory/Huffman Coding|~~~~}}'</comment>
      <text xml:space="preserve">Welcome, Hittu2k!
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px; color: #000000;&quot;
 ! style=&quot;background:#d0e5f5; color: #000000;&quot; | [[Wikibooks:Welcome|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on discussion pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* Learn how to [[Using Wikibooks|use Wikibooks]] and learn more about the community.
* [[WB:CCO|Explore]], [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself in the [[Wikibooks:Reading room/General|general reading room]] or your project in the [[Wikibooks:Reading room/Projects|project reading room]].  If you have any questions, you can ask in the [[Wikibooks:Reading room/Assistance|assistance reading room]] or contact me personally. --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 21:47, 27 June 2009 (UTC)

{{mbox|type=warning|msg='''Wikibooks cannot accept [[Wikibooks:Copyrights|copyrighted]] materials.'''&lt;br/&gt;We [[Wikibooks:Welcome, newcomers|welcome]] and appreciate your contributions. If [[:Data Coding Theory/Huffman Coding]] uses an acceptable copyleft license or the copyright holder(s) are willing to give [[Wikibooks:Boilerplate_request_for_permission|permission]] to use it under an acceptable copyleft license, then you need to include the licensing information with it. Please read [[Wikibooks:Media]] to learn more about the requirements. After 7 days if this is not addressed appropriately we will have to delete it [[WB:COPYVIO|per policy]]. If you have any questions you can ask me personally or ask in the [[WB:HELP|reading room]]. Thank you; Happy editing! [[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 21:47, 27 June 2009 (UTC)}}</text>
      <sha1>0yi53c8hi3lla98qeitananrgd80yvq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cpp-1</title>
    <ns>10</ns>
    <id>200882</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551302</id>
      <parentid>1550140</parentid>
      <timestamp>2009-06-29T04:32:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cpp-2</title>
    <ns>10</ns>
    <id>200883</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551300</id>
      <parentid>1550143</parentid>
      <timestamp>2009-06-29T04:31:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cpp-3</title>
    <ns>10</ns>
    <id>200884</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551299</id>
      <parentid>1550148</parentid>
      <timestamp>2009-06-29T04:31:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cpp-4</title>
    <ns>10</ns>
    <id>200885</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551298</id>
      <parentid>1550151</parentid>
      <timestamp>2009-06-29T04:31:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User vbclassic-4</title>
    <ns>10</ns>
    <id>200889</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551248</id>
      <parentid>1550173</parentid>
      <timestamp>2009-06-29T03:17:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Tommoore/monobook.css</title>
    <ns>2</ns>
    <id>200901</id>
    <revision>
      <id>1550211</id>
      <parentid>1550210</parentid>
      <timestamp>2009-06-27T23:56:12Z</timestamp>
      <contributor>
        <username>Tommoore</username>
        <id>248084</id>
      </contributor>
      <text xml:space="preserve">pre {padding:0; border: none; margin:0; line-height: 1.5em; }
.code .input ol {list-style: none; font-size: 1.2em; margin-left: 0;}
.code .input ol li div:before {content: &quot;\003E \0020&quot;;}
table.subfigures div.thumbinner, table.subfigures tr td, table.subfigures {border: 0;}</text>
      <sha1>mhzd3q6x9s0mc6bvq16qpih8dvsebje</sha1>
      <model>css</model>
      <format>text/css</format>
    </revision>
  </page>
  <page>
    <title>Template:User bas-1</title>
    <ns>10</ns>
    <id>200902</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551311</id>
      <parentid>1550198</parentid>
      <timestamp>2009-06-29T04:37:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User basic-1</title>
    <ns>10</ns>
    <id>200904</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1571076</id>
      <parentid>1550197</parentid>
      <timestamp>2009-07-17T01:56:31Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Programming language]]</text>
      <sha1>3a7k69if7uo1gnuyu88rt9k5qyuhgdp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Carbon Programming</title>
    <ns>0</ns>
    <id>200910</id>
    <revision>
      <id>1912994</id>
      <parentid>1858185</parentid>
      <timestamp>2010-08-17T13:21:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>status=0%</comment>
      <text xml:space="preserve">Carbon is one of the application programming interfaces (APIs) for the Macintosh operating system, providing C programming language access to Macintosh system services. Carbon is one of four APIs that may be accessed from a Mac OS X program; the others are Cocoa, POSIX (including X Window), and Java. These APIs have some overlapping and some exclusive capabilities; as the functionality of Mac OS X changes they have not been kept in sync. Carbon provides a good degree of backward compatibility for programs to run on the now-obsolete Mac OS 8 and 9, but support for those systems has not been updated since 2001. &quot;Carbon&quot; has since become an umbrella term for C-language access to Macintosh-specific services, regardless of backward compatibility.

The transition to 64-bit Macintosh applications beginning with Mac OS X v10.5 has brought the first major limitations to Carbon. Apple does not provide compatibility between the Macintosh graphical user interface and the C programming language in the 64-bit environment, instead requiring the use of the Objective-C dialect with the Cocoa API. Although Apple has always claimed that Objective-C is easy to learn, the required transition has slowed development of large Carbon-based applications such Adobe Photoshop.

== Table of Contents ==

*[[/Getting started/]]
*[[/Handling events/]]
*[[/Window management/]]
*[[/User input/]]
*[[/Graphics/]]
*[[/Audio/]]

{{Subjects|Computer programming libraries}}
{{Alphabetical|C}}
{{status|0%}}</text>
      <sha1>mi0uxig4zuy7vh4vyw2lj05dlvtnrb0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Weeman5872</title>
    <ns>2</ns>
    <id>200921</id>
    <revision>
      <id>1550242</id>
      <timestamp>2009-06-28T00:51:21Z</timestamp>
      <contributor>
        <username>Weeman5872</username>
        <id>248102</id>
      </contributor>
      <comment>Created page with 'Lol'</comment>
      <text xml:space="preserve">Lol</text>
      <sha1>jkw6gbl58i86cacbyd9uzylwdm71sah</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools</title>
    <ns>0</ns>
    <id>200926</id>
    <revision>
      <id>2359923</id>
      <parentid>1943768</parentid>
      <timestamp>2012-06-05T22:32:07Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <minor />
      <comment>Linkfix ([[File:Young children w laptops.jpg]] → [[File:A class with One-Laptop-Per-Child laptops cropped.jpg]]) file moved to commons</comment>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
[[Image:A class with One-Laptop-Per-Child laptops cropped.jpg|right|thumb|302px|Young Children with XOs.]]

Schools, school districts, states and nations across the world are trying systems to provide a laptop for each student in a classroom. Some &quot;one-to-one&quot; laptop programs have been under way for over a decade; many are just starting out. To inform educators and stakeholders about the variety of ways one-to-one programs are designed and implemented, the Wikibook provides case studies on programs around the globe. Some use inexpensive Linux computers, others Apple Macintosh, and others Windows. Some begin in the elementary grades, others in high school, and yet others in middle school. The differences in goals and implementation among the programs provides a range of options to those considering a one-to-one implementation.

Some of the case studies have been compiled from published information, and many have been augmented with personal interviews with key implementation staff. This Wikibook starts with a focus on implementation issues: what in each case went as planned, and what unexpected issues had to be overcome. The intent of the Wikibook is to compile case studies of best practices and of issues to anticipate to help new initiatives learn from the pioneers.

== Table of Contents ==
[[Image:Olpc2_cambodia.JPG|right|thumb|600px|Cambodian School, 2001]]
# {{stage short|100%|July 5, 2009}} Contents
# {{stage short|100%|July 5, 2009}} [[/Australia/]]
# {{stage short|100%|July 5, 2009}} [[/Birmingham/|Birmingham, AL]]
# {{stage short|100%|July 5, 2009}} [[/Ethiopia/]]
# {{stage short|100%|July 5, 2009}} [[/Henrico/|Henrico County, VA]]
# {{stage short|100%|July 5, 2009}} [[/Bombay, India/|Bombay, India]]
# {{stage short|100%|July 5, 2009}} [[/Maine/]]
# {{stage short|100%|July 5, 2009}} [[/NYC/|New York City]]
# {{stage short|100%|July 5, 2009}} [[/Portugal/]]
# {{stage short|100%|July 5, 2009}} [[/San Diego/|San Diego, CA]]
# {{stage short|100%|July 5, 2009}} [[/South Carolina/]]
# {{stage short|100%|July 5, 2009}} [[/Texas/]]

{{alphabetical|O}}
{{Subjects|Educational technology}}
{{status|100%}}</text>
      <sha1>f5jei64z5p566dmdp3kpgji19wa9nay</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:One-to-One Laptop Schools/Contents</title>
    <ns>10</ns>
    <id>200927</id>
    <revision>
      <id>1768292</id>
      <parentid>1646170</parentid>
      <timestamp>2010-04-22T03:14:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>updating template link</comment>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot;&gt;
{| width=&quot;100%&quot; cellspacing=&quot;0&quot; class=&quot;top&quot; align=&quot;center&quot;
|style=&quot;background-color: #efffef; border: 1px solid #bafaba; padding: 0px; font-size: small; text-align: center;&quot; valign=top|
&lt;font size=&quot;+1&quot;&gt;[[One-to-One Laptop Schools]]&lt;/font&gt;
----
{{navbar|One-to-One Laptop Schools/Contents|nodiv=1}}

[[One-to-One Laptop Schools|Contents]]  ··  
[[One-to-One Laptop Schools/Australia|Australia]]  ··  
[[One-to-One Laptop Schools/Australia-iPod|Australia-iPod]] ··  
[[One-to-One Laptop Schools/Birmingham|Birmingham, AL]]  ··  
[[One-to-One Laptop Schools/Ethiopia|Ethiopia]]  ··  
[[One-to-One Laptop Schools/Henrico|Henrico County, VA]]  ··  
[[One-to-One Laptop Schools/Bombay, India|Bombay, India]]  ··  
[[One-to-One Laptop Schools/Maine|Maine]]  ··  
[[One-to-One Laptop Schools/NYC|New York City]]  ··  
[[One-to-One Laptop Schools/Portugal|Portugal]]  ··  
[[One-to-One Laptop Schools/San Diego|San Diego, CA]]  ··  
[[One-to-One Laptop Schools/South Carolina|South Carolina]]  ··  
[[One-to-One Laptop Schools/Texas|Texas]]
|}&lt;/div&gt;
{{BookCat}}

&lt;!-- Thanks to the &quot;How to Build A Desktop PC&quot; wikibook for this Template!! --&gt;</text>
      <sha1>f65ho4i0wsolnsdnk4qsumddahcpu47</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Henrico</title>
    <ns>0</ns>
    <id>200929</id>
    <revision>
      <id>1560866</id>
      <parentid>1550729</parentid>
      <timestamp>2009-07-05T20:23:15Z</timestamp>
      <contributor>
        <username>Sgarrigan</username>
        <id>67273</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

&lt;h1&gt;Henrico County Public School District Laptop Initiative&lt;/h1&gt;
[[Image:Ibook.jpg|left|250px|thumbnail]]
&lt;h2&gt;Initiative and Demographics&lt;/h2&gt; The Henrico County Public School District is home to more than forty four thousand students in sixty five schools. Its diverse ethnic and socioeconomic population is drawn from high density urban areas, rural regions, and high-tech suburban communities. Over forty five percent of the students are minorities.&lt;ref name=&quot;casestudy&quot;&gt;http://www.apple.com/nz/education/profiles/henrico1/&lt;/ref&gt;The Henrico County Public School District is located in Virginia.&lt;ref&gt;http://www.henrico.k12.va.us/whyhcps/whyhcps.html&lt;/ref&gt; 



In the 2002-2003 school year, Henrico County Public Schools (HCPS) launched the second phase of its Teaching and Learning Initiative. The largest such district wide technology implementation in the nation, the program has enabled the distribution of wireless iBook computers to every middle and high school student and teacher in the public school district. Thus, all (HCPS) students will have equal access to powerful digital learning tools, while teachers are creating an entirely new instructional paradigm for the twenty first century. (HCPS) chose Apple's iBook computers for several reasons, says Dr. Mark Edwards, superintendent of the district. &quot;We considered other companies for this initiative, but selected Apple because of its long time commitment to education,&quot; Edward says. &quot;Plus, our analysis showed us that we'd be able to service and use the Mac platform much more inexpensively than with any other systems. Most importantly, we felt that the iBook laptops offered a toolset that would be ideal for our educational environment.&quot;&lt;ref name=&quot;casestudy&quot;&gt;http://www.apple.com/nz/education/profiles/henrico1/&lt;/ref&gt; 



The phase one of this laptop initiative targeted high schools in 2001. Twelve thousand iBook systems with AirPort Wireless Cards were distributed to all middle and high school teachers and one for every high school student in the district. The phase two of this laptop initiative reached the middle school students. Every middle school student in the district received one iBook. AirPort Base Stations were installed in every middle and high school classroom. In phase two of this initiative, when parents of middle school students came to pick up their child's iBook, they were required to attend a ninety minute training session.&lt;ref name=&quot;casestudy&quot;&gt;http://www.apple.com/nz/education/profiles/henrico1/&lt;/ref&gt;


     
&lt;h2&gt;Value and Importance&lt;/h2&gt; As a result of the laptop initiative, (HCPS) officials have the utmost confidence that their students will become competent and educated members of the twenty first century society. Today over twenty seven thousand middle and high school students along with teachers are equipped with a laptop for use at home and in school. The one to one laptop initiative allows each student equal access to twenty first century tools. Since the program's onset, school officials have taken note of student's rising grades, but most importantly their rising interest in school. &quot;It is incredible the change laptops have created in our students,&quot; says Principal Aaron Spence. &quot;Today our students are much more organized and have access to a wealth of educational content from their laptop and from teacher created web pages to assignments.&quot; Teachers and administrators have also noticed that since the program started, school attendance has risen and students are more engaged in the classroom because in addition to traditional teaching materials, they now have dynamic and interactive educational experiences as well.&lt;ref name=&quot;casestudyone&quot;&gt;http://www.marshal8e6.com/documents/pdfs/case_studies/education/CS_HenricoCounty1to1.pdf&lt;/ref&gt;
     
     
&lt;h2&gt;Challenges of the Laptop Initiative&lt;/h2&gt;
[[Image:lightibook.jpg|right|250px|thumbnail]] When school officials decided to implement the laptop initiative, their goal was to provide a twenty first century learning environment while maintaining student safety, complying with CIPA laws and ensuring that students would use the laptops in an appropriate and educational manner. During the preliminary parents discussions, some parents voiced concerns about the potential for students to be exposed to inappropriate web content and/or online predators. &quot;Since we use Mac iBooks for grades 6 to 8, and Dell laptops for grades 9 to 12, we needed a solution that supports both platforms,&quot; added Lloyd Brown, Director of Technology for (HCPS). In addition, like most schools with limited IT resources and overburdened staff, (HCPS) were concerned about how much time and effort it would take to implement and maintain a remote laptop filtering solution. &quot;The key is centralized administration,&quot; says Brown. The solution to this challenge was to address the growing use of laptops in schools, Marshal8e6 developed the 8e6 Mobile Client to filter and secure off-site students from accessing inappropriate and malicious web content. As a software-based application that works in conjunction with the R3000 Mobile appliance, the Mobile Client has a centralized configuration and remote administration. The auto-network detection allows for a seamless internal and external web filtering experience, making it completely transparent to students and tamper-proof. Finally, the Mobile Client has the same advanced filtering options as the R3000 Internet filter, including:
*Google and Yahoo Safe Search enforcement
*Search engine and URL keyword filtering
*Configurable user lockout
*Anonymous proxy blocking&lt;ref name=&quot;casestudyone&quot;&gt;http://www.marshal8e6.com/documents/pdfs/case_studies/education/CS_HenricoCounty1to1.pdf&lt;/ref&gt;


The 8e6 Mobile client also works in conjunction with the Enterprise Reporter, a dedicated appliance that processes and displays Internet filtering logs without compromising filtering speed or performance, or impacting network functions. With cross-referenced and customized reporting that details reports by user name, machine name, IP address, or MAC address, the Enterprise Reporter helps IT administrators cut down on the amount of time they spend creating reports. &quot;The 8e6 Mobile Client has integrated seamlessly into our network and works perfectly with the R3000 Internet filter and Enterprise Reporter. We are now able to monitor, filter, and report Internet activity throughout our schools on-site or off-site,&quot; says Lloyd Brown. &quot;We first started using Marshal8e6's Internet filtering solution in 2002 and we have been pleased with it ever since. The 8e6 Mobile Client has increased our sastifaction,&quot; Mr. Brown says. &quot;Marshal8e6 has proved to stand behind its product and service. (HCPS) staff appreciates the fact that there is only one number to call for support. But the best thing of all is that the Mobile Client simply does its job well. It has saved the school considerable expense and our students are protected, our network is secure and parents are informed that their kids are being filtered.&quot;&lt;ref name=&quot;casestudyone&quot;&gt;http://www.marshal8e6.com/documents/pdfs/case_studies/education/CS_HenricoCounty1to1.pdf&lt;/ref&gt;
     


&lt;h2&gt;Greatest Success&lt;/h2&gt;

&quot;The bottom line is that our children our ready. The world is moving forward and our purpose is to do everything possible to ensure our children will thrive in that future world with the experience they receive today. The future is now. Our children can't wait,&quot; (Henrico County Public Schools Superintendent Mark Edwards). The impact on student achievement as a result of this laptop initiative has been a great success. In eleven core curricular tests, students improved on nine, remained on level on one and lost two points on another. The greatest one year gains on the end of course tests came in three subjects, History, Reading, and Writing content areas where laptops were used the most. Also the state test results showed even the greatest skeptics of one to one laptop use to take another look due to the lowest ever dropout rate in Henrico's history of 1.52%.&lt;ref name=&quot;casestudytwo&quot;&gt;http://www.hflcsd.org/nysbjournal.pdf &lt;/ref&gt;


(HCPS)'s commitment to professional development gave teachers the skills and tools to be effective. Staff development included curriculum writing workshops, summer institutes, site-based institutes, a full time trainer in each high school and middle school, and training CDs and videotapes. (HCPS) implemented the following principles instrumental to the success of a laptop program:
*Think big
*Find a business partner
*Sweat the details-network capability is a key issue
*Listen to and train the teachers
*Enlist the broadest possible support-administration, principals, teachers, students, PTA, business, and community leaders.
*Reach out to parents-provide parent resource centers and offer parent training&lt;ref name=&quot;casestudythree&quot;&gt;http://etc.usf.edu/L4L/A-Review.html&lt;/ref&gt;      


 

&lt;h2&gt;Summary&lt;/h2&gt;


(HCPS) have shown great strides and success with their laptop initiative. When implemented correctly with the instrumental principles that make a laptop initiative successful any school district in the world can be remarkably successful with a one to one laptop initiative. (HCPS) had an effective plan in place to overcome the challenges of the one to one laptop initiative. They also had educational goals and a future vision of what they hope for their students to achieve in a twenty first century society. (HCPS) are a role model of a victorious one to one laptop initiative.






== References ==
http://www.apple.com/nz/education/profiles/henrico1/

http://www.henrico.k12.va.us/whyhcps/whyhcps.html

http://www.marshal8e6.com/documents/pdfs/case_studies/education/CS_HenricoCounty1to1.pdf

http://www.hflcsd.org/nysbjournal.pdf

http://etc.usf.edu/L4L/A-Review.html

{{BookCat}}</text>
      <sha1>csylzae21yx1bzt26r7oh6fq4s6v99g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:One-to-One Laptop Schools</title>
    <ns>14</ns>
    <id>200932</id>
    <revision>
      <id>1550542</id>
      <timestamp>2009-06-28T05:52:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Educational technology]]</text>
      <sha1>7n9j3oe645y7yz83qx0rteqwmh7g5yd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Seafood Bruschetta</title>
    <ns>102</ns>
    <id>200933</id>
    <revision>
      <id>1740409</id>
      <parentid>1740408</parentid>
      <timestamp>2010-03-21T00:17:13Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>moved [[Cookbook:Seafood bruschetta]] to [[Cookbook:Seafood Bruschetta]]</comment>
      <text xml:space="preserve">{{Recipesummary|Italian recipes|20|1 hours 20 minutes|2|700 Kcal.}}

{{Recipe}} | [[Cookbook:Cuisine of Italy|Cuisine of Italy]]

==Ingredients==

* 3 pcs [[Cookbook:Baguette|baguette]], cut 1,5 cm each

==Filling==

* 300 g [[Cookbook:Prawn|prawn]], fry with 1 tbsp. [[Cookbook:Oil|vegetable oil]]
* 8 [[Cookbook:Crabstick|crabsticks]], cut into 6 parts, fry with 1 tbsp. vegetable oil
* 5 fishballs, cut like circle, fry with 1 tbsp. vegetable oil
* 3 tbsp. [[Cookbook:Parsley|parsley]]
* 2 tbsp. [[Cookbook:Sugar|sugar]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Pepper|black pepper]]

==Procedure==

* In a bowl, mix prawn, crabstick, fishball, parsley, sugar, salt and black pepper. Stir with spoon until become a mixture.
* Prepare a cutted baguette, and fill with the mixture filling. Do until the mixture filling and the baguette are empty.
* Bake the bruschetta in an oven at the temperature 190 degree Celsius at 15 minutes.
* Serve hot.

[[Category:Seafood recipes]]</text>
      <sha1>2anl9dfr31vgznxn48l4pv9hpesuarg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Samwilson/Woodworking Notes</title>
    <ns>2</ns>
    <id>200935</id>
    <revision>
      <id>1550555</id>
      <timestamp>2009-06-28T06:51:42Z</timestamp>
      <contributor>
        <username>Samwilson</username>
        <id>31195</id>
      </contributor>
      <comment>Created page with 'This is a scratch area for me to nut out some things about the [[Woodworking]] book.  ;Mallets :[http://chestofbooks.com/home-improvement/woodworking/Design-Construction-Wood/Cha...'</comment>
      <text xml:space="preserve">This is a scratch area for me to nut out some things about the [[Woodworking]] book.

;Mallets
:[http://chestofbooks.com/home-improvement/woodworking/Design-Construction-Wood/Chapter-IX-Mallet.html Chapter] in ''Design and Construction in Wood'' by William Noyes (1916)</text>
      <sha1>24gadq3l3jsvuffkn990osvbx9em5j8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pattaya fried rice</title>
    <ns>102</ns>
    <id>200937</id>
    <revision>
      <id>2532636</id>
      <parentid>2431834</parentid>
      <timestamp>2013-06-03T20:03:58Z</timestamp>
      <contributor>
        <username>AllenZh</username>
        <id>580206</id>
      </contributor>
      <comment>Grammar.</comment>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|3|20 minutes|3|Image=[[Image:Nasi goreng pattaya.png|300px]]|225 Kcal.}}

{{Recipe}} | [[Cookbook:Cuisine of Thailand|Cuisine of Thailand]]

'''Pattaya fried rice''' (Thai:[[w:th:นาซีโกเรงปาตตายา|นาซีโกเรงปาตตายา]]), called '''Nasi Pattaya''' in Malaysia, is a Thai dish made by covering [[Cookbook:Chicken fried rice|chicken fried rice]] in an [[Cookbook:Omelette|omelette]] pouch. &lt;ref&gt;{{cite web| url = http://www.mykitchensnippets.com/2008/07/nasi-goreng-pattaya-pattaya-fried-rice.html | title = Pattaya Fried Rice | accessdate = June 28 | accessmonthday = | accessyear = 2009 | author = | last = | first = | authorlink = | coauthors = | date = | year = | month = | format = HTML | work = | publisher = | pages = | language = English | archiveurl = | archivedate =
}}&lt;/ref&gt;

This recipe is similar like ''Omurice'', of [[Cookbook:Cuisine of Japan|Japanese cuisine]].


==Ingredients==

* 3 tbsp. [[Cookbook:Olive Oil|olive oil]] (2 tbsp. for frying and 1 tbsp. for making an omelette)
* 2 cloves [[Cookbook:Garlic|garlic]], chopped finely
* 2 red [[Cookbook:Chilli|chillies]], cut small 1 cm
* 2 [[Cookbook:Shallot|shallots]], sliced finely
* 2 chicken fillets, cut 1,5 cm
* 1 cup green [[Cookbook:Peas|peas]]
* 1 [[Cookbook:Carrot|carrot]], diced
* 1 [[Cookbook:Scallion|scallion]], cut small 1 cm
* 2 cups (700 g) [[Cookbook:Rice|rice]]
* 2 tbsp. [[Cookbook:Tomato Sauce|tomato sauce]]
* 2 tbsp. ''[[Cookbook:Fish Sauce|nam pla]]''
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1½ tbsp. [[Cookbook:Pepper|pepper]]
* 1 small [[Cookbook:Jalapeno|jalapeno]], minced
* 2 [[Cookbook:Egg|egg]] for making omelette

==Procedures==

# Heat the oil on non-stick pan. If the oil is hot, fry the garlic and shallots and stir until brown and looks fragrant.
# Add the chicken fillet, carrot, green peas and red chilli, stir at 2 minutes. After that, add the rice.
# Add the ''nam pla'', tomato sauce, salt and pepper. Cook until all mixed.
# Heat th oil after cooking fried rice. Mix the egg and put into the pan, after looks like omelette, flip it over once the bottom side is lightly brown.
# Put in a bowl of the fried rice at the center of the omelet and wrap up the 4 edges and flip it over a serving plate.
# Served hot.

==References==

{{reflist}}


[[Category:Fried rice recipes]]
[[Category:Thai recipes]]
[[Category:Chicken recipes]]
[[Category:Egg recipes]]
[[Category:Carrot recipes]]
[[Category:Featured recipes]]
[[Category:Inexpensive recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>26yqj9v3s1a0wt9d3sea86lp0vxro4q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chicken fried rice</title>
    <ns>102</ns>
    <id>200938</id>
    <revision>
      <id>2637772</id>
      <parentid>2069015</parentid>
      <timestamp>2014-04-24T16:12:22Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <comment>Clarified in ingredients that the rice is to cooked rice and the chicken is to be raw.</comment>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|5|30 minutes|2||220 Kcal.}}

{{Recipe}}

==Ingredients==

* 2 tbsp. [[Cookbook:Butter|butter]]
* 3 cloves [[Cookbook:Garlic|garlic]], crushed and minced
* 2 red [[Cookbook:Chilli|chillies]], cut small 1 cm
* 2 [[Cookbook:Scallion|scallion]], cut 1 cm
* 200 g [[Cookbook:Carrot|carrot]]
* 200 g minced raw [[Cookbook:Chicken|chicken]]
* 1 cup (550 g) cooked [[Cookbook:Rice|rice]]
* 2 tbsp. oyster sauce
* 1¼ tbsp. [[Cookbook:Worcestershire Sauce|Worcestershire sauce]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Pepper|pepper]]

==Dressing (optional)==

* [[Cookbook:Cucumber|Cucumber]]
* [[Cookbook:Tomato|Tomato]]
* [[Cookbook:Fried Eggs|Fried egg]]
* [[Cookbook:Pickle|Pickles]]

==Procedure==

# Melt the butter on the non-stick pan. Fry the garlic, chilli and scallion, stir for 15 seconds.
# Add the chicken and carrot. Cook until the chicken changes color (from pink to white).
# Add the rice, and then the oyster sauce, Worcestershire sauce, salt and pepper. Continue to cook until combined well.
# Serve hot with the dressing.

[[Category:Rice recipes]]
[[Category:Fried rice recipes]]
[[Category:Vegetable recipes]]
[[Category:Chicken recipes]]</text>
      <sha1>dymkwkp54ktq7le5ij1s8ihjvab5evu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pickling salt</title>
    <ns>102</ns>
    <id>200939</id>
    <revision>
      <id>2307290</id>
      <parentid>1756727</parentid>
      <timestamp>2012-04-16T09:21:19Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{ingredient}}

'''Canning and pickling salt''' is [[Cookbook:Salt|salt]] that has been finely ground. Its small grain size allows it to dissolve in cold liquids.</text>
      <sha1>s82tsd7xpcvbuawiakp4jwwyhuopehq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spice Rubbed Grilled Chicken Breast</title>
    <ns>102</ns>
    <id>200941</id>
    <revision>
      <id>2511021</id>
      <parentid>1845356</parentid>
      <timestamp>2013-04-09T19:26:25Z</timestamp>
      <contributor>
        <ip>2.30.115.100</ip>
      </contributor>
      <comment>/* Ingredients */</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Chicken recipes]]

== Ingredients ==
* 5 boneless skinless chicken breasts
* 2 tbsp paprika
* 3 tbsp smoked paprika
* 1 tbsp salt
* 1 tbsp freshly ground black pepper
* 2 tsp dried rosemary
* 2 tbsp cayenne pepper
* 1 cup Dijon mustard
* 1 tsp freshly ground cinnamon
* 3 tbsp dehydrated lemon peel

== Procedure ==
#Combine all dry seasoning. Set aside.
#Rub mustard all over chicken. Apply seasoning mixture and press lightly to aid adhesion.
#Grill on a preheated charcoal grill, turning often, until internal temperature reaches 165°.
#Remove and let rest for 3 minutes. Serve.</text>
      <sha1>qtd1rncptuy0pp459hww3f1ioj9wf6l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Globalization/The Toyota Way</title>
    <ns>0</ns>
    <id>200942</id>
    <revision>
      <id>2321203</id>
      <parentid>2321202</parentid>
      <timestamp>2012-05-04T09:32:31Z</timestamp>
      <contributor>
        <username>Masafuro</username>
        <id>628160</id>
      </contributor>
      <minor />
      <comment>/* Impact on the author */</comment>
      <text xml:space="preserve">== Overview ==


The Toyota Way is a book written by Jeffrey Liker. This book describes the management principles and business philosophy behind Toyota's success. Toyota is a car manufacturer in Japan who raised the bar for quality and excellence in manufacturing, production development and process excellence, by their approach. Why? This is because: they are the most profitable car manufacturer, they are consistently producing high quality cars, they have fewer man hours and they have less on hand inventories.

For many companies this book has become the bible for improving their company. This book explains Toyota's approach to lean production and it explains more about the 14 principles to go for quality and excellence. Not only it contains the theory but it also explains how you can adopt the principles to improve your own business processes by cutting down on operation and production costs.

== Overview of the book ==

The book is divided into three parts. The first part is about the success and history of Toyota. The second part describes the 14 business principles of the Toyota way. The last part is about how an organization can apply this theory to their own company. All together it's a journey with steep hills but the final result is worth it.


== The 14 business principles of the Toyota way ==


1 Base your management decision on a long-term philosophy, even at the expense of short-term financial goals

2 Create continuous process flow to bring problems to the surface

3 Use the 'Pull-System' to avoid overproduction

4 Level out the workload (Heijunka)

5 Build a culture of stopping to fix problems, to get quality right the first time

6 Standardized tasks are the foundation for continuous improvement and employee empowerment

7 Use visual control so no problems are hidden

8 Use only reliable, thoroughly tested technology that serves your people and process

9 Grow leaders who thoroughly understand the work, live the philosophy, and teach it to others

10 Develop exceptional people and teams who follow your company's philosophy

11 Respect your extended network of partners and suppliers by challenging them and helping them improve

12 Go and see for yourself to thoroughly understand the situation (Genchi Genbutsu)

13 Make decisions slowly by consensus, thoroughly considering all options; Implement decisions rapidly

14 Become a learning organization through relentless reflection (Hansei) and continuous improvement (Kaizen)


The 14 principles are divided into four sections. It starts with the long term philosophy, by focussing on the long term everyone knows what to do. All investments and changes should be adding something to their final goal. The second section is about the right process that will produce the right results. The main focus should be on the process. Starting with the single flow concept in order to improve the quality of your product. The third section is about to add value to the organization by developing your people and partners. By developing your people and partners they will continue to grow and feel involved. The last section is about the fact that continuous solving root problems drives organizational learning. Once a rootcause is determined the problem can be solved for ever. This means that the focus stays on the real problems.


== Global impact significance ==

This book is the first book in English that describes the business principles and the philosophy that made Toyota famous about their quality and reliability. Currently, this philosophy of The Toyota way is used all over the world. This approach is adapted not only for the car industry but it is used in various kinds of industries. Every company can learn from Toyota and their approach in order to make your company lean and mean. 


== Impact on the author ==

This book has made a great impact on myself as for some years I have been working with various improvement processes which all have their basis in the Toyota way. In the beginning I was quite sceptical about it as it seemed yet another program from management in order to improve my process. However, during the first journey I really became a believer as the results were amazing. The Toyota way is not only focussing on the process but also on the people as they make the change. It really is a great way of thinking in order to make the change.

During my visit in Japan I had the pleasure to visit a factory and see the Toyota Way of working in real practice. On my question to management: 'Can you show me your program?' the Japanese people started laughing. This was not because my question was funny, but it was because in Japan it's not an improvement program but it's their normal way of working. So we still have a lot to do in order to become as successful as Japanese companies or Toyota.

For me this book is really the bible for improving my production process at work.

== References ==
Book 'The Toyota Way' written by Jeffrey K. Liker.

{{BookCat}}</text>
      <sha1>3so1g90gna1jn2bpb5i1f9h3x61t04z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Social Arithmetic</title>
    <ns>0</ns>
    <id>200944</id>
    <revision>
      <id>2370953</id>
      <parentid>1683532</parentid>
      <timestamp>2012-06-29T21:26:33Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <minor />
      <comment>Recent Runes moved page [[Mathematics Worksheet/Social Arithmatics]] to [[Mathematics Worksheet/Social Arithmetic]] without leaving a redirect</comment>
      <text xml:space="preserve">This list contains a material related to the Social Arithmatics module.

# [[/Discount/|Discount]] {{stage|00%|Jun 28, 2009}}
# [[/Loss and Profit/|Loss and Profit]] {{stage|00%|Jun 28, 2009}}
# [[/Tax/|Tax]] {{stage|00%|Jun 28, 2009}}
# [[/Bank interests/|Bank interests]] {{stage|00%|Jun 28, 2009}}

{{BookCat}}</text>
      <sha1>59xeaemghcdoa2wf9e435x9in0yzdv5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:IronSwallow/Userboxes/objc-1</title>
    <ns>2</ns>
    <id>200946</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551268</id>
      <parentid>1550745</parentid>
      <timestamp>2009-06-29T03:46:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User js</title>
    <ns>14</ns>
    <id>200948</id>
    <revision>
      <id>1551341</id>
      <parentid>1550763</parentid>
      <timestamp>2009-06-29T05:14:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed template</comment>
      <text xml:space="preserve">{{Usersprogram|js}}</text>
      <sha1>q7nko0a5envvbkv5ikgzjyzncji057r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Andy33</title>
    <ns>3</ns>
    <id>201008</id>
    <revision>
      <id>1550922</id>
      <timestamp>2009-06-28T19:45:15Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>spam warning</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg=
'''Please do not add inappropriate external links to books.'''&lt;br/&gt;External links that you have added have been considered inappropriate by your fellow contributors. Books are intended to be read without the need for external references. Rather than adding external links, particularly those which are for advertising or promotion, please instead expand books to include any missing information. If you feel the external link should be added to a book, please discuss it on the module's talk page rather than re-adding it. See the [[Help:Welcome, newcomers|welcome page]] to learn more about Wikibooks. Thank you. [[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 19:45, 28 June 2009 (UTC)
}}</text>
      <sha1>mjavr6kyykcjg3e6hqlu9ou6q3aa6f2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User rexx-N</title>
    <ns>10</ns>
    <id>201009</id>
    <redirect title="Template:Programming language" />
    <revision>
      <id>1551260</id>
      <parentid>1550929</parentid>
      <timestamp>2009-06-29T03:42:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT[[Template:Programming language]]</text>
      <sha1>suqmwzue117wov2yacyrpkat50wl5iu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Carbon Programming/Getting started</title>
    <ns>0</ns>
    <id>201014</id>
    <revision>
      <id>1550960</id>
      <timestamp>2009-06-28T20:54:08Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>Create stub</comment>
      <text xml:space="preserve">{{stub}}

== Requirements ==

To use Carbon, you will need to know the C programming language.    

== Installation and usage ==

The Carbon framework can be used when you create a new project within XCode 2.5.  XCode will auto-create the details and files within the project, as well as provide a basic event handler.

If you are using the command-line compiler, or are otherwise creating the application manually, the framework needs to be specfied manually:
&lt;pre&gt;
gcc -framework Carbon
&lt;/pre&gt;

Files that need to access the Carbon library must have the following include statement within the file:
&lt;pre&gt;
#include &amp;lt;Carbon/Carbon.h&gt;
&lt;/pre&gt;</text>
      <sha1>9meb8e85o9gjx1lh8n82khm9e0z9m2u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:MKB3232</title>
    <ns>3</ns>
    <id>201015</id>
    <revision>
      <id>1550978</id>
      <timestamp>2009-06-28T21:41:56Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==

&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, MKB3232!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 21:41, 28 June 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>3hcamv6n3hjxcjgjqsbde7u4to5kmf1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Children and Education</title>
    <ns>0</ns>
    <id>201021</id>
    <revision>
      <id>1561705</id>
      <parentid>1551330</parentid>
      <timestamp>2009-07-06T23:22:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">This chapter was written with regard to education in Japan and its effect on the children reliant upon this system.  Covered is a brief review of current history regarding education, how Japanese education is organized and conducted, Japan's continued high TIMSS (Trends in International Mathematics and Science Study) scores, concerns and controversies regarding textbook censorship, and problems with bullying (&quot;ijime&quot;) as an overall reflection of Japanese society.  Following the chapter will be a brief 5-question quiz.


= Children and Education in Japan =



== A Brief History ==

After WWII, Japan sought to catch up economically, scientifically, and technologically with the Western powers of the world and thus structured their educational system in such a way as to meet these goals in as little time as possible.  Doing away with a former track system in which students' education was geared toward specifically preparing them for a set career path early in their education (near impossible to change once decided upon), education became available to all Japanese in a seemingly equal and fair manner: advancement through individual standardized testing scores&lt;ref name=&quot;Berman&quot;&gt; Berman, David M. (1987). Educational Reform in Postwar Japan: A Case Study of the High School Entrance Examination in Chiba Prefecture.  Retrieved May 16, 2009.&lt;/ref&gt;.  

These tests, usually consisting solely of multiple choice questions based on factual and memorized information, are used primarily for placement of children into senior high schools as well as universities, though some private elementary schools are known to use them for enrollment as well, testing children as young as 5 and 6 years of age.  

The more prestigious the school is, the harder the test, the more students competing to get accepted, and the more difficult it is for any one of them to gain entrance.  Some students wishing to seek an advantage over their peers may attend cram school (&quot;juku&quot;) in the evenings several times a week in addition to their normal school schedule.  Even without cram school, this can be quite a stressful experience for students as well as a huge letdown if they do not get accepted into their school of choice.  Related suicides are not unheard of.  Incredible pressure is placed upon children to excel at these tests because their futures vastly depend upon which schools they are allowed to attend&lt;ref name=&quot;Japanese Education&quot;&gt; [http://www.asianinfo.org/asianinfo/japan/education_literacy.htm Japanese Education.] Japanese Education and Literacy: Japan's Educational History, Schools and Curricula, Issues in Education (2000). Retrieved 28 June, 2009.&lt;/ref&gt;.

It is a common policy amongst Japanese corporations when making hiring selections to place an exorbitant amount of importance on the university which their candidates graduated from.  The better known and prestigious the university was, the better the candidate's chances are of getting a job with a prestigious company.  In fact, some corporations are known for only hiring graduates from select schools.  Thus, by not placing a huge emphasis early on in one's educational upbringing, they cannot attend a high school which will adequately prepare them for passing the entrance examination into their college of choice, thus helping to ensure a future career.&lt;ref name=&quot;Japanese Education&quot; /&gt;

Thus, by creating this highly competitive educational system where only those attending certain schools can get the best jobs, it can be questioned as to whether they really eliminated their old track system at all.  

In 2002, reforms were enacted in which to combat these gripes, hoping to relieve some of the stress on students' daily school lives as well as to foster a love and enjoyment of learning within them as many Japanese children and adolescents in recent years have become uninterested in school, thus affecting their performance.  Among the most noticeable changes, the school week was cut from 6 days to 5, 30% of the yearly curriculum was cut, and a new program called IS (Integrated Studies) was created in elementary and junior high schools; a time of study with no text books and no specific subjects to learn except that which the class themselves, small groups within the class, or individual students choose as a topic to study.&lt;ref name=&quot;ERIC&quot;&gt; ERIC Development Team (2001). Japanese Education in Grades K-12. ERIC Digest.&lt;/ref&gt;  The effectiveness of these reforms will be discussed in more detail further on.
  

== The Basics ==

Before going any further, a brief explanation of the dynamics of the Japanese educational system will be helpful.  

Modeling the US education system after WWII, the Japanese created a 6-3-3 program: six years of elementary school (not including preschool or kindergarten), three years of junior high, and three years of senior high.  Following this are 2- or 4-year universities.  Only elementary and jr. high are compulsory in Japan, however 93%&lt;ref name=&quot;Education Japan&quot;&gt;[http://www.educationjapan.org/jguide/education_system.html Education Japan.] Japan Guide: Japanese Education System (2001). Retrieved 28 June 2009.&lt;/ref&gt; of students enter high school and 95% of those students graduate from high school.  Comparatively, in the United States it is only 80%.  For those who know they are not college-bound, they can opt to attend a trade-school high school which will prepare them for a job upon graduation.  Those choosing to attend a university will choose to attend a high school oriented toward preparing them for the university entrance exams.&lt;ref name=&quot;ERIC&quot; /&gt; 

In Japan, there is a central governmental department of education known as The Ministry of Education, Culture, Sports, Science and Technology, or MEXT.  MEXT controls curriculum for both public and private elementary schools and has a strong say as well in the jr. high school curriculum.  Senior High Schools are typically run by prefectural boards of education, however the Ministry still has a say in much.  For instance, any textbook used in Japanese primary schools must be approved by MEXT first.  Thus, they are able to censor just what the youth of Japan learns and believes.&lt;ref name=&quot;ERIC&quot; /&gt; &lt;ref name=&quot;Japanese Education&quot; /&gt;  This will be discussed more in depth later.

Typical class sizes in Japan are quite large compared to the standard US class, yet where the US sees large class sizes as a problem, in Japan it is seen as an effective and sought after method.  Drawing from my own personal experience in Japan, after joining Dr. Takeshi Ueki, Professor of Anthropology for one of his classes at Tokyo's Kyoritsu University in June of 2009, one of the first things that struck me was the 70+ students in his class.  From my own experience in schools within the United States, I had only experienced such numbers in college and university lecture hall classes.  When I asked Dr. Ueki if that class were a lecture class and explained to him my surprise, he said that it was not a lecture class (as I had meant it, anyway) and in actuality was one of the smaller classes he was teaching during the semester.  He confirmed that such a number is not atypical for many Japanese classes.  


== Effectiveness of 2002 Reforms ==

There's no beating around the bush: few teachers or parents like the reforms.  Despite the 30% cut in curriculum teachers are finding it extremely difficult to prepare their students adequately enough for entrance exams.  Parents feel that their children are not liking school any better nor are they as well prepared for entrance exams as they should be.  Even a great deal of students say that new programs such as IS (Integrated Studies) which were designed to help foster a love for learning in them are a waste and take precious time away from their preparation for entrance exams&lt;ref name=&quot;Bjork&quot;&gt; Bjork, Christopher (2009). Local implementation of Japan's Integrated Studies reform: a preliminary analysis of efforts to decentralise the curriculum. ''Comparative Education, 45''(1), 23-44.&lt;/ref&gt;.

The bottom line: With everyone so focused on Entrance Exams, it is difficult if not impossible to make any real changes to the curriculum!  Since it is the entrance exams which are the cause of such stress for students, it will only be when they and they and the system surrounding them are reformed that any real progress will be made.  Until then, reforms such as those made in 2002 are merely bandages on a wound that needs stitches.  Though the IS program seems to be effective enough in elementary school, by the time children reach junior high it becomes near worthless.&lt;ref name=&quot;Bjork&quot; /&gt;

IS is a class period designated to a class or group project in elementary school in which the students are encouraged to choose a topic they believe pertinent to current issues such as the environment or economics.  No textbook is assigned and instead the students are encouraged to research on their own and submit a paper or project at the end of the class.  Little supervision is given by the instructor.  In jr. high, the experience changes from the more hands-on approach they experienced in elementary and instead they are now expected to write a research paper.  They still must find a topic of their own choosing, however it is rarely seen as fun anymore.  Typically, only those students who are thriving anyway do well with jr. high IS.  Those who the system wishes to target the most to instill a love for learning continue to flounder.&lt;ref name=&quot;Bjork&quot; /&gt;

Teachers, especially those specialized ones of the junior high schools, tend to despise IS as it comes without any guidance from higher up and leaves all the planning to them.  Since every student works on a topic of their choosing, it is difficult for a Mathematics major homeroom teacher to help and support a struggling student seeking guidance on his paper regarding deforestation in the Amazon.  This removed the teacher from their regular comfort zone in which they are the experts in their field and places them into a field of uncertainty.  Many teachers admit that since the grading for IS is obscure and not necessarily required, they instead use the time allotted to work on other subjects in which the students are behind.&lt;ref name=&quot;Bjork&quot; /&gt;

Hopefully MEXT will begin to understand that if their goal is to decrease the stress of students then they need to reform the matter which is stressing them.  If they wish to instill a sense of love for learning in the youth of their country, they will need to either come up with a different method or better train their teaching staff to deal with it accordingly.


== TIMSS Test Scores ==

Japan continues to excel in international standardized tests, especially in the departments of Mathematics and Science.  TIMSS is given every four years and tests fourth and eight graders' Math and Science knowledge.  Japan, as with most Asian countries, continues to rank highly.  The most current results from the 2007 TIMSS show that among the world's 4th graders, Japan is 4th in both Math and Science knowledge and their 8th graders are 5th in Math and 3rd in Science.  Comparatively, the United States 4th graders placed 9th in Math and 8th in Science and the 8th graders placed 10th in Math and 11th in Science.  Those differences may not seem too dramatic, however when one looks at the actual variance in scores between the Asian countries and the US, the gap is quite considerable indeed.&lt;ref name=&quot;TIMSS&quot;&gt;[http://nces.ed.gov/pubs2009/2009001.pdf Highlights from TIMSS 2007.] Highlights from TIMSS 2007: Mathematics and Science Achievement of U.S. Fourth and Eighth-Grade Students in an International Context (2008). Retrieved 28 June 2009.&lt;/ref&gt;

As for why Japan does so well, it is speculated that since the Japanese education system focuses so heavily upon preparing students to take standardized tests (entrance exams), they are also able to excel at other similar tests such as the TIMSS.&lt;ref name=&quot;ERIC&quot; /&gt;


== Textbook Revision and Censorship ==

Since MEXT, a department of the Japanese government, has the ability to determine which textbooks are permissible for the Japanese primary schools to use, it would stand to good reason that they would choose those books which support their governments' and party's beliefs.  This is exactly what is being argued and attacked by many Japanese citizens as well as foreign countries including United States, China, and both Koreas.  In terms of history texts, much revision has recently occurred regarding WWII and Japan's aggression, countless war crimes, and atrocities around and during that time.&lt;ref name=&quot;ERIC&quot; /&gt;  

Some of the largest controversies regard the almost or complete omission from newer texts on the issue of sex slaves, termed &quot;Comfort Women&quot;, during WWII.  If mention of them does exist in a text, it is very brief, ill detailed, and/or vastly understated.&lt;ref name=&quot;Textbooks&quot;&gt;[http://www.iwanami.co.jp/jpworld/text/textbook01.html History Textbooks.] Tawaea, Yoshifumi. Junior High School History Textbooks: Whither &quot;Comfort Women&quot; and the &quot;Nanking Massacre&quot;? (2001). Retreived 28 June, 2009.&lt;/ref&gt;

Likewise, mention of the incident known as &quot;The Rape of Nanking&quot; or the &quot;Nanking Massacre&quot; is being kindly retitled the &quot;Nanking Incident&quot; and the countless atrocities and deaths which took place are either not being mentioned or kindly understated using choice words and phrases.&lt;ref name=&quot;Textbooks&quot; /&gt;

Amongst other word choice edits are changes of the terms &quot;aggressive,&quot; &quot;aggression,&quot; and &quot;invasion&quot; when referring to Japan and their past military.  So a sentence such as &quot;Japan intensified its invasion of Korea&quot; becomes &quot;Japan intensified its advance into Korea.&quot;&lt;ref name=&quot;Textbooks&quot; /&gt;

Also being understated and forgotten are the Chinese victims of horrible Japanese medical experiments.  Issues such as these which the Japanese government have admitted to and have (debatably) apologized for make it seem that MEXT means for the youth of Japan to never to learn about the severity of their country's past mistakes, if they encourage them to learn about them at all.&lt;ref name=&quot;Textbooks&quot; /&gt;

Japan, like any nation, needs to portray both sides of the war and not forget their history, no matter how horrible.  If these revisions continue to happen, the chances of the past repeating itself only increase.  Considering that WWII was mere decades ago and given the many acts of violence perpetrated by Japan and their military, there are many foreign countries, especially those victimized by the Japanese during that time, which are very angry and disturbed by these changes.  


== &quot;Ijime&quot; ==

&quot;Ijime&quot; is the Japanese word for &quot;bullying&quot; yet the meaning is a bit different than the one typically thought of in Western Europe or the United States.  In the West, bullying is generally defined by children as one larger child threatening, taking advantage of, or physically or emotionally abusing one weaker child.  The key word to look for in that description was &quot;ONE.&quot;  Being individualistic societies, this makes sense.  However, Japan is a collectivist culture and thus being part of a group and a team player is seen as more important than one's own personal opinions, needs, and desires.  Those who don't conform to the standards of the majority, who are seen as &quot;different&quot;--whether it be in a good or bad way--are prone to being victimized by &quot;ijime.&quot;&lt;ref name=&quot;Ijime&quot;&gt; Maeda, Rie (1999). Ijime: An Exploratory Study of a Collective Form of Bullying among Japanese Students.&lt;/ref&gt;

In Japan, bullying is described as being a group vs. one event.  A group of those in the &quot;normal&quot; majority will single out and target an individual who, for whatever reason, does not fit in with the group.  The forms of attack which these bullies use can vary but physical violence is generally a rare occurrence, though it is not unheard of.&lt;ref name=&quot;Ijime&quot; /&gt;

Bullying in Japanese schools gained large public awareness as a problem in the 1980's when an unprecedented number of child and teen suicides plagued the country.  The victims generally left notes claiming that due to constant bullying at school they had lost their will to live as their everyday life had become a living hell.  Parents, outraged by these deaths, blamed teachers and the education system which supported them for not doing enough to prevent or stop such attacks, yet the teachers claimed that they were unaware of any such goings on or that if they had noticed, they thought that the kids were simply joking around or playing games.  Since bullying such as it is today was very rare in post-war Japan, and given that the Japanese have a belief that meddling too much in the affairs of children will hamper their growth into responsible adults, it is easy for teachers and parents alike to remain blind to subtle acts of hate, violence, and aggression which, over time, can chip away at a victim's overall well-being.  Sometimes the victim becomes so hopeless that they resort to drastic means of escape such as suicide.&lt;ref name=&quot;Bullying&quot;&gt; Kobayashi, Futoshi (1999). Bullying in Japanese Schools.&lt;/ref&gt;

Forms of bullying by Japanese students tend to be primarily relational, using indirect aggression tactics such as spreading rumors about or ignoring the targeted child.  Other tactics include theft or defacement of their property (i.e. shoes, backpacks, books) or forcing the victim to perform an illegal or embarrassing act by means of either force or threat of force, then capturing the deed on photo or video and using the evidence as blackmail against the victim.  The blackmailed victim is then forced to perform other unwanted deeds for their bullies such as homework, chores, stealing for the bullies, or even being physically violent against other victims of the bullies.  If caught, the original bullies are hard to blame since they never actually got their hands dirty, and the caught victim is usually unwilling to explain the true situation out of fear that the blackmail material will be released to their peers, school faculty, or families.&lt;ref name=&quot;Ijime&quot; /&gt;

Attempting to take some ownership of the bullying problem, MEXT has attempted to implement measures to decrease its occurrences, however thus far they have been relatively unsuccessful, if not outright ineffective.  It has been pointed out that since the bullying behavior is so prevalent in their own society it is hard to stop the kids when they are merely imitating what they see corporate CEOs and politicians do every time there is a scandal: pretend to be unaware of any wrong-doing and then mysteriously find that a secretary or other underling was responsible for whatever they are being accused of, letting them take the fall instead.&lt;ref name=&quot;Bullying&quot; /&gt;

With over 80% of students in schools being exposed to &quot;ijime&quot; either as a bully, a victim, or a witness by the junior high level&lt;ref name=&quot;Ijime&quot; /&gt;, it is undeniable that there is a serious problem in Japan, extending outward to their society at large.  In this &quot;survival of the fittest&quot; society, it does not pay to be different.  


== Summing Up ==

Japan, a world leader in international test scoring, and an education system envied in many countries, is not without its flaws.  Despite attempts at reform, Japanese students are increasingly becoming disinterested in school.  From the moment they are born, the students who stand the best chance at being successful are the ones whose parents send them to private preschools in which they will gain instruction on how to pass the entrance exam to a prestigious elementary school which will prepare them to pass the entrance exam into their junior high of choice, onward to their high school and eventually their university of choice.  All of this will hopefully allow them the opportunity to be hired by their corporation of choice so they will be able to live a happy and productive adult life and be able to take care of their own children and aging parents.  However, such stresses are unhealthy for anyone, and knowing this system as a small child and growing up with it can and has led some to the breaking point.  

Japan's centralized education system has stated that they wish to reform their curriculum in order to instill a sense of love of education in their country's youth in order to provide young adults with the abilities to compete in the global market, however by controlling so strictly what they learn and editing textbooks, it has been argued as to whether they are practicing what they preach.  

With all of the stresses the children of Japan experience with regard to studying, succeeding on tests, and conforming to group and societal standards with little direct guidance from adults, bullying has become prevalent and almost an accepted and excepted act.  

Should the Japanese education system wish to change such as MEXT has stated, drastic measures must be taken.  


== Quiz ==

1) The Japanese education system is a _____ model.
:A) 5-3-4
:B) 6-3-3
:C) 6-2-4
:D) 5-3-4


2) According to the 2007 TIMSS test scores, Japan's 4th grades ranked _____ in Science whereas the US ranked _____.
:A) 4th; 9th
:B) 5th; 10th
:C) 4th; 8th
:D) 5th; 11th


3) _____% of Japanese students attend high school and _____% of those students graduate.
:A) 95; 93
:B) 99; 95
:C) 95; 99
:D) 93; 95


4) Explain the difference between bullying in Japan vs. Western countries.


5) Why is there so much stress surrounding the entrance examination process for students?


== References ==

&lt;references/&gt;

{{BookCat}}</text>
      <sha1>islce44z66drr5lmha5jg643h7rqp37</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Requests for deletion/Challenge Book:Challenge The Challenge</title>
    <ns>4</ns>
    <id>201032</id>
    <revision>
      <id>1659471</id>
      <parentid>1551040</parentid>
      <timestamp>2009-11-18T03:50:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Wikibooks:Votes for deletion/Challenge Book:Challenge The Challenge]] to [[Wikibooks:Requests for deletion/Challenge Book:Challenge The Challenge]]: Per [[Wikibooks_talk:Votes_for_deletion#Page_rename_proposal]]</comment>
      <text xml:space="preserve">&lt;noinclude&gt;== [[Challenge Book:Challenge The Challenge]] ==&lt;/noinclude&gt;

&lt;div style=&quot;padding:0.5em; text-align:center;&quot;&gt;''The following discussion has concluded. '''&lt;span style=&quot;color:red;&quot;&gt;Please begin any new discussion&lt;/span&gt;''' on the appropriate page.''&lt;/div&gt;
&lt;div style=&quot;border:2px solid #A5A77F; background:#e8edc7; width:95%; margin:0.5em auto; color:black;&quot;&gt;
&lt;div style=&quot;padding:0.5em; vertical-align:middle;&quot;&gt;[[File:Stop hand nuvola.svg|40px|middle|link=]] Closed as [[File:Symbol delete vote.svg|15px]] '''Delete''' - Per consensus here. -- &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''Unusual? Quite''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 23:28, 28 June 2009 (UTC)&lt;/div&gt;
&lt;div style=&quot;border-top:1px dashed #A5A77F; padding:0.5em;&quot;&gt;

If you think the title of this book is redundant with three &quot;challenges&quot; in it, then read some of the pages in it.  If I'm off-base, let me know, but the whole book looks like a farce, like the author wanted to see how many times he could write &quot;challenge&quot; on each page. Finishing the book must have been too ''challenging'', because the author hasn't done anything further since December 2007. Interestingly, the use of &quot;challenge&quot; even continued to the author's [[User_talk:Zwarg|talk page]] when previously asked about the book's licensing.  I'm hard-pressed (you could even say ''challenged'') to find anything meaningful in this book. -- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 22:51, 14 June 2009 (UTC)
: [[Image:Symbol delete vote.svg|15px]] '''Delete''' - This book must have been some sort of joke.  I don't see a reason to keep it either. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 02:24, 15 June 2009 (UTC)
: [[File:Symbol delete vote.svg|15px]] '''Delete''', I'm not sure Uncyclopedia or other humor-based wikis may find it interesting.  It may be worth a shot, but panning stuff out like that doesn't work very well. --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 04:01, 15 June 2009 (UTC)
: [[File:Symbol delete vote.svg|15px]] '''Delete'''.  Whether or not other places want it, it doesn't have a place here. [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 07:06, 15 June 2009 (UTC)
: [[Image:Symbol delete vote.svg|15px]] '''Delete''' - As amusing as this book is, it doesn't belong here. [[User:Reece|&lt;font color=&quot;black&quot;&gt;&lt;b&gt;Reece&lt;/b&gt;&lt;/font&gt;]] [[User talk:Reece|&lt;font color=&quot;green&quot;&gt;&lt;small&gt;(Talk)&lt;/small&gt;&lt;/font&gt;]] [[Special:Contributions/Reece|&lt;font color=&quot;green&quot;&gt;&lt;small&gt;(Contributions)&lt;/small&gt;&lt;/font&gt;]] 15:35, 15 June 2009 (UTC)
: [[File:Symbol comment vote.svg|15px]] '''comment''' http://www.illogicopedia.org/index.php?title=Forum:Challenge_the_Challenge --[[Special:Contributions/69.165.160.45|Contributions/69.165.160.45]] ([[User talk:69.165.160.45|talk]]) 17:28, 15 June 2009 (UTC)
:Wow, I thought we nuked this a while back. I guess we made a mistake we can [[File:Symbol delete vote.svg|15px]] '''fix''' now. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 19:37, 15 June 2009 (UTC)
: Export and copy complete.  If you feel the copy-paste is perfect, it can be safely deleted without issue.  (The image, however, isn't yet copied, I set a delayed Speedy delete on that.)  From here, they can do the rest and correct any remaining mistakes (or whatever else they feel is required.)   --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 21:34, 15 June 2009 (UTC)
:[[Image:Symbol delete vote.svg|15px]] '''Eliminate''' utter, unchallenging, shite.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Italy.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 22:39, 17 June 2009 (UTC)

{{end closed}}</text>
      <sha1>i7pbqlvf7ua4g4lb97n34vuptfwxu6p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language</title>
    <ns>10</ns>
    <id>201038</id>
    <revision>
      <id>2031859</id>
      <parentid>1884180</parentid>
      <timestamp>2011-02-16T22:03:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>deprecating prettytable, replaced: prettytable → wikitable</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{programming language|c|4|category=}}&lt;/noinclude&gt;&lt;includeonly&gt;{| class=&quot;wikitable userlang&quot; style=&quot;float:{{{align|right}}}; clear:{{{align|right}}}; margin:0; width:19em; {{{css-box|}}}&quot;
|-
! class=&quot;userlang_left&quot; style=&quot;width:3em; background:#{{#switch:{{{2|}}}
  |1=aaccdd
  |2=88ccee
  |3=66c1ee
  |4=33b0ee
  |CCC}}; font-size:1.3em; {{{css-left|}}}&quot;| {{{1|xx}}}-{{{2|?}}}
|class=&quot;userlang_right&quot; style=&quot;width:16em; font-size:0.9em; line-height:1.1em; {{{css-right|}}}&quot;| {{#switch:{{{2|N}}}
  |N='''Update your userbox to the unified standard (see [[Template:Programming language|documentation]]).'''
  |1
  |2
  |3
  |4={{#ifexist:Template:programming language/{{{1|}}}|{{programming language/{{{1|}}}|text|{{{2|}}}}}|'''Incorrect language code specified (see [[Wikibooks:Userboxes/Programming|the list]]).'''}}|'''Incorrect skill level specified (see [[Template:Programming language|documentation]]).'''}}
|}{{{category|{{#switch:{{{2}}}
  |1
  |2
  |3
  |4=[[Category:User {{{1}}}|{{#switch:{{{2}}}
    |4=1
    |3=2
    |2=3
    |1=4}} {{PAGENAME}}]]|}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>13enyf33jnz8doikka5dtn8eunt99wv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Manchu/Vocab</title>
    <ns>1</ns>
    <id>201040</id>
    <revision>
      <id>1926817</id>
      <parentid>1918113</parentid>
      <timestamp>2010-09-02T17:54:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

The Manchu script is all wrong on this page (the letters in the words are not connected).
--[[User:Strangeguitars|Strangeguitars]] ([[User talk:Strangeguitars|talk]]) 01:28, 29 June 2009 (UTC)

Today I added Manchu script for all the words, hope someone finds it helpful. :D [[User:Sjheiss|Sjheiss]] ([[User talk:Sjheiss|talk]]) 00:38, 11 November 2009 (UTC)

==Other Phrases==

We seem to lack 'hello'. It seems as though it's either 'si sain' [http://www.sinoglot.com/bjs/tag/manchu/] or 'saiyoun' [http://online.wsj.com/public/resources/documents/MANCHU-LANGUAGE.html], although I've barely seen any references to the latter.[[Special:Contributions/92.232.174.87|92.232.174.87]] ([[User talk:92.232.174.87|talk]]) 20:08, 20 August 2010 (UTC)
[[Special:Contributions/92.232.174.87|92.232.174.87]] ([[User talk:92.232.174.87|talk]])</text>
      <sha1>q6mel8wmme5pmu8umosnj1fk6svb6r4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:PrintOutputSwitch</title>
    <ns>10</ns>
    <id>201041</id>
    <redirect title="Template:OutputSwitch/Print" />
    <revision>
      <id>1551151</id>
      <timestamp>2009-06-29T01:33:17Z</timestamp>
      <contributor>
        <username>Prog</username>
        <id>95465</id>
      </contributor>
      <comment>moved [[Template:PrintOutputSwitch]] to [[Template:OutputSwitch/Print]]: Format has probably changed.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:OutputSwitch/Print]]</text>
      <sha1>rmr3pzfiagki20pshzghggk31n1fgda</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/category</title>
    <ns>10</ns>
    <id>201042</id>
    <revision>
      <id>1552382</id>
      <parentid>1552369</parentid>
      <timestamp>2009-06-30T03:39:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed sort keys.</comment>
      <text xml:space="preserve">{{#if:{{{1|}}}|{{#switch:{{{2}}}
  |1=[[Category:User {{{1}}}|4 {{PAGENAME}}]]
  |2=[[Category:User {{{1}}}|3 {{PAGENAME}}]]
  |3=[[Category:User {{{1}}}|2 {{PAGENAME}}]]
  |4=[[Category:User {{{1}}}|1 {{PAGENAME}}]]
  |}}}}&lt;noinclude&gt;
This template categorizes users based on the standard programming language system, but does not display a box. This is intended for users who don't like language boxes, or who prefer to use custom code. For example: &lt;tt&gt;&lt;nowiki&gt;{{programming language/category|c|1}}&lt;/nowiki&gt;&lt;/tt&gt; will categorize the page where the box appears under &lt;tt&gt;&lt;nowiki&gt;[[Category:User c]]&lt;/nowiki&gt;&lt;/tt&gt; without displaying the c-1 box.

The opposite effect (displaying the language box without categorizing the user page) is achieved by specifying &lt;code&gt;category=&lt;/code&gt; in the &lt;tt&gt;Programming language&lt;/tt&gt; call. For example: &lt;tt&gt;&lt;nowiki&gt;{{programming language|c|1|category=}}&lt;/nowiki&gt;&lt;/tt&gt; will display the c-1 box without categorizing the page where the box appears.

[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>ch4pwogto56yj4yf1el8u4bzt6fzu3n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/ada</title>
    <ns>10</ns>
    <id>201044</id>
    <revision>
      <id>1551216</id>
      <parentid>1551208</parentid>
      <timestamp>2009-06-29T02:43:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ada
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User ada|Ada]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>r1fok2nqlgrm2pfv3rnrze65q5zjhx6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/c</title>
    <ns>10</ns>
    <id>201045</id>
    <revision>
      <id>1551219</id>
      <parentid>1551211</parentid>
      <timestamp>2009-06-29T02:44:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = C
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User c|C]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>pch0y66xxqytorl43h4pum8c85al9pm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Copyedit</title>
    <ns>10</ns>
    <id>201046</id>
    <redirect title="Template:Copy edit" />
    <revision>
      <id>2182479</id>
      <parentid>1551352</parentid>
      <timestamp>2011-10-14T21:44:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Redirected page to [[Template:Copy edit]]</comment>
      <text xml:space="preserve">#REDIRECT [[Template:Copy edit]]</text>
      <sha1>tau509vqhpue6bdyxzelhyaqht68ufw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/basic</title>
    <ns>10</ns>
    <id>201047</id>
    <revision>
      <id>1551316</id>
      <parentid>1551313</parentid>
      <timestamp>2009-06-29T04:38:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = BASIC
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User basic|BASIC]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>4d6z0nlulfs2zxr1jdh43q4j8ga0yu1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/csharp</title>
    <ns>10</ns>
    <id>201048</id>
    <revision>
      <id>1551220</id>
      <parentid>1551212</parentid>
      <timestamp>2009-06-29T02:44:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = C#
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User csharp|C#]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>pph0pt6uew1yn1mctssbq04qsjqtmel</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/c++</title>
    <ns>10</ns>
    <id>201049</id>
    <revision>
      <id>1551222</id>
      <parentid>1551213</parentid>
      <timestamp>2009-06-29T02:45:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = C++
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User c++|C++]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>nr6pifqsr6k42xxtihnub6b5z6mj3s9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/css</title>
    <ns>10</ns>
    <id>201051</id>
    <revision>
      <id>1551223</id>
      <parentid>1551214</parentid>
      <timestamp>2009-06-29T02:46:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = CSS
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User css|Cascading Style Sheets]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>ozdjrbyurkp2n0505dz8jiaemfhq61w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/html</title>
    <ns>10</ns>
    <id>201053</id>
    <revision>
      <id>1551224</id>
      <parentid>1551206</parentid>
      <timestamp>2009-06-29T02:46:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = HTML
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User html|HTML]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>qes7xc0z6rgoudmkyy3aw0ebqx1afz5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Template subpages</title>
    <ns>14</ns>
    <id>201054</id>
    <revision>
      <id>1838801</id>
      <parentid>1706097</parentid>
      <timestamp>2010-06-10T15:58:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>typo fix</comment>
      <text xml:space="preserve">These are subpages of templates, where code has been split out for readability.  They are placed in this category to unclutter the main template categories and show only the main templates that a user would call to perform a function.

[[Category:Templates]]</text>
      <sha1>ibw44lrc71yw2vp1y5eo84lwvj7dflq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/hs</title>
    <ns>10</ns>
    <id>201055</id>
    <revision>
      <id>1551235</id>
      <parentid>1551233</parentid>
      <timestamp>2009-06-29T02:58:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Haskell
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User hs|Haskell]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>mmv674k7ixjb6x27p2ys0tlojb3jv99</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/java</title>
    <ns>10</ns>
    <id>201056</id>
    <revision>
      <id>1551226</id>
      <timestamp>2009-06-29T02:48:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Java programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Java
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User java|Java]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>6oj5v5xr6fg7cpqq1g284p6pk5gk6b5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/js</title>
    <ns>10</ns>
    <id>201057</id>
    <revision>
      <id>1551227</id>
      <timestamp>2009-06-29T02:49:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>JavaScript scripting language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = JavaScript
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User js|JavaScript]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>pi5blqr3w4hkz8nnoj27z53pbq3wqhn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/objc</title>
    <ns>10</ns>
    <id>201058</id>
    <revision>
      <id>1551228</id>
      <timestamp>2009-06-29T02:49:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Objective-C programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Objective-C
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User objc|Objective-C]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>db9p6mhy0o7nxmkn2mzgkpl14r1jt81</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/php</title>
    <ns>10</ns>
    <id>201059</id>
    <revision>
      <id>1551229</id>
      <timestamp>2009-06-29T02:50:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>PHP scripting language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = PHP
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User php|PHP]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>858v7b8gp73acka2sn6t0q02okwtxmg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/pas</title>
    <ns>10</ns>
    <id>201060</id>
    <revision>
      <id>1555228</id>
      <parentid>1551230</parentid>
      <timestamp>2009-07-02T01:56:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed link.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Pascal
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User pas|Pascal]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>2dk28w6fau9s15picc5o97khnsl2jpx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/perl</title>
    <ns>10</ns>
    <id>201061</id>
    <revision>
      <id>1551231</id>
      <timestamp>2009-06-29T02:52:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Perl programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Perl
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User perl|Perl]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>rzxizfsfmm4y4lrfkwob8bq66ri4cup</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/rexx</title>
    <ns>10</ns>
    <id>201062</id>
    <revision>
      <id>1551232</id>
      <timestamp>2009-06-29T02:54:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>REXX programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = REXX
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User rexx|REXX]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>006wuby0ynv8x4qfzyoosuwnqngazdy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User hs</title>
    <ns>14</ns>
    <id>201063</id>
    <revision>
      <id>1551234</id>
      <timestamp>2009-06-29T02:57:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|hs}}</text>
      <sha1>q3r1dkbv6blk4r4nfxp9wie2m4i7uhd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/ruby</title>
    <ns>10</ns>
    <id>201064</id>
    <revision>
      <id>1551237</id>
      <timestamp>2009-06-29T02:58:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Ruby programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ruby
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User ruby|Ruby]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>f93nd0ovaqbt80tim2chpqmxejltipt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/sql</title>
    <ns>10</ns>
    <id>201065</id>
    <revision>
      <id>1551238</id>
      <timestamp>2009-06-29T02:59:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>SQL programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = SQL
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User sql|SQL]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>6dbofo6cfy1wetpg1sih1zmj9148fbl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/vb</title>
    <ns>10</ns>
    <id>201066</id>
    <revision>
      <id>1551239</id>
      <timestamp>2009-06-29T03:00:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Visual Basic programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Visual Basic
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User vb|Visual Basic]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>p3xzqg7xlbzq2dm4iipo18ndr6qvhun</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Human Rights</title>
    <ns>0</ns>
    <id>201067</id>
    <revision>
      <id>1914387</id>
      <parentid>1561704</parentid>
      <timestamp>2010-08-18T06:46:53Z</timestamp>
      <contributor>
        <username>Zollerriia</username>
        <id>117986</id>
      </contributor>
      <minor />
      <comment>only corrected 2 typos. 1 very minor edit.</comment>
      <text xml:space="preserve">Today, Japan’s position on the world stage is one of respect, honor and influence. Certainly when one looks closely at Japan’s contributions to the international community as well as other distinguishing factor such as their pacifist constitution, one can see that Japan is positioned quite well as a world power.  Indeed they are positioned to be a model for the world in many ways (i.e. Article 9 of Japanese Constitution, a pacifist / diplomatic approach to managing international conflict, environmental protectionism, peace philosophy, human right preservation, etc.).  

The intent of this essay is to examine how Japan manages it’s past and present human rights challenges. To fully understand Japan’s challenges, successes and advances in the area of human rights, one must examine Japan’s disturbing human rights history. No conversation about human rights issues in Japan would be meaningful without exploring what is undoubtedly a significant blemish on Japan’s human right’s report card. That is, the issue of Japanese war crime committed during WWII. The infamous Japanese war crimes include such atrocities as Bushido-style killings where Japanese soldiers competed to see who could kill the most people, the murder and maltreatment of Allied POW and civilian internees, chemical warfare and genocidal campaigns against the Chinese. Other atrocities include the well known, but controversial, Nanking Massacre where 300,000 people were killed in the most gruesome ways and 20,000 women were raped by Japanese soldiers. Atrocities committed at Nanking include mass executions, torture, rape, looting, bushido, burned to death, drowning, buried alive, boiled alive, heart cut out, arms and legs cut off, tong cut off, eyes gauged out, decapitation, mutilation of vagina, castration, nailing people to boards, cannibalism, throwing babies up and bayoneting it, etc. (MFA Productions, 2007).

Another well known war crime was the creation of Unit 731 who conducted gruesome experiments on prisoners near the Chinese city of Harbin. It is estimated that 200,000 Chinese were tortured to death between 1946-1948. The Japanese government is known also for the infamous “Three All” campaign where the Japanese Emperor ordered Japanese soldiers to “Kill All, Burn All and Loot All” and for the forced enslavement and prostitution of approximately 200,000 Korean, Chinese, Filipino and Taiwanese women, “comfort women” (MFA Productions, 2007).
	
Although Japanese Prime Minister Junichiro Koizumi has extended a formal apology to all identifiable victims of forced prostitution (i.e. “comfort women”) of WWII as well as compensation, according to the 2008 Human Rights Watch Report, the UN Human Rights Council and numerous NGOs, including Amnesty International and Vital Voices, have criticized the country’s apology. 

Japan’s present-day human rights issues tend to center around a number of critical issues that have historically been challenging for the country to address. Those issues are: the treatment of it’s racial minority groups, issues regarding equality and woman’s rights, and addressing the historical problem of human trafficking in Japan.

Racial discrimination and xenophobia do exist in Japan. The law prohibits discrimination on basis of race, gender, disability, language, and social status. Although the government generally enforced these provisions, discrimination against women, ethnic minorities and foreigners remained (Bureau of Democracy, 2009). The effects of discrimination are felt be many racial and minority groups in Japan including the Buraku people, the Ainu, the people of Okinawa, people from former Japanese colonies such as the Koreans, Chinese, and their descendants, other foreigners, and migrant workers who have come from all over Asia (IMADR, 2009).  While there are laws that prohibit racial discrimination, the country’s large populations of Korean, Chinese, and Filipino residents were subject to deeply entrenched societal discrimination (Bureau of Democracy, 2009). This discrimination often takes the form of restricted access to housing, education, and employment opportunities. The Human Rights Watch Report also cited a widespread perception among citizens that these Japan born ethnic “foreigners” were responsible for most of the crimes committed in Japan. This misperception persists despite empirical data presented by the Ministry of Justice showing that crimes committed by “foreigners” was statistically lower than the crime rates of Japanese citizens. Indigenous peoples such as the Ainu and Okinawans faced the same patterns of discrimination as other ethnic minorities (McNeil, 2006).

Japan is also charged with protecting and preserving the human rights of Japanese women. With respect to the various issues surrounding woman’s rights, Japan has generally provided women with the same rights as men. However, despite these efforts problems persist. The law criminalizes all forms of rape, including spousal rape. Although the number of reported rape cases were significantly less than those reported in 2007, there were still 747 reported rape cases during the first half or 2008 (Bureau of Democracy, 2009). 

Domestic violence against woman and sexual harassment in the workplace remained problems as well.  In 2007, the Ministry of Health, Labor, and Welfare received 15,799 reports of sexual harassment. Laws protecting women from sexual harassment include measures to identify companies that failed to prevent sexual harassment, but does not include tangible, punitive measures to enforce compliance other than publicizing the names of offending companies (MHLW, 2009). Additionally, women in Japan continue to encounter discrimination in employment with women earning less than two thirds of the monthly salary earned by men (MHLW, 2009).

The groping of women in public, particularly in subway cars, continues to be a problem as well. In Japan, more than 4,000 men are arrested each year for groping on public transport (Herbert, 2004). This prompted a number of government interventions such as police crackdowns, increased police presence in subway cars, and the introduction of “women only” carriages during peak hours.

Japan has laws that establish human tracking for sexual and/or labor exploitation as a criminal offense. However, human trafficking remains a human rights issue for the country as Japan continues to be a destination and transit country for men, women, and children who are trafficked for commercial sexual exploitation and other purposes (Bureau of Democracy, 2009). Debt bondage and labor exploitation was widely reported by labor activists, NGOs, shelters and the media (MHLW, 2009). Additionally, there was no noticeable improvement in Japan’s prosecution of sex trafficking crimes. 

The focus of this essay has been largely on the issues of human rights issues impacting Japan’s women and minority populations. However, one must acknowledge that Japan has broader human rights issues such as the treatment of prisoners in prisons and detention centers and preserving the rights of children and people with disabilities just to name a few.

While the focus of this essay has to been to identify Japan’s past and present human rights challenges, I would be remiss if I didn’t note that Japan has made immense progress in addressing human rights issues. It is also very important to note that Japan has contributed significant time, dollars and diplomatic effort to supporting human rights and humanitarian issues domestically as well as internationally. As stated by the Ministry of Foreign Affairs of Japan, below are some of Japan’s domestic and international commitments to protecting and preserving human rights:

•	Convention on the Elimination of All Forms of Discrimination against Women (1985)
•	International Convention on the Elimination of All Forms of Racial Discrimination (1995)
•	Introduced the Basic Law for a Gender-equal Society (1999)
•	Introduced the Second Basic Plan for Gender Equality (2005)
•	Revised the Equal Employment Opportunity Law (2007)
•	Convention on the Rights of Persons with Disabilities (2007)
•	Officially became a State Party of the Rome Statute of the International Criminal Court  (2007)
•	Japan has pledged to cooperate fully with all established treaties
•	Japan has pledged to work closely with civil society including non-governmental organizations in the promotion, implementation and protection of human rights programs 


Clearly, Japan has demonstrated a concern for the human rights of national and international citizens. Additionally, Japan has made significant commitments and progress towards that end. As stated earlier in this essay, Japan’s history of human rights violations during WWII is a huge stumbling block to get over. However, to be fair, one must remember that it is an unfortunate truth that every great nation has had to acknowledge and overcome the past atrocities and injustices of their forefathers to evolve into world powers that are conscious and committed to the promotion and preservation of national and international human rights. 


CHAPTER QUIZ

1) True or False: According to this essay, Japan is positioned well to be an influential world power and a model for it's position on human rights.

2) All of the following are examples of blemishes on Japan’s human right’s report card except:
   a) Bushido-style killings
   b) Article 9
   c) Nanking Massacre
   d) genocidal campaigns against the Chinese
   e) Three All campaign

3) According to this essay, Japan’s present-day human rights issues include all of the following except:
   a) racial &amp; minority group discrimination
   b) equality and women’s rights
   c) human trafficking
   d) child labor
   e) labor exploitation

4) True or False:  The compliance laws created to protect women from sexual harassment are sufficient.

5) Advances in Japan's domestic and international commitments to protecting and preserving human rights include  which of the following:
   a) cooperate fully with all established treaties
   b) Convention on the Rights of Persons with Disabilities
   c) Equal Employment Opportunity Law
   d) Basic Law for a Gender-equal Society
   e) All of the above


References

Bureau of Democracy, Human Rights, and Labor 2009. 2008 Human Rights Report:  	Japan, viewed May 27, 2009, www.state.gov/g/drl/rls/hrrpt/2008/eap/119041.htm. 
Herbert, Jack, 2004. ‘Chikan (Train Groping)’, Japan for the Uninvited, viewed June 28, 2009 http://www.japanfortheuninvited.com/articles/train-groping.html.
Human Rights in Japan. In Wikipedia, the free encyclopedia. Retrieved May 19, 2009, 	from http://en.wikipedia.org/wiki/Human_Rights_in_Japan.
International Movement Against All Forms of Discriminations and Racism (IMADR).        ‘Combating racial discrimination in Japan’, viewed May 28, 2009        http://www.imadr.org/multi/erd/.
Japanese War Crimes.  In Wikipedia, the free encyclopedia. Retrieved May 19, 2009, 	from http://en.wikipedia.org/wiki/Japanese_war_crimes.
McNeill, David 2006, ‘The Diene Report on Discrimination and Racism in Japan’, ZNet 
     The Spirit of Resistance Lives, http://www.zmag.org.znet/viewArticlePrin/4077.
Ministry of Foreign Affairs of Japan, 2008.  Japan's Voluntary Pledges and 	Commitments in Accordance with Resolution A/RES/60/251.  Retrieved May 28, 	2009, from http://www.mofa.go.jp/policy/human/pledge0604.html.
Ministry of Health, Labor, and Welfare 2009.  ‘Labour Statistics’, viewed June 28, 2009 http://www.mhlw.go.jp/english/database/db-l/index.html.

MFA Productions 2007, Japanese War Crimes, World War II Multimedia Database,
        viewed June 28, 2009 http://www.worldwar2database.com/html.warcrimes.htm.

{{BookCat}}</text>
      <sha1>n6jv9ylkoitmkioiugk2mn82yovbd2x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Iguana</title>
    <ns>102</ns>
    <id>201068</id>
    <revision>
      <id>2007989</id>
      <parentid>2007917</parentid>
      <timestamp>2010-12-23T22:45:28Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Undo revision 2007917 by [[Special:Contributions/76.5.6.207|76.5.6.207]] ([[User talk:76.5.6.207|talk]]) - spam link (commercial site, so we don't want to see it also)</comment>
      <text xml:space="preserve">{{recipe}}

==Examples of Traditional Recipes==
===Iguana Pozole&lt;ref&gt; Martinez Campos - ''Recetario'' (p. 42) &lt;/ref&gt;===

*two medium iguanas
*five cups of freshly bleached hominy
*10 cloves of garlic
*1 onion
*1 slice of cabbage - diced
*bay leaf
*Mexican oregano
*salt and pepper

Butcher skin and cut the iguana in pieces.  Wash, salt and blanch for 15–20 minutes.

Simmer the corn, garlic, onion, a bay leaf, and salt to taste.  At 10 minutes add the meat.  Cook for another 15–20 minutes.  Serve with sliced cabbage some of the onion slice, cilantro, oregano and pepper to taste.

===Iguana roasted with birria marinade&lt;ref&gt; Martinez Campos - ''Recetario'' (p. 38) &lt;/ref&gt;===

*one medium iguana
*8 guajillo chile
*2 pasilla chile
*4 cloves garlic
oregano
vinegar, salt pepper to taste

Butcher, skin and cut the iguana into pieces.  Wash, salt and blanch for 15–20 minutes.

Toast and soak the peppers.  Blend the soaked chile with vinegar, oregano, salt and pepper to taste.  Marinate the iguana meat in the mixture for at least two hours.  Roast the iguana at high heat (450 deg F) until tender.

==References==
&lt;references /&gt;</text>
      <sha1>fxb0mfw6av2ydi0u0l4bvc3qq8xk5qf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User basic</title>
    <ns>14</ns>
    <id>201070</id>
    <revision>
      <id>1551317</id>
      <timestamp>2009-06-29T04:39:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|basic}}</text>
      <sha1>8ukuo6frafwlpys19iun8tlby9j4f9h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Polygon by Polygon modeling</title>
    <ns>0</ns>
    <id>201071</id>
    <revision>
      <id>2294024</id>
      <parentid>2179581</parentid>
      <timestamp>2012-03-29T20:53:41Z</timestamp>
      <contributor>
        <ip>189.69.146.209</ip>
      </contributor>
      <comment>/* The Workflow */</comment>
      <text xml:space="preserve">Although quite demanding, many modelers savor the control poly-by-poly modeling allows. However, its demanding nature makes many modelers, beginners and experts alike, to avoid it. Still, poly-by-poly modeling, if properly used, is a powerful tool.

==Before we start==

For this work flow, being ready is of great importance. Have several references of your subject, especially a front and side view. Also, have minutes of study on the subject and try to make out an approach in modeling it. Being ready is crucial for this.

{{Noframecenter|1=[[Image:TNMStandingBuddhaFace.jpg|700px]]|2=Image used as a reference available at the commons}}

{{Noframecenter|1=[[Image:Poly loopPlanning.jpg|580px]]|2=Loop plans for the model}}

==The Workflow==

Poly-by-poly modeling provides the most free modeling workflow ever. This freedom, however, causes confusion on how to approach modeling the subject. Searching the internet for tutorials on modeling the face using this method, you will find hundreds and each will be different from each other. Some start with the eyes, others with the mouth, others the ridge of the nose. And then each will proceed differently from that. No wonder its confusing.

Even though poly-by-poly modeling is such a free form method and constitutes a very vogue way to start and continue, a general guideline is provided in the hope that it will help modelers in using this approach.

===To Start===

Poly-by-poly modeling rather sets you free on choosing how and where to start. The only requirement is that you have a geometry, a vertex or a plane to start with. Many beginners are stumped by this. Somehow such liberty leaves them undecided.

{{Noframecenter|1=[[Image:Start Element.jpg|800px]]|2=Starting geometry}}

A very good approach is to start by creating the important loops first. For example, in modeling the face, you could start by creating the eye, mouth and face loops. With the loops in place, it is easy to build other geometries around them.

{{Noframecenter|1=[[Image:Start importantLoops.png|878px]]|2=Starting with important loops}}

Another good approach is to start with the most important part of the subject. For the face, this is the eyes and the mouth. You could model these parts first and then proceed adding geometry from there.

{{Noframecenter|1=[[Image:Start ImportantDetails.png|882px]]|2=Starting with the mouth}}

As said, poly-by-poly modeling lets you free, so if you would like to start on other parts first, say the nose, then you could do so.

===To Continue===

{{Noframecenter|1=[[Image:PolyByPoly Continue.jpg|685px]]|2=Continue Adding more geometry. Notice how the loops are placed}}

Continuing from your beginnings is not as easy as connecting-the-dots as it first appears to be. Rather than proceeding in a connect the dots fashion, proceed by thinking of edge and face loops of your model first then creating and adjusting geometry to fit them. Such view would ease decision on placing your geometry.

===To Finish===

{{Noframecenter|1=[[Image:PolyByPoly Finish.jpg|393px]]|2=Rendered face after few adjustments}}

When you find that you don't need to add more geometry, you can call it quits. But still, its a good practice to take another look of your model and make trial renders of it. There might be an awry edge loop, geometries that mess the model, or triangles that you wanted out. Do some fixing and adjusting and when you finally have the model good, give yourself a pat on the back, OMG ITS A FACE YOU DID IT YAYAYAYAYA

{{BookCat}}</text>
      <sha1>q4ds354090joh1dj1dc8vxb0kqs7mir</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Blender 3D: Noob to Pro/Polygon by Polygon modeling</title>
    <ns>1</ns>
    <id>201072</id>
    <revision>
      <id>1551355</id>
      <timestamp>2009-06-29T05:36:42Z</timestamp>
      <contributor>
        <username>Rosver</username>
        <id>185751</id>
      </contributor>
      <comment>Created page with '==Author notes== Images, and elaboration to be added.'</comment>
      <text xml:space="preserve">==Author notes==
Images, and elaboration to be added.</text>
      <sha1>htj7s7utmo8jxme62sh36y8sc28x7f9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Blender 3D: Noob to Pro/Illustrative Example: Model a Wine Glass</title>
    <ns>1</ns>
    <id>201073</id>
    <revision>
      <id>1617984</id>
      <parentid>1551372</parentid>
      <timestamp>2009-08-28T14:35:05Z</timestamp>
      <contributor>
        <ip>112.202.48.148</ip>
      </contributor>
      <comment>/* Author's note */</comment>
      <text xml:space="preserve">==Author's note==

Should we remove the &quot;Adding Simple Glass Texture and a Simple Scene&quot; section? It is not part of the modeling.

Ok, only modeling. Well I guess I'm talking to myself.</text>
      <sha1>4r0735res6z4ty2bdx5cd88096brj3l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>R Programming/Multiple Imputation</title>
    <ns>0</ns>
    <id>201074</id>
    <revision>
      <id>2321697</id>
      <parentid>1793729</parentid>
      <timestamp>2012-05-05T10:03:41Z</timestamp>
      <contributor>
        <username>Talgalili</username>
        <id>355477</id>
      </contributor>
      <comment>adding a package</comment>
      <text xml:space="preserve">&lt;noinclude&gt;{{R Programming/Navigation}}&lt;/noinclude&gt;

'''Multiple imputation''' of missing data generally includes two steps. First, an imputation step which results in multiple complete datasets. Second, combining the results obtained by applying the chosen technique on each separate dataset. The packages needed for these two steps are not necessary the same, but can be.



* &quot;mi&quot; package [http://www.stat.columbia.edu/~cook/movabletype/archives/2009/06/multiple_imputa_4.html Andrew Gelman Blog Entry on the &quot;mi&quot; package]
* [http://www.multiple-imputation.com/ &quot;mice&quot; package].
* [http://cran.r-project.org/web/packages/Amelia/index.html Amelia]
* [http://cran.us.r-project.org/web/packages/mitools/index.html mitools] by Thomas Lumley
* survey and Zelig have support for multiple imputated datasets.

== References ==

{{reflist}}</text>
      <sha1>bpgnjqxm0ab9h7wpzafhh995rtr7yyp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crab Fried Rice</title>
    <ns>102</ns>
    <id>201075</id>
    <revision>
      <id>2069016</id>
      <parentid>1740596</parentid>
      <timestamp>2011-03-12T22:31:24Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|5|20 minutes|2||175 Kcal. per serving}}

{{Recipe}}

==Ingredients==

* 5 tbsp. [[Cookbook:Olive Oil|olive oil]]
* 2 cloves [[Cookbook:Garlic|garlic]], minced
* 2 cloves [[Cookbook:Red onion|red onion]], sliced
* 150 g [[Cookbook:Bean Sprout|bean sprouts]], soak in hot water
* 2 big red [[Cookbook:Chilli|chilli]], cut into small pieces
* 2 canned (200 g) [[Cookbook:Crab|crab]], separate the liquid
* 3 [[Cookbook:Scallion|scallion]], cut 1 cm
* 1 plate (500 g) [[Cookbook:Rice|rice]]
* 2 tbsp. [[Cookbook:Fish sauce|fish sauce]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:pepper|black pepper]]

==Procedure==

# Before cooking fried rice, cook first the crab with 5 tbsp. oil and stir it in 1 minutes. Place it into a blank bowl, and make a fried rice.
# Heat again the remaining oil, fry the garlic, red onion, scallion and the red chillies. Stir in 1 minutes until fragrant.
# Add the fried crab and bean sprouts. Stir until the crab is changing the color.
# Add the rice, and then fish sauce, salt and black pepper. Stir until mixed.
# Served hot.

[[Category:Rice recipes]]
[[Category:Fried rice recipes]]
[[Category:Crab recipes]]</text>
      <sha1>cvqwx7ba2o80qcjy6cb63jxgcl41yf3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Smcintosh</title>
    <ns>2</ns>
    <id>201076</id>
    <revision>
      <id>1551403</id>
      <timestamp>2009-06-29T10:51:53Z</timestamp>
      <contributor>
        <username>Smcintosh</username>
        <id>96625</id>
      </contributor>
      <comment>Created page with 'Stephen McIntosh Head of Physics @ Hessle High School in EROY'</comment>
      <text xml:space="preserve">Stephen McIntosh
Head of Physics @ Hessle High School in EROY</text>
      <sha1>ok51himi5tcf35zlq1fibbh5f6nu4qz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fish sauce</title>
    <ns>102</ns>
    <id>201078</id>
    <redirect title="Cookbook:Fish Sauce" />
    <revision>
      <id>1551415</id>
      <timestamp>2009-06-29T11:59:41Z</timestamp>
      <contributor>
        <ip>114.59.184.41</ip>
      </contributor>
      <comment>Redirected page to [[Cookbook:Fish Sauce]]</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Fish Sauce]]</text>
      <sha1>d9xthkjljtfe793bsniwssb53vrtnr5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/asm</title>
    <ns>10</ns>
    <id>201079</id>
    <revision>
      <id>1551421</id>
      <timestamp>2009-06-29T12:45:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Assembly language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Assembly
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User asm|Assembly]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>t0mqvm9gbzhr1q9eqknxt6x1uu04fmu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User asm</title>
    <ns>14</ns>
    <id>201080</id>
    <revision>
      <id>1551424</id>
      <timestamp>2009-06-29T12:52:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|asm}}</text>
      <sha1>pnwaokf9w5ptay0sb34xo7trzveid3d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/asp</title>
    <ns>10</ns>
    <id>201081</id>
    <revision>
      <id>1551425</id>
      <timestamp>2009-06-29T12:54:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>ASP language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = ASP
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User asp|ASP]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>sbb2idwmv0zd3gagg52nblwn1yop9g3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User asp</title>
    <ns>14</ns>
    <id>201082</id>
    <revision>
      <id>1551426</id>
      <timestamp>2009-06-29T12:54:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|asp}}</text>
      <sha1>jppig5dxbxrdvr04gf6m6nctcmsdbnm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/bash</title>
    <ns>10</ns>
    <id>201083</id>
    <revision>
      <id>1551427</id>
      <timestamp>2009-06-29T12:55:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Bash programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Bash
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User bash|Bash]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>p2szpe7oehraom1s6bgzuz8wq987xrt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bash</title>
    <ns>14</ns>
    <id>201084</id>
    <revision>
      <id>1551428</id>
      <timestamp>2009-06-29T12:56:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|bash}}</text>
      <sha1>n9qe7gpv7kfphz7e8a7oaxyax3bxgp0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/batch</title>
    <ns>10</ns>
    <id>201085</id>
    <revision>
      <id>1551431</id>
      <timestamp>2009-06-29T13:05:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Batch programming</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Batch
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User batch|Batch]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>hi5bdtnhuxqlevosgfppqwv5pd773to</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User batch</title>
    <ns>14</ns>
    <id>201086</id>
    <revision>
      <id>1551432</id>
      <timestamp>2009-06-29T13:06:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|batch}}</text>
      <sha1>jy2g77q9axgt1lih143qzsk4tb7fkl3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/ocaml</title>
    <ns>10</ns>
    <id>201087</id>
    <revision>
      <id>1551434</id>
      <timestamp>2009-06-29T13:08:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Objective Caml programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Objective Caml
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User ocaml|Objective Caml]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>i7d09e6qq1bb5itn99ukwp9dqaamqzx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ocaml</title>
    <ns>14</ns>
    <id>201088</id>
    <revision>
      <id>1551435</id>
      <timestamp>2009-06-29T13:10:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|ocaml}}</text>
      <sha1>ttfyl1poc9zualh7vx2d0y4rukgucwu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/cobol</title>
    <ns>10</ns>
    <id>201089</id>
    <revision>
      <id>1551436</id>
      <timestamp>2009-06-29T13:11:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>COBOL programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = COBOL
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User cobol|COBOL]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>rm0kdbhldecwe8en5o4x01di67niizx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User cobol</title>
    <ns>14</ns>
    <id>201090</id>
    <revision>
      <id>1551438</id>
      <timestamp>2009-06-29T13:12:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|cobol}}</text>
      <sha1>h3gigy0iw5353od9uajk799bpy9q2h9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/apsct</title>
    <ns>10</ns>
    <id>201091</id>
    <revision>
      <id>1551440</id>
      <timestamp>2009-06-29T13:14:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>AppleScript programming</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = AppleScript
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User apsct|AppleScript]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>pts8kfkj0dg8lrz5cnxsowgznn2e1eo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User apsct</title>
    <ns>14</ns>
    <id>201092</id>
    <revision>
      <id>1551441</id>
      <timestamp>2009-06-29T13:15:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|apsct}}</text>
      <sha1>q1hpa4xsn6dossfl3hwhlwa88dr5lun</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/coldf</title>
    <ns>10</ns>
    <id>201093</id>
    <revision>
      <id>1551443</id>
      <timestamp>2009-06-29T13:17:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>ColdFusion programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = ColdFusion
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User coldf|ColdFusion]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>b708ivlgohmsvbpro6gvb65u05lvmye</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User coldf</title>
    <ns>14</ns>
    <id>201094</id>
    <revision>
      <id>1551444</id>
      <timestamp>2009-06-29T13:17:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|coldf}}</text>
      <sha1>671wkb0dld2b55i9xen82d5ki6ami2b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/acsct</title>
    <ns>10</ns>
    <id>201095</id>
    <revision>
      <id>1551445</id>
      <timestamp>2009-06-29T13:19:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>ActionScript scripting language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = ActionScript
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User acsct|ActionScript]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>50xa51y03nxqrnuhiauiuf9yxt60gd2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User acsct</title>
    <ns>14</ns>
    <id>201096</id>
    <revision>
      <id>1551448</id>
      <timestamp>2009-06-29T13:19:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|acsct}}</text>
      <sha1>mwax53cvzu9uyrbzzck8xsqj39b89cj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/erlang</title>
    <ns>10</ns>
    <id>201097</id>
    <revision>
      <id>1551449</id>
      <timestamp>2009-06-29T13:20:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Erlang programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Erlang
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User erlang|Erlang]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>h3d1nref6y006yrfv3alyfc28tietww</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User erlang</title>
    <ns>14</ns>
    <id>201098</id>
    <revision>
      <id>1551451</id>
      <timestamp>2009-06-29T13:21:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|erlang}}</text>
      <sha1>11at4mrx22pt244jsgyijapn4hzwngt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/for</title>
    <ns>10</ns>
    <id>201099</id>
    <revision>
      <id>1551453</id>
      <timestamp>2009-06-29T13:22:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fortran programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Fortran
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User for|Fortan]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>8n2qfj5uvygvp3c0egkpca2un81d65u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User for</title>
    <ns>14</ns>
    <id>201100</id>
    <revision>
      <id>1551456</id>
      <timestamp>2009-06-29T13:23:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|for}}</text>
      <sha1>d63eza6zj2u9ti54zqkp8mitvewr9w8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/fth</title>
    <ns>10</ns>
    <id>201101</id>
    <revision>
      <id>1551457</id>
      <timestamp>2009-06-29T13:23:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Forth programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Forth
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User fth|Forth]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>4nv0rthqcpnl5ii3gpixxok5epatdjr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User fth</title>
    <ns>14</ns>
    <id>201102</id>
    <revision>
      <id>1551459</id>
      <timestamp>2009-06-29T13:27:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|fth}}</text>
      <sha1>kiz764urbby8a5zxevusgk0g5aihfyb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/lisp</title>
    <ns>10</ns>
    <id>201103</id>
    <revision>
      <id>1551461</id>
      <timestamp>2009-06-29T13:28:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Lisp programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lisp
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User lisp|Lisp]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>qbeizr9yh6qpfgbnplw7niidu0eo6dd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lisp</title>
    <ns>14</ns>
    <id>201104</id>
    <revision>
      <id>1551463</id>
      <timestamp>2009-06-29T13:28:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|lisp}}</text>
      <sha1>69f8y7p90kjh57nbr4gztdfvduh86j3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/lua</title>
    <ns>10</ns>
    <id>201105</id>
    <revision>
      <id>1551464</id>
      <timestamp>2009-06-29T13:29:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Lua programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lua
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User lua|Lua]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>swvckmcyyo412statnp4ak7p3cszght</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lua</title>
    <ns>14</ns>
    <id>201106</id>
    <revision>
      <id>1551465</id>
      <timestamp>2009-06-29T13:30:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|lua}}</text>
      <sha1>f1dxcak841zq3sq2nstsjmylk2w98d9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/math</title>
    <ns>10</ns>
    <id>201107</id>
    <revision>
      <id>1551467</id>
      <timestamp>2009-06-29T13:30:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Mathematica programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Mathematica
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User math|Mathematica]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>195o285mz649xpfh4mffiahvzkofe5c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User math</title>
    <ns>14</ns>
    <id>201108</id>
    <revision>
      <id>1551468</id>
      <timestamp>2009-06-29T13:31:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|math}}</text>
      <sha1>dcnn8xq98hyuqnq2diag3hn1gik5y4z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/pro</title>
    <ns>10</ns>
    <id>201109</id>
    <revision>
      <id>1551469</id>
      <timestamp>2009-06-29T13:32:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Prolog programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Prolog
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User pro|Prolog]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>hi9ovwcv9pum00bpxoxpb0eb6vj61ik</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pro</title>
    <ns>14</ns>
    <id>201110</id>
    <revision>
      <id>1551471</id>
      <timestamp>2009-06-29T13:33:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|pro}}</text>
      <sha1>h8ccbqwo9d5fpxwcj6regpdb3zjnbtv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/sch</title>
    <ns>10</ns>
    <id>201111</id>
    <revision>
      <id>1551472</id>
      <timestamp>2009-06-29T13:33:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Scheme programming language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Scheme
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User sch|Scheme]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>dpsaer3fuhd357oborip53j9ci3ceej</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sch</title>
    <ns>14</ns>
    <id>201112</id>
    <revision>
      <id>1551473</id>
      <timestamp>2009-06-29T13:34:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|sch}}</text>
      <sha1>3guf4jis79bgeojox3766tduljyp1zc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/mysql</title>
    <ns>10</ns>
    <id>201113</id>
    <revision>
      <id>1551491</id>
      <timestamp>2009-06-29T14:39:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>MySQL programming</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = MySQL
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User mysql|MySQL]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>p7zh60f05hx5zbdgyvzzo1ja544afdf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mysql</title>
    <ns>14</ns>
    <id>201114</id>
    <revision>
      <id>1551493</id>
      <timestamp>2009-06-29T14:42:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|mysql}}</text>
      <sha1>rcnxhmtdadbto487btodbrxs650mri9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/tcl</title>
    <ns>10</ns>
    <id>201115</id>
    <revision>
      <id>1551494</id>
      <timestamp>2009-06-29T14:44:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Tcl scripting language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Tcl
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User tcl|Tcl]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>6f6c9o2yy0ux8nfg57m3vj1x2hinwvx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User tcl</title>
    <ns>14</ns>
    <id>201116</id>
    <revision>
      <id>1551495</id>
      <timestamp>2009-06-29T14:44:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|tcl}}</text>
      <sha1>obpwnkeybm7yvw7u6t3zix73v8jvgfz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/vbs</title>
    <ns>10</ns>
    <id>201117</id>
    <revision>
      <id>1551496</id>
      <timestamp>2009-06-29T14:47:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>VBScript</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = VBScript
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User vbs|VBScript]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>j9ojuca8pfn93w5j6izjb7evzu5dth9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vbs</title>
    <ns>14</ns>
    <id>201118</id>
    <revision>
      <id>1551497</id>
      <timestamp>2009-06-29T14:47:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|vbs}}</text>
      <sha1>mo470xkmc1hgdbsklyl3hmzew935g4k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/vbn</title>
    <ns>10</ns>
    <id>201119</id>
    <revision>
      <id>1551499</id>
      <timestamp>2009-06-29T14:51:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Visual Basic .NET</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Visual Basic .NET
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User vbn|Visual Basic .NET]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>t69lr5pz6fxg2s2d61dxfwoksidsc91</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vbn</title>
    <ns>14</ns>
    <id>201120</id>
    <revision>
      <id>1551501</id>
      <timestamp>2009-06-29T14:52:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|vbn}}</text>
      <sha1>e4zfbl84pf2950ck2tny2vamu6su8tp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/latex</title>
    <ns>10</ns>
    <id>201121</id>
    <revision>
      <id>1551503</id>
      <timestamp>2009-06-29T14:56:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>LaTeX markup language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = LaTeX
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User latex|LaTeX]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>o3g71wveeqqecwh6nrztzaqm8954eis</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Numbers from 1 to 20/3</title>
    <ns>111</ns>
    <id>201122</id>
    <revision>
      <id>2031698</id>
      <parentid>1760911</parentid>
      <timestamp>2011-02-16T21:40:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>substituting Template:Unsigned</comment>
      <text xml:space="preserve">Ummmm... actually their are 2 lemons in the picture.... &lt;small&gt;&lt;span class=&quot;autosigned&quot;&gt;—Preceding [[w:Wikipedia:Signatures|unsigned]] comment added by [[User:67.188.5.45|67.188.5.45]] ([[User talk:67.188.5.45|discuss]] • [[Special:Contributions/67.188.5.45|contribs]]) 2009-06-29T16:57:36&lt;/span&gt;&lt;/small&gt;
:Didn't notice that, replaced the picture (now shows kiwis, 2 wholes and one cut). [[User:Soeb|Soeb]]&amp;nbsp;&lt;sup&gt;[[User_talk:Soeb|talk]]&amp;#124;[[Special:Contributions/Soeb|contribs]]&lt;/sup&gt; 17:16, 29 June 2009 (UTC)
::That's ''still'' confusing in my opinion.  It would be far better to find a picture of something that has not been cut. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 19:54, 29 June 2009 (UTC)
:::I tried but had no time yesterday, help would be appreciated. [[User:Soeb|Soeb]]&amp;nbsp;&lt;sup&gt;[[User_talk:Soeb|talk]]&amp;#124;[[Special:Contributions/Soeb|contribs]]&lt;/sup&gt; 08:19, 30 June 2009 (UTC)
:::: Yeah, I tried too, but didn't find a nice image of three in the Commons after ten minutes or so of hunting.  I'll take another crack at it tonight if I can find time. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:21, 30 June 2009 (UTC)
::::: Maybe this one? [http://commons.wikimedia.org/wiki/File:Three_mikan.JPG] A bit poor quality though.

---

I'm sorry but showing pre-readers two whole kiwis and two half kiwis is confusing for those who do not understand division.  Absolute simplicity ought to be the rule here.  If the number is three, there should be three things, not two and two halves. [[Special:Contributions/70.81.107.25|70.81.107.25]] ([[User talk:70.81.107.25|talk]]) 11:42, 19 April 2010 (UTC)

:After almost a year of confusing &quot;three's&quot; I think this one is sufficiently unambiguous:
[[File:James Flamingos MC.jpg|thumb|center]]
{{clear}}
If someone finds a better picture of three... go for it.  Here are two others I considered:
[[File:7005 poussins 2.JPG|thumb|left|]]
[[File:Three birds running.JPG|thumb|right]]
These were in the [[:Commons:Commons:Quality images/Subject/Animals/Birds]] gallery at the commons, taken from the Quality Images.  They also have mammals and other subjects too. I selected the flamingos from these three because the colors are more vivid and this is a children's book.  Kids like color, right? --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 13:06, 19 April 2010 (UTC)
{{clear}}</text>
      <sha1>qnijtam488suouoo3rg3k2pgk7izr1w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User latex</title>
    <ns>14</ns>
    <id>201123</id>
    <revision>
      <id>1551505</id>
      <timestamp>2009-06-29T14:58:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|latex}}</text>
      <sha1>7zwyz6p81h8jbgnf87tafyod1tdfv58</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/xml</title>
    <ns>10</ns>
    <id>201124</id>
    <revision>
      <id>1551506</id>
      <timestamp>2009-06-29T15:00:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>XML</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = XML
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User xml|XML]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>c85xvexy1lbj7dlp4atuy5aws0gxgf2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User xml</title>
    <ns>14</ns>
    <id>201125</id>
    <revision>
      <id>1551508</id>
      <timestamp>2009-06-29T15:01:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|xml}}</text>
      <sha1>cpnvn6njrg2lhmriu5eh91nwo6zefoe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/xhtml</title>
    <ns>10</ns>
    <id>201126</id>
    <revision>
      <id>1551513</id>
      <timestamp>2009-06-29T15:03:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>XHTML markup language</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = XHTML
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} coder in '''[[:Category:User xhtml|XHTML]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>hha0vwjeo6tv6e8qo7hjso57b47mkvx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User xhtml</title>
    <ns>14</ns>
    <id>201127</id>
    <revision>
      <id>1551514</id>
      <timestamp>2009-06-29T15:05:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{Usersprogram|xhtml}}</text>
      <sha1>ovd5h22e6mv2in5u7bwekg8rcoty9ya</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User opr</title>
    <ns>10</ns>
    <id>201128</id>
    <redirect title="Template:User opera" />
    <revision>
      <id>1551523</id>
      <timestamp>2009-06-29T15:23:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User opr]] to [[Template:User opera]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User opera]]</text>
      <sha1>2671s7pjik2cx8lh4rpdpsl27fs11gl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Birmingham</title>
    <ns>0</ns>
    <id>201129</id>
    <revision>
      <id>2361132</id>
      <parentid>1670655</parentid>
      <timestamp>2012-06-08T20:29:10Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

&lt;h1&gt;Birmingham City Schools Laptop Initiative&lt;/h1&gt;

&lt;h2&gt;Demographics&lt;/h2&gt;
Birmingham City Schools services a total of 26,500 students in 57 schools consisting of 29 elementary schools, 12 middle schools, 8 K-8 schools, 7 high schools, and one alternative school.&lt;ref&gt;http://birmingham.schoolinsites.com/?PN=AboutUs&lt;/ref&gt;  The district is 80% economically disadvantaged and ethnicity breakdown is 97% black, 1% white, 2% Hispanic, and .2% Asian/pacific islander.&lt;ref&gt;http://www.schoolmatters.com/schools.aspx/q/page=dp/did=13987&lt;/ref&gt;  Nine Board members that are elected by the city’s different districts govern the district.  

&lt;h2&gt;Initiative and Importance&lt;/h2&gt;
[[File:Larry Langford speaks to the children.jpg|right|thumb|302px|Mayor Larry Langford speaking with students.]]
In late 2007, Birmingham mayor, Larry Langford, announced that every first through eighth grader in the Birmingham City schools would be provided an [http://laptop.org/en/laptop/ XO] laptop.  This would be the first large scale implementation of XO computers in the United States.  In early 2008, Langford was given permission by the city council to purchase 15,000 XO laptops for distribution in the schools.  The approved budget for this program was $3.5 million and was proposed to come from a fund that provided scholarships to high school seniors with a C-average or better.  This budget would cover the $200 cost per XO laptop.  The city also sought private donations.  In February 2008 an additional $500,000 was added to the costs to make improvements for internet access.  Langford also proposed the &quot;Right Spot&quot; initiative for Birmingham which would give local churches wireless internet.&lt;ref name=&quot;bam&quot;&gt;http://www.bhamwiki.com/w/Birmingham_Schools%27_XO_laptops&lt;/ref&gt;  

In the laptop initiative the students would own the laptops and would be able to take them home.  The school board hesitated at the offer and “said they had not been consulted on the program and had concerns about the district's ability to integrate the machines into instruction.” &lt;ref&gt;http://www.eschoolnews.com/news/top-news/?i=53412%3B_hbguid=1dee89eb-3081-424d-a80b-49ac8311e7b7&lt;/ref&gt;  Board member Dannetta K. Thornton Owens also had reservations about &quot;stigmatizing Birmingham students with computers made for &quot;poor&quot; children&quot;.&lt;ref name=&quot;bam&quot;&gt;http://www.bhamwiki.com/w/Birmingham_Schools%27_XO_laptops&lt;/ref&gt;    In April 2008, 1000 laptops were approved for a pilot program in Glen Iris elementary school.  The outcome of this pilot would help the district to decide on accepting the other 14,000 laptops that were purchased.  The first laptops arrived at Glen Iris on April 21, 2008.  Tala Professional Services, who was hired to oversee the implementation, found the existing infrastructure in Glen Iris to be insufficient to support the computers.  Improvements were made at a cost of $37,000.  This gave a projected cost of $1.3 million for system wide implementation.  On July 8, 2008, the school board voted to accept the remaining 14,000 laptops.&lt;ref name=&quot;bam&quot;&gt;http://www.bhamwiki.com/w/Birmingham_Schools%27_XO_laptops&lt;/ref&gt;  During the summer of 2008 a workshop for the new computers was held at the Birmingham Public Library with a few students attending.  An &quot;[http://www.techbirmingham.com/xo-expo/ XO eXpO]&quot; was also held in August to highlight the XO computers and early implementation experiences from Glen Iris. 

By the end of the 2008/2009 school-year, laptops had been distributed to students up to sixth grade with a pilot running in seventh grade.  The laptops are considered the students’ property and are utilized at home.  Laptops are currently being purchased for next year’s first graders. Wireless networks are also being installed in Birmingham schools, and all schools will have wireless access by Fall 2009.  Currently there is no scheduled district evaluation of the program, however University of Alabama at Birmingham has conducted small evaluations of the initiative.   

Mayor Langford initially said that this program “will give many inner-city children their first access to a computer”&lt;ref&gt;http://www.foxnews.com/story/0,2933,335288,00.html&lt;/ref&gt;and that &quot;We live in a digital age, so it is important that all our children have equal access to technology and are able to integrate it into all aspects of their lives.&quot;&lt;ref name=&quot;blog&quot;&gt;http://blog.al.com/spotnews/2007/12/birmingham_city_schools_will_b.html&lt;/ref&gt; Langford also referenced eliminating the 'digital divide'.  Stan Mims, the district's superintendent said, &quot;Our students will have access to global thinking now.&quot;&lt;ref name=&quot;blog&quot;&gt;http://blog.al.com/spotnews/2007/12/birmingham_city_schools_will_b.html&lt;/ref&gt;  This is a big step in a district that has a high poverty rate and is seeing declining enrollment.  The laptops are a way of extending curriculum in the district and giving students exposure to current technology.


''Follow this link to watch a video that outlines initial reactions about the implementation in Birmingham.'' [http://olpc.tv/2008/11/18/birmingham-alabama-deploys-15000-xo-laptops/ Click Here]


&lt;h2&gt;Successes and Problems&lt;/h2&gt;
The biggest success that has resulted from the Birmingham City Schools laptop initiative is the student response.  The students greatly enjoy working with the computers and have taken on a sense of ownership with the machines- “The kids love them.”  The laptops are being integrated into the regular classroom curriculum and the students are responding positively.  The open source software is helping to extend learning and motivate students.  There has also been an increase in peer learning due to the laptops.  One example of how the laptops are being used to extend learning is in the Glen Iris elementary school.  This past year the school had a ''[http://scratch.mit.edu/ Scratch]'' festival that focused on using the laptops to explore science concepts.  Students worked in small groups to produce cartoons or commercials using ''[http://scratch.mit.edu/ Scratch]'' that demonstrated a science concept.  An independent panel then judged the projects.&lt;ref name=&quot;interview&quot;&gt;Wilson, Dr. Michael, Principal Glen Iris elementary. (Phone interview, June 25, 2009)&lt;/ref&gt;    

	While there were obstacles to overcome, and future hurdles, the school district is working hard to make sure the laptop initiative goes smoothly and carries its effectiveness in the future.  The first major problem encountered in the project was distributing the laptops.  Since the initiative was started on the city level, the school district had not prepared to handle the distribution of 15,000 laptops across the district.  While this was a “big job”, the district was able to accomplish the first step of the initiative and overall it went well.&lt;ref name=&quot;interview2&quot;&gt; Moxley,B. IT Department BCS. (Phone interview, June 25, 2009)&lt;/ref&gt;  

	The next obstacle the district took on was teacher training.  With the implementation of any new technology in schools, there will be teachers that are not comfortable.  To make sure the laptops are used effectively, there needs to be a variety of training methods utilized to prepare teachers.  Glen Iris elementary used federal money to hire consultants to help with their training.  Teachers participated in focus groups, and received individual and group training.  Across the district there was a large push to make sure teachers were ready and willing to use the laptops in their classrooms. &lt;ref name=&quot;interview&quot;&gt; Wilson, Dr. Michael, Principal Glen Iris elementary. (Phone interview, June 25, 2009)&lt;/ref&gt;   

	While the XO computers do not need a wireless network to function, it can allow for more flexibility and enhance the use of computers.  Initially the Birmingham schools were not wireless.  Since the adoption of the XO computers schools are being converted for wireless capabilities.  The first round of schools to receive a wireless network were chosen by Board members, however it is hoped that all schools in the Birmingham City schools will be wireless by Fall of 2009.  The costs associated with this plan were not part of the initial laptop initiative.  Becoming wireless is a push by the school district to make sure students can get the most out of the new technology.&lt;ref name=&quot;interview2&quot;&gt; Moxley,B. IT Department BCS. (Phone interview, June 25, 2009)&lt;/ref&gt;  

	Other problems that the district has encountered are software differences and laptop repair.  Since the XOs open source software is not usually found on PCs and Macs, teachers and students are getting use to using the new programs.  This has been a minor problem, however it does create more of a stretch to integrate the computers into the curriculum.  Also since the laptops belong to the children, there are the inevitable repairs that will need to happen.  As of right now repairs are handled locally.  Some of the repairs can be costly, which adds a greater expenditure for the school district.&lt;ref name=&quot;interview2&quot;&gt;  Moxley,B. IT Department BCS. (Phone interview, June 25, 2009)&lt;/ref&gt;           

&lt;h2&gt;Summary&lt;/h2&gt;	
Overall the Birmingham Schools initiative is proving to be a success.  While the implementation had hurdles such as distribution, teacher training, and inadequate infrastructure, the laptops are now in the classrooms.  The greatest response has been from the students who now have access to their own computer.  Open source software is used to extend learning and help prepare students for the future, while keeping operating cost at a minimum for the district.  With an emphasis on staff training, schools have developed teachers that are able to effectively use the machines and implement them in the classroom.  With continual training, teachers will become more proficient with the machines.  It appears that the Birmingham initiative has forward momentum and will continue to provide students with tools they need.

&lt;h2&gt;References&lt;/h2&gt;
{{reflist}}</text>
      <sha1>kctm2ljh9msx7rfb329k7a181hjlfl2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User browser:Firefox</title>
    <ns>10</ns>
    <id>201130</id>
    <redirect title="Template:User firefox" />
    <revision>
      <id>1551526</id>
      <timestamp>2009-06-29T15:45:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User browser:Firefox]] to [[Template:User firefox]]: Matching naming style of other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User firefox]]</text>
      <sha1>lc8sf4wwroesaodjk6xy3bqovfyfsw9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template talk:User browser:Firefox</title>
    <ns>11</ns>
    <id>201131</id>
    <redirect title="Template talk:User firefox" />
    <revision>
      <id>1551528</id>
      <timestamp>2009-06-29T15:45:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template talk:User browser:Firefox]] to [[Template talk:User firefox]]: Matching naming style of other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template talk:User firefox]]</text>
      <sha1>edyyi3u13q7kh8nd6iu4ar7s4v4dy95</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Firefox users</title>
    <ns>14</ns>
    <id>201132</id>
    <revision>
      <id>1558419</id>
      <parentid>1554184</parentid>
      <timestamp>2009-07-03T22:20:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+description</comment>
      <text xml:space="preserve">{{user firefox|category=}}{{clear}}
Add {{tlx|User firefox}} to your user page to add the above userbox and place yourself in this category.

[[Category:Users by web browser|Firefox]]</text>
      <sha1>449n0c3nw2fhs50e0gqbhmct5wsw6md</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:GIMP users</title>
    <ns>14</ns>
    <id>201133</id>
    <revision>
      <id>1554199</id>
      <parentid>1554198</parentid>
      <timestamp>2009-07-01T03:16:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed transclusion</comment>
      <text xml:space="preserve">{{user gimp|category=}}{{clear}}
Add {{tlx|User gimp}} to your user page to add the above userbox and place yourself in this category.

[[Category:Users by software|GIMP]]</text>
      <sha1>7kd7wqngit5d7s9x50fs5q9tj564hce</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Inkscape users</title>
    <ns>14</ns>
    <id>201134</id>
    <revision>
      <id>1554197</id>
      <parentid>1551543</parentid>
      <timestamp>2009-07-01T03:14:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>recat and documentation</comment>
      <text xml:space="preserve">{{user inkscape|category=}}{{clear}}
Add {{tlx|User inkscape}} to your user page to add the above userbox and place yourself in this category.

[[Category:Users by software|Inkscape]]</text>
      <sha1>hiysrocnu7gzfmjz1gpjixss2wkdghb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Prime Rib Seasoning</title>
    <ns>102</ns>
    <id>201136</id>
    <revision>
      <id>1785552</id>
      <parentid>1551560</parentid>
      <timestamp>2010-05-02T22:10:36Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Spice Mix recipes]]

This seasoning will elevate your rib roast to steakhouse quality. Oh, and don't let me start on how good this is on steak.

== Ingredients ==
* 1 cup celery seed
* 1/4 cup salt
* 1/2 cup coarsely ground black pepper
* 1/4 cup coarsely ground coriander seed
* 2 tsp mesquite smoke powder
* 1/4 cup chipotle powder

== Procedure ==
#Combine all ingredients in an airtight container with a shaker lid.</text>
      <sha1>jg65kqzatzxjec87kz7pxcz19smdyfy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>AnyLang Programming Language Comparison</title>
    <ns>0</ns>
    <id>201137</id>
    <revision>
      <id>2238587</id>
      <parentid>2223002</parentid>
      <timestamp>2011-12-19T18:24:16Z</timestamp>
      <contributor>
        <username>Dreftymac</username>
        <id>43016</id>
      </contributor>
      <comment>ed</comment>
      <text xml:space="preserve">This book is a general-purpose comparison of a few mainstream programming languages. The purpose of this book is to illustrate some very basic similarities and differences between languages; as well as to explain some common basic principles and concepts.

== Contents ==   
# {{stage short|100%|2009-06-29 10:24:34}} [[/Introduction/]]   
## {{stage short|50%|2009-06-29 10:24:34}} [[/Introduction/Variables|Variables]]   
# {{stage short|25%|2009-06-29 10:24:34}} [[/Variables and data structures/]]   
# {{stage short|25%|2009-06-29 10:24:34}} [[/Object Oriented Programming/|Object Oriented Programming (OOP)]]
# {{stage short|75%|2009-10-29 10:24:34}} [[/Anylang Core Concepts/|Anylang Core Concepts]]
# {{stage short|75%|2009-10-29 10:24:34}} [[/Anylang Common Concepts/|Anylang Common Concepts]]
# {{stage short|25%|2009-10-29 10:24:34}} [[/Appendix/|Appendix]]
# {{stage short|100%|2009-10-29 10:24:34}} [[/Appendix:PLEAC_Crossref/|Appendix: PLEAC Crossref]]
# {{stage short|100%|2011-09-29 10:24:34}} [[/Appendix:FeatureCompleteSoftware|Appendix: Feature Complete Software]]
&lt;!-- 
BEFORE ADDING A NEW SECTION HERE, FIRST PUT THE CONTENT INTO [[AnyLang_Programming_Language_Comparison/Development]] UNTIL THERE IS ENOUGH MATERIAL 

see also
http://en.wikibooks.org/wiki/Computer_Programming#Common_concepts

--&gt;

== Incorporated content ==
This book also incorporates content from other sources available on-line:

=== PLEAC cross-reference ===
* [[/Appendix:PLEAC_Crossref:Arrays/|PLEAC Arrays]]
* [[/Appendix:PLEAC_Crossref:Cgi_programming/|PLEAC Cgi_programming]]
* [[/Appendix:PLEAC_Crossref:Classes_objects/|PLEAC Classes_objects]]
* [[/Appendix:PLEAC_Crossref:Database_access/|PLEAC Database_access]]
* [[/Appendix:PLEAC_Crossref:Dates_and_times/|PLEAC Dates_and_times]]
* [[/Appendix:PLEAC_Crossref:Directories/|PLEAC Directories]]
* [[/Appendix:PLEAC_Crossref:File_access/|PLEAC File_access]]
* [[/Appendix:PLEAC_Crossref:File_contents/|PLEAC File_contents]]
* [[/Appendix:PLEAC_Crossref:Hashes/|PLEAC Hashes]]
* [[/Appendix:PLEAC_Crossref:Internet_services/|PLEAC Internet_services]]
* [[/Appendix:PLEAC_Crossref:Numbers/|PLEAC Numbers]]
* [[/Appendix:PLEAC_Crossref:Packages_libraries_modules/|PLEAC Packages_libraries_modules]]
* [[/Appendix:PLEAC_Crossref:Pattern_matching/|PLEAC Pattern_matching]]
* [[/Appendix:PLEAC_Crossref:Process_management/|PLEAC Process_management]]
* [[/Appendix:PLEAC_Crossref:References_and_record/|PLEAC References_and_record]]
* [[/Appendix:PLEAC_Crossref:Sockets/|PLEAC Sockets]]
* [[/Appendix:PLEAC_Crossref:Strings/|PLEAC Strings]]
* [[/Appendix:PLEAC_Crossref:Subroutines/|PLEAC Subroutines]]
* [[/Appendix:PLEAC_Crossref:User_interfaces/|PLEAC User_interfaces]]
* [[/Appendix:PLEAC_Crossref:Web_automation/|PLEAC Web_automation]]

== See also ==
* [http://pleac.sourceforge.net/ PLEAC Multi-language Programming Language Cookbook]
* [http://rigaux.org/language-study/syntax-across-languages.html Syntax Across Languages]

{{Subjects|Computer programming languages}}   
{{Alphabetical|A}}
{{status|25%}}
__NOTOC__</text>
      <sha1>0nivagr6m7lh9rsok46t96av92ixiza</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>AnyLang Programming Language Comparison/Introduction</title>
    <ns>0</ns>
    <id>201138</id>
    <revision>
      <id>2238586</id>
      <parentid>1712413</parentid>
      <timestamp>2011-12-19T18:23:39Z</timestamp>
      <contributor>
        <username>Dreftymac</username>
        <id>43016</id>
      </contributor>
      <comment>ed</comment>
      <text xml:space="preserve">== Introduction ==

This book is designed for people who want to quickly compare common operations in different programming languages. There is also some background and instruction for people who want to enhance their understanding of basic programming concepts.

=== Quick comparisons ===
The following links are useful for making quick comparisons between programming language concepts:

* [[AnyLang_Programming_Language_Comparison/Appendix:PLEAC_Crossref|PLEAC Crossref]] contains links to sections within PLEAC.

== Background ==

There are many programming languages that are considered &quot;mainstream&quot; and are in common use by computer programmers. There are also strong feelings and preferences for particular languages that vary depending on the individual. This difference is a source of variety and lots of choices. It can also be a source of confusion, especially for those who have the responsibility or the interest to understand how the different programming languages relate to one another.

The AnyLang Programming Language Comparison is intended as a guide to help individuals learn the differences and similarities between some mainstream programming languages. It is also intended to help explain some concepts and ideas that are common to some mainstream programming languages, and contemporary computer programming culture in general. 

This guide is intended as a general-purpose overview and is therefore best used in conjunction with other authoritative sources for those who wish to learn in detail about any specific language or concept. Some of the content in this guide is sourced from the English language edition of Wikipedia.&lt;ref&gt;[http://en.wikipedia.org/wiki/Main_Page]&lt;/ref&gt;

=== Understand common concepts and jargon ===

Part of the difficulty of comparing and unifying concepts across multiple languages derives from the sheer volume and variety of terminology. Moreover, there are some subtle differences in meaning for common terms. There are also very common terms that are used frequently, but rarely if ever defined unambiguously.

The circumstance of vague and ambiguous usage of common terms in some computer programming circles can make it difficult for those who are just beginning to understand some of the more well-defined terms. Moreover, plain-language explanations of terms may be hard to come by, since differences in understanding may make translation of core concepts extremely difficult, even for someone who is motivated to explain and clarify.

'''Examples of Multi-Meaning Jargon (MMJ):'''
* object oriented
* polymorphic
* strong typing
* weak typing
* duck typing
* overloading
* closure

It should be emphasized that any person or group of people may understand these terms and also have clear, unambiguous definitions for them. The issue is not the validity of the terms, but rather the extent to which they retain practical relevance in communicating ideas to those uninitiated in their usage within any given programming sub-culture.

=== Enhance understanding through simple source code comparison ===

One way to help minimize the confusion and obfuscation inherent in multi-meaning jargon is to restate matters in practical terms wherever possible. Practical considerations include things like:

* how much typing does it take to create a program that obtains a specific, well-defined result
* what is the difference in the amount of typing (hand-entry) it takes when comparing languages
* how many different ways are there of organizing hand-entered code
&lt;!-- consider namespaces, classes, namespaces in xml --&gt;
* how many different ways are there of organizing files consisting of hand-entered code
* what are the practical benefits of having a book on programming in comparison to a personal friend who knows programming

Since this book places an emphasis on these practical considerations, the primary focus is on comparing source code. The theoretical and domain-specific motivations behind the various languages is left to the experts. For this book, there is little more than a bare look at the source code as the primary basis for comparison.

&lt;!--
xah lee programming
http://xahlee.org/Periodic_dosage_dir/skami_prosa.html

volume and variety
http://books.google.com/books?id=v6tVJ43nuD0C&amp;pg=PA122&amp;lpg=PA122&amp;dq=%22volume+and+variety%22&amp;source=bl&amp;ots=vwY2OfzTzx&amp;sig=POCPMWxBwl4KMTi9XZahWN0_9io&amp;hl=en&amp;ei=gTq-SsWWAo7-sQPRz4xU&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=15#v=onepage&amp;q=%22volume%20and%20variety%22&amp;f=false

== Introduction == 

Sometimes a programmer is required to maintain code written in a language that is not the primary one used by the programmer. In cases such as this it can be tedious and difficult to carry over concepts from the &quot;known&quot; programming language into the &quot;unknown&quot; programming language.

The AnyLang Programming Language Comparison was written as a tool to help deal with this kind of scenario.

=== Conventions used in this book ===

==== AnyLang concepts as &quot;language neutral&quot; ====

AnyLang concepts are not necessarily dependent on the conventions or idioms of any particular programming language. The purpose is to provide a &quot;context neutral&quot; convention as a basis for comparison. There may, however be some similarity between the context-neutral conventions and those of one or more real programming languages.
--&gt;

== Notes and references ==
{{reflist}}
{{BookCat}}</text>
      <sha1>f6vfxx2hw1gbzkse0vqezxcb2974f3j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Prime Rib</title>
    <ns>102</ns>
    <id>201139</id>
    <revision>
      <id>1694311</id>
      <parentid>1551574</parentid>
      <timestamp>2010-01-09T21:51:02Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Beef recipes]] [[Category:Expensive recipes]] [[Category:Smoked recipes]] [[Category:Barbecue recipes]]

== Ingredients ==
* 1 4-bone standing rib roast, prime grade
* [[Cookbook:Prime Rib Seasoning|Prime Rib seasoning]], as needed
* Canola oil, as needed
* Large mesquite chunks

== Directions ==
#Coat roast with oil. Shake on seasoning and massage into meat.
#Place '''dry''' mesquite chunks into firebox of a 250° smoker.
#Insert a probe thermometer into center of roast and set for 118°.
#Place roast into smoker and lower heat to 200°. Cook until internal temperature is achieved, changing mesquite as needed.
#Remove and grill on high heat for 7 minutes or until desired crust is achieved.
#Remove and let rest 10 minutes. Serve.</text>
      <sha1>e1h7rhsfv1k1v84sn5copxf4pmmomli</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Adrignola/Contribs</title>
    <ns>2</ns>
    <id>201142</id>
    <redirect title="Template:User contribs" />
    <revision>
      <id>1551592</id>
      <timestamp>2009-06-29T17:40:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[User:Adrignola/Contribs]] to [[Template:User contribs]]: Moving into template namespace</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User contribs]]</text>
      <sha1>hay0479iq8x2s0xgfv3a458kp1792zl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikibooks-related user templates</title>
    <ns>14</ns>
    <id>201143</id>
    <revision>
      <id>1551595</id>
      <timestamp>2009-06-29T17:41:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Stats and Tools</title>
    <ns>4</ns>
    <id>201144</id>
    <revision>
      <id>1555945</id>
      <parentid>1551984</parentid>
      <timestamp>2009-07-02T15:18:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User contribs}}
{{usbk|User contrib}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>m9az0zmj9wdn3zyhw6b0lc029ody6sh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Statistics user templates</title>
    <ns>14</ns>
    <id>201145</id>
    <revision>
      <id>1551600</id>
      <timestamp>2009-06-29T17:48:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Wikibooks-related user templates]]</text>
      <sha1>72qdfvnv62kr9ifsij1z534bmlpc9yq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Medical Physiology/Cellular Physiology/Cell junctions and Tissues</title>
    <ns>1</ns>
    <id>201146</id>
    <revision>
      <id>1551605</id>
      <parentid>1551604</parentid>
      <timestamp>2009-06-29T17:56:53Z</timestamp>
      <contributor>
        <username>Boumphreyfr</username>
        <id>232282</id>
      </contributor>
      <text xml:space="preserve">This section is more or less complete and is ready for editing and review. I have gone lightly on the detail as 1. It is really the realm of Anatomy and Histology, and 2. Where appropriate to physiology it will be covered in other sections of the book. I have said little about Cance and cell junctions. Perhaps someone with knowlege in this area could add a section.--[[User:Boumphreyfr|Boumphreyfr]] ([[User talk:Boumphreyfr|talk]]) 17:56, 29 June 2009 (UTC)</text>
      <sha1>8f3sx8bm61don87t5b8g9cuymq0iw6q</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Mathematics user templates</title>
    <ns>14</ns>
    <id>201149</id>
    <revision>
      <id>1551623</id>
      <timestamp>2009-06-29T18:36:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User student</title>
    <ns>10</ns>
    <id>201151</id>
    <redirect title="Template:User university" />
    <revision>
      <id>1551636</id>
      <timestamp>2009-06-29T19:05:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User student]] to [[Template:User university]]: Matching content of userbox</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User university]]</text>
      <sha1>bem9iw7p9339wnxb7sc80buqrobg07c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Education user templates</title>
    <ns>14</ns>
    <id>201152</id>
    <revision>
      <id>1551638</id>
      <timestamp>2009-06-29T19:06:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Education</title>
    <ns>4</ns>
    <id>201155</id>
    <revision>
      <id>2149900</id>
      <parentid>1664487</parentid>
      <timestamp>2011-07-27T04:24:00Z</timestamp>
      <contributor>
        <username>BrandonHoward</username>
        <id>455497</id>
      </contributor>
      <comment>Adding userbox for Associates of Science degree.</comment>
      <text xml:space="preserve">==Students==
{{usbktop}}
{{usbk|User homeschooler}}
{{usbk|User university}}
{{usbkbottom}}

==Qualifications==
{{usbktop}}
{{usbk|User AS}}
{{usbk|User BS}}
{{usbk|User MS}}
{{usbkbottom}}

==Professional qualifications and designations==
{{usbktop}}
{{usbk|User a+}}
{{usbk|User network+}}
{{usbkbottom}}

==Extra-curricular activities and organizations==

{{BookCat}}</text>
      <sha1>nc7vxe0tn45m5pwpvjelsj4lharocb9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:87.217.99.86</title>
    <ns>3</ns>
    <id>201157</id>
    <revision>
      <id>1551713</id>
      <parentid>1551651</parentid>
      <timestamp>2009-06-29T19:43:08Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <text xml:space="preserve">
==[[Media Centers Based on Wyplayer/Firmware]]==
{{mbox|type=notice|msg=
[[Media Centers Based on Wyplayer/Firmware|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Media Centers Based on Wyplayer/Firmware}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. &amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 19:21, 29 June 2009 (UTC)
}}

Please do not remove queries until they are explained. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 19:43, 29 June 2009 (UTC)</text>
      <sha1>tui58m7fxyxb1yabzotan9bhplikscf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Hotmail</title>
    <ns>10</ns>
    <id>201161</id>
    <redirect title="Template:User hotmail" />
    <revision>
      <id>1551685</id>
      <timestamp>2009-06-29T19:30:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Hotmail]] to [[Template:User hotmail]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User hotmail]]</text>
      <sha1>i1vzjeg1qcshmtvdcidgju6dss0tg6i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Beef Brisket Sandwiches</title>
    <ns>102</ns>
    <id>201162</id>
    <revision>
      <id>1558084</id>
      <parentid>1558080</parentid>
      <timestamp>2009-07-03T21:20:58Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Beef recipes]] [[Category:Barbecue recipes]] [[Category:Smoked recipes]]

== Ingredients ==
:1 8-10 lb. beef brisket
:1 cup Barbecue Rub
:1 cup Dijon mustard
:Large mesquite chunks, as needed
:Hamburger buns for serving

:1/2 cup vinegar mixture from [[Cookbook:North Carolina-Style BBQ Ribs|North Carolina-Style BBQ Ribs]], plus more for serving

== Directions ==
#Place mesquite into the firebox of a 250° smoker.
#Trim fat cap to 1/4 inch. Place brisket into a large foil pouch and pour in vinegar mixture, 1/4 cup Worcestershire sauce, and 1/4 cup honey. Place pouch in smoker and cook for 6 hours, changing chunks as needed.
#Remove brisket from pouch, spread mustard evenly on it, and massage Rub into meat. Place brisket back into smoker and cook for 10 hours, changing chunks as needed.
#Separate brisket halves along fat line. Slice across the grain as thinly as humanly possible, chop roughly, and place serving portion in halved buns. 
#Place some vinegar mixture into a squirt bottle and serve with sandwiches.</text>
      <sha1>t8pety8gzwnkf92wha2ldqe8zdqlp0p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Pizza</title>
    <ns>10</ns>
    <id>201163</id>
    <redirect title="Template:User pizza" />
    <revision>
      <id>1551699</id>
      <timestamp>2009-06-29T19:36:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Pizza]] to [[Template:User pizza]]: Matching casing of other User templates</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User pizza]]</text>
      <sha1>d0mmuvcjbxrzp33u53zv0a527um1wtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Spaghetti</title>
    <ns>10</ns>
    <id>201164</id>
    <redirect title="Template:User spaghetti" />
    <revision>
      <id>1551702</id>
      <timestamp>2009-06-29T19:38:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Spaghetti]] to [[Template:User spaghetti]]: Matching casing of other User templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User spaghetti]]</text>
      <sha1>32slne1y8yazgme9eatl90cypitlah6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Marinade recipes</title>
    <ns>14</ns>
    <id>201165</id>
    <revision>
      <id>1560315</id>
      <parentid>1551703</parentid>
      <timestamp>2009-07-05T02:16:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category.</comment>
      <text xml:space="preserve">{{cooknav}}

Recipes that make a marinade to be stored in advance.

[[Category:Recipes by preparation technique]]</text>
      <sha1>lp0h9v5ukm50nouwiw3gjh896o1cpgo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Pancakes</title>
    <ns>10</ns>
    <id>201166</id>
    <redirect title="Template:User pancakes" />
    <revision>
      <id>1551709</id>
      <timestamp>2009-06-29T19:40:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Pancakes]] to [[Template:User pancakes]]: Matching casing of other User templates</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User pancakes]]</text>
      <sha1>qwbi5h7qyqahhvr07j969f78jn6zgn3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Coke Pepsi</title>
    <ns>10</ns>
    <id>201167</id>
    <redirect title="Template:User coke pepsi" />
    <revision>
      <id>1551715</id>
      <timestamp>2009-06-29T19:45:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Coke Pepsi]] to [[Template:User coke pepsi]]: Matching casing of other User templates</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User coke pepsi]]</text>
      <sha1>ahd7zqpqkjbfbnyoz5s6qoipxiwvbaw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chicken Marinade</title>
    <ns>102</ns>
    <id>201168</id>
    <revision>
      <id>1702907</id>
      <parentid>1561433</parentid>
      <timestamp>2010-01-22T23:05:05Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Marinade recipes]] [[Category:Chicken recipes]]

== Ingredients ==
* 1/2 cup chicken broth
* 3/4 cup white wine
* 2 tbsp Worcestershire sauce
* 2 tbsp lemon pepper
* 3 tbsp cayenne pepper
* 1/4 cup honey
* 2 tbsp minced garlic
* 3 sprigs rosemary, finely chopped
* 1/4 cup extra-virgin olive oil
* 1 tbsp finely grated lemon zest
* 10 sprigs thyme, finely chopped
* 2 tbsp salt
* 2 tbsp black pepper

== Procedure ==
#Combine all ingredients in a gallon size zip-top bag. Refrigerate for up to 2 weeks.</text>
      <sha1>pe0pjavc1prw0bhmxb4cjfer4f3gupl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User coke pepsi</title>
    <ns>10</ns>
    <id>201169</id>
    <revision>
      <id>1939600</id>
      <parentid>1551753</parentid>
      <timestamp>2010-09-26T13:20:43Z</timestamp>
      <contributor>
        <username>Simon Peter Hughes</username>
        <id>386069</id>
      </contributor>
      <comment>To avoid using &quot;their&quot; to mean &quot;his/her&quot;.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: blackpx solid red; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: white;&quot;
| style=&quot;width: 45px; height: 45px; background: #CC0000; text-align: center; font-size: {{{id1-s|14}}}pt; color: white;&quot; | '''C'''
| style=&quot;font-size: 8pt; color: black; padding: 1px 3px 1px 3px; line-height: 0.95em;&quot; | This user can't decide if [[w:Coca-Cola|Coke]] or [[w:Pepsi|Pepsi]] is better and drinks both.
| style=&quot;width: 45px; height: 45px; background: #003399; text-align: center; font-size: {{{id2-s|{{{id1-s|14}}}}}}pt; color: white;&quot; | '''P'''
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Food user templates|Coke Pepsi]]&lt;/noinclude&gt;</text>
      <sha1>5v6mems0k9b9vhylznp6n63k35310as</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:213.207.40.76</title>
    <ns>3</ns>
    <id>201170</id>
    <revision>
      <id>1551745</id>
      <timestamp>2009-06-29T19:48:26Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>Created page with '==Query Notice== {{subst:Query notice|Greek Mythology/Gods/Hestia|~~~~}}'</comment>
      <text xml:space="preserve">==Query Notice==
==[[Greek Mythology/Gods/Hestia]]==
{{mbox|type=notice|msg=
[[Greek Mythology/Gods/Hestia|This page]] appears to have been created in error (due to a test, or some kind of [[Help:Editing|misplaced edit]]). It might be a [[Help:Stub|stub]], if so, please use [[{{TALKPAGENAME:Greek Mythology/Gods/Hestia}}|the discussion page]] as to explain what this page is about. If it evolves into a [[WB:WIW|legitimate Wikibooks module]], you may remove the tag. If not fixed, explained, or improved, it will automatically be considered a candidate for [[Wikibooks:Deletion policy#Speedy deletions|speedy deletion]] in 7 days. [[User:Jomegat|Jomegat]] ([[User talk:Jomegat|talk]]) 19:48, 29 June 2009 (UTC)
}}</text>
      <sha1>ow4fbprgr220cs7ohf1i1myezeg1k2h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Coke pepsi</title>
    <ns>10</ns>
    <id>201172</id>
    <redirect title="Template:User coke pepsi" />
    <revision>
      <id>1551750</id>
      <timestamp>2009-06-29T19:50:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Coke pepsi]] to [[Template:User coke pepsi]]: Accidentally moved to wrong location.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User coke pepsi]]</text>
      <sha1>ahd7zqpqkjbfbnyoz5s6qoipxiwvbaw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Drink</title>
    <ns>4</ns>
    <id>201173</id>
    <revision>
      <id>1555924</id>
      <parentid>1551974</parentid>
      <timestamp>2009-07-02T15:12:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">==Coffee==


==Tea==


==Soft drinks==
{{usbktop}}
{{usbk|User coke pepsi}}
{{usbkbottom}}

==Alcoholic beverages==

{{BookCat}}</text>
      <sha1>00nz9nu9k3wl4kozql35rwdlhuy1qkm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Ethiopia</title>
    <ns>0</ns>
    <id>201174</id>
    <revision>
      <id>1763260</id>
      <parentid>1564438</parentid>
      <timestamp>2010-04-20T19:58:22Z</timestamp>
      <contributor>
        <ip>12.181.211.2</ip>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

&lt;h1&gt;OLPC in Ethiopia&lt;/h1&gt;&lt;br&gt;
[[Image:One Laptop Per Child - Menelik II teacher training (by).jpg|200px|thumbnail|left]]
Ethiopia is one of the oldest African countries with a population of 85 million. About 16 million are in-school students (Hollow, 2008). The majority of schools in Ethiopia are located in Addis Ababa province. This case study is describing One-to-One Laptop Initiative in Ethiopia that follows the successful trials of 60 laptops used in class in Addis Ababa.
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Initiative&lt;/h1&gt;&lt;br&gt;
Ethiopia’s OLPC initiative is a result of a Get One Give One (G1G1) 2007 American and Canadian promotion. The program’s promotion concluded in December 2007 and described that participants who donated $399 would cover the cost of one laptop to be distributed by OLPC to one of its least-developed partner countries. The participant would also get to keep one of the laptops (G1G1, 2007). Today the OLPC initiative has projects in over 30 countries and the 2008 G1G1 program supports the production of 150,000 XO laptops. More information regarding the G1G1 initiative can be found at http://wiki.laptop.org/go/G1G1
&lt;br&gt;
&lt;br&gt;
The OLPC's mission is to provide a child with a laptop. So &quot;Why give a laptop to a child that may have no electricity or running water?&quot; (One Laptop Per Child on 60 minutes, 2007). The answer to that question becomes clear when you replace the word &quot;Laptop&quot; with &quot;Education&quot;. According to Nicholas Negroponte the answer is to &quot;Eliminate poverty and create world peace by providing education to the poorest and most remote children on the planet by making them more active in their own learning, through collaborative and creative activities, connected to the Internet with their own laptop, as a human right and cost free to them&quot; (OLPC Foundation). 
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Implementation&lt;/h1&gt;&lt;br&gt;
[[Image:Ethiopia-olpc-school.jpg|200px|thumbnail|left]]
The Ethiopian’s OLPC initiative is led by the project manager Eskender Andualem. Eskender and the ECBP team (Engineering Capacity Building Program) use the Ethiopian engineering capacity building as a primary distribution and teaching building of XO laptops. The development phase of OLPC initiative included the awareness of the project, teacher training and content distribution. In order to successfully prepare the program implementation the project team had to demonstrate the value of XO Laptop in education.  The team met with OLPC experts and educational bureau to discuss and share their experiences with the program. The team also participated in Information Communication Technologies exhibitions where students would demonstrate the XO laptops and their success in education. 
The professional training included more than 220 teachers from the Addis Ababa region. For many it was a new experience learning and teaching with computers.
Ato Ashenafi, an 8th grade math teacher has expressed that he wished he had the teaching opportunity with a computer long time ago. Many traditional instructional materials have been converted to support the new teaching opportunity. The project guidelines called for collection of regional text-books and conversion to a digital format compatible with XO. Because of the costs and limitation on instructional copies it was concluded that all references should be compatible with XO. The project has collaborated with Eduvision and Macmillan to produce interactive teaching materials.
&lt;br&gt;
&lt;br&gt;
[[Image:Ethiopia-olpc.jpg|200px|thumbnail|right]]
The first OLPC in Ethiopia implemented a 60-laptop initiative on a one-year test phase in two schools in Addis Ababa. The second and current implementation includes a 5000-laptop program in four primary schools of Ethiopia. These schools include Atse Naod, Menelik II, Rema and Mullo Sayyoo. 
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Atse Naod&lt;/b&gt; is an elementary rural school and has 40 teachers and 780 students. Atse Naod received 800 XO laptops grades 2 to 8. The classes were big, some had around 70 students according to the EECB. Few students already had computers at home. It has been reported that school's electrical socket were broken, on average one per classroom (Drake, 2008).
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Menelik II&lt;/b&gt; is a larger school in Addis Ababa that has 120 teachers and 2270 students. This school received 2390 XO laptops. Some problems have occurred with teacher training and school management (Drake, 2008).
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Rema&lt;/b&gt;, in Amhara region, about 6 hours drive from Addis Ababa received 446 XO laptops. Rema has 20 teachers and 424 students. It is important to note that Rema is solely powered by solar energy. Thus some obstacles occurred with charging the XO laptops. Each laptop was provided with personal solar panel charger (Drake, 2008).
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Mullo Sayyoo&lt;/b&gt;, is located two hours outside of Addis Ababa. This school received 637 laptops grades 2 to 7 and has 17 teachers and 620 students.(OLPC Ethiopia) Each classroom has one power socket. There is no lightning fixtures installed. Students had very poor to no understanding of a computer in this school (Drake, 2008).
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;XO replacing Books&lt;/b&gt;&lt;br&gt;
Eduvision has helped to produce an interactive textbook called Akili. Akili is written in C++ language and uses Quicktime and Webkit an open source browser for content delivery. According to the project Wiki book the format for most Ethiopian curriculum textbooks is in Akili XML file format (OLPC Ethiopia). According to Hollow (2008) the idea behind the Akili text reader was to eliminate the teacher when used XO outside the school and have students be the agents of their own central learning. Students would be the ones to shape and define their own progress in education. The book and other instructional content had to be digitized to Akili's format in order to be supported by XO, however there were some difficulties. The OCR recognition software did not include Ahmaric language. 
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Professional Training and XO Content&lt;/b&gt;&lt;br&gt;
According to Hollow (2008), students were very pleased to hear about the OLPC laptops initiative. Most of the teachers supported the idea as well. The major obstacle was the professional teacher and student training. It has been noted that the students expressed concern about the proper use of educational content by teachers. In other words teachers were not prepared well to carry the instructional lessons using the XO Laptop. Additionally the lack of content for the XO was slowing the program marginally. Hollow (2008) described that students reported that they used laptops mostly at home, but not in classes, and that was due to the poor integration mechanics. Students and teachers had a poor understanding of XO educational capabilities, -- some students treated the laptop as a toy. Some parents expressed frustration that students used laptops for playing rather than spending more time studying. Similarly some teachers complained that students played with laptops in class rather than paying attention to lectures. Sometimes students would play with the audio software resulting in a chaos in class. Other Teachers reported that they had no problems with students using the XO to look up instructions during class. If however they started to distract from the lesson, teacher would appropriately make a remark to those students, and they would pay attention to lecture.
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Elements responsible for successful planning&lt;/h1&gt;&lt;br&gt;
According to Koscev (2009), from the German Technical Cooperation foundation, the most successful aspect of  planning process responsible for the OLPC success was the teacher training. Teachers did not know much about the technology. It took over a year for the teachers to get accustomed to teaching methods with XO laptop. Teachers use laptops much more in last few months than they did before, however the use of the laptops in classroom was scaled down. Training include innovative learning to reform the teaching practices and didactics in elementary schools.
&lt;br&gt;
&lt;br&gt;
The ECBP itself was very helpful with the project. Eskander and 6 people from ICT were leading the project and educating the teachers. They were really helpful with their expertise to promote and manage the project.
&lt;br&gt;
&lt;br&gt;
So far the students are learning quick, most of the time quicker than the teacher. They have learned how to read, write and draw on XO. A very positive report from a 2nd grade student describes that he first learnt how to open the computer, then draw and then save and open files to read (ECBP, 2008). Some critics have speculated that giving students laptops instead of paper and pencil wasn't a good investment. However, according to Abebe Checkol, a pilot project manager students get much more benefit from the XO laptop that justifies it cost down the road. Each student has a $50 financial support, -- the laptop costs much more. Checkol describes that that schools had problems with getting instructional materials, sometimes that would have different ones at different locations. Checkol said that with XO you have access to the same materials at all schools (ECBP, 2008). According to Wossenyelesh Kassahun, a teacher in Atse Narod primary school &quot;These laptops can be a pen where there is no pen, there can be a book where there is no book. Introducing these kids at the early age will help them attain what others have with better access have attained&quot; (ECBP, 2008).
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Elements responsible for problems with OLPC program&lt;/h1&gt;&lt;br&gt;
According to Koscev (2009), the most problematic issue was the planning. Planning was a very big challenge to Ethiopia's OLPC team. The environment is different, people and their traditions are different. The set out plan included planning, time-line and deployment, but because there was so much else going on in the field that it was virtually impossible to follow deadlines and time-lines. Koscev (2009) said that pushing set project goals does not work. It only angers local people. It was very hard for them to adopt European ways of scheduling and planning.
&lt;br&gt;
&lt;br&gt;
Another issue related to the problems with OLPC initiative in Ethiopia were the stakeholders. There are many donors in Ethiopia. However it was very hard to get people into supporting initiative and resources at the beginning. Presently there are two people assigned and paid from educational berau in Ethiopia to help with the project. There are also members in various level of administration and steering committees that help lead the movement.
&lt;br&gt;
&lt;br&gt;
The parents themselves expressed concern regarding the XO laptop. They had a fear of what is going to happen if the laptop breaks. They were unsure who will pay or replace the parts. 
&lt;br&gt;
&lt;br&gt;
Solar charging panels for Rema's school were delayed. The team had to cancel the contract with the solar energy foundation after a while. They did not provide sufficient power wattage. The charger station was only 200 watts instead of 2000 watts.
&lt;br&gt;
&lt;br&gt;
There were also some technical problems at the beginning phase of laptop deployment. The major obstacle included the laptop running the Linux operating system. Because of that the team had no technical support who understood how the system operates. Daniel Drake a python programmer was invited for 6 months to help with coding patches. He help write the keyboard patch to include Arhmeic language. Additionally the technical support system was non existent. The logistical issues presented themselves when 5000 laptops showed up and there was very little help. The team had to re-flush the operating system to minimize the initial installation bugs. It took them few weeks for all the laptops to function properly. Presently the technical support is located in every school. There is help from local universities, -- college students volunteer to help. They also help with monitoring and evaluation.
&lt;br&gt;
&lt;br&gt;
Lastly the issue with the School Server was resolved. It provides access to instructional resources for all the laptops. There are 2 school servers in Addis Ababa for students to download books and materials. However the server limits active connection to 15 at the time. Teachers and students take turns to download resources. There is also no access to Internet. It is very expensive to run an Internet connection, even something small like ISDN.
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;Summary&lt;/h1&gt;&lt;br&gt;
OLPC in Ethiopia has introduced a complete revamp of traditional curriculum. It has changed the way that students and teachers perceive education. For some it was a brand new experience,  some never knew the concept of computers. But the focus of the Ethiopian's OLPC team was to overcome all of the challenges and continue the project with set educational goals. Recent press coverage had showed that the program may encounter some financial difficulties. According to Africa News (2009) the OLPC project initiative funding may collapse the project. The future of XO in Ethiopia is uncertain at this point. Recently Crunchgear (2009) reported that the schools in Ethiopia are banning the laptops for being a toy like. Ethiopian curriculum places emphasis on memorization and basic scholastic values, where XO initiative focus on exploration and individual learning. According to Matron Koscev the laptops are not being banned, however their use in classroom is getting scaled back (Koscev, 2009). The Italian government has pledged in 2007 to purchase 50,000 laptops for Ethiopia, however there has been no recent mention of this promise. Because the OLPC in Ethiopia is more than education (Koscev, 2009), the project is looking to expand the use of the program to pilot additional one. Ethiopia's team would like to deploy additional 500 laptops in more rural schools next year.

&lt;h1&gt;References&lt;/h1&gt;&lt;br&gt;
Africa News (2009). Ethiopia: Lack of funding collapsing OLPC RetrievedJune 25, 2009 from Africa News: http://www.africanews.com/site/Ethiopia_Lack_of_funding_collapsing_OLPC/list_messages/23495
&lt;br&gt;
&lt;br&gt;
Crunchgear. (2009). OLPC banned in many Ethiopia classrooms for being toylike. Retrieved June 25, 2009 from: http://www.crunchgear.com/2009/06/17/olpc-banned-in-many-ethiopia-classrooms-for-being-toylike/
&lt;br&gt;
&lt;br&gt;
ECBP (2008). OLPC in Ethiopia. Retrieved June 26, 2009 from Youtube: http://www.youtube.com/watch?v=Bj3DSCwfOfs
&lt;br&gt;
&lt;br&gt;
Ethiopia. (n.d.). Retrieved June 25, 2009 from Wikipedia: http://en.wikipedia.org/wiki/Ethiopia
&lt;br&gt;
&lt;br&gt;
Ethiopia’s first OLPC deployment (2008). Retrieved June 25, 2009 from dsd’s weblog: http://www.reactivated.net/weblog/archives/2008/09/ethiopias-first-olpc-deployment/
&lt;br&gt;
&lt;br&gt;
Drake, D. (2008). OLPC in Ethiopia. Retrieved June 25, 2009 from dsd's weblog: http://wiki.laptop.org/images/b/b5/OLPC_ETHIOPIA_PRES..pdf
&lt;br&gt;
&lt;br&gt;
G1G1. (n.d.). Retrieved June 25, 2009 from The OLPC Wiki: http://wiki.laptop.org/go/G1G1_2007
&lt;br&gt;
&lt;br&gt;
Hollow, D. (2009). Africa Gathering: The $100 laptop in Ethiopia. Retrieved June 25, 2009 from David Hollow at Africa Gathering: http://www.africagathering.org.uk/2009/06/05/david-hollow-at-africa-gathering/
&lt;br&gt;
&lt;br&gt;
Koscev, M. (2009, June 30). Telephone interview. 
&lt;br&gt;
&lt;br&gt;
OLPC Ethiopia. (n.d.). Retrieved June 25, 2009 from OLPC Ethiopia: http://wiki.laptop.org/go/OLPC_Ethiopia
&lt;br&gt;
&lt;br&gt;
OLPC Foundation. (n.d.). Retrieved June 25, 2009 from Mini Laptops and Notebooks: http://www.mini-laptops-and-notebooks.com/one-laptop-per-child.html
&lt;br&gt;
&lt;br&gt;
One Laptop Per Child on 60 minutes. (2007). Retrieved June 25, 2009 from OLPC Talks: http://www.olpctalks.com/nicholas_negroponte/olpc_60_minutes_interview.html</text>
      <sha1>3awkmhxnykidycim10cjgz19yfg2csb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User HipHop</title>
    <ns>10</ns>
    <id>201177</id>
    <redirect title="Template:User hip hop" />
    <revision>
      <id>1551783</id>
      <parentid>1551779</parentid>
      <timestamp>2009-06-29T20:10:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User hip hop]]</text>
      <sha1>fhz3g6c27ui69mqxkox4b60ws5vj4qe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User heavy metal music</title>
    <ns>10</ns>
    <id>201179</id>
    <redirect title="Template:User heavy metal" />
    <revision>
      <id>1551788</id>
      <timestamp>2009-06-29T20:12:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User heavy metal music]] to [[Template:User heavy metal]]: Shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User heavy metal]]</text>
      <sha1>sp9hlcqaba8fwk1eomdvo3g7hf8n5b3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User rock music</title>
    <ns>10</ns>
    <id>201180</id>
    <redirect title="Template:User rock" />
    <revision>
      <id>1551791</id>
      <timestamp>2009-06-29T20:12:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User rock music]] to [[Template:User rock]]: Shorter name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User rock]]</text>
      <sha1>47p1kzq2cxd2xvm8my5y9skzcabbs7r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Cricketer</title>
    <ns>10</ns>
    <id>201183</id>
    <redirect title="Template:User cricketer" />
    <revision>
      <id>1551816</id>
      <timestamp>2009-06-29T20:34:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Cricketer]] to [[Template:User cricketer]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User cricketer]]</text>
      <sha1>nx37ku2osno361btv20gwgdvgjbnwvk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Sports user templates</title>
    <ns>14</ns>
    <id>201184</id>
    <revision>
      <id>1551818</id>
      <timestamp>2009-06-29T20:37:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Footballer</title>
    <ns>10</ns>
    <id>201185</id>
    <redirect title="Template:User footballer" />
    <revision>
      <id>1551820</id>
      <timestamp>2009-06-29T20:39:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Footballer]] to [[Template:User footballer]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User footballer]]</text>
      <sha1>bagt14fyz5v8ib3kquj4iuh89abj2ya</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User footballer</title>
    <ns>10</ns>
    <id>201186</id>
    <revision>
      <id>1551843</id>
      <parentid>1551841</parentid>
      <timestamp>2009-06-29T20:41:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed sort key and links.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #F88;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: {{{5|{{{id-s|14}}}}}}pt; color: {{{id-fc|black}}};&quot; | '''[[File:Soccerball.svg|40px]]'''
| style=&quot;font-size: {{{info-s|8}}}pt; padding: 4pt; line-height: 1.25em; color: {{{info-fc|black}}};&quot; | This user plays '''[[w:Football (soccer)|football]]''' with hands '''only''' when [[w:Goalkeeper|tending goals]].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Sports user templates|Footballer]]&lt;/noinclude&gt;</text>
      <sha1>ra0qeu7bsnu3coolm9174yp8l8hbe2b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Sports</title>
    <ns>4</ns>
    <id>201188</id>
    <revision>
      <id>1560016</id>
      <parentid>1560015</parentid>
      <timestamp>2009-07-04T22:59:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Removed headings.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User cricketer}}
{{usbk|User footballer}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>eh324c84nibasbfn9sqfuxr3rzm7xfb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cvg-4</title>
    <ns>10</ns>
    <id>201190</id>
    <redirect title="Template:User video games" />
    <revision>
      <id>1551863</id>
      <parentid>1551855</parentid>
      <timestamp>2009-06-29T20:53:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed double redirect.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User video games]]</text>
      <sha1>6o49lbtked81qziap8wyo2bhm9a0twm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Game user templates</title>
    <ns>14</ns>
    <id>201191</id>
    <revision>
      <id>1551859</id>
      <timestamp>2009-06-29T20:51:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cvg</title>
    <ns>10</ns>
    <id>201192</id>
    <redirect title="Template:User video games" />
    <revision>
      <id>1551862</id>
      <timestamp>2009-06-29T20:53:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User cvg]] to [[Template:User video games]]: Matching content of template and better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User video games]]</text>
      <sha1>6o49lbtked81qziap8wyo2bhm9a0twm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Grand Theft Auto</title>
    <ns>10</ns>
    <id>201193</id>
    <redirect title="Template:User grand theft auto" />
    <revision>
      <id>1551867</id>
      <timestamp>2009-06-29T21:01:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Grand Theft Auto]] to [[Template:User grand theft auto]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User grand theft auto]]</text>
      <sha1>ktizr3pooamiyexvljohb8rlqvnm1on</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Ribs</title>
    <ns>102</ns>
    <id>201194</id>
    <revision>
      <id>1694313</id>
      <parentid>1556822</parentid>
      <timestamp>2010-01-09T21:51:54Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]] [[Category:Barbecue recipes]] [[Category:Smoked recipes]]

== Ingredients ==
*1 slab St. Louis pork spareribs                                                    
*5 tbsp [[Cookbook:Barbecue Rub|Barbecue Rub]]
*1/2 cup apple cider vinegar
*1/2 cup tomato paste
*1/4 cup blackstrap
*1/4 cup light molasses
*2 tbsp Worcestershire sauce
*Large hickory chunks

== Procedure ==
#Massage ribs with Rub. Refrigerate for 1 hour.
#Combine remaining ingredients except for hickory in a large saucepan and bring to a boil over high heat until reduced by 1/2.
#Place chunks in firebox of 250° smoker.
#Place ribs in smoker and cook, brushing often with tomato mixture and changing chunks as needed, for 5-6 hours.
#Brush ribs generously with mixture and grill on high heat, brushing repeatedly until well browned on both sides.
#Remove and let rest 10 minutes. Serve.</text>
      <sha1>gp3agictlpiudxddci4y4p6ufn132tq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Civilization</title>
    <ns>10</ns>
    <id>201195</id>
    <redirect title="Template:User civilization" />
    <revision>
      <id>1551873</id>
      <timestamp>2009-06-29T21:04:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Civilization]] to [[Template:User civilization]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User civilization]]</text>
      <sha1>j4klqh4ftl0qk8teeprbuggi8rsmp30</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ps2</title>
    <ns>10</ns>
    <id>201196</id>
    <redirect title="Template:User ps2 superior" />
    <revision>
      <id>1551883</id>
      <timestamp>2009-06-29T21:11:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User ps2]] to [[Template:User ps2 superior]]: More descriptive name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User ps2 superior]]</text>
      <sha1>dolqrpwjwv9jsuydjqw7ecehrekp1ja</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ps3superior</title>
    <ns>10</ns>
    <id>201197</id>
    <redirect title="Template:User ps3 superior" />
    <revision>
      <id>1551886</id>
      <timestamp>2009-06-29T21:12:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User ps3superior]] to [[Template:User ps3 superior]]: Two words.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User ps3 superior]]</text>
      <sha1>htm7f2lsltm7jwuefx4zrp32f1ltlql</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Games</title>
    <ns>4</ns>
    <id>201198</id>
    <revision>
      <id>1560241</id>
      <parentid>1555926</parentid>
      <timestamp>2009-07-05T01:37:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Removed unused headings.</comment>
      <text xml:space="preserve">==Board games==
{{usbktop}}
{{usbk|User chess}}
{{usbkbottom}}

==Card games==


==Computer and video games==
{{usbktop}}
{{usbk|User civilization}}
{{usbk|User grand theft auto}}
{{usbk|User ps2 superior}}
{{usbk|User ps3 superior}}
{{usbk|User video games}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>q60qgwgm7d5dhztf6suoexqb3s1wm6u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbecue Chicken</title>
    <ns>102</ns>
    <id>201199</id>
    <revision>
      <id>1694306</id>
      <parentid>1694305</parentid>
      <timestamp>2010-01-09T21:47:57Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>any salt will do</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Chicken recipes]] [[Category:Barbecue recipes]]

== Ingredients ==
:2 each chicken thighs, legs, and breasts

'''Brine'''

:1 cup salt
:1 quart water
:1/2 cup dark brown sugar
:4 cloves garlic, minced
:2 tbsp finely grated lemon zest
:1 quart salt-free chicken broth

'''Sauce'''

:1 cup tomato paste
:1/4 cup honey
:1/4 cup apple cider vinegar
:2 tbsp Worcestershire sauce

'''Rub'''

:2 tbsp paprika
:2 tbsp smoked paprika
:1 1/2 tsp each dried rosemary and dried thyme
:1 1/2 tbsp cayenne pepper
:1/2 tbsp coarsely ground black pepper
:2 tbsp dark brown sugar

== Directions ==
#Combine all brine ingredients in a 2-gallon zip-top bag. Insert chicken and refrigerate for 2 hours.
#Combine sauce ingredients and bring to a boil over medium high heat until reduced by 1/2.
#Quickly swab the grill with an oiled towel tied with twine to lube.
#Combine Rub ingredients and massage all over chicken. Refrigerate for 30 minutes.
#Grill chicken over a preheated charcoal grill, turning often, for 10 minutes. Cook, turning often and brushing with sauce when turned, until internal temperature reaches 165° in the breast and 170° for the dark meat.
#Cover with foil and let rest 7 minutes. Meanwhile, boil remaining sauce for 5 minutes and place in a squirt bottle. Serve chicken with sauce on the side.</text>
      <sha1>iwtq0npebcba1fv3zq3oip8kvm9i89c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Ravichandar84/UBX/UBXReligionHinduism</title>
    <ns>2</ns>
    <id>201200</id>
    <redirect title="Template:User hindu" />
    <revision>
      <id>1551896</id>
      <timestamp>2009-06-29T21:30:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[User:Ravichandar84/UBX/UBXReligionHinduism]] to [[Template:User hindu]]: Moving into template space.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User hindu]]</text>
      <sha1>8681liqsgg2idrt0tc2l9fdru5ly6w0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Religion user templates</title>
    <ns>14</ns>
    <id>201201</id>
    <revision>
      <id>1551899</id>
      <timestamp>2009-06-29T21:34:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Pagan</title>
    <ns>10</ns>
    <id>201202</id>
    <redirect title="Template:User pagan" />
    <revision>
      <id>1551906</id>
      <timestamp>2009-06-29T21:39:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Pagan]] to [[Template:User pagan]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User pagan]]</text>
      <sha1>oturx6qt66xekjk757ek1hof5fovjm1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Religion</title>
    <ns>4</ns>
    <id>201203</id>
    <revision>
      <id>2172733</id>
      <parentid>1555944</parentid>
      <timestamp>2011-09-27T18:32:56Z</timestamp>
      <contributor>
        <username>Hethrir</username>
        <id>459931</id>
      </contributor>
      <comment>Added christianity</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; margin-right: 10px;&quot;&gt;__TOC__&lt;/div&gt;
Userboxes on religion are expected to comply with Wikibooks policies and guidelines. Offensive, derogatory, or hateful userboxes will be deleted.
{{clear}}

==Abrahamic religions==
{{usbktop}}
{{usbk|User muslim}}
{{usbkbottom}}

==Christianity==
{{usbktop}}
{{usbk|User christian}}
{{usbkbottom}}

==Folk religions==
{{usbktop}}
{{usbk|User pagan}}
{{usbkbottom}}

==Indian religions==
{{usbktop}}
{{usbk|User hindu}}
{{usbkbottom}}

==Lack of religion==


==Spirituality==
{{usbktop}}
{{usbk|User pope}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>fsolbu0mcy6k2udmglz86oajoy18a85</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User red</title>
    <ns>10</ns>
    <id>201204</id>
    <revision>
      <id>1557084</id>
      <parentid>1551919</parentid>
      <timestamp>2009-07-03T17:29:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid grey 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: red;&quot;
| style=&quot;width: 45px; height: 45px; background: red; text-align: center; font-size:14pt; color:pink;&quot; | '''R'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:pink;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''red'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Red]]&lt;/noinclude&gt;</text>
      <sha1>6te3wslz0zhgvcld103mp09fr0y97qo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Colour user templates</title>
    <ns>14</ns>
    <id>201206</id>
    <revision>
      <id>1551920</id>
      <timestamp>2009-06-29T21:52:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Colour</title>
    <ns>4</ns>
    <id>201207</id>
    <revision>
      <id>1557106</id>
      <parentid>1555918</parentid>
      <timestamp>2009-07-03T17:40:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added templates and description.</comment>
      <text xml:space="preserve">Use &lt;nowiki&gt;{{User blah|o}}&lt;/nowiki&gt; for any of the below userboxes to display &quot;favorite&quot; and &quot;color&quot; instead.

{{usbktop}}
{{usbk|User blue}}
{{usbk|User brown}}
{{usbk|User dislike colours}}
{{usbk|User gold}}
{{usbk|User green}}
{{usbk|User grey}}
{{usbk|User orange}}
{{usbk|User pink}}
{{usbk|User rainbow}}
{{usbk|User red}}
{{usbk|User silver}}
{{usbk|User ultraviolet}}
{{usbk|User white}}
{{usbk|User yellow}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>ivbner8jjlfcov7u28qmgj1bn65v768</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grill Seasoning</title>
    <ns>102</ns>
    <id>201208</id>
    <revision>
      <id>1733683</id>
      <parentid>1551925</parentid>
      <timestamp>2010-03-10T22:37:25Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Spice Mix recipes]]

&lt;big&gt;'''For Chops'''&lt;/big&gt;

== Ingredients ==
* 1 cup dark brown sugar
* 1/4 cup salt
* 1/2 cup coarsely ground black pepper
* 3 2/3 tbsp red pepper flake
* 1/2 cup paprika
* 2 tbsp cayenne pepper
* 1/4 cup dried rosemary
* 1/4 cup garlic powder
* 1/2 cup dried apples, finely minced in the food processor

&lt;big&gt;'''Chicken'''&lt;/big&gt;

== Ingredients ==
* 1/2 cup paprika
* 1/4 cup smoked paprika
* 1/4 cup brown sugar
* 1/4 cup salt
* 1/4 cup coarsely ground black pepper
* 1/4 cup lemon pepper
* 1/4 cup cayenne pepper

&lt;big&gt;'''Extra Spicy'''&lt;/big&gt;

== Ingredients ==
* 1/2 cup cayenne pepper
* 1/4 cup salt
* 1 cup dark brown sugar
* 1/2 cup smoked paprika


== Procedure for all Mixtures ==
#Combine all ingredients in an airtight container with a shaker lid.</text>
      <sha1>gadqykahkxa56wrlnv0drl91k9uztlt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Apple Glazed Pork Chops</title>
    <ns>102</ns>
    <id>201209</id>
    <revision>
      <id>2375978</id>
      <parentid>1551934</parentid>
      <timestamp>2012-07-10T21:14:29Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>/* Directions */general cleanup, typos fixed: Refridgerate → Refrigerate using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]]

== Ingredients ==
:4 thick cut bone-in pork rib chops
:1/2 cup apple cider
:2 tbsp cider vinegar
:1 tbsp Worcestershire sauce
:[[Cookbook:Grill Seasoning|Grill Seasoning for Chops]], as needed

== Directions ==
#Shake Seasoning on pork chops. Refrigerate for 30 minutes.
#Meanwhile, combine remaining ingredients in a large sauce pan and bring to a boil over medium heat until reduced by 1/3. Remove from heat and set aside.
#Grill pork chops over high heat 2 minutes, covered. Brush with cider mixture and twist 90° and cook for 2 minutes. Flip and repeat 1 more time.
#Remove and let rest for 7 minutes. Serve with remaining cider mixture.</text>
      <sha1>hnjfxlvev516vmd646edtgijfpkrgab</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Non-Programmer's Tutorial for Python 3/Count to 10</title>
    <ns>1</ns>
    <id>201210</id>
    <revision>
      <id>2615357</id>
      <parentid>2586332</parentid>
      <timestamp>2014-03-09T09:35:50Z</timestamp>
      <contributor>
        <ip>122.249.178.169</ip>
      </contributor>
      <comment>/* Count to 10 Exercise */ new section</comment>
      <text xml:space="preserve">i am still confused about the &quot;while&quot; statement if you could clear that up for me it would be very helpful (alexander.polussa@gmail.com)
-thanks
:Could you figure out the exercise? [[User:Jrincayc|Jrincayc]] ([[User talk:Jrincayc|talk]]) 03:01, 1 July 2009 (UTC)

== Extra comments ==

I somewhat dislike the long comment on the first program in the page.  Is it confusing or looking out of place to others? Otherwise I think most of the recent changes are improvements.  [[User:Jrincayc|Jrincayc]] ([[User talk:Jrincayc|talk]]) 04:04, 30 January 2010 (UTC)


I have been working the tutorials here for python 3 but I keep getting several errors on various tutorials. Mind you I am copying the text from the code box and placing directly in a text file and running it from the command prompt. I am not getting syntax errors so I am positive the code is right. I keep getting name errors on many of the programs. For instance the password program on Chapter 3; I placed the code verbatim from the page and when I run the program I get the prompt for the password but no matter what I enter (including the correct password 'unicorn') I get name errors such as this:
&quot;NameError: name 'unicorn' is not defined.&quot; 

I can fix the issue by putting the code: unicorn = &quot;unicorn&quot; , at the beginning of the program but that obviously wont do anything to fix the name errors if I were to enter any other string (ie.. incorrect password) which the tutorial states should cause the program to just reprint &quot;Enter password&quot;.  
Please advise. Contact sm0ke42o@hotmail.com
:Anyone else getting this error? [[User:Jrincayc|Jrincayc]] ([[User talk:Jrincayc|talk]]) 03:02, 14 July 2010 (UTC)

Yes, I get the same error... please can you post a solution here or mail me (h_manoj@yahoo.com)? Thanks, Manoj.

== While loop==
The while loop is not Pythonic. Better code would be:
for i in range(1,10):print(i)

over use of varyables {{unsigned|76.89.174.71|01:05, 10 February 2013‎}}
: While you did change the examples, you forgot to update the text along with these examples.  You now have a while loop introduced by using a for loop example, a statement concerning use of the &lt;tt&gt;==&lt;/tt&gt; operator when one doesn't exist, and so on.  The correct procedure is to introduce the &lt;tt&gt;for&lt;/tt&gt; control structure, something which is already done later in the book (and is visible from the ToC).  There's also no overuse of variables, considering that you still had the same number of variables. You didn't mention why you need range(1,11) instead of (1,10) in your example, which will confuse non-programmers.  As such, I'm forced to reject the change. --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|discuss]] • [[Special:Contributions/Sigma 7|contribs]]) 18:30, 14 February 2013 (UTC)

== Fibonacci-method2.py ==

The code says: count = 0 and max_count=20. The statement is While max_count &lt; 20:
Running Fibonaccy-method2.py is giving 40 results, so max_count seemes to become 40.
Should not the output from Fibonacci-method1.py be the same as
the output from Fibonaccci-method2.py. 
(When using max_count=10 in Fibonacc-method2.py the results are identical.)
What's my missing link?

== Count to 10 Exercise ==

The Exercise at the end of &quot;Count to 10&quot; is very practical. However, it contains commands (e.g., &quot;command&quot; and &quot;key&quot;) that were not previously introduced. As this is a &quot;Non-Programmer's Tutorial&quot;, readers will likely not be able to solve the exercise (at least not as given in the solution). Perhaps introducing these commands prior or providing a solution with only known commands would help with continuity and flow.</text>
      <sha1>ar1i70gbmuu4qn58j9lyk7yxua0l9b1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Location/Europe</title>
    <ns>4</ns>
    <id>201217</id>
    <revision>
      <id>2027655</id>
      <parentid>1555941</parentid>
      <timestamp>2011-02-08T02:41:13Z</timestamp>
      <contributor>
        <username>Girdi</username>
        <id>69232</id>
      </contributor>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User United Kingdom|category=}}
{{usbkbottom}}

{{usbktop}}
{{usbk|User Belarus|category=}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>7pctb3bofb14cxmfu4lwjvdq8irms6m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/NYC</title>
    <ns>0</ns>
    <id>201221</id>
    <revision>
      <id>1552838</id>
      <parentid>1552837</parentid>
      <timestamp>2009-06-30T13:31:36Z</timestamp>
      <contributor>
        <username>Lauraturner</username>
        <id>232519</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}
&lt;h1&gt;XO Laptop Pilot Project in New York City&lt;/h1&gt;

[[Image:XO-1-open-on.jpg|left|250px|thumbnail]]
&lt;h2&gt;Introduction&lt;/h2&gt;
	In February 2008, a pilot project began in New York City, NY, to integrate laptops into an urban sixth-grade classroom. A non-profit organization called [http://www.teachingmatters.org Teaching Matters] ran this project. Teaching Matters partners with schools to help add or improve the use of technology in the classrooms. This particular project used [http://www.laptop.org/en/laptop/index.shtml XO laptops], which were developed by [http://www.laptop.org One Laptop Per Child (OLPC)], an organization created with the original purpose of giving low cost computers to children in third world countries. The XO laptops were chosen for this project because of their low cost, high quality, and easy maintenance that even a child can handle.&lt;br&gt;&lt;br&gt;
The school in this pilot project was Kappa IV, a middle school in Harlem. Kappa IV has approximately 300 students in grades 6-8, 80% of whom receive free lunch, which indicates the socioeconomic level of the student body. &lt;ref&gt; http://www.slideshare.net/cscott/olpc-in-nyc-teaching-matters&lt;/ref&gt; This school has three sixth-grade classes; only one class had the laptops initially, but at the end of the semester all three classes had them. These classrooms used a literacy curriculum developed by Teaching Matters prior to receiving the laptops. The laptops were integrated into the last three units of the curriculum.&lt;br&gt;&lt;br&gt;
Kappa IV was chosen not because it was lacking in technology, but because the environment in the school was favorable to implementing a successful pilot project, in terms of leadership, organization, and morale among teachers. The school also had a previous relationship with Teaching Matters because of the literacy curriculum they were already using.&lt;ref name=&quot;olpc_kappa.pdf&quot;&gt;http://www.teachingmatters.org/evaluations/olpc_kappa.pdf&lt;/ref&gt;&lt;br&gt;&lt;br&gt;

&lt;h2&gt;State of Technology&lt;/h2&gt;
Before the XO implementation, classrooms shared laptop carts, and often students had to share computers because some laptops were broken. This increased the student-to-computer ratio, which in turn affected the educational value of the technology - a one-to-one ratio is preferred to maximize the educational potential of a computer.&lt;ref&gt;Lowther, D., Ross, S., &amp; Morrison, G. (2003). When each one has one: The influences on teaching strategies and student achievement of using laptops in the classroom. Educational Technology Research and Development, 51(3), 23-44.&lt;/ref&gt; Teachers also had to schedule to use these carts, so the computers were not always readily available. Once students received the XO laptops, each student got their own, so there were no issues with availability or sharing computers. Students also never had to worry about losing their work, since they would always use the same computer and could save their work on it. The XOs allowed both students and teachers to save class time because the laptops were always available for each student, and ready to use when needed. &lt;ref name=&quot;olpc_kappa.pdf&quot;&gt;http://www.teachingmatters.org/evaluations/olpc_kappa.pdf&lt;/ref&gt;&lt;br&gt;&lt;br&gt;

&lt;h2&gt;Value and Importance&lt;/h2&gt;
	The XO laptop implementation pilot project at Kappa IV put computers into the hands of students in an urban school that may not have had the opportunity to have computers of their own. It allowed them to develop skills that will benefit them in the real world – Internet use, online research, and word processing, among others. It reduced the student-to-computer ratio from what was in place previously, which helps to make the technology more effective in education. Some of the special sharing functions on the XO laptops allowed for increased collaboration in the classroom and even from home. Aside from the educational benefits, it gave the students a sense of responsibility and ownership. They realized how fortunate they were to have the opportunity to use an XO laptop on their own, and took the ownership seriously.&lt;br&gt;&lt;br&gt;
[[Image:OLPC-keyboard-B2.jpg|right|200px|thumbnail]]
&lt;h2&gt;Successes and Problems of the Project&lt;/h2&gt;
	The XO pilot project was evaluated through focus groups and surveys administered to students and parents, and interviews with teachers and Teaching Matters staff. Overall, this project was viewed as being very successful by everyone involved – teachers, students, parents, and staff members of Teaching Matters.  Because there was one XO for each student, as opposed to sharing the laptops on the carts, the students used the computers more. They had more time and opportunity to read, write, revise, and research. Students liked it for composition because it was quicker to type in their work than to handwrite. They also liked being able to take it home and use it to access the Internet.&lt;ref name=&quot;olpc_kappa.pdf&quot;&gt;http://www.teachingmatters.org/evaluations/olpc_kappa.pdf&lt;/ref&gt;&lt;br&gt;&lt;br&gt;
A common theme that teachers and Teaching Matters staff noticed was that the kids shared more with each other – both physically by turning their screens to each other or virtually with the chat function. The students were also enthusiastic to share their laptops with their families when they were able to take them home.  Parents got a better glimpse of what their children were doing in school, and noticed that their children were doing their homework more. Eighteen out of nineteen parents surveyed said they would advise the New York City Department of Education to supply all students in the city with XO laptops.&lt;br&gt;&lt;br&gt;
The main complaints with this project were technology related.  The XO laptops often froze and had slow load times. Some students thought they would prefer a computer with the more familiar Windows operating system, and said they didn’t need a “childproof” computer, but other students liked the XO because it was made for kids. The sharing function of the XO laptops did not always work so teachers couldn’t rely on using it for lessons. Also, teachers preferred to use a projector during class, but the XO was not compatible with projectors, so teachers were not able to use the laptops themselves during lessons. Some students had trouble accessing the Internet at home, and both students and parents needed to learn more about how wireless networks function.&lt;ref name=&quot;olpc_kappa.pdf&quot;&gt;http://www.teachingmatters.org/evaluations/olpc_kappa.pdf&lt;/ref&gt;&lt;br&gt;&lt;br&gt;

&lt;h2&gt;Where Are They Now?&lt;/h2&gt;
	The XO laptop pilot project in Kappa IV’s 6th grade classrooms concluded at the end of the school year in 2008. Kappa IV received 15 additional XO laptops in March 2009 and there are currently a total of 32 working computers at the school. While the 6th graders in the initial study have moved onto the next grade level, the computers are still being used in the school as part of a “technology club” and are available for any teacher that is interested in using them. The school and staff members at Teaching Matters are interested in using the laptops for electronic textbooks in the future. Also, a technology lab is planned for next year to house the laptops. Everyone involved with the initial project was excited with its outcome and are optimistic for the future of the XO laptops at Kappa IV.&lt;ref&gt;S. Brujan, J. Clemente, L. Guastaferro (personal communication, June 2009)&lt;/ref&gt;&lt;br&gt;&lt;br&gt;

[[Image:LaptopOLPC_a.jpg|left|250px|thumbnail]]
&lt;h2&gt;Summary&lt;/h2&gt;
	The XO laptop pilot project at Kappa IV in New York City was a successful implementation of computers in the classroom.  Students were excited to have their own laptops, to chat and share schoolwork with each other, and to have increased access to the Internet. An observer in one of the classrooms noted that, “…learning had become playing and the kids couldn’t wait to get started.” &lt;ref&gt;http://theinnovativeeducator.blogspot.com/2008/05/big-x-and-o-for-olpcs-xos.html&lt;/ref&gt; Parents were happy that their children were more enthusiastic about their schoolwork, so they were quick to accept the project. Teachers had a way to more effectively teach their curriculum, and benefited from the students’ enthusiasm. A project like this can only succeed if everyone involved is committed to and excited about it, which is likely why this project was such a success.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

{{reflist}}</text>
      <sha1>jj030i7iamey0etbe2ko6wansvvzjhu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Book user templates</title>
    <ns>14</ns>
    <id>201222</id>
    <revision>
      <id>1552001</id>
      <timestamp>2009-06-29T23:14:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Media user templates]]</text>
      <sha1>1iacapmgnk1an0dax9sqa26t95k7s6g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Media user templates</title>
    <ns>14</ns>
    <id>201223</id>
    <revision>
      <id>1552002</id>
      <timestamp>2009-06-29T23:14:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Ravenclaw</title>
    <ns>10</ns>
    <id>201224</id>
    <revision>
      <id>1552007</id>
      <timestamp>2009-06-29T23:22:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template to go with others.</comment>
      <text xml:space="preserve">{{userbox
|border-c=#808080
|id-c=#CD7F32
|id-fc=#0047AB
|id-s=20
|id=''R''
|info-c=#00008b
|info-fc=#C0C0C0
|info=This user is a '''''Ravenclaw'''''.
}}&lt;noinclude&gt;[[Category:Book user templates|Ravenclaw]]&lt;/noinclude&gt;</text>
      <sha1>jslq2hhzsnkg789qr1uq8xyvbs5tmz5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Slytherin</title>
    <ns>10</ns>
    <id>201225</id>
    <revision>
      <id>1552008</id>
      <timestamp>2009-06-29T23:25:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template to go with others.</comment>
      <text xml:space="preserve">{{userbox
|border-c=#808080
|id-c=#dcdcdc
|id-fc=#465945
|id-s=20
|id=''S''
|info-c=#7BA05B
|info-fc=#F8F8FF
|info=This user is a '''''Slytherin'''''.
}}&lt;noinclude&gt;[[Category:Book user templates|Slytherin]]&lt;/noinclude&gt;</text>
      <sha1>i7xvwixsqmztr5bmnprm5khk8x9awqm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Hufflepuff</title>
    <ns>10</ns>
    <id>201226</id>
    <revision>
      <id>1552010</id>
      <timestamp>2009-06-29T23:30:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template to go with the others.</comment>
      <text xml:space="preserve">{{userbox
|border-c=#808080
|id-c=#000000
|id-fc=#FFFFFF
|id-s=20
|id=''H''
|info-c=yellow
|info-fc=#000000
|info=This user is a '''''Hufflepuff'''''.
}}&lt;noinclude&gt;[[Category:Book user templates|Hufflepuff]]&lt;/noinclude&gt;</text>
      <sha1>nqi10q696tm023ojrexl7oklmqf0ptb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Media</title>
    <ns>4</ns>
    <id>201227</id>
    <revision>
      <id>1555931</id>
      <parentid>1552017</parentid>
      <timestamp>2009-07-02T15:14:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">==Art==


==Books==
{{usbktop}}
{{usbk|User poetry}}
{{usbk|User self-help}}
{{usbk|User short stories}}
{{usbkbottom}}

===Harry Potter===
{{usbktop}}
{{usbk|User Gryffindor}}
{{usbk|User Hufflepuff}}
{{usbk|User Ravenclaw}}
{{usbk|User Slytherin}}
{{usbkbottom}}

==Comics==
{{usbktop}}
{{usbk|User comics}}
{{usbkbottom}}

==Film==


==Newsprint==


==Radio==


==Television==


==Theatre==


{{BookCat}}</text>
      <sha1>pqn8pi9jde2b76awxuuumry0ute9rsx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Wikibooks:Userboxes</title>
    <ns>14</ns>
    <id>201228</id>
    <revision>
      <id>1552019</id>
      <timestamp>2009-06-29T23:43:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Book category</comment>
      <text xml:space="preserve">[[Category:Wikibooks|Userboxes]]</text>
      <sha1>efvr5yf4mfr3ep2fuzql819bchqtvr9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User European History</title>
    <ns>10</ns>
    <id>201230</id>
    <redirect title="Template:User European history" />
    <revision>
      <id>1552033</id>
      <timestamp>2009-06-30T00:02:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User European History]] to [[Template:User European history]]: Matching casing of other templates</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User European history]]</text>
      <sha1>8sxmgfaf1avw1o9yh468c02tu4300r7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:History user templates</title>
    <ns>14</ns>
    <id>201231</id>
    <revision>
      <id>1552037</id>
      <timestamp>2009-06-30T00:08:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/Content Articles/1.2.1</title>
    <ns>1</ns>
    <id>201232</id>
    <revision>
      <id>1566779</id>
      <parentid>1565436</parentid>
      <timestamp>2009-07-12T16:01:28Z</timestamp>
      <contributor>
        <username>Rpaige</username>
        <id>226378</id>
      </contributor>
      <comment>/* == Reader response == */</comment>
      <text xml:space="preserve">

== == Reader response == ==
While I agree with the five reasons for teacher attrition, there are two additional reasons that I would like to share. In my area of Virginia, school divisions are often in competition with the border counties of North Carolina for teaching positions. The most popular reason for &quot;border hopping&quot; is an increase in salary often with an additional hiring bonus.  Travel expenses are being offset by the lure of more money.  If teachers meet retirement requirements in Virginia, many will go to work in North Carolina raising the controversial idea of &quot;double dipping&quot;.  Retirees can draw their pension in addition to receiving regular pay at their new teaching position.  Lastly, individuals who have difficulty achieving Virginia's test score requirement on the Praxis often head south due to less stringent requirements.  

Another reason that people leave the teaching profession is due to postiion elimination.  They do not necessarily want to leave the profession, but due to budgetary constraints the school division elimates teaching positions in the hopes of saving money.  Unfortunately many of Virginia's divisions have had to cut positions even after receiving federal stimulus funds. 

New teachers should prepare themselves for the challenges that they will face in the future.  The desire to teacher is often eclipsed by one of the many reasons listed in the article.  If you feel overwhelmed or unsupported, take the time to step back and revaluate why you chose to teach.  Look for solutions before making the life changing decision to leave the profession.  After all, no one said teaching was an easy job.  [[User:Acrow005|Acrow005]] ([[User talk:Acrow005|talk]]) 00:51, 10 July 2009 (UTC) 



This article was eye opening.  I can see how any of the five reasons that teachers leave could be true.  I hear current teachers talking about the stress of the SOLs and the pressure of passing test scores.  We all know that the salary teachers get paid and what is expected of them is off to say the least.  The new challenges teachers will face is hard to learn during your classwork.  That can only be learned in the classroom when you get your first job.  The real situations that we will face as teachers is not something that can be taught to us.  Experience and practice is the only way to learn how to handle these situations.  When you are a new teacher dealing with all 5 issues I can totally see how it will be overwhelming.  We need to be familiar with these issues and try to mentally prepare ourselves for the challenging first few years.  This article was very informative and beneficial to future teachers.
[[User:Aferg006|Aferg006]] ([[User talk:Aferg006|talk]]) 00:09, 30 June 2009 (UTC)


When I was a junior in high school that is when I began to realize why teachers would want to retire or why many people would not want to do it in general. Looking at education from an economic perspective, you only gain something substantial starting at a principal level. With the exception of special education teachers, workers below the principal do not receive as much as they should for their hard work. By “hard work” I refer to the additional duties of a teacher besides instruction and assessment. This includes behavioral and classroom management, extra-curricular activities, demanding scores from state and national standards, lack of parent support, and lack of necessary funds. This stressful list alone is enough to make many people considering education cringe and pursue something else. 

Another important aspect in this article that I liked was how new and inexperienced teachers are literally thrown into classroom and then quit after a few years. Last semester for ECI 433, I read Star Teachers by Dr. Martin Haberman, which discussed pre-service, new, and current teachers in an urban classroom. It was one of the most interesting books I have ever read, because addressed how so many new teachers are hired by school districts that need teachers, and they become so overwhelmed that they leave with a negative impression. More importantly, Haberman addressed that usually it is new teachers that are hired in urban schools, which are typically low on funds and community support. Experienced teachers, who have taught for at least ten years are usually hired in private schools. While students of urban schools ''need'' experienced teachers, they are often provided with inexperienced teachers who are still learning themselves. Naturally it is an academic disaster that is waiting to happen, even with the most dedicated new teachers. Personally, I believe that best approach that new teachers can take is to be optimistic, yet realistic. It is possible for one teacher to change the lives of 30 students in a classroom; however, it is also possible that they barely change one.  [[User:Adart001|Adart001]] ([[User talk:Adart001|talk]]) 18:03, 4 July 2009 (UTC)


It is interesting to see firsthand the list of things teachers have to face. I'll be honest in saying that I was one of those people several years ago that thought teachers had it easy; nights off, weekends off, the summer and holiday's off.  However, once I came to my senses and began schooling to become a teacher I realized their time off is well deserved. Yet, teachers don't always get weekends and night's off, many times particularly new teachers bring home work every evening and do lesson planning on the weekends.  This article put many things into perspective, and mentally prepared me for the reality of this profession. It was very eye opening to consider the various factors that drive teachers to leave.  I can't imagine being part of a school where the administration is lousy and provides no support for me as a teacher, or a lousy facility at that.  These things are bound to occur and come with the territory.  It takes someone of strong character who is up for the challenge to weather such factors and unpredictability. Needless to say, I have a tremendous amount of respect for those who have &quot;stuck it out&quot; for so many years. [[User:Rpaige|Rpaige]] ([[User talk:Rpaige|talk]]) 16:01, 12 July 2009 (UTC)</text>
      <sha1>ror3chgeqg4ip7dkqt8071dwzhhgy4c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ancient civilizations</title>
    <ns>10</ns>
    <id>201233</id>
    <revision>
      <id>1552055</id>
      <parentid>1552053</parentid>
      <timestamp>2009-06-30T00:13:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Restoring current version and cleanup</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #bbb 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #f6f6f6&quot;
| style=&quot;width: 45px; height: 45px; background: #11aa11; text-align: center; font-size: 14pt; color: #fff&quot; | [[Image:Ankh.svg|40x40px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user is interested in '''ancient civilizations'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:History user templates|Ancient civilizations]]&lt;/noinclude&gt;</text>
      <sha1>9x257quqb2rz1utq0g65827so7b25v6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/History</title>
    <ns>4</ns>
    <id>201235</id>
    <revision>
      <id>1555927</id>
      <parentid>1552056</parentid>
      <timestamp>2009-07-02T15:13:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">==Countries==


==Regional==
{{usbktop}}
{{usbk|User European history}}
{{usbkbottom}}

==Other==
{{usbktop}}
{{usbk|User ancient civilizations}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>8v1dwgjj7cea7y12cfeuc2cywq64ys1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Google</title>
    <ns>10</ns>
    <id>201236</id>
    <redirect title="Template:User google" />
    <revision>
      <id>1552058</id>
      <timestamp>2009-06-30T00:20:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Google]] to [[Template:User google]]: Matching other search engine templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User google]]</text>
      <sha1>32n2yj34vhdm598can22rhjg1zncwij</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User IRC</title>
    <ns>10</ns>
    <id>201237</id>
    <redirect title="Template:User irc" />
    <revision>
      <id>1552070</id>
      <timestamp>2009-06-30T00:42:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User IRC]] to [[Template:User irc]]: Matching naming of other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User irc]]</text>
      <sha1>0u7o381q0i3ai1gbs8kae8xa73u048j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/South Carolina</title>
    <ns>0</ns>
    <id>201238</id>
    <revision>
      <id>2157446</id>
      <parentid>1561126</parentid>
      <timestamp>2011-08-15T16:41:38Z</timestamp>
      <contributor>
        <username>Common Good</username>
        <id>94271</id>
      </contributor>
      <minor />
      <comment>/* About the Technology */ File:XO-Beta1-mikemcgregor-2.jpg</comment>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

==South Carolina==

===Introduction===
South Carolina is not a stranger to using technology or experimenting with laptops in the classroom.  In 1997 South Carolina provided 300 middle school students in Beauford County with laptop computers for use in the classroom.  The equipment and software was provided by Microsoft and Toshiba.  In January 1998 an article about their experience was published in ''Learning and Leading with Technology''.  Although the article does not report specific statistical results it appears as though the laptops were received very enthusiastically by teachers and students.  The focus on their usage appears to have been in expediting the writing process from the brainstorming stages to the final product.  It is also interesting to note that the role of the teacher seemed to change in the classrooms participating in the program.  The author reports &quot;''Teachers' roles in technology-rich classrooms can be flexible and interactive - and change constantly.  Teachers may start out acting solely as instructors, giving students the required information for their assignments.  But then they most quickly switch to other roles, such as facilitators, passive managers and active managers''&quot;&lt;ref name=&quot;LLT&quot;&gt;Gottfried, J., &amp; McFeely, M.G. (1997-1998, December/January) Learning all over the place. Learning and Leading With Technology, 25, 6-17.&lt;/ref&gt;.
&lt;br&gt;&lt;br&gt;
Fast forward a decade.  In 2007, a five million dollar state-funded program provided ninth-grade students at six high schools with laptops.  The goals of the program included improving student achievement and training students for a competitive workplace in which most jobs require working with technology&lt;ref name=&quot;sc&quot;&gt;South Carolina Pilots iAm Laptop Program (2007). Retrieved June 20, 2009, from http://www.k12blueprint.com/k12/blueprint/story_south_carolina_pilots_iam_laptop_program.php&lt;/ref&gt;.  In addition South Carolina hoped that test scores, grades and graduation rates would improve as well.  The students in the program kept their laptops throughout their high school years&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.
&lt;br&gt;&lt;br&gt;
In South Carolina's 2008 K-12 Technology Initiative progress report they explain that currently two classes have received laptops as part of this pilot but additional funding is needed to continue the program.  They describe the use of an independent company hired to evaluate this initiative.  The evaluation will look at grades, teacher’s use of technology and district costs for technology and professional services&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.
&lt;br&gt;&lt;br&gt;
The 2008 report also shows that South Carolina's progress in providing computer access to students has steadily dropped from 1999 to 2006&lt;ref name=&quot;techReport&quot;&gt;
South Carolina K-12 Technology Initiative 2008 Progress Report (2008).  Retrieved June 20, 2009 from http://www.sck12techinit.org/documents/2008AnnualReportFORWEB.pdf&lt;/ref&gt;.  However, in 2008 a new initiative was undertaken.  South Carolina launched a “one laptop per child pilot” distributing 500 XO Learning Laptops to elementary school students.  From there, the laptop program has grown to distributing 2,300 laptops in fourteen schools across the state&lt;ref name=&quot;oneLaptop&quot;&gt;One XO Learning Laptop Per South Carolinian School Child (5/7/2009). Retrieved June 20, 2009 from http://www.olpcnews.com/countries/usa/olpc_south_carolina_school_child.html&lt;/ref&gt;.
&lt;br&gt;&lt;br&gt;
In the Spring of 2009 they secured a $500,000 donation from Blue Cross &amp; Blue Shield .  They plan to order five thousand more laptops over the Fall of 2009 and possibly up to 50,000 laptops by the Spring of 2012&lt;ref name=&quot;oneLaptop&quot;&gt;One XO Learning Laptop Per South Carolinian School Child (5/7/2009). Retrieved June 20, 2009 from http://www.olpcnews.com/countries/usa/olpc_south_carolina_school_child.html&lt;/ref&gt; although it is not reported  where further funding will come from for the project expansion.

===2008 Initiative - Project Background===
The XO laptop program got off the ground in South Carolina when a Charleston technology entrepreneur was inspired by the laptops he saw during a 2005 United Nations World Summit on Information Society hosted in Tunisia.  In 2007 the State of South Carolina teamed up with a local non-profit organization (The Palmetto Project) to begin their initial pilot.  Just two short years later, Blue Cross &amp; Blue Shield joined their partnership with their half million dollar donation.  Blue Cross &amp; Blue Shield is hoping that this donation will help to better train the next generation of the South Carolina workforce to have a strong knowledge of technology&lt;ref name=&quot;bcbs&quot;&gt;
One Laptop per Child/SC Receives $500,000 from BlueCross BlueShield of South Carolina (4/23/2009). Retrieved June 20, 2009 from http://www.southcarolinablues.com/bcbs/bcbs_redo.nsf/ASC/abou_Nws_CrrntPrssRlss_177?OpenDocument&amp;Start=1&amp;Count=1000&amp;Expand=2&amp;1=1&lt;/ref&gt;.

===About the Technology===

[[File:XO-Beta1-mikemcgregor-2.jpg|200px|thumbnail]]
The &quot;XO Laptops&quot; were developed by One Laptop per Child which is a non-profit organization.  Their goal in developing this spill-proof and drop-proof laptop was to get technology into the hands of children all over the world.  This equipment allows children to connect to modern education and to each other&lt;ref name=&quot;laptopsc&quot;&gt;One Laptop per Child/SC pilot project gives personal computers to state’s youngest students (5/12/2008) Retrieved June 20, 2009 from http://laptopsc.org/?p=17&lt;/ref&gt;.

===Early Results===
Despite the fact that the laptop program is in a very early stage, South Carolina has begun to track results which look very positive.  After the initial pilot of 500 XO laptops distributed to Marion School District Seven they were used by students in the classroom and at home during the 2008-2009 school year.  During this time the teaching staff was given support by a district level technology coach and a technology coordinator.  At the end of the 2008-2009 school year the students took South Carolina's Technology Proficiency Test&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.  A staff member of the South Carolina Department of Education took the time to provide some of their successes and surprises as they analyzed their evaluation results from the initial pilot.  The following results were submitted via email correspondence.

===Successes===
*'''Student Enthusiasm'''
**&quot;Teachers reported that 86% of students exhibited enthusiasm at the thought of and when actually using the XO Laptop&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Increased Usage'''
**&quot;In school year 2007-2008 teachers reported they had from three to 10 computers in the classroom.  In school year 2008-2009 every student in the classroom had a laptop.  During the school year 2008-2009 student use of computers was estimated by teachers to be 50% more than the previous year &lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Academic Acheivement'''
**&quot;Based on teacher professional opinion, 75% saw some to a substantial gain in academic achievement that can be contributed to the use of the XO&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;
*'''Social Interaction'''
**&quot;Based on teacher professional opinion, 68% saw some to a substantial gain in student social interaction in the classroom that can be contributed to the use of the XO&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.&quot;


In addition, teachers saw improvements in motivation and test results show substantial gains in student technology skills&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.

===Surprises===
When asked about the practices in the pilot which failed to produce the expected results, the South Carolina staff member indicated that while the laptops were used for science, social studies, math and music they were largely used for research.  South Carolina plans to brainstorm and develop other ways to use the XO laptops in the classroom&lt;ref name=&quot;interview&quot;&gt;M. Ruzga (personal communication, June 16, 2009)&lt;/ref&gt;.

===Conclusion===
Early success, community support and corporate participation are excellent early indicators that the South Carolina one-to-one laptop program will be a program to watch and learn from!

===References===
&lt;references/&gt;</text>
      <sha1>fv7u04l76gus402sn2ld42rvag95z0m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Grammar user templates</title>
    <ns>14</ns>
    <id>201239</id>
    <revision>
      <id>1552091</id>
      <timestamp>2009-06-30T01:09:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Maple Planked Salmon with Rum Glaze</title>
    <ns>102</ns>
    <id>201240</id>
    <revision>
      <id>1742706</id>
      <parentid>1552111</parentid>
      <timestamp>2010-03-24T21:38:58Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Seafood recipes]]

== Ingredients ==
* 1 (1 1/2-2 lb.) side of sockeye salmon
* 1 large untreated maple planks, soaked for at least 1 hour
* Salt and freshly ground black pepper
* 1 tbsp olive oil
* 1/2 cup dark rum

== Procedure ==
#Brush salmon with oil. Sprinkle liberally with salt and freshly ground black pepper.
#Place salmon on plank. Heat grill to medium on one burner.
#Bring rum to a boil in a saucepan over high heat. Remove from heat and ignite. Boil until reduced to 1/4 cup.
#Place plank on indirect heat and cook for 20 minutes, brushing often with rum.
#Let rest 5 minutes. Serve.</text>
      <sha1>n7cnhl61q6lkq7o43ypfbyujtd9obwo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Prepositions</title>
    <ns>10</ns>
    <id>201242</id>
    <redirect title="Template:User prepositions:yes" />
    <revision>
      <id>1552109</id>
      <timestamp>2009-06-30T01:14:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Prepositions]] to [[Template:User prepositions:yes]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User prepositions:yes]]</text>
      <sha1>0f805i8lk8p30pbfn57e3q2d4c0ilda</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Grammar</title>
    <ns>4</ns>
    <id>201243</id>
    <revision>
      <id>1555916</id>
      <parentid>1555751</parentid>
      <timestamp>2009-07-02T15:08:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Shortened code.</comment>
      <text xml:space="preserve">==Usage==
{{usbktop}}
{{usbk|User if whether}}
{{usbk|User its it's}}
{{usbk|User less fewer}}
{{usbk|User much many}}
{{usbk|User passive voice:no}}
{{usbk|User passive voice:yes}}
{{usbk|User prepositions:no}}
{{usbk|User prepositions:yes}}
{{usbk|User than then}}
{{usbk|User theire}}
{{usbk|User your you're}}
{{usbkbottom}}

===Singular they===
{{usbktop}}
{{usbk|User singular they:gender}}
{{usbk|User singular they:iffy}}
{{usbk|User singular they:no}}
{{usbk|User singular they:yes}}
{{usbkbottom}}

==Punctuation==
{{usbktop}}
{{usbk|User ellipses:no}}
{{usbk|User ellipses:yes}}
{{usbk|User exclam-abuse}}
{{usbk|User punctuation}}
{{usbk|User serial comma:no}}
{{usbk|User serial comma:yes}}
{{usbkbottom}}

===Quotation marks===
{{usbktop}}
{{usbk|User american quotes}}
{{usbk|User british quotes}}
{{usbk|User curly quotes}}
{{usbk|User straight quotes}}
{{usbkbottom}}

==English style==
{{usbktop}}
{{usbk|User American English}}
{{usbk|User Australian English}}
{{usbk|User British English}}
{{usbk|User Canadian English}}
{{usbk|User Irish English}}
{{usbk|User New Zealand English}}
{{usbk|User Oxford spelling}}
{{usbk|User South African English}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>c4ikghoicg288b7factf575w6252f6d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Honey Teriyaki Spareribs</title>
    <ns>102</ns>
    <id>201244</id>
    <revision>
      <id>1735133</id>
      <parentid>1552122</parentid>
      <timestamp>2010-03-13T17:17:05Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]]

This puts a Asian spin on classic barbecue ribs.

== Ingredients ==
* 1 slab pork spareribs
* [[Cookbook:Grill Seasoning|Grill Seasoning for Chops]], as needed
* 1/3 cup soy sauce
* 2 tbsp mirin
* 1/4 cup honey
* 2 tsp rice wine vinegar
* 2 tbsp orange marmalade

== Procedure ==
#Shake Seasoning on ribs and gently massage into meat. Refrigerate for at least 1 hour.
#Combine remaining ingredients. Refrigerate until needed.
#Place ribs into a large foil pouch. Pour in soy mixture and tilt to evenly distribute. Tightly crimp.
#Bake at 250° for 5 hours.
#Snip foil pouch over a large saucepan to release liquid. Degrease and bring liquid to a boil over high heat for 5 minutes.
#Brush generously on one side of ribs and either grill glaze side down over high heat or place glaze side up under a preheated broiler until nicely browned.
#Slice into 1-rib portions and toss with some of the remaining soy mixture. Serve.</text>
      <sha1>m9lpi31e9als2zkvdjivz1vnxhm6umt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:153.107.33.155</title>
    <ns>3</ns>
    <id>201249</id>
    <revision>
      <id>2155565</id>
      <parentid>1652072</parentid>
      <timestamp>2011-08-09T01:55:46Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>/* Last Warning */ new section</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/153.107.33.155|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 01:53, 30 June 2009 (UTC)}}

== Recent edits ==

{{test}}

== Last Warning ==

{{tmbox|type=delete|text='''You will be [[Wikibooks:Blocking policy|blocked]] without warning if you continue to make [[Wikibooks:Vandalism|unconstructive edits]].'''

You have been warned previously that your edits are disruptive; this is your ''last warning''. Please stop, and consider [[Wikibooks:Welcome|improving]] rather than damaging the hard work of others.&lt;br&gt;Thanks. --[[User:Jomegat|Jomegat]] ([[User talk:Jomegat|discuss]] • [[Special:Contributions/Jomegat|contribs]]) 01:55, 9 August 2011 (UTC)}}
&lt;!-- Template:Blatantvandal (serious warning) --&gt;</text>
      <sha1>9dos8bjez0x1e5li5o41aogicvyj2t8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Color</title>
    <ns>4</ns>
    <id>201252</id>
    <redirect title="Wikibooks:Userboxes/Colour" />
    <revision>
      <id>1552148</id>
      <timestamp>2009-06-30T02:12:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Wikibooks:Userboxes/Color]] to [[Wikibooks:Userboxes/Colour]] over redirect: Redirect back</comment>
      <text xml:space="preserve">#REDIRECT [[Wikibooks:Userboxes/Colour]]</text>
      <sha1>5xcuqoi1hi16g6t8so9w6uk4xfrucrv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Humor user templates</title>
    <ns>14</ns>
    <id>201253</id>
    <revision>
      <id>1552152</id>
      <timestamp>2009-06-30T02:20:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User nj2</title>
    <ns>10</ns>
    <id>201254</id>
    <redirect title="Template:User ninja" />
    <revision>
      <id>1552154</id>
      <timestamp>2009-06-30T02:23:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User nj2]] to [[Template:User ninja]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User ninja]]</text>
      <sha1>b06gmar6yabnodunvgiw5bln0i8ju72</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ninja</title>
    <ns>10</ns>
    <id>201256</id>
    <revision>
      <id>1572540</id>
      <parentid>1552166</parentid>
      <timestamp>2009-07-19T00:01:13Z</timestamp>
      <contributor>
        <ip>99.53.247.152</ip>
      </contributor>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border: solid #000 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #222; color: white;&quot;
| style=&quot;width: 45px; height: 45px; background:#000; text-align: center; font-size: 14pt;&quot; | '''NJ'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user is a '''ninja''', with dominion over everything totally sweet.'''
|}
&lt;/div&gt;&lt;noinclude&gt;[[Category:Humor user templates|Ninja]]&lt;/noinclude&gt;</text>
      <sha1>9roifmv8chi7spbgpld5wau8fp2qqxj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User summed up</title>
    <ns>10</ns>
    <id>201259</id>
    <revision>
      <id>1552197</id>
      <parentid>1552193</parentid>
      <timestamp>2009-06-30T02:38:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Fixed category sort key and cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid yellow 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #f0f0f0;&quot;
| style=&quot;width: 45px; height: 45px; background: white; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Crystal kthememgr.svg|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; |  This user's entire personality can be summed up in a few '''[[Wikibooks:Userboxes|userboxes]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|Summed up]]&lt;/noinclude&gt;</text>
      <sha1>bexpus0pq5anu964clsh1i3xb1cul5u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Humor</title>
    <ns>4</ns>
    <id>201260</id>
    <revision>
      <id>1555956</id>
      <parentid>1552192</parentid>
      <timestamp>2009-07-02T15:29:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User ninja}}
{{usbk|User pirate}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>3jngckus1bgfot134hzojrlbr0hefho</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Userbox user templates</title>
    <ns>14</ns>
    <id>201262</id>
    <revision>
      <id>1552198</id>
      <timestamp>2009-06-30T02:39:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">This category contains userboxes on userboxes. If you wish to view all the userboxes, visit [[:Category:Userboxes]].

[[Category:Userboxes]]</text>
      <sha1>4epfza3h4myp40mrjiek2xihicej7gy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User totalbox</title>
    <ns>10</ns>
    <id>201263</id>
    <revision>
      <id>1552221</id>
      <parentid>1552214</parentid>
      <timestamp>2009-06-30T02:48:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Fixed category and template code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: 2px solid #000; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 236px; background: #222;&quot;
| style=&quot;width: 44px; height: 45px; background: #555; text-align: center; font-size: 33pt; color: #ddd;&quot; | '''W'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: #fff;&quot; | &lt;b&gt;This user is a &lt;span style=&quot;text-decoration: underline;&quot;&gt;Wikibookian&lt;/span&gt;. &lt;br /&gt;This is the ''only'' userbox.&lt;/b&gt;
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|Totalbox]]&lt;/noinclude&gt;</text>
      <sha1>iu8m6ks3i6uid4n6ecrkhj5udkcqce2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User filler</title>
    <ns>10</ns>
    <id>201265</id>
    <revision>
      <id>1552234</id>
      <parentid>1552230</parentid>
      <timestamp>2009-06-30T02:55:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category sort key.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #ffb466 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; color: #000000; background: #ffe496;&quot;
| style=&quot;width: 45px; height: 45px; background: #ffb466; text-align: center;&quot; |[[Image:Crystal kthememgr.svg|40px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user needs ''&lt;b&gt;just one more&lt;/b&gt;'' userbox on his/her page!
|}
&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|Filler]]&lt;/noinclude&gt;</text>
      <sha1>4djjynqqzcpo3reefq1o9a00ok2kvkn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User more userboxes</title>
    <ns>10</ns>
    <id>201267</id>
    <revision>
      <id>1552244</id>
      <parentid>1552241</parentid>
      <timestamp>2009-06-30T02:58:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category sort key.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #ffb466 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; color: #000000; background: #ffe496;&quot;
| style=&quot;width: 45px; height: 45px; background: #ffb466; text-align: center;&quot; |[[Image:Crystal package.png|40px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user needs more [[Wikibooks:Userboxes|userboxe{{#ifeq:{{{xen|}}}|yes|n|s}}]]. '''MORE''', I tell you, more!!! Muhahaha!
|}
&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|More userboxes]]&lt;/noinclude&gt;</text>
      <sha1>89si24jwld83uzpr7qpcsiiyk2gf7gl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User templates</title>
    <ns>10</ns>
    <id>201269</id>
    <revision>
      <id>1552253</id>
      <parentid>1552250</parentid>
      <timestamp>2009-06-30T03:04:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid black 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #fff8dc;&quot;
| style=&quot;width: 45px; height: 45px; background: black; text-align: center; font-size: 12pt; color: yellow;&quot; | '''&lt;nowiki&gt;{{!!!}}&lt;/nowiki&gt;'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user over-uses [[Wikibooks:Userboxes|userboxes]].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|Templates]]&lt;/noinclude&gt;</text>
      <sha1>milc3imzc20uhozzx7czfjalv4pzli2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User preference</title>
    <ns>10</ns>
    <id>201271</id>
    <revision>
      <id>1552273</id>
      <parentid>1552271</parentid>
      <timestamp>2009-06-30T03:07:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #FF1493 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #FFF0F5;&quot;
| style=&quot;width: 45px; height: 45px; background: white; text-align: center; font-size: 14pt; color: black;&quot; | '''[[Image:Userbox_prefer.png|44px]]'''
| style=&quot;font-size: 8pt; padding: 2pt; line-height: 1.25em; color: black;&quot; | This user prefers using '''[[Wikibooks:Userboxes|userboxes]]''' to fill up his/her user page instead of actually writing something useful.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Userbox user templates|Preference]]&lt;/noinclude&gt;</text>
      <sha1>1jq9vk1256w90gphvywejcej40d6kvg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Foundations and Assessment of Education/Edition 1/Foundations table of Contents/Chapter 9/Chapter Introduction</title>
    <ns>0</ns>
    <id>201273</id>
    <revision>
      <id>1596590</id>
      <parentid>1586011</parentid>
      <timestamp>2009-07-31T18:11:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">=='''Chapter 9 Introduction:  Effective Schools'''==


&quot;The pathway to educational excellence lies within each school.&quot;  Terrance Deal

As a parent, you want to believe that when your child is at school they are in a safe environment and in an adequate facility.  Everyone you ask has a different idea about what makes an effective school.  There are so many reasons why this is important.  Education is the key to success.  Schools need to put forth the best education they can to allow students to have the greatest opportunities.  

How important is support for all teachers?  Do you think Pre-K is the answer?  How beneficial is school/community partnerships?  How does creating a positive learning environment make an effective school?  All of these topics will be discussed in the following chapter.  

After reading the following articles you will learn the importance of effective schools, and the characteristics of how to achieve one.



[[File:busschool.jpg|300px|center]]




{{FEA/Rating|edition=1|UIN=1009}}

{{BookCat}}</text>
      <sha1>a7e9ppzopuf983lnvt2qajrm34qrcg0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/Chapter Introduction</title>
    <ns>1</ns>
    <id>201274</id>
    <revision>
      <id>1552284</id>
      <parentid>1552277</parentid>
      <timestamp>2009-06-30T03:18:12Z</timestamp>
      <contributor>
        <username>Mlipl001</username>
        <id>225248</id>
      </contributor>
      <comment>Replaced content with '[]'</comment>
      <text xml:space="preserve">[]</text>
      <sha1>hqfbvpwcn5c4auw3yj4bkpe8iiwncjw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Deprecated templates</title>
    <ns>14</ns>
    <id>201275</id>
    <revision>
      <id>1552281</id>
      <timestamp>2009-06-30T03:15:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">The templates in this category should no longer be used, as they have a suitable replacement. Should all uses of them be eliminated, they can be deleted.

[[Category:Templates]]</text>
      <sha1>atcf87bin23v8abi0zf8vk1do0yb6gr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Userboxes</title>
    <ns>4</ns>
    <id>201277</id>
    <revision>
      <id>1555950</id>
      <parentid>1553677</parentid>
      <timestamp>2009-07-02T15:25:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Shortened code.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User colorful}}
{{usbk|User filler}}
{{usbk|User more userboxes}}
{{usbk|User preference}}
{{usbk|User summed up}}
{{usbk|User templates}}
{{usbk|User too long}}
{{usbk|User totalbox}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>9b0o18o5ium7cvs4nmnex9qnhicuzcc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language</title>
    <ns>10</ns>
    <id>201278</id>
    <revision>
      <id>2031861</id>
      <parentid>1884183</parentid>
      <timestamp>2011-02-16T22:03:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>deprecating prettytable, replaced: prettytable → wikitable</comment>
      <text xml:space="preserve">{| class=&quot;wikitable userlang&quot; style=&quot;float:{{{align|right}}}; clear:{{{align|right}}}; margin:0; width:19em; {{{css-box|}}}&quot;
|-
! class=&quot;userlang_left&quot; style=&quot;width:3em; background:#{{#switch:{{{2&lt;noinclude&gt;|N&lt;/noinclude&gt;}}}
  |1=ADA 
  |2=8E8 
  |3=6E6 
  |4=3E3 
  |N=0D0 
  |CCC}}; font-size:1.3em; {{{css-left|}}}&quot;| {{{1|fr}}}-{{{2|N}}}
|class=&quot;userlang_right&quot; style=&quot;width:16em; font-size:0.9em; line-height:1.1em; {{{css-right|}}}&quot; lang=&quot;{{{1|fr}}}&quot; xml:lang=&quot;{{{1|fr}}}&quot;| {{#switch:{{{2&lt;noinclude&gt;|N&lt;/noinclude&gt;}}}
  |0
  |1
  |2
  |3
  |4
  |N={{#ifexist:template:user language/{{{1|fr}}}|{{user language/{{{1|fr}}}|text|{{{2|N}}}}}|{{user language/en|text|{{{2}}}|{{{1}}}}}&lt;hr style=&quot;width:50%;&quot;&gt;&lt;small&gt;''[[Template:User language#Translating the template|Translate this template!]]''&lt;/small&gt;}}|'''invalid fluency level (see [[Template:User language|documentation]]).'''}}
|}&lt;includeonly&gt;{{{category|{{#switch:{{{2}}}
  |0=&lt;!-- no category --&gt;
  |1
  |2
  |3
  |4
  |N=[[Category:User {{{1}}}|{{#switch:{{{2}}}
    |N=1
    |4=2
    |3=3
    |2=4
    |1=5}} {{PAGENAME}}]]|}}}}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>0zlk17d2x5ydx1156d37o3hcnz8ymtc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/category</title>
    <ns>10</ns>
    <id>201280</id>
    <revision>
      <id>1552388</id>
      <parentid>1552386</parentid>
      <timestamp>2009-06-30T03:42:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/category]]&quot;: High-impact page: Should not need to be edited. ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#if:{{{1|}}}|{{#switch:{{{2}}}
  |0=&lt;!-- no category --&gt;
  |1=[[Category:User {{{1}}}|5 {{PAGENAME}}]]
  |2=[[Category:User {{{1}}}|4 {{PAGENAME}}]]
  |3=[[Category:User {{{1}}}|3 {{PAGENAME}}]]
  |4=[[Category:User {{{1}}}|2 {{PAGENAME}}]]
  |N=[[Category:User {{{1}}}|1 {{PAGENAME}}]]
  |}}}}&lt;noinclude&gt;
This template categorizes users based on the standard {{[[template:user language|user language]]}} system, but does not display a box. This is intended for users who don't like language boxes, or who prefer to use custom code. For example: &lt;code&gt;&lt;nowiki&gt;{{user language/category|fr|1}}&lt;/nowiki&gt;&lt;/code&gt; will categorize the page where the box appears under &lt;code&gt;&lt;nowiki&gt;[[Category:User fr]]&lt;/nowiki&gt;&lt;/code&gt; without displaying the fr-1 box.

The opposite effect (displaying the language box without categorizing the user page) is achieved by specifying &lt;code&gt;category=&lt;/code&gt; in the &lt;code&gt;User language&lt;/code&gt; call. For example: &lt;code&gt;&lt;nowiki&gt;{{user language|fr|1|category=}}&lt;/nowiki&gt;&lt;/code&gt; will display the fr-1 box without categorizing the page where the box appears.

[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>9gjfy3hnowc173wcfwdb3ibgcglcrue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Busschool.jpg</title>
    <ns>6</ns>
    <id>201283</id>
    <revision>
      <id>1552393</id>
      <timestamp>2009-06-30T03:46:59Z</timestamp>
      <contributor>
        <username>Aferg006</username>
        <id>225252</id>
      </contributor>
      <text xml:space="preserve">== Licensing: ==
{{PD-self}}</text>
      <sha1>9wbadkeoq6dajwmkfb8kokss0slv0lt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:117.254.10.65</title>
    <ns>3</ns>
    <id>201285</id>
    <revision>
      <id>1552398</id>
      <timestamp>2009-06-30T03:52:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>You have been warned</comment>
      <text xml:space="preserve">== You have been warned ==

{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/117.254.10.65|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 03:52, 30 June 2009 (UTC)}}</text>
      <sha1>qubjgfkckz0oahm72z8qhyzcrz8eo5z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/af</title>
    <ns>10</ns>
    <id>201287</id>
    <revision>
      <id>1553703</id>
      <parentid>1552410</parentid>
      <timestamp>2009-06-30T20:38:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added links to category.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name=Afrikaans
|text=Hierdie gebruiker kan {{#switch:{{{2}}}|0=nie [[:Category:User af|Afrikaans]] lees of skryf nie|1=basiese [[:Category:User af|Afrikaans]] lees en skryf|2=middelbare [[:Category:User af|Afrikaans]] lees en skryf|3=vlot [[:Category:User af|Afrikaans]] lees en skryf|4=[[:Category:User af|Afrikaans]] amper op 'n modertaal vlak lees en skryf|N=[[:Category:User af|Afrikaans]] as moedertaal lees en skryf}}.}}&lt;noinclude&gt;[[Category:Template subpages|User language/af]]&lt;/noinclude&gt;</text>
      <sha1>15m01nmm9uvhs06hykz2mrftfs6h8j4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/akk</title>
    <ns>10</ns>
    <id>201288</id>
    <revision>
      <id>1552414</id>
      <parentid>1552413</parentid>
      <timestamp>2009-06-30T03:58:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/akk]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Akkadian
 |text = {{#switch:{{{2}}}
   |0=Ṭupšarrum šū šasâm u šaṭāram ša [[:category:user akk|lišānim Akkadītim]] ul ile’’u
   |1=Ṭupšarrum šū maṭîš ina [[:category:user akk|lišānim Akkadītim]] šitapparam ile’’u
   |2=Ṭupšarrum šū išariš ina [[:category:user akk|lišānim Akkadītim]] šitapparam ile’’u
   |3=Ṭupšarrum šū ṭābiš ina [[:category:user akk|lišānim Akkadītim]] šitapparam ile’’u
   |4=Ṭupšarrum šū magliš ina [[:category:user akk|lišānim Akkadītim]] šitapparam ile’’u
   |N=Lišān ṭupšarrim šī [[:category:user akk|Akkadītum]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/akk]]&lt;/noinclude&gt;</text>
      <sha1>qlv6qzhmrxnql35ie8qv7z9pdfvnpht</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/am</title>
    <ns>10</ns>
    <id>201289</id>
    <revision>
      <id>2010795</id>
      <parentid>1552419</parentid>
      <timestamp>2011-01-01T17:04:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Ahmaric
|text = ይህ/ቾ አባል {{#switch:{{{2}}}
|1= በቀላል ደረጃ [[:Category:User am|አማርኛ]] ማቀነባበር ይችላሉ።.
|2= በመካከለኛ ደረጃ [[:Category:User am|አማርኛ]] ማቀነባበር ይችላሉ።.
|3= በከፍተኛ ደረጃ [[:Category:User am|አማርኛ]] ማቀነባበር ይችላሉ። .
|N= [[:Category:User am|አማርኛ]] ልደት ቋንቋ ነው።}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/am]]&lt;/noinclude&gt;</text>
      <sha1>c9ka1dslz06e58fxgt8u9iu3qihs3sd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/an</title>
    <ns>10</ns>
    <id>201290</id>
    <revision>
      <id>1552431</id>
      <parentid>1552430</parentid>
      <timestamp>2009-06-30T04:00:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/an]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Aragonese
 |text = Iste usuario {{#switch:{{{2}}}
      |0=no repleca l'
      |1=puet contrebuyir con un ran alazetal d'
      |2=puet contrebuyir con un ran meyo d'
      |3=puet contrebuyir con un ran enantau d'
      |4=puet contrebuyir con un ran cuasi natibo d'
      |N=ye un fablant natibo d'
     }}[[:category:user an|aragonés]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/an]]&lt;/noinclude&gt;</text>
      <sha1>j9qksmzgyhyalr3vpx7yvnjtwa8vstd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ang</title>
    <ns>10</ns>
    <id>201291</id>
    <revision>
      <id>1553715</id>
      <parentid>1552435</parentid>
      <timestamp>2009-06-30T20:46:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed links</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Old English
|text = Þes brūcere {{#switch:{{{2}}}
   |0=cannot read and write [[:category:user ang|Englisces]]
   |1=cann forðian mid grundlicgendre mǣðe [[:category:user ang|Englisces]]
   |2=cann forðian mid middelre mǣðe [[:category:user ang|Englisces]]
   |3=cann forðian mid forþweardre mǣðe [[:category:user ang|Englisces]]
   |4=can contribute near-natively in [[:category:user ang|Englisces]]
   |N=is gecynde [[:category:user ang|Englisces]] sprecere}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ang]]&lt;/noinclude&gt;</text>
      <sha1>9i5qom8u4tb7rj2ovxx4t9igy9nqq72</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ar</title>
    <ns>10</ns>
    <id>201292</id>
    <revision>
      <id>1552445</id>
      <parentid>1552444</parentid>
      <timestamp>2009-06-30T04:02:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ar]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Arabic
 |text = {{rtl|هذا المستخدم {{#switch:{{{2}}}
   |0=لا يمكنه قراءة وكتابة
   |1=يمكنه المساهمة بمستوى مبتدىء في
   |2=يمكنه المساهمة بمستوى متوسط في
   |3=يمكنه المساهمة بمستوى متقدم في
   |4=يمكنه المساهمة بمستوى يقترب من اللغة الأم في
   |N=يمكنه المساهمة كلغة أم في}} [[:category:user ar|العربية]].}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ar]]&lt;/noinclude&gt;</text>
      <sha1>fmz6v4u7705rz7rv5sglsb49osd99l7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/Student Soapbox</title>
    <ns>0</ns>
    <id>201294</id>
    <revision>
      <id>2065851</id>
      <parentid>1842837</parentid>
      <timestamp>2011-03-06T03:25:04Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: especailly → especially, embarassing → embarrassing, atleast → at least, beleive → believe, successfull → successful, childrens'  → children's , todays → today's using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">&lt;div style=&quot;text-align: center; font-size: x-large;&quot;&gt;Foundations Chapter 1 Student Soap Box&lt;/div&gt;
----

{{BookCat}}
&lt;span style=&quot;font-size: medium;&quot;&gt;A 2004 research study investigated beliefs about good teachers and good teaching. The researchers asked 2nd graders, pre-service teachers (education majors), and in-service teachers (teachers already teaching in schools) to select the characteristics they believed best described good teachers. &quot;Caring&quot; was the most selected response for all three groups. In general, the respondents thought good teachers were caring, patient, not boring, polite, and organized. The 2nd graders' responses were not that different from those of the pre-service teachers suggesting that students form their ideas about good teachers very early in their academic careers. The researchers used this information to suggest that teacher education programs may have to work very hard to change students' beliefs about good teachers (Murphy, Delli &amp; Edwards, 2004). 

What do you believe are the most important characteristics of a good teacher? 

What should teacher education programs do to help pre-service teachers be open to new conceptions of good teaching?


&lt;/span&gt;
----
''Add your response below. Extra credit will be awarded to multimedia responses.''


== What makes a good teacher? =
A teacher has to possess so many qualities that it is hard to say which one is the best.  I believe that patience should be a main quality of a good teacher.  I believe that when a student sees that a teacher has patience with him/her that student takes the time to a better student.  A teacher has to be so many things to a student (teacher, friend, mother-figure,etc.)I think that it is important for teachers to keep abreast of the changing educational techniques.[[User:Msmhobbs04|Msmhobbs04]] ([[User talk:Msmhobbs04|talk]]) 01:01, 14 July 2009 (UTC)

I believe that  good teacher has many characteristics.  I would agree with the students on the survey that a teacher must be caring, organized, patient, not boring, etc.  These are probably the answers I would have selevted when I was in grade school.  I truly believe that all children was to be loved.  I think a teacher can do that through structure, organization, and listening.  Many times just listening to students and understanding their feelings makes a world of difference to them.  Once stepping into a classroom I believe the biggest statement is made with how well a teacher is organized and prepared for the day.  Students always know...especially in the higher grades whether a teacher knows what they are talking about. I believe it is important for teachers, even if they are not familiar with the information being presented, to have prepared well enough to have a good understanding of the material to come across confident. [[User:Sston008|Sston008]] ([[User talk:Sston008|talk]]) 19:49, 4 July 2009 (UTC)  

Caring is essential, but being able to converse and interact with your students– that is the key. I'd much more likely be incline to lean toward that being the single most important aspect of teaching– good communication. To understand what your students are getting at and interact accordingly, whether it's to expand/explore upon ideas they present in class or dealing with a miscellaneous grievance, is invaluable. [[User:Hsmit022|Hsmit022]] ([[User talk:Hsmit022|talk]]) 17:38, 12 July 2009 (UTC)

I believe that a teacher must possess a variety of qualities that are recognizable by both her students and her peers.  While I agree with those mentioned by the 2nd graders, there are several others that I feel are essential building blocks to becoming a &quot;good&quot; teacher.  '''Respect''' your students and your peers and they inturn will do the same.  Be '''tolerant''' of all learners regardless of their abilities.  They, too, have a right to learn.  Enter your classroom with '''confidence''' in your students, yourself, and your teaching.  Be '''optimistic'''...those practice test scores can only get better.  Besides, we all have a bad day every once and awhile.  '''Flexibility''' is a must.  You never know when the power will go off and its 100 degrees, Susie just puked on her SOL answer sheet, and Timmy didn't mean to bring those bullets in his backpack.  Roll with the punches.  Lastly, be '''enthusiastic''' about teaching.  Remember, enthusiasm is contageous...what a great thing to spread!  Is there a way to adequately prepare a new teacher for the classroom?  I think a degree is a great academic accomplishment.  To me, the best preparation you can get is in the trenches.  Until there's a class that can prepare you for the reality of teaching, just sign me up for a another tour of duty in the classroom.  [[User:Acrow005|Acrow005]] ([[User talk:Acrow005|talk]]) 01:11, 4 July 2009 (UTC)


Teachers need many different qualities to be able to handle a classroom.  One important characteristic I believe is being able to relate to the students.  Being able to understand your students is key in managing a classroom effectively.  I also think that being respectful is very important.  This means using words or actions that you approve of others using toward you.  If you show respect with students they will mirror it back to you.  I remember one teacher I had in elementary school that I loved because she was very enthusiastic about everything she taught.  No matter what it was, I remember feeling excited about it.  I think that is also a great way to get students engaged in the material. Being able to show encouragement as well as having the ability to motivate your students is also a good quality to have as a teacher. Teachers are with students a lot and help to mold what they will become.  Teachers need to prepare students with good life skills that will ready them for the real world. 
[[User:Aferg006|Aferg006]] ([[User talk:Aferg006|talk]]) 22:49, 3 July 2009 (UTC)

I believe a good teacher possess a variety of effective qualities.  I believe a teacher needs to possess patience and confidence.  I think if a teacher is confident then his or her confidence will shine through to his or her students.  I feel if a child knows the teacher believes in them then they will overall possibly perform better in the classroom.  I do agree that teachers must &quot;care&quot; for their students more than just the grades aaspect of caring. Teachers are not only there to educate they are there to enstill values in their students as well.  Educators can only hope they enstill values and education into their students.  I hope as a future teacher I can be successful being a &quot;caring&quot; teacher and educate my students wth not just information but also with life skills and values. [[User:Lwill031|Lwill031]] ([[User talk:Lwill031|talk]]) 15:51, 3 July 2009 (UTC)

A &quot;good teacher&quot; is made up of many different qualities. I believe that these qualities include all of the ones chosen from the survey mentioned, but also include: encouragement, knowledge, and confidence (in them self as a teacher and in the students). A good teacher not only teaches his or her students what is on the lesson plan, but also life skills. Many students rely on their teachers as the source for things such as learning about respect, relationship skills, and confidence. Teacher education should focus on learning not only what can be expected but also how to deal with the &quot;worst-case-scenario&quot;. As teachers, we will encounter many things everyday that we didn't learn about in school. We must learn how to improvise and be successful. [[User:Sbutl016|Sbutl016]] ([[User talk:Sbutl016|talk]]) 22:16, 2 July 2009 (UTC)



I believe that good teachers possess many different characteristics. I think one of the most important things for a teacher to demonstrate to the students is encouragement and belief in success. When children (of all ages) feel as though the teacher truly believes that they are capable of succeeding, they begin to show confidence in themselves. I also agree that teachers must &quot;care&quot; about their students' overall well being. A good teacher does not view the job as a means to instruct the student and fill them with knowledge that ends in the classroom. I believe that a good teacher teaches the children about life in general through words and actions. These things include respect, generosity, self-confidence, gratitude, etc. A child should leave a classroom a year older, a year wiser, a year more knowledgeable and a year more successful. If a teacher has done a good job then the student will leave the class with a greater perspective on life and ready to face the next year and the world outside the classroom. [[User:Khedl002|Khedl002]] ([[User talk:Khedl002|talk]]) 00:56, 1 July 2009 (UTC)


There are certain characteristics that I believe are the most important characteristics of a good teacher. I would have to agree with the 2nd graders, pre-service teachers and in-service teachers that “caring” is one of the most important. To be a good teacher you must truly care about each and every one of your students and their individual lives. I also think good teachers must be driven and motivated to make a difference in their students’ lives. I can remember specific teachers during my elementary and middle school years that made such a great impact on my life that I will never forget them. Good teachers must also be patient, kind but firm, focused, organized, and respectful. To help pre-service teachers be open to new conceptions of good teaching, aspects of integrating technology into the classroom should be taught. Pre-service teachers should also be aware of the cultural differences of students and be able to treat each student equally. They should also learn effective ways to involve their future students in relevant and meaningful classroom activities that help students learn. It is effective if teachers should learn the “constructivist” approach because it places the teacher in the role of helping students organize and manage information.  [[User:Afett001|Afett001]] ([[User talk:Afett001|talk]]) 15:03, 30 June 2009 (UTC)


I also agree with the results. If you don't care then want does it matter. You must &quot;care&quot; in order to succeed at any profession, but especially in education. When your students know that you care for them then they develop an attitude that makes them excel or at least try in their studies. I also believe that patience is another important characteristic that an educator must possess. You cannot let every little incident become bigger than it is. I believe that you have to ignore or deal with it and not go off the roof. And last but not least you must '''respect''' your students so they will respect you in return. (Most of them anyway). Respect usually builds a strong bond between educators and students that allow a life time of friendship. I believe that pre-service teachers should be strongly advised on issues that they will deal with in the classroom. I don't think that new educators realize the behavior problems happening in today's schools or the embarrassing questions that children ask! [[User:Hcomb003|Hcomb003]] ([[User talk:Hcomb003|talk]]) 17:51, 30 June 2009 (UTC)


My opinions as to what makes a good teacher are not far from those already stated.  I think a “caring” nature does have to come first.  I think understanding the issues is important.  You need to be vested in what you do in order to be truly successful at it.  Teaching is not something you should just go into because you think it would be an “ok” profession.  Teachers have the ability to shape the minds and hearts of the next generation.  They have huge impacts on students and families.  They are counselors by nature and have to fight battles of a failing system.  It is true…going into teaching is a passionate decision.  The salary alone is not anything worthwhile.  It is difficult to live on a $40,000/year salary and purchase the materials it takes to manage a classroom the way you want to manage it.  I do not even know how I will do it myself.  However, I chose to pursue a career in this field for many reasons.  Reasons I think everyone should think about.  There are many failures in our country.  Many!  I believe the biggest one is how we teach our children.  They grow up in families as diverse as our country itself.  They are themselves a diverse population.  They go to school hungry on Monday mornings because they are not fed enough on the weekends.  They see divorce.  They see crime.  They see all the things adults see and are often overlooked and misunderstood.  They go to schools that bore them all day and they get lost in a failing system.  I am not just talking about at-risk kids.  I am talking about kids who are gifted.  Kids who come from all races.  All socio-economic levels.  We have spent so much time focusing on what else to do in our country and no time focusing on reform for our schools.  In fact, they are getting worse.  They appear to be meeting “standards”, but what are kids really retaining?  Therefore, I felt a calling.  One that must CARE about these issues.  One that must feel a sense of responsibility to change or to work the system.  I think all of these issues start with teachers.  We cannot count on school districts, states, or even the federal government to solve the problems.  (Not now at least)  It is the teachers that work tirelessly to make differences in students’ lives.  To send them forward with not only what they learn, but also how they learn.  How they will explore and learn for the rest of their lives.  To give them a zest for life.  To foster their natural curiosities.  To nurture their development at all levels.  A generation that understands knowledge will have great power.  They will pursue answers and perhaps have feasible solutions.  You have to care.  You just have to.  
&lt;br&gt;As far as the second prompt to this student soapbox, many things about education courses should be taken in to account.  Education majors need to understand the issues, the politics.  They need to know their curriculum.  They need to understand and develop, while in school, practice assessments.  Assessments are so important.  They need to practice developing rubrics.  They need instructional methods that are hands-on, engaging ideas.  They need to keep up with the latest technology and learn how to effectively incorporate it into their curriculum.  They need to understand how to maintain a more integrated style of teaching.  They need to understand fine arts and logic.  Students learn differently and express themselves differently.  They should take introductory counseling courses, as to understand how to provide appropriate feedback, as well as handling sensitive situations.  The list could go on… [[User:Abitt002|Abitt002]] ([[User talk:Abitt002|talk]]) 17:27, 1 July 2009 (UTC)

I think there are many important characteristics that make a good teacher. I do agree with the survey results regarding that caring is an important characteristic that good teachers must have. If good teachers do not care about the quality that they teach, then the material and methods in which they teach will not be very good. Also, if good teachers do not care about their students then they are less likely to put forth effort to push students to their fullest potentials, and encourage them to be their best. In addition, I feel that another important characteristic that good teachers must have is patience. Many teachers do not understand that depending on the grade level that they are teaching, some students will test a teacher's patience merely for fun at times. Therefore, a teacher's patience will greatly affect the relationship between student and teacher and the environment in the classroom as well. I also feel that knowledge is an essential characteristic of good teachers. If teachers are knowledgeable and open to diverse students, then they are more likely to be patient in the classroom and be open to different learning styles as well. I feel that attitude is also an important characteristic of good teachers. The attitude of a good teacher needs to be warm, welcoming, pleasant, and non judgmental. That way the student feels comfortable coming to the teacher, therefore enhancing the student teacher relationship as well. I feel that these characteristics are just a few among many that are characteristic of good teachers. In regards to helping prepare pre-service teachers for the classroom, they should be aware of the cultural and linguistic diversity among students. Some students may not have English as their native tongue, and therefore the teacher needs to know what to expect from that student and the reason they many not be doing well in reading or writing. In addition, depending on the culture some students may act differently in the classroom because of their cultural rules. I feel that pre-service teachers should definitely be taught on how to integrate technology into the classroom. I feel this is essential since most of the students today have grown up surrounded by technology, and will continue to be surrounded by it throughout their academic careers. I also feel that pre-service teachers need to be taught alternative methods to teaching from traditional methods of teaching. I feel that all of these steps will help to benefit pre-service teachers as they go into teaching! [[User:Rburt005|Rburt005]] ([[User talk:Rburt005|talk]]) 23:22, 1 July 2009 (UTC)

There are many qualities to define a good teacher, here is to name a few ... Good teachers listen to their students, during and after class. They learn students names so that students feel special, like someone cares about them. Good teachers go above and beyond the &quot;call of duty&quot; to make learning exciting. They are always coming up with new ways to teach the material so students will become involved. Good teachers do not just teach the SOLs, yet take the SOLs a step further. And, good teachers are patient with their students, helping them learn the material, even if they have to explain it more than once. In order to become a good teacher, you do not just need to ace all of the teaching classes in college. That gives you a good GPA (which, yes, is very important to me!) But, half the things you learn about in these classes will not make any sense until you are actually teaching. So, teachers cannot be good teachers without some experience in an actual classroom, as well as the initiative to make themselves what students will look at and say, yes (s)he was a good teacher. [[User:Hcogg001|Hcogg001]] ([[User talk:Hcogg001|talk]]) 00:41, 2 July 2009 (UTC)

There are many factors that make a good teacher. I would have to say the one thing on the top of my list would be: positive role model.  I believe that being a positive role model can have a lasting impact on a child. Most people have at least one teacher who influenced them in some way. I believe that for that to occur, at least one teacher was a good role model in that persons life.[[User:Mlipl001|Mlipl001]] ([[User talk:Mlipl001|talk]]) 04:01, 2 July 2009 (UTC)

What makes a teacher &quot;good&quot; is such a &quot;beauty is in the eye of the beholder&quot; type question.  Yes, to me caring is very important, but, I could see in a high school or older classroom where one could impart knowledge without being overly &quot;caring&quot;.  Also, to me, caring in a younger classroom could be construed as &quot;nurtuing&quot;.  Being organized is very important and also having good communication skills.  It's not enough to have the knowledge, you have to be able to communicate it in a way that students will understand!  Finally, I believe a &quot;good&quot; teacher is open minded to new techonologies available in the classroom and new methods of teaching and they examine these ideas very closely before committing to them.  Just because something is &quot;new&quot; doesn't make it better.  Conversely, just because you've done it the same way for many years and it's worked doesn't mean it can't be done better. [[User:Sciaston|Sciaston]] ([[User talk:Sciaston|talk]]) 18:32, 2 July 2009 (UTC)

What makes a good teacher is someone who is patient and knows how to approach his or her students the right way and at the correct time. Teaching is such a unique trade to do in a life time. As a past business manager I think that teaching requires the same simmering experience it takes to become a good manager. Yes basic qualities of a teacher is to be caring a patient, but I think that teachers need to be able to learn quickly how to get to know and recognize each and every students weaknesses and strengths so that he or she can help them in the best way possible during the time of that class. Good teachers poses other good qualities such as; time management, creativity, classroom management, organization,  the ability to think outside the box, the ability to relate to the age in which his or her students is in, the ability to project equality and the ability to command respect and attention from students. I think that when people decide to become a teacher they should posses the basic qualities. With time these other qualities should be mastered in order to fully fulfill the potential on what it really means to become a “good teacher”. Teacher programs should include classes that can help develop the characteristics mentioned above as much as possible. Allot of those characteristics can only be acquired with time but at least do as much as possible so that the person studying to become a teacher can start to explore the many sides of what it is to become a good teacher. [[User:Bpenn005|Bpenn005]] ([[User talk:Bpenn005|talk]]) 11:37, 4 July 2009 (UTC)

A good teacher is able to read his or her students. They know what to do to provoke learning and understanding and are able to recognize the potentials of all students. They need to be patient, kind, and understanding. They should also be very creative because at times you must teach in creative ways to ensure that all students are learning and understanding. I also think that one of the most important things for good teachers to recognize, especially in today's society, is that they must keep up with technology. Our ever-changing modern society puts a lot of demands on teachers to keep up. To produce successful students, they must also be proficient with technologies. A good teacher must also be nurturing, organized, empathetic, and have extremely good communication skills. [[User:Alucy001|Alucy001]] ([[User talk:Alucy001|talk]]) 16:37, 4 July 2009 (UTC)

Teaching is perhaps one of the most subjective professions to define, because it is given many characteristics by various perspectives. Some people may state that a teacher has to be caring while others may argue that a teacher must be firm. It mostly depends on the person’s own personal experiences of their teachers and how they view education. Personally, I believe that the one characteristic that every teacher should have is to have the ability ''and'' capacity to care about their students. Children are in the classroom to learn, however, they are still people with feelings. I believe that many teachers do not recognize the presence they have in their students’ lives. My mom once said that children spend more time with their teachers than they do with their actual parents. She said this when I was in elementary school myself, so I did not quite understand what she meant by that. However, as I became older, I realized that what she said was very true. Students ''do'' spend more time with their teachers, than their own parents. For many students, these teachers almost become parents in the classroom, especially if they have a disruptive environment at home. If a teacher deeply cared for a student, there is no limit to what he or she can do when they are older. At the same time, educators have to become extremely careful at caring too much. Before becoming an education major, I was actually working towards a psychology degree to become a children’s psychologist. My dad used to be a counselor and one of the things he said that always stuck with me was “You have to care without caring.” 

Other important characteristics that I think a good teacher should possess are patience and being positive. One of the things teachers tend to forget is that even though they may have been teaching addition for 15 years, a student walking in their classroom is learning it for the first time. There is also the fact that every student is different, and that some will take a shorter or longer amount of time to learn a concept. And for students who are having difficulty learning a concept are already frustrated, it only makes it worse when a teacher shows signs of impatience and makes pessimistic remarks. While any job is not exactly “easy”, being a teacher is a hard profession that requires not only a strong academic foundation, but a large gift to care. I strongly believe that if a teacher does not want or have to the time to care, be patient and remain positive in their classroom, they have no business being in the classroom.[[User:Adart001|Adart001]] ([[User talk:Adart001|talk]]) 17:39, 4 July 2009 (UTC)


It is most important to remember that a teacher can make a huge impact in children's lives.  The power of that impact is the most fragile to protect.  Teacher's need to have consistency and fairness when dealing with their students and the parents.  I also think that caring is the key to that.  Realizing that some of the students that we will be teaching will not get a kind word after they leave school, or a smile that they know is meant for them.  I have seen this kids in my job and it is so frustrating to know that these children did not ask to be raised in their home environment and if there is something that we can do to help children realize that life can be different for them.  We need them to realize also that education is the key to success and we will help them to achieve that goal.  Some of these struggles for teachers is the lack of support from parents, money and time constraints from the administration, and the realization that no matter what you do you just have to do your best. There is a lot of mission statements for what teachers need to be or do, I just think that every child is special and needs someone to care about them and their future and teachers do it every day and even out of the classroom the qualities that make good teachers are in their daily lives that make them good people.
[[User:Jnewh001|Jnewh001]] ([[User talk:Jnewh001|talk]]) 16:45, 5 July 2009 (UTC)

I remember one of the big things to happen during the summer in elementary school was to find out who your teacher was.  Once you found out you raced around the neighborhood to compare who everyone had for the next school year.  We all had our preconceived notions as to which teacher was best and why.  At the time I always thought the best teachers were ones that had their kids out of the classroom doing work.  They might have been doing book reports in the library, or a science project in the field behind the school.  I always wanted to be with that class.  I enjoyed working outside of the confines of a classroom.  As a teacher today, I still think the best teachers are the ones that make things very hands on for their students.  They make education come alive through practical projects and hands on work.  They won't be in the classroom being lectured about angles in math class, they will be walking around the school looking for angles to trace and then taking them back to the classroom to work on the equations.   I feel that teachers who make education come alive for their students are some of the best educators around.  [[User:Jtmitchem|Jtmitchem]] ([[User talk:Jtmitchem|talk]]) 02:01, 6 July 2009 (UTC)

I think the most important characteristics of a good teacher are patience, good listening skills, willingness to learn new things, love of teaching children, and ability to set standards and hold students accountable. I have observed too many classrooms where the teacher failed in several of the above areas and as a result, not only did the students digress but the teacher became overwhelmed and dissatisfied with the job. Before going into teaching, you must have a love of learning and a desire to share your knowledge and experiences with others. If this is not the case, then you are in the wrong profession. Teachers must be patient and understand that not everyone learns the same way or at the same speed. Adjusting one's teaching style to help all students grasp the knowledge is what teaching is all about in my opinion.
In order to help pre-service teachers be open to new conceptions of good teaching, teacher education programs should provide a number of hands-on instruction so that students can delve right into the heart of the new concepts. Another option would be to have students observe seasoned and new teachers with varying teaching styles so that they can take away some ideas.[[User:Scarlett1|Scarlett1]] ([[User talk:Scarlett1|talk]]) 03:57, 6 July 2009 (UTC)


The best qualities a teacher can have are patience, understanding, ability to listen well, and knowledge. A teacher must understand what they are teaching and how the student is learning.  Patience is necessary when working with children and in any job where you are constantly repeating yourself. Ateacher needs to be able to listen to the student and understand what they are saying. Students cannot always express what they mean and a teacher needs to be able to listen well.[[User:Jnemo001|Jnemo001]] ([[User talk:Jnemo001|talk]]) 03:25, 8 August 2009 (UTC)

I agree with the kids on this one. Caring makes a good teacher.  I think that if a teacher truly has a passion for the profession that this passion will, eventually, carry them through and if they are not a good teacher in the beginning, it will motivate them to improve rapidly.  Secondly I think a teacher should have an almost limitless amount of patience. Because surely it will be tested time and again, and with patience comes perseverance. So to sound cliche’ I think a teacher should possess three P’s, passion, patience, and perseverance. 
I think teacher education programs should expose would-be-teachers to new methods of teaching rather than hammering the basics into their skulls. Rather, I think adaptation is the key to good teaching instruction, the chalk board and lesson plans can only take one so far. I think teachers should learn how to converse well, and as a point of practice become seasoned public speakers. I believe placing emphasis in this area of pre-teaching education would be the most valuable to aspiring teachers as these skills are most often utilized within the classroom.[[User:BitterAsianMan|BitterAsianMan]] ([[User talk:BitterAsianMan|talk]]) 14:26, 10 July 2009 (UTC)


A good teacher should be caring but it does not have to be in an overtly conspicuous way. I teacher may not act in seemingly directly caring way, but their action are in the best interest of the students. A good teacher does not have to be nice. A firm teacher is sometimes necessary and does not detract from the quality of the teacher. Also a teacher should be knowledgeable, and persistent. [[User:Scrai010|Scrai010]] ([[User talk:Scrai010|talk]]) 23:30, 12 July 2009 (UTC)


I think that a good teacher has a few very good characteristics. For instance depending on the age group the teacher will have to use language that is appropriate for kids that age. I know from experience that I find that i do better in a classroom with a teacher that is more inclined to answer questions. Another good quality that helps me is if the teacher is easy to talk to. This makes asking questions easier and also makes the teacher seem less intimidating. [[User:Rcoll029|Rcoll029]] ([[User talk:Rcoll029|talk]]) 03:00, 10 August 2009 (UTC)

To a large degree, I agree with the findings of the research study.  I think that a good teacher is someone who is caring, polite, and well-organized.  But I think that, of course, more details can be added to this assessment of a good teacher.  A good teacher is one who understands well the content matter of the course he or she is teaching.  He or she understands the objectives very well.  In addition, he or she understand well common difficulties students have in learning each of the objectives.  With the knowledge of these common difficulties in mind, the teacher can adjust the lessons, classwork, and instruction in such a way as to aid the learning of the students with respect areas that are particularly challenging.  The study above suggests that people develop a view of what a good teacher is from an early age.  Perhaps one way that the views of those who are in college can change is if they spend extra time contemplating new methods of teaching and spending time in the classroom observing now methods and skills of teaching.
[[User:Mbrowder|Mbrowder]] ([[User talk:Mbrowder|talk]]) 13:10, 13 August 2009 (UTC)</text>
      <sha1>69zb9e7wwt7wvqxnziej3bgxue0mkr3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ase</title>
    <ns>10</ns>
    <id>201295</id>
    <revision>
      <id>1552471</id>
      <parentid>1552466</parentid>
      <timestamp>2009-06-30T04:05:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ase]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = American Sign Language
 |text =&lt;center&gt;[[Image:ASL.png|link=Category:user ase]]&lt;br/&gt;[[Image:Me.png]]&lt;br/&gt;{{#switch:{{{2}}}
   |0=[[Image:None-ASL.png]]
   |1=[[Image:Possible.png]]&lt;br/&gt;[[Image:Basic-ASL.png]]
   |2=[[Image:Possible.png]]&lt;br/&gt;[[Image:Good.png]]
   |3=[[Image:Possible.png]]&lt;br/&gt;[[Image:High.png]]
   |4=[[Image:Possible.png]]&lt;br/&gt;[[Image:Near.png]]&lt;br/&gt;[[Image:Native.png]]
   |N=[[Image:Possible.png]]&lt;br/&gt;[[Image:Native.png]]}}&lt;/center&gt;
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ase]]&lt;/noinclude&gt;</text>
      <sha1>q3hl670tvfnvsefhxk2abccqacod9t6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ast</title>
    <ns>10</ns>
    <id>201296</id>
    <revision>
      <id>1552473</id>
      <parentid>1552470</parentid>
      <timestamp>2009-06-30T04:05:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ast]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Asturian
 |text = Esti usuariu {{#switch:{{{2}}}
  |0=Nun entiende l'[[:category:user ast|asturianu]]
  |1=puede lleer y escribir [[:category:user ast|asturianu]] con un nivel básicu
  |2=puede lleer y escribir [[:category:user ast|asturianu]] con un nivel intermediu
  |3=puede lleer y escribir [[:category:user ast|asturianu]] con un nivel avanzáu
  |4=puede lleer y escribir [[:category:user ast|asturianu]] como si fuese falante nativu
  |N=ye falante nativu d'[[:category:user ast|asturianu]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ast]]&lt;/noinclude&gt;</text>
      <sha1>krjueqntp0ljon1g1ui4bdyjyon4lqd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/avk</title>
    <ns>10</ns>
    <id>201297</id>
    <revision>
      <id>1552481</id>
      <parentid>1552479</parentid>
      <timestamp>2009-06-30T04:06:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/avk]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Kotava
 |text = Bat webesik kan [[:category:user avk|Kotava]] {{#switch:{{{2}}}
|0=me grugoler 
|1=omekon grubelir ise grusuter 
|2=mialukekon grubelir ise grusuter 
|3=ontinekon grubelir ise grusuter 
|4=kotunon grubelir ise grusuter 
|N=grugoler wetce kotavik}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/avk]]&lt;/noinclude&gt;</text>
      <sha1>g3x5i4mtux7n72036tcjev0751zqjle</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/az</title>
    <ns>10</ns>
    <id>201298</id>
    <revision>
      <id>1552489</id>
      <parentid>1552488</parentid>
      <timestamp>2009-06-30T04:08:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/az]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Azerbaijani
 |text = {{#switch:{{{2}}}
|1=Bu istifadəçi [[:Category:user az|Azərbaycan dilini]] aşağı səviyyədə bilir
|2=Bu istifadəçi [[:Category:user az|Azərbaycan dilini]] orta səviyyədə bilir
|3=Bu istifadəçi [[:Category:user az|Azərbaycan dilini]] yüksək səviyyədə bilir
|N=Bu istifadəçinin ana dili [[:category:user az|Azərbaycan dilidir]] }}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/az]]&lt;/noinclude&gt;</text>
      <sha1>nxh33k9yk8h2ubc6fh52hsmzw2nlbue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bar</title>
    <ns>10</ns>
    <id>201299</id>
    <revision>
      <id>1552494</id>
      <parentid>1552493</parentid>
      <timestamp>2009-06-30T04:09:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bar]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Austro-Bavarian
 |text = Deã Nutza {{#switch:{{{2}}}
   |0=kau ka Woåt [[:category:user bar|Boarisch]] lesn oda schreibm
   |1=kau immahin ba [[:category:user bar|boarische]] Eitrog aushöfn wåun sunst nermd schreibm måg
   |2=kau scho gåunz guade [[:category:user bar|boarische]] Eitråg schreibm
   |3=kau wiåkli guade [[:category:user bar|boarische]] Eitråg schreibm
   |4=is a wåschechta [[:category:user bar|boarischa]] Schreibaling den ma ned vôn de Lãundsleit untascheidn kau
   |N=is im [[:category:user bar|boarischn]] Språchraum aufgwochsn
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bar]]&lt;/noinclude&gt;</text>
      <sha1>nz508mx3ihrtso5c3lsib7ml24yt3ov</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bcc</title>
    <ns>10</ns>
    <id>201300</id>
    <revision>
      <id>1552501</id>
      <parentid>1552500</parentid>
      <timestamp>2009-06-30T04:10:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bcc]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Baluchi
 |text = ای کاربر {{#switch:{{{2}}}
   |0=نه تونیت مقاله بوانت
   |1=تونیت در اساسی کمک کنت
   |2=تونیت ته سطح متوسط کمک کنت
   |3=تونیت در حد پیشرپته کمک کنت
   |4=تونیت در حد نزیک ماتی زبان کمک کنت
   |N=در حد ماتی زبان تونی کمک کنت}} [[:category:user bcc|بلوچی]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bcc]]&lt;/noinclude&gt;</text>
      <sha1>mfj38r5l8faruvu50kgpjcf3c5q16g3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/be</title>
    <ns>10</ns>
    <id>201301</id>
    <revision>
      <id>1552505</id>
      <parentid>1552504</parentid>
      <timestamp>2009-06-30T04:11:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/be]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Belarusian
 |text = {{#switch:{{{2}}}
 |0=Гэты ўдзельнік не разумее [[:category:user be|беларускую мову]], ці разумее яе зь цяжкасьцю
 |1=Гэты ўдзельнік ведае [[:category:user be|беларускую мову]] на пачатковым узроўні
 |2=Гэты ўдзельнік ведае [[:category:user be|беларускую мову]] на сярэднім узроўні
 |3=Гэты ўдзельнік выдатна ведае [[:category:user be|беларускую мову]]
 |4=Гэты ўдзельнік свабодна валодае [[:category:user be|беларускай мовай]] як роднай
 |N=Для гэтага ўдзельніка/гэтай удзельніцы [[:category:user be|беларуская мова]] зьяўляецца роднай}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/be]]&lt;/noinclude&gt;</text>
      <sha1>i0kqli4a2pdpu718x2m5ua8wbit5osa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bew</title>
    <ns>10</ns>
    <id>201302</id>
    <revision>
      <id>1552513</id>
      <parentid>1552512</parentid>
      <timestamp>2009-06-30T04:13:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bew]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Betawi language
 |text = Nyang make nié {{#switch:{{{2}}}|0=kagak bise |1=bisa dikit doangan |2=bisa |3=bisa}} {{#switch:{{{2}}}|4=bisa|N=bisa}} ngomong ame nulis [[:category:user bew|Pake bahasa betawi]] {{#switch:{{{2}}}|2=biasa ajé|4=kaya nyang asli|N=asli}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bew]]&lt;/noinclude&gt;</text>
      <sha1>nvh29ozklb4n9q3u5aq6w09wpw68nxx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bg</title>
    <ns>10</ns>
    <id>201303</id>
    <revision>
      <id>1552516</id>
      <parentid>1552515</parentid>
      <timestamp>2009-06-30T04:15:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bg]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Bulgarian
 |text = {{#switch:{{{2}}}
   |0= Този потребител не може да чете и пише на [[:category:user bg|български език]].
   |1=Този потребител има начални познания по [[:category:user bg|български език]].
   |2=Този потребител владее [[:category:user bg|български език]] на средно равнище.
   |3=Този потребител има задълбочени познания по [[:category:user bg|български език]].
   |4=Този потребител владее [[:category:user bg|български]] на ниво почти като роден език.
   |N=За този потребител [[:category:user bg|българският]] е роден език.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bg]]&lt;/noinclude&gt;</text>
      <sha1>0dcmvva6j7ntfpf6hkhetpije4lo4dy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bm</title>
    <ns>10</ns>
    <id>201304</id>
    <revision>
      <id>1553592</id>
      <parentid>1552523</parentid>
      <timestamp>2009-06-30T18:38:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed capitalization.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Bamanankan
 |text = Nin mɔgɔ {{#switch:{{{2}}}
   |0=tɛ [[:category:user bm|bamanakan]] mɛ
   |1=bɛ [[:category:user bm|bamanakan]] mɛ dɔɔnin-dɔɔnin
   |2=bɛ [[:category:user bm|bamanakan]] mɛ
   |3=bɛ [[:category:user bm|bamanakan]] mɛ kosɛbɛ
   |4=bɛ [[:category:user bm|bamanakan]] mɛ kosɛbɛ kosɛbɛ
   |N=ka sinminkan ye [[:category:user bm|bamanakan]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bm]]&lt;/noinclude&gt;</text>
      <sha1>afkxws4z0tsp8qazhif8vr3rp90ng53</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bqi</title>
    <ns>10</ns>
    <id>201306</id>
    <revision>
      <id>1552533</id>
      <parentid>1552531</parentid>
      <timestamp>2009-06-30T04:20:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bqi]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Bakhtiari
 |text = ای کاربر {{#switch:{{{2}}}
   |0=ای کاربر بختياري رانهفهمه یا به سختی افهمه 
   |1=ای کاربر بختياري را در حد مقدماتی افهمه
   |2=ای کاربر بختياري را در حد متوسط افهمه  
   |3=ای کاربر بختياري را در حد پیشرفته افهمه.
   |4=ای کاربر بختياري را در حد نزدیک به زبان مادری افهمه.
   |5=ای کاربر بختياري را در حد حرفه‌ای افهمه
   |N=ای کاربر بختياري را در حد زبان مادری افهمه.}} [[:category:user bqi|بختیاری]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bqi]]&lt;/noinclude&gt;</text>
      <sha1>1cmwglxuon2owm87fj01f6v5dgkiq99</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/Student Soapbox</title>
    <ns>0</ns>
    <id>201307</id>
    <revision>
      <id>2206155</id>
      <parentid>2206154</parentid>
      <timestamp>2011-11-05T23:28:39Z</timestamp>
      <contributor>
        <ip>66.178.14.98</ip>
      </contributor>
      <comment>/* Progressivism */</comment>
      <text xml:space="preserve">&lt;div style=&quot;text-align: center; font-size: x-large;&quot;&gt;Foundations Chapter 2 Student Soap Box&lt;/div&gt;
----

{{BookCat}}
&lt;span style=&quot;font-size: medium;&quot;&gt;Which of the five main educational philosophies (perennialism, essentialism, progressivism, existentialism or social reconstructionism) do you believe is most appropriate to teach today's new generation, the so-called &quot;digital natives&quot;? 

Why?



&lt;/span&gt;
----
''Add your response below. Extra credit will be awarded to multimedia responses.''


== Perennialism ==

== Essentialism ==
I like the &quot;essentialism&quot; approach because if I read the definition correctly, &quot;essentialism&quot; teaches the &quot;back to the basics&quot; approach. I believe that this sounds like the kind of philosophy that I was taught.  Back when I was in school, the teachers did not take any &quot;mess&quot; with the students, because if a student did wrong, the parents were called and the student was punished.  Nowadays, the teachers are scared to do anything to a student that acts out because of social services or they can loose their job.  I think that the schools should go back to the &quot;basics&quot; of teaching.[[User:Msmhobbs04|Msmhobbs04]] ([[User talk:Msmhobbs04|talk]]) 01:10, 14 July 2009 (UTC)

== Progressivism ==

I believe I would like to be the teacher that offers a variety of philosophies to my students, however, I find progresivism is a strong philosophy to use.  I think with the technology used today by adolescents such as text messaging and emailing and facebook and others, that progressivism is the best philosophy to abide by.  I agree that interactive activities are the best way for students to learn.  It offers students the opportunity to learn through fun interactive activities.  I have always been a fan of small group work and interactive classroom work as well.  I feel students learn best when they are enjoying what they are learning as well as how they are learning it. [[User:Lwill031|Lwill031]] ([[User talk:Lwill031|talk]]) 16:19, 5 July 2009 (UTC)

Progressivism is moreso student-centered, possibly allowing for more individual development through making the students actively involved in their own learning with projects and papers that explore certain veins of their own interests that they bring to a topic. It also capitalizes on taking current events and showing correlations to the subject at hand. I think linking relation of something to a modern day event or trend is sometimes essential in developing a keener understanding. There's also the potential for social development through small groups– particularly of jigsaw ideal. Progressivism seems the least limited school of thought as far as teaching disciplines/philosophies. [[User:Hsmit022|Hsmit022]] ([[User talk:Hsmit022|talk]]) 18:48, 12 July 2009 (UTC)

I believe that today's &quot;digital natives&quot; are best taught using a progressivist philosophy.  Classrooms should not be learning &quot;prisons&quot; where students are forced to sit in a desk for most of the day and gather knowledge from constant lecturing.  I feel that interactive, hands-on activities where students can use problem solving skills applicable to real world situations allow all types of learners to be successful.  Working in small groups builds student confidence and increases cooperation.  A great example of progressivism is using Webquests.  Last year, my science classes worked in small groups to find solutions for various &quot;quests&quot; about the moon, force and motion, and electrical circuits.  Webquests require students to work together to find the solution to a problem by finding a solution to a series of questions.  My digital natives enjoyed work in their &quot;element&quot; and it is a great alternative assessment tool. All of my students, regardless of their learning ability, could enjoy the excitement of learning. [[User:Acrow005|Acrow005]] ([[User talk:Acrow005|talk]]) 00:50, 4 July 2009 (UTC)

I believe I would have a mix between progressivism and reconstructionism.  I believe both of these have important ideas.  Student-centered is important to keep student engaged.  The instructor acting as facilitator and guiding the students I believe is a better way to conduct the classroom.  The group activities I think are very beneficial to students it helps to build friendships, enhance self-esteem, and helps to promote good communication skills.  Face to face interaction helps them to value individual differences and helps them to learn to work together effectively while encouraging each other.  But I also believe that incorporating what is happening in the real world with what you are teaching can be a great tool in preparing students for the &quot;real world.&quot;  It is always good to teach students about how to make the world a better place.
[[User:Aferg006|Aferg006]] ([[User talk:Aferg006|talk]]) 23:48, 3 July 2009 (UTC)

I believe that ideally I would choose to offer my students a mix of different teaching philosophies; however, if I was forced to choose just one, I would choose progressivism. I think that for the generation of &quot;digital natives&quot; this philosophy best suits their educational needs. This idea allows the children to learn in a hands on way not only from the teacher but from their peers and through their own investigation as well. The children of this generation are already familiar with seeking out answers to questions on the internet and through other multimedia devices. Progressivism would further allow the students to find information and use it to their advantage. Through activities like group projects, students will be forced to work with one another to work towards a common goal. I believe that this type of social interaction is key to developing personal skills, respect, confidence, etc. There are so many advantages to allowing and promoting this type of philosophy in the classroom. For children of this generation that are already adapting to the technology and advances in the world today, this is yet another way to spark their interest and keep them learning! [[User:Khedl002|Khedl002]] ([[User talk:Khedl002|talk]]) 00:53, 2 July 2009 (UTC)khedl002

To teach today's generation, the &quot;digital natives&quot;, I think the most powerful teaching philosophy is progressivism. Progressivism is a student-centered form of instruction where students follow the scientific method of questioning and searching for the answer. Student assignments include projects and portfolios. Teachers may use current events to keep students interested in the learning process. In this teaching philosophy, the teacher acts as a facilitator and is not the center of the educational process. Input from students is greatly encouraged as they find their own interpretations of the answers. A progressivist curriculum emphasizes such things as problem solving and creating skills in today's world. I believe this is the most powerful teaching philosophy because students are continuously learning in today's changing world, and they use their continual knowledge to adjust to changes in life. The curriculum of a progressivist should be built around the personal experiences and needs of the students and the teacher should present lessons to students as if they are being faced with a real-life situation. [[User:Afett001|Afett001]] ([[User talk:Afett001|talk]]) 15:15, 30 June 2009 (UTC)

I would say progressivism.  I find it important to provide students with the skills and knowledge to survive certain situations.  It is important to have the students present questions nd strategize to answer them and with their own thoughts and creativity.  I do belive that there is possibly and place and time for ever teaching philosophy.  If education were just prgressivism I would possibly believe students would become bored and frustrated.  Having a great mix of positive learning experiences prepares the students for the future and makes them more well rounded. [[User:Sston008|Sston008]] ([[User talk:Sston008|talk]]) 20:11, 4 July 2009 (UTC)

You are asking me to choose one educational philosophy that I feel would be best for all students.  That is a difficult question because it does not account for the diversity we see in today’s classrooms.  After carefully reading, if I had to choose, I would say at heart, I am the most progressivism.  I believe students should follow the scientific method to pose questions and seek answers.  I believe portfolios and projects are great assessment methods.  I want my students to be active in their learning journeys and not just passive regurgitators.  I want to facilitate and provide all the necessary resources for my students to explore, and understand their input has value.  I have to say though… I do not believe that educators need to subscribe to one limited educational philosophy.  Why not take certain key components of each philosophy and transform our classrooms into well-oiled, learning environments?   I believe that a focus on reason, logic, and analytical thought (Perennialism) is not a bad idea.  Who does not want the classic works of Plato and Einstein to stay alive?  Even in a “digital native” generation.  Who would disagree that all students need to learn certain fundamental subjects (Essentialism)?  Who does not want to allow their students choice in their curriculum or activities (Existentialism)?  Lastly, as with Reconstructionism, do we not want our students to have the desire to make the world a better place?  Do we not want to bring the outside world into our classrooms to solve meaningful problems?  As you see, there is not just one way to teach our children.  There are many ways and many philosophies.  Educators should take advantage of the benefits from all of them.  Classrooms are not a “one size fits all” environment.  Let us give our students all of their best options.  [[User:Abitt002|Abitt002]] ([[User talk:Abitt002|talk]]) 20:19, 1 July 2009 (UTC)

The option I would have chosen was not one of the five listed. I would have chosen constructivism. The key to constructivism is active participation. Students are free to explore their own ideas and share concepts with one another in nontraditional ways. Hands on activity is the most effective way of learning and is considered true learning (Educational Philosophies in the Classroom, pg.1). The closest I could come to constructivism is progressivism. Both of these philosophies are hands-on, which seem to be the best teaching approach today. Students need to feel that they are contributing to the classroom and need hands-on activities to stimulate them to learn. However, there really isn't one type of philosophy that should be used by itself. If a teacher only used one type of teaching philosophy, they would be stuck believing only one type of teaching works, and there would be no room for deviation. This is a very close-minded view, and will lead to failures within the classroom. Not all students learn the same way, so making them stay in a classroom where only one type of learning is permitted would not be beneficial for the class as a whole. Therefore I like the constructivist and progressivist philosophies because I want to teach art, which has to been hands-on for success. But, these are not the only types of philosophies that should be used, everything should be used together within one classroom for optimal learning. [[User:Hcogg001|Hcogg001]] ([[User talk:Hcogg001|talk]]) 01:11, 2 July 2009 (UTC)


As Biology major I feel the even the so-called &quot;digital natives&quot; can learn a lot from nature and the world around them, as well as from the past. [[File:Apple_I.jpg‎|thumb|170px|center| The Apple I ]]If it wasn’t for knowledge from those before them and a little hand’s on tinkering in a California garage, we would not have I POD’s. [[User:Mlipl001|Mlipl001]] ([[User talk:Mlipl001|talk]]) 04:29, 2 July 2009 (UTC)

I too would have to agree that if I HAD to choose one teaching philosophy in my classroom to today's &quot;digital natives&quot;, it would be progressivism.  Progressivism is a student-centered learning approach where the students follow the scientific method of questioning and searching for the answer and this meshes well with the technologies today's students understand and have at their fingertips.  Progressivism is a form of active learning which has many benefits under many circumstances.  It helps students understand concepts better and thus apply them in real life where just passively memorizing facts does not. [[User:Sciaston|Sciaston]] ([[User talk:Sciaston|talk]]) 18:58, 2 July 2009 (UTC)


I think that Progressivism and social recostructionism is the best way of teaching for the students of today. Having so much access to the vast majority of information out there is what drives this generation.  I think that teaching in a progressive way encourages students to do the work without it being tedious or boring. Students today have so many options and creative outlets on how to complete an assignment to them that it would be a shame if they were not able to use this in and during their education. I personally have always liked when my teachers taught something and made it relevant to what was happening in the world at that time. It was easier for me to watch the news, read a newspaper among other things because I understood what I was reading and why things were happening. I think this is very necessary especially at this time when the world has become so small through technology. Students who are taught this way gain knowledge not only to what is happening in their immediate surrounding but on what is happening in the rest of the world. I feel that if students are not encouraged to learn about the rest of the world around them it hinders them in future since most businesses are becoming intergraded globally.  I think that the progressivism teaching philosophy empowers the student to take control and really dab into the subject asking questions and looking for the answers hands on. This is very important so that the students really internalizes what he or she is being taught not just bottled up information that will later be forgotten.[[User:Bpenn005|Bpenn005]] ([[User talk:Bpenn005|talk]]) 12:50, 4 July 2009 (UTC)


I guess I am like many other educators believing that I lean toward progressivism. I believe this because being a biology teacher I like to see students take control of their learning. Not so much self learning but more like feeding off one another. I like to instruct then turn them loose with &quot;hands on&quot; experiments that allow them to work together to achieve a goal. I firmly believe that students learn quicker and easier this way. It is easy to read a textbook and take test, however when you have to demonstrate that knowledge it becomes a challenge. Group work allows students to help one another and give each other new ideas. It also shows that there is more than one way to achieve a certain task and that some ways are better than others. Progessivism also expands what and how the mind thinks. This is great because it enables students to constantly push the envelope and that is what we need in the science department. [[User:Hcomb003|Hcomb003]] ([[User talk:Hcomb003|talk]]) 16:04, 4 July 2009 (UTC)

I also would be more in favor of progressivism. It has a much greater emphasis on hands on projects, and collaborative and cooperative porject. I believe that these types of projects are very important to help them build the skills needed for the future. There are also Webquests which are excellent projects that promote self-learning, technology integration and possibly collaborative learning. This approach is based on problem solving and critical thinking. I think that this approach will better prepare today's students for the future by building the necessary problem solving, social skills, and 21 century skills that are required for the future. [[User:Alucy001|Alucy001]] ([[User talk:Alucy001|talk]]) 17:05, 4 July 2009 (UTC)


I think that the future of many classrooms are headed toward progressivism because it teaches using group work that allows many positive forms of learning.  I also think that experiments aid in teaching many topics that are difficult for some students that learn in different ways.  I also think that social reconstruction is another style that is important to use in teaching because the students need to know that they will have to know the answers to many of these social issues that are a part of the world around them.  The students in the &quot;digital divide&quot;  will also have the issue of accessing technology that may be hard for them to attain.  It is important as teachers that we remember that some of our students may only be exposed to these technologies at school and many of their parents may not have the ability to understand how to aid their children in an assignment that utilizes the internet.  Although many of the students are exposed to far more technologies, ipods, internet, learning games, etc.  There are ways that teachers can utilize these technologies to relate these resources to their lessons.  Teaching is continually evolving and it is vital to our students that we remain current in our technological knowledge and styles of teaching that will help our students really attain the knowledge that we are teaching.
[[User:Jnewh001|Jnewh001]] ([[User talk:Jnewh001|talk]]) 17:09, 5 July 2009 (UTC)

I think that many future classrooms would benefit from progressivism, especially for today's generation of students who are growing up in a digital world. Progresivism teaches students to work together in groups, and teamwork is an essential skill that students will need throughout their academic careers and into their professional lives. I believe that progressivism is best for &quot;digital natives&quot; because it allows them to work with their peers in understanding and grasping technology as they apply it to their academics. Also, progressivism promotes group work, which is beneficial for social skills as well. I believe that progressivism is the best style to use with these children because of the different circumstances of school that they are being exposed to than traditional classrooms used to be like. [[User:Rburt005|Rburt005]] ([[User talk:Rburt005|talk]]) 23:06, 8 July 2009 (UTC)


I think that social and technological techniques are applied more and more into a classroom as time progresses. As this world get more technological, it grows to be part of our society. It is vital that students know how to handle themselves in both situations: digitally and socially. This would help them in future employments and other social circumstances. Progressivism is the best way to develop these type of skills on each of these students, as the world becomes influenced by such. [[User:Ehern004|Ehern004]] ([[User talk:Ehern004|talk]]) 19:32, 9 July 2009 (UTC)

Progressivism is best applied to today’s youth the “digital-natives” in my opinion. Because today, with internet access, the spread of mass media, and an increasing ready access to databases full of stored knowledge with no “leg-work” required, like Wikipedia, kids today have the ability to take learning into their own hands.  It is relatively easy for a student to find an answer to a question via Google that may have only been answerable by experts within the field or an obscure book in the card catalog just fifteen years ago. This ideology fits students who have this capability best, because its basis is in self-learning, and self-sufficiency rather than relying on an instructor as the ultimate source of knowledge. [[User:BitterAsianMan|BitterAsianMan]] ([[User talk:BitterAsianMan|talk]]) 14:33, 10 July 2009 (UTC)

In mathematics especially, student driven inquiry is really at the heart of the discovery. If students do not own their findings, and seek out their own methodologies than it is unlikely that a student will gain much in the way of life long learning from the subject. Progressivism would be ideal to teach the digital natives. [[User:Scrai010|Scrai010]] ([[User talk:Scrai010|talk]]) 23:40, 12 July 2009 (UTC)

== Existentialism ==


== Social Reconstructionism ==
&quot;Digital Natives&quot; are technologically in touch with their world around them.  They are acutely aware of the plight of people around the world.  An example of this was with the election and subsequent protests in Iran.  The images of a peaceful protest that suddenly had a woman shot were sent through cyberspace and ended up on sites like YouTube and social networking sites like Twitter, MySpace, and Facebook.  Students are finding out that they can have an immediate impact beyond their own small circle of friends.  Teachers should grasp the electronic world and have their students use it to create change and enhance local and global awareness.  Green living, recycling, global warming, social injustices, and immigrant issues are all hot button topics that students can use technology to have an effect outside of their immediate community.  [[User:Jtmitchem|Jtmitchem]] ([[User talk:Jtmitchem|talk]]) 17:09, 1 July 2009 (UTC)


Before the 21st Century, many teachers took the perennialism approach of education, because the center of the room was the teacher. However, as America entered the 21st Century, also known as the digital age, teachers began to realize this was ineffective. Without students teachers would not even exist, and the entire purpose of a teacher is to educate the student. As perennialism and a teacher-centered classroom faded, schools began to nurture social reconstructionism, which supported a student-centered classroom. Since social reconstructionsim based on students current and controversial events, and working together to bring change, it only seems appropriate in my eyes that this approach is best suited for teaching “digital natives”. The internet has proven that it can drastically change the world’s perspective of a number of issues. For example, the current political and social turmoil in Iran has been broadcasted constantly on the internet, where millions of users are reading and watching live events. By using social reconstructionism, teachers could have high school students research the issues that have led up to today, and discuss possible solutions to their government. Teachers could make discussion even more diverse with students communicating with other students around the world with the use of social networking. [[User:Adart001|Adart001]] ([[User talk:Adart001|talk]]) 19:27, 4 July 2009 (UTC)

I think teaching more towards progressivism and reconstructionism will have a greater impact on digital-age students. Not to show my age, but students of today's world have a need for constant stimulation. Unlike my generation, who had a knack for making things up and finding activities to do without relying on adults to provide activities for them. My children, for example, are constantly bored. They would rather play video games then go outside exploring. In school, students of the digital-age tend to retain the knowledge better when the lesson plans revolve around what is going on in the world today. Correlating learning with something happening in a students life helps retain knowledge in a more profound way, in my opinion. Enabling your class to be apart of the lesson-plan-making process helps some students shine. Teaching a class using an active approach geared towards the kinesthetic learner makes learning fun and usually a positive experience. [[User:Scarlett1|Scarlett1]] ([[User talk:Scarlett1|talk]]) 04:20, 6 July 2009 (UTC)


I think that not only one of these theories is the most effective way to run you classroom. I thin that a combination of all of them should be used. There are properties of each of them that are important to use when dealing with the said &quot;digital natives&quot;. Even though they are all similar they all have their subtle differences that make them unique.  [[User:Rcoll029|Rcoll029]] ([[User talk:Rcoll029|talk]]) 03:15, 10 August 2009 (UTC)

In my view, multiple strategies are important for educating students who are &quot;digital natives.&quot;  However, one approach strikes me as being especially important.   This is the approach of social reconstructionism. Humans have roamed the earth for tens of thousands of years.  The industrial age is not even 150 years old, and the age of computers is not even 30 years old.  It is difficult to predict how this rapid development in technology is going to impact human civilization 10, 50, and 100 years down the road.  But one thing is for certain, we can take advantage of these technological advances and use them for a good cause.  As educators we can strive to figure out how to use these technologies in a constructive way for tasks down in and outside the classroom.  As we plan our lessons and assignments we can look for ways to involve students in gaining awarenes of the needs of others and to help them think about how to better society.
[[User:Mbrowder|Mbrowder]] ([[User talk:Mbrowder|talk]]) 12:48, 14 August 2009 (UTC)</text>
      <sha1>s8rdw9c6jfh5pjkunexye7vsysecqak</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/bs</title>
    <ns>10</ns>
    <id>201308</id>
    <revision>
      <id>1552537</id>
      <parentid>1552536</parentid>
      <timestamp>2009-06-30T04:21:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/bs]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Bosnian
 |text = {{#switch:{{{2}}}
   |0=Ovaj korisnik ne govori [[:Category:User bs|bosanski jezik]]
   |1=Ovaj korisnik posjeduje osnovno poznavanje [[:Category:User bs|bosanskog jezika]]
   |2=Ovaj korisnik posjeduje srednje poznavanje [[:Category:User bs|bosanskog jezika]]
   |3=Ovaj korisnik napredno poznaje [[:Category:User bs|bosanski jezik]]
   |4=Ovaj korisnik tečno govori [[:Category:User bs|bosanski jezik]]
   |N=Ovaj korisnik govori [[:Category:User bs|bosanski]] kao maternji jezik}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/bs]]&lt;/noinclude&gt;</text>
      <sha1>h3kant3g8g77arwc2v7dm0yiwgqqu51</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ca</title>
    <ns>10</ns>
    <id>201309</id>
    <revision>
      <id>2091444</id>
      <parentid>1552547</parentid>
      <timestamp>2011-05-03T01:02:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Catalan
 |text = Aquest usuari {{#switch:{{{2}}}
  |0=no pot llegir i escriure en
  |1=pot contribuir amb un nivell bàsic de
  |2=pot contribuir amb un nivell mitjà de
  |3=pot contribuir amb un nivell avançat de
  |4=pot contribuir amb un nivell quasi nadiu de
  |N=pot contribuir amb un nivell nadiu de}} [[:category:user ca|català]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ca]]&lt;/noinclude&gt;</text>
      <sha1>aivve2eilctgj2f17f8ntgxagnm9o5n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ceb</title>
    <ns>10</ns>
    <id>201310</id>
    <revision>
      <id>1552552</id>
      <parentid>1552550</parentid>
      <timestamp>2009-06-30T04:24:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ceb]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Cebuano
 |text = Kini nga gumagamit&amp;nbsp;{{#switch:{{{2}}}
   |0=dili makasabot og
   |1=makatampo og taphaw nga matang sa
   |2=makatampo og tunga-tunga nga matang sa
   |3=makatampo og hataas nga matang sa
   |4=makatampo og daw-lumad nga matang sa
   |N=lumad nga tigsulti sa}} [[:category:user ceb|Sinugboanong Binisaya]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ceb]]&lt;/noinclude&gt;</text>
      <sha1>cea9ceyb7zfl3fjb09hu1ph0pjkycwm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/co</title>
    <ns>10</ns>
    <id>201311</id>
    <revision>
      <id>1552557</id>
      <parentid>1552556</parentid>
      <timestamp>2009-06-30T04:26:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/co]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Corsican
 |text =  {{#switch:{{{2}}}
   |0=
   |1=Issu participanti ha un liveddu di principianti in 
   |2=Issu participanti ha un liveddu mizanu in 
   |3=Issu participanti ha un liveddu avanzatu in 
   |4=
   |N=A lingua materna di issu participanti hè u}} [[:Category:User co|Corsu]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/co]]&lt;/noinclude&gt;</text>
      <sha1>bgah9hbch19eza6hhwoc90oiazm55go</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/crh</title>
    <ns>10</ns>
    <id>201312</id>
    <revision>
      <id>1552562</id>
      <parentid>1552561</parentid>
      <timestamp>2009-06-30T04:27:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/crh]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Crimean Tatar
 |text = {{#switch:{{{2}}}
|1=Bu qullanıcı [[:category:user crh|Qırımtatar tilini]] başlanğıç seviyede bile
|2=Bu qullanıcı [[:category:user crh|Qırımtatar tilini]] orta seviyede bile
|3=Bu qullanıcı [[:category:user crh|Qırımtatar tilini]] yahşı bile
|4=Bu qullanıcı [[:category:user crh|Qırımtatar tilini]] ana tili kibi bile
|N=Bu qullanıcınıñ ana tili [[:category:user crh|Qırımtatar tilidir]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/crh]]&lt;/noinclude&gt;</text>
      <sha1>iu5zgm9r6y3q7n6ptzf1nonsi8jsu5a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/cs</title>
    <ns>10</ns>
    <id>201313</id>
    <revision>
      <id>1552569</id>
      <parentid>1552568</parentid>
      <timestamp>2009-06-30T04:28:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/cs]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Czech
 |text = {{#switch:{{{2}}}
   |0=Tento uživatel nemluví [[:category:user cs|česky]]
   |1=Tento uživatel může číst a psát [[:category:user cs|česky]] na základní úrovni
   |2=Tento uživatel může číst a psát [[:category:user cs|česky]] na pokročilé úrovni
   |3=Tento uživatel může číst a psát plynně [[:category:user cs|česky]]
   |4=Tento uživatel má znalosti [[:category:user cs|českého jazyka]] srovnatelné s rodilým mluvčím.
   |N=Tomuto uživateli je [[:category:user cs|čeština]] mateřským jazykem}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/cs]]&lt;/noinclude&gt;</text>
      <sha1>i0n4pvvhb5yre33rmixs8k7afnlccg9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/cu</title>
    <ns>10</ns>
    <id>201314</id>
    <revision>
      <id>1552573</id>
      <parentid>1552572</parentid>
      <timestamp>2009-06-30T04:29:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/cu]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Old Church Slavonic
 |text = Сь по́льꙃєватєл҄ь {{#switch:{{{2}}}
   |0=нє раꙁоумѣ́ѥтъ [[:category:user cu|словѣ́ньскꙑ]] · и́ли раꙁоумѣ́ѥтъ съ вєли́кꙑ оуси́лии
   |1=глаго́лѥтъ [[:category:user cu|словѣ́ньскꙑ]] зълѣ́
   |2=глаго́лѥтъ [[:category:user cu|словѣ́ньскꙑ]] трьпи́мо
   |3=can contribute in advanced
   |4=can contribute near-natively in
   |N=can contribute natively in}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/cu]]&lt;/noinclude&gt;</text>
      <sha1>fmzj72jd9h6r9mfc7lr4m0b5jc7hhkv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/cy</title>
    <ns>10</ns>
    <id>201315</id>
    <revision>
      <id>1552579</id>
      <parentid>1552578</parentid>
      <timestamp>2009-06-30T04:30:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/cy]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Welsh
|text = {{#switch:{{{2}}}
   |0=Nid yw'r defnyddiwr 'ma yn medru'r [[:category:user cy|Gymraeg]]
   |1=Fe all y defnyddiwr 'ma gyfrannu ar lefel syml y [[:category:user cy|Gymraeg]]
   |2=Fe all y defnyddiwr 'ma gyfrannu ar lefel ganolradd y [[:category:user cy|Gymraeg]]
   |3=Fe all y defnyddiwr 'ma gyfrannu ar lefel uwchraddol y [[:category:user cy|Gymraeg]]
   |4=Mae'r defnyddiwr 'ma'n rhugl yn y [[:category:user cy|Gymraeg]]
   |N=[[:category:user cy|Cymraeg]] yw mamiaith y defnyddiwr 'ma}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/cy]]&lt;/noinclude&gt;</text>
      <sha1>b4krukpc0yy6nys057kfjv1ryodxsbd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/da</title>
    <ns>10</ns>
    <id>201316</id>
    <revision>
      <id>1552584</id>
      <parentid>1552583</parentid>
      <timestamp>2009-06-30T04:31:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/da]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Danish
|text = Denne bruger kan {{#switch:{{{2}}}
 |0=ikke forstå [[:category:user da|dansk]]
 |1=læse og skrive [[:category:user da|dansk]] på basisniveau
 |2=læse og skrive [[:category:user da|dansk]] på mellemniveau
 |3=læse og skrive [[:category:user da|dansk]] flydende
 |4=læse og skrive [[:category:user da|dansk]] som en indfødt
 |N=læse og skrive [[:category:user da|dansk]] på modersmålsniveau
 }}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/da]]&lt;/noinclude&gt;</text>
      <sha1>9pzjxvmzadlnsdvlpz5m6itp8zpi62w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/de</title>
    <ns>10</ns>
    <id>201317</id>
    <revision>
      <id>1552596</id>
      <parentid>1552595</parentid>
      <timestamp>2009-06-30T04:32:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/de]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = German
 |text = Dieser Benutzer {{#switch:{{{2}}}
  |0=kann [[:category:user de|Deutsch]] weder schreiben noch lesen
  |1=hat grundlegende [[:category:user de|Deutschkenntnisse]]
  |2=hat fortgeschrittene [[:category:user de|Deutschkenntnisse]]
  |3=hat sehr gute [[:category:user de|Deutschkenntnisse]]
  |4=beherrscht [[:category:user de|Deutsch]] auf muttersprachlichem Niveau
  |N=spricht [[:category:user de|Deutsch]] als Muttersprache
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/de]]&lt;/noinclude&gt;</text>
      <sha1>of3bctwnkop8j5ypwq3jyq51r12q9r2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/dsb</title>
    <ns>10</ns>
    <id>201318</id>
    <revision>
      <id>1552599</id>
      <parentid>1552598</parentid>
      <timestamp>2009-06-30T04:33:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/dsb]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lower Sorbian
 |text = Toś ten wužywaŕ ma {{#switch:{{{2}}}|1=zakładne znajobnosći |2=rozšyrjone znajobnosći|3=wjelgin dobre znajobnosći|N=maminorěcne znajobnosći}} [[:category:user dsb|dolnoserbšćiny]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/dsb]]&lt;/noinclude&gt;</text>
      <sha1>svty8zwz4mmkgk1lneczwcgbnin683i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/el</title>
    <ns>10</ns>
    <id>201319</id>
    <revision>
      <id>1552608</id>
      <parentid>1552607</parentid>
      <timestamp>2009-06-30T04:35:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/el]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Greek
 |text = Αυτός ο χρήστης {{#switch:{{{2}}}
 |0=δεν μπορεί να διαβάσει ή να γράψει [[:category:user el|Ελληνικά]].
 |1=μπορεί να διαβάσει ή να γράψει βασικού  επιπέδου [[:category:user el|Ελληνικά]].
 |2=μπορεί να διαβάσει ή να γράψει μέτριου  επιπέδου [[:category:user el|Ελληνικά]].
 |3=μπορεί να διαβάσει ή να γράψει ανώτερου επιπέδου [[:category:user el|Ελληνικά]].
 |4=έχει τα [[:category:user el|Ελληνικά]] σχεδόν ως μητρική του γλώσσα.
 |N=έχει τα [[:category:user el|Ελληνικά]] ως μητρική του γλώσσα.
}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/el]]&lt;/noinclude&gt;</text>
      <sha1>3bju3lh2x2udu684aeumf31z04pd9al</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/en</title>
    <ns>10</ns>
    <id>201320</id>
    <revision>
      <id>1552621</id>
      <parentid>1552620</parentid>
      <timestamp>2009-06-30T04:37:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/en]]&quot;: High-impact page ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">&lt;!--



Don't copy this code when creating a new translation!
This subpage contains special programming for use as a default text.



--&gt;{{#switch:{{{1}}}
 |name = English
 |text = This user {{#switch:{{{2}}}
  |0 = cannot read or write in
  |1 = can read and write basic
  |2 = can read and write intermediate
  |3 = can read and write fluently in
  |4 = can read and write at a near-native level in
  |N = can read and write at a native level in
}} [[:Category:User {{{3|en}}}|{{#switch:{{{3|en}}}|en=English |{{#ifexist:template:user language/{{{3}}}|{{user language/{{{3}}}|name}}|''{{#language:{{{3}}}}}''}}}}]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/en]]&lt;/noinclude&gt;</text>
      <sha1>0k5tv2ot9l08twttn748cqg4ndwgern</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/eo</title>
    <ns>10</ns>
    <id>201321</id>
    <revision>
      <id>1552627</id>
      <parentid>1552626</parentid>
      <timestamp>2009-06-30T04:38:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/eo]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Esperanto
 |text = Ĉi tiu uzanto {{#switch:{{{2}}}|1=povas komuniki per baza nivelo de|2=povas komuniki per meza nivelo de|3=kapablas komuniki per alta aŭ flua nivelo de|4=kapablas komuniki kvazaŭ denaske en|N=estas denaska parolanto de}} [[:category:user eo|Esperanto]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/eo]]&lt;/noinclude&gt;</text>
      <sha1>jhxrlxxo46g4j7q3r3sopnjojtvuo48</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/es</title>
    <ns>10</ns>
    <id>201322</id>
    <revision>
      <id>2113005</id>
      <parentid>2091816</parentid>
      <timestamp>2011-05-30T14:17:19Z</timestamp>
      <contributor>
        <username>Simon Peter Hughes</username>
        <id>386069</id>
      </contributor>
      <comment>In Spanish, the language has a small &quot;e&quot;.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Spanish
 |text = Este usuario {{#switch:{{{2}}}
 |0=no puede comunicarse en|puede contribuir con un nivel {{#switch:{{{2}}}
 |1=básico de
 |2=intermedio de
 |3=avanzado de
 |4=casi nativo de
 |N=nativo de}}}} [[:Category:User es|español]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/es]]&lt;/noinclude&gt;</text>
      <sha1>tp5xt2tc4v0rtcowozcdoe5pevfc21z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/et</title>
    <ns>10</ns>
    <id>201323</id>
    <revision>
      <id>1552650</id>
      <parentid>1552649</parentid>
      <timestamp>2009-06-30T04:40:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/et]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Estonian
 |text = Kasutaja {{#switch:{{{2}}}
   |0=ei oska [[:category:user et|eesti keelt]]
   |1=suudab kaastööd teha [[:category:user et|eesti keeles]] algaja tasemel
   |2=suudab kaastööd teha [[:category:user et|eesti keeles]] keskmisel tasemel
   |3=suudab kaastööd teha [[:category:user et|eesti keeles]] väga heal tasemel
   |4=suudab [[:category:user et|eesti keeles]] kaastööd teha emakeelega võrreldaval tasemel
   |N=emakeel on [[:category:user et|eesti keel]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/et]]&lt;/noinclude&gt;</text>
      <sha1>f5x5251c7icw3asmzxu1dqs7qu9rsfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/eu</title>
    <ns>10</ns>
    <id>201324</id>
    <revision>
      <id>2091647</id>
      <parentid>1553762</parentid>
      <timestamp>2011-05-03T12:19:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Basque
 |text = {{#switch:{{{2}}}
  |0=Pertsona honek '''ez daki [[:Category:User eu|euskara]]'''rik (edo zailtasun handiz ulertzen du).
  |1=Erabiltzaile honek '''[[:Category:User eu|oinarrizko mailan]]''' lagun dezake '''[[:Category:User eu|euskaraz]]'''.
  |2=Erabiltzaile honek '''[[:Category:User eu|euskara]]''' maila '''[[:Category:User eu|ertaina]]'''z  lagun dezake.
  |3=Erabiltzaile honek '''[[:Category:User eu|euskara]]''' maila '''[[:Category:User eu|aurreratua]]'''z lagun dezake.
  |4=Erabiltzaile honek ia '''[[:Category:User eu|euskaldun zahar]]'''ren maila du '''[[:Category:User eu|euskara]]'''z.
  |N=Erabiltzaile hau '''[[:Category:User eu|euskaldun zahar]]ra''' da (lehen hizkuntza du '''[[:Category:User eu|euskara]]''').
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/eu]]&lt;/noinclude&gt;</text>
      <sha1>s7vo4409d89whvxx4ky9jkmnuh9d4yq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/eur</title>
    <ns>10</ns>
    <id>201325</id>
    <revision>
      <id>1552661</id>
      <parentid>1552660</parentid>
      <timestamp>2009-06-30T04:42:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/eur]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Europanto
 |text = Cette Benutzer can lese y scrivere {{#switch:{{{2}}} |0=ingen |1=grundlegende |2=intermediate |3=avancerat |4=native |N=moedertaalig}} [[:category:user eur|Europanto]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/eur]]&lt;/noinclude&gt;</text>
      <sha1>r6mz0f4apyk7jf35fd6sztvwbf0r6im</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/fa</title>
    <ns>10</ns>
    <id>201326</id>
    <revision>
      <id>1553591</id>
      <parentid>1552673</parentid>
      <timestamp>2009-06-30T18:37:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed name.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Persian
 |text = {{rtl|این کاربر قادر به نوشتن وخواندن {{{override_name|فارسی}}} {{#switch:{{{2}}}|0=نیست|1=در حد مقدماتی است|2=در حد متوسط است|3=در حد خوب است|4=در حد عالی است|N=در حد زبان مادری است}}.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/fa]]&lt;/noinclude&gt;</text>
      <sha1>ois1jjmg852jem2mbkcw0zk6xmp1sf0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/fi</title>
    <ns>10</ns>
    <id>201327</id>
    <revision>
      <id>1552678</id>
      <parentid>1552677</parentid>
      <timestamp>2009-06-30T04:44:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/fi]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Finnish
 |text = Tämä käyttäjä {{#switch:{{{2}}}|0=ei osaa lukea tai kirjoittaa [[:category:user fi|suomea]]|1=osaa lukea ja kirjoittaa [[:category:user fi|suomea]] perustasolla |2=osaa lukea ja kirjoittaa [[:category:user fi|suomea]] keskitasolla |3=osaa lukea ja kirjoittaa [[:category:user fi|suomea]] sujuvasti |4=osaa lukea ja kirjoittaa [[:category:user fi|suomea]] lähes äidinkielen tasolla |N=lukee ja kirjoittaa [[:category:user fi|suomea]] äidinkielenään}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/fi]]&lt;/noinclude&gt;</text>
      <sha1>ma0kgspc8bibxukhpdxb66zace13dfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/fr</title>
    <ns>10</ns>
    <id>201328</id>
    <revision>
      <id>2091743</id>
      <parentid>1552696</parentid>
      <timestamp>2011-05-03T15:30:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = French
 |text = Cette personne {{#switch:{{{2}}}
|0=ne sait pas communiquer en
|1=peut contribuer avec un niveau élémentaire de
|2=peut contribuer avec un niveau intermédiaire de
|3=peut contribuer avec un niveau avancé de
|4=peut contribuer avec un niveau quasi-natif de
|N=a pour langue maternelle le}} [[:category:user fr|français]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/fr]]&lt;/noinclude&gt;</text>
      <sha1>lgyw4ey7fij6hv9xd24joefukunukqo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/fy</title>
    <ns>10</ns>
    <id>201331</id>
    <revision>
      <id>1552702</id>
      <parentid>1552701</parentid>
      <timestamp>2009-06-30T04:48:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/fy]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Western Frisian
 |text = {{#ifeq: {{{2}}}|N|De memmetaal fan dizze|Dizze}} meidogger {{#switch:{{{2}}}
   |0=sprekt en lêst gjin wurd
   |1=hat basiskennis fan it
   |2=hat aardich wat doel oer it
   |3=hat treflike kennis fan it
   |4=sprekt it
   |N=is it}} [[:category:user fy|Frysk]]{{#if:{{{4|}}}|op memmetaalnivo|}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/fy]]&lt;/noinclude&gt;</text>
      <sha1>eccffima5lqgdz4bv233mskjjbix844</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ga</title>
    <ns>10</ns>
    <id>201332</id>
    <revision>
      <id>2210003</id>
      <parentid>1552707</parentid>
      <timestamp>2011-11-13T15:04:26Z</timestamp>
      <contributor>
        <username>Erigena</username>
        <id>439456</id>
      </contributor>
      <minor />
      <comment>two typos</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Irish
|text = {{#switch:{{{2}}}  
  |0 = Níl léamh ná scríobh na [[:category:user ga|Gaeilge]] ag  an úsáideoir seo
  |1 = Tá bunleibhéal léimh agus scríofa  i [[:category:user ga|nGaeilge]] ag an úsáideoir seo
  |2 = Tá meánleibhéal léimh agus scríofa  i [[:category:user ga|nGaeilge]] ag an úsáideoir seo
  |3 = Tá an t-úsáideoir seo in ann an [[:category:user ga|Ghaeilge]] a léamh agus a scríobh go líofa
  |4 = Tá an t-úsáideoir seo in ann an [[:category:user ga|Ghaeilge]] a léamh agus a scríobh ar leibhéal gar do chainteoir dúchais
  |N = Tá an t-úsáideoir seo in ann an [[:category:user ga|Ghaeilge]] a léamh agus a scríobh mar chainteoir dúchais}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ga]]&lt;/noinclude&gt;</text>
      <sha1>sbx91hz6sk6dkkiefxy7i473842dswa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/gan</title>
    <ns>10</ns>
    <id>201333</id>
    <revision>
      <id>1553593</id>
      <parentid>1552711</parentid>
      <timestamp>2009-06-30T18:38:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed name.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Gan
 |text = 箇隻人{{#switch:{{{2}}}
   |0=話不正也寫不正
   |1=曉得一滴子
   |2=一般嗰都曉得
   |3=什哩都話得正
   |4=冇什哩話不正
   |N=一出世就話}} [[:category:user gan|贛語]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/gan]]&lt;/noinclude&gt;</text>
      <sha1>ndtghq8q822pvnap23vkwnqu81lc5lo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/gd</title>
    <ns>10</ns>
    <id>201334</id>
    <revision>
      <id>1552714</id>
      <parentid>1552713</parentid>
      <timestamp>2009-06-30T04:50:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/gd]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Scottish Gaelic
|text = {{#switch:{{{2}}}
   |0=Cha tuig an neach-cleachdaidh seo [[:category:user gd|Gàidhlig]] idir
   |1=Tha comas labhairt bunaiteach sa [[:category:user gd|Ghàidhlig]] aig an neach-chleachdaidh seo
   |2=Tha comas labhairt meadhanach sa [[:category:user gd|Ghàidhlig]] aig an neach-chleachdaidh seo
   |3=Tha comas labhairt adhartach sa [[:category:user gd|Ghàidhlig]] aig an neach-chleachdaidh seo
   |4=Tha comas labhairt cha mhòr mar fhileantach sa [[:category:user gd|Ghàidhlig]] aig an neach-chleachdaidh seo
   |N=Tha an neach-cleachdaidh seo fileanta sa [[:category:user gd|Ghàidhlig]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/gd]]&lt;/noinclude&gt;</text>
      <sha1>iuk0hr3vm9wr8xj6kq4xgxai607v8rp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/gl</title>
    <ns>10</ns>
    <id>201335</id>
    <revision>
      <id>1552720</id>
      <parentid>1552719</parentid>
      <timestamp>2009-06-30T04:51:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/gl]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Galician
 |text = Este usuario pode contribuír cun nivel {{#switch:{{{2}}}|1=básico |2=intermedio |3=avanzado |N=nativo }} de [[:category:user gl|galego]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/gl]]&lt;/noinclude&gt;</text>
      <sha1>guzmtlutabhri6hypja3bf6sh11l8qh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/grc</title>
    <ns>10</ns>
    <id>201336</id>
    <revision>
      <id>1552727</id>
      <parentid>1552726</parentid>
      <timestamp>2009-06-30T04:51:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/grc]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Classical Greek
 |text = {{#switch:{{{2}}}
   |0=Ὅδε χρήστης '''οὐ κατανοεῖ [[:Category:User grc|τὴν ἀρχαίαν ἑλληνικήν]]'''
   |1=Ὅδε χρήστης δύναται συνεισφέρειν δι' '''ὀλίγης''' γνώσεως τῆς '''[[:Category:User grc|ἀρχαίας ἑλληνικῆς]]'''.
   |2=Ὅδε χρήστης δύναται συνεισφέρειν διὰ '''μέσης''' γνώσεως τῆς '''[[:Category:User grc|ἀρχαίας ἑλληνικῆς]]'''.
   |3=Ὅδε χρήστης δύναται συνεισφέρειν δι' '''ἀνωτέρας''' γνώσεως τῆς '''[[:Category:User grc|ἀρχαίας ἑλληνικῆς]]'''.
   |4=Ὅδε χρήστης τὴν '''[[:Category:User grc|ἀρχαίαν ἑλληνικὴν]]''' γιγνώσκει ὡς αὕτη '''μητρικὴ''' ἂν εἴη.
   |N=Ὅδε χρήστης ἐστὶ ἰθαγενὴς ὀμιλητὴς τῆς [[:Category:User grc|ἀρχαίας ἑλληνικῆς]].}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/grc]]&lt;/noinclude&gt;</text>
      <sha1>4fa0iim6eoavyb0hxjdkn5bwikzo4t4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/gsw</title>
    <ns>10</ns>
    <id>201337</id>
    <revision>
      <id>1552731</id>
      <parentid>1552730</parentid>
      <timestamp>2009-06-30T05:11:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/gsw]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Swiss German
 |text = De Benutzer {{#switch:{{{2}}}
  |0=kann Schwitzerdütsch wedr schriiba no lesa
  |1=het grundlegendi [[:category:user gsw|Switzerdütschkenntniss]]
  |2=het fortgschrittni [[:category:user gsw|Switzerdütschkenntniss]]
  |3=het sehr guati [[:category:user gsw|Switzerdütschkenntniss]]
  |4=beherrscht [[:category:user gsw|Schwitzerdütsch]] uf muattersprochlichem Niveau
  |N=redet [[:category:user gsw|Schwitzerdütsch]] als Muattersproch
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/gsw]]&lt;/noinclude&gt;</text>
      <sha1>12wvc18e49bui8p1ms1gv60mctaqwf0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Duck fried rice</title>
    <ns>102</ns>
    <id>201338</id>
    <revision>
      <id>2158718</id>
      <parentid>2068422</parentid>
      <timestamp>2011-08-19T15:49:01Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <comment>[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</comment>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|5|20 minutes|2||100 kcal.}}

{{Recipe}}

==Ingredients==

* 3 tbsp. [[Cookbook:Butter|butter]]
* 2 tbsp. [[Cookbook:Sesame Oil|sesame oil]]
* 3 cloves [[Cookbook:Garlic|garlic]], minced
* 2 red [[Cookbook:Chilli|chillies]], cut 1 cm
* 2 green chillies, cut 1 cm
* 3 [[Cookbook:Scallion|scallions]], cut the white part only
* 200 g [[Cookbook:Bean Sprout|bean sprouts]], soak in hot water
* 25 g [[Cookbook:Parsley|fresh parsley]]
* 2 [[Cookbook:Duck|duck meat]], sliced 1 cm
* 600 g [[Cookbook:Rice|rice]]
* 2 tbsp. light [[Cookbook:Soy sauce|soy sauce]]
* 1 tbsp. [[Cookbook:Habanero|habanero]]
* 1 tbsp. [[Cookbook:Pepper|black pepper]]
* 1½ tbsp. [[Cookbook:Salt|salt]]

==Procedure==

# Heat the butter and sesame oil on the non-stick pan, fry the garlic, red and green chillies and scallion. Stir at 15 seconds to make fragrant.
# Add the duck meat, bean sprouts and parsley, stir until the duck meat changing the color.
# Add the rice, and then the light soy sauce, habanero, black pepper and salt. Stir until mixed all.
# Served hot.

[[Category:Rice recipes]]
[[Category:Fried rice recipes]]
[[Category:Duck recipes]]
[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</text>
      <sha1>6m6stdhx4eu4mdvvw6h0kfx8m0z471u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Inkscape/Interface</title>
    <ns>0</ns>
    <id>201339</id>
    <revision>
      <id>2474160</id>
      <parentid>2310248</parentid>
      <timestamp>2013-01-07T07:33:22Z</timestamp>
      <contributor>
        <username>Vwanweb</username>
        <id>379580</id>
      </contributor>
      <text xml:space="preserve">[[Image:Inkscape_window.jpg|thumb|350px|The Inkscape window.]]
The Inkscape window is laid out with three bars at the top, one on the left, and one at the bottom. The very top menu is the Menu Bar, containing advanced features.  The next bar down is the Command Menu bar. It has buttons of commonly used edits such as file options, undo, copy, clone, group, etc. Underneath it is the Tool Controls bar, which changes depending upon which tool is selected. The tools can be selected from the Tool bar, on the left. To find out what each button does hover/mouse-over an icon and a tooltip will pop up.

All these bars, except the Menu Bar, can be &quot;torn off&quot; and moved around. To move either of the top two bars (Commands or Tool Controls), click and drag from the left end. The Command bar will turn into an arrow icon, which can be clicked for a dropdown menu. To tear off the Tool bar, click and drag the top edge. To re-dock any of these, simply drag them back to their home positions.

[[Image:Inkscape_toolbar.png|left]]
Each tool has a keyboard shortcut---usually an F-key and an alternate, letter key. Selector is slightly different, in that its shortcut, the '''Space''' bar, is a toggle. When using any other tool, you can hit '''Space''' to get the Selector, and then '''Space''' again to go back to the tool you were using. The Selector is used to select, resize, rotate, and move objects.

Go into Inkscape, and try out different shape tools by clicking their icons in the toolbar, or by pressing their keyboard shortcuts. Then, click and drag with the mouse to try making shapes. The shape tools are Rectangle, 3D Box, Ellipse, Star/Polygon, and Spiral. The other tools are slightly more complex, and will be explained in the chapters on Path Editing and Other Tools. Pencil is very intuitive: just click and drag to draw a line.

At the bottom of the screen is a bar of swatches, and the Status bar. Select a shape, and click one of the swatches. The shape's color will be replaced by the swatch color.
==Navigation==
You can pan the canvas with '''Ctrl + arrow keys''', or by clicking and dragging with your middle mouse button. Of course, scrolling with a scroll-wheel works as well. You can toggle the scrollbars with '''Ctrl-B'''.

To cycle between Inkscape windows, use '''Ctrl-Tab'''. To cycle backwards, use '''Ctrl-Shift-Tab'''.

&lt;noinclude&gt;
{{chapter navigation|Introduction|Shape Tools}}
&lt;/noinclude&gt;

[[Category:Inkscape]]</text>
      <sha1>jiyi1kh26k9mp2nst896fjgffcwdoaw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Asian Barbecue Sauce</title>
    <ns>102</ns>
    <id>201341</id>
    <revision>
      <id>2375983</id>
      <parentid>1907307</parentid>
      <timestamp>2012-07-10T21:14:54Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>general cleanup, typos fixed: Refridgerate → Refrigerate (2) using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Sauce recipes]] [[Category:Marinade recipes]]

== Ingredients ==
:1 cup soy sauce
:1 cup hoisin sauce
:1/4 cup rice wine vinegar
:3 tbsp garlic powder
:1 tbsp ground ginger
:1/4 cup freshly squeezed lemon juice

== Directions ==
#Combine all ingredients in a mason jar. Refrigerate for as long as either the soy sauce lasts or the hoisin, whichever comes first.

== Uses ==

This sauce is extremely useful. To marinade meat in it, pour some into a zip-top plastic bag. Add your meat in and refrigerate for as long as 24 hours. To marinate fish, just follow the same directions for meat, execpt don't go past an hour or else your fish will have lost it's flavor.

*You can use this as a brushing sauce for foods on the grill. Just be sure to pour what you think you'll need into like a bowl so that everything stays clean and safe.</text>
      <sha1>4g198hpqdwthvx75qaateie4m8vnvxg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Steakhouse Marinade</title>
    <ns>102</ns>
    <id>201342</id>
    <revision>
      <id>1862070</id>
      <parentid>1561428</parentid>
      <timestamp>2010-06-27T21:58:17Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Marinade recipes]] [[Category:Beef recipes]]

== Ingredients ==
* 1 cup beef broth
* 1/3 cup extra-virgin olive oil
* 1/2 cup cognac
* 3 sprigs rosemary
* 8 sprigs thyme

== Procedure ==
#Combine all ingredients in a large saucepan. Bring to 190° for 10 minutes. Strain, cool and place into a gallon size zip-top bag. Keep refrigerated for up to 1 1/2 weeks.</text>
      <sha1>d9nu82uzvg45c5h1othoyelhj4y4hg6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Pork Marinade</title>
    <ns>102</ns>
    <id>201343</id>
    <revision>
      <id>1761745</id>
      <parentid>1552814</parentid>
      <timestamp>2010-04-20T10:15:59Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Marinade recipes]] [[Category:Pork recipes]]

== Ingredients ==
*1 cup chicken broth
*1/2 cup red wine
*1/4 cup freshly squeezed lime juice
*1/4 cup dark honey
*2 tbsp salt
*1 tbsp garlic powder
*2 tbsp freshly ground black pepper

== Procedure ==
#Combine all ingredients in a large mason jar. Keep refrigerated for up to 2 weeks.</text>
      <sha1>r01awc45eonfdlmor4wdsmppcsfqkj4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chile Lime Marinade</title>
    <ns>102</ns>
    <id>201344</id>
    <revision>
      <id>2376002</id>
      <parentid>1702568</parentid>
      <timestamp>2012-07-10T21:19:04Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>/* Procedure */general cleanup, typos fixed: refridgerated → refrigerated using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Marinade recipes]]

== Ingredients ==
*1/2 cup freshly squeezed lime juice
*1/4 cup honey
*4 serrano chiles, minced (seeded if you want)
*1 cup chicken broth
*2 tbsp salt

== Procedure ==
#Combine all ingredients in a large mason jar and keep refrigerated for up to 2 weeks.</text>
      <sha1>owory7tlun8tjia9dtgkhu8a98f09w6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Vegetable Salad</title>
    <ns>102</ns>
    <id>201346</id>
    <revision>
      <id>2566702</id>
      <parentid>2566698</parentid>
      <timestamp>2013-10-15T14:11:20Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/112.203.178.29|112.203.178.29]] ([[User talk:112.203.178.29|talk]]) to last version by QuiteUnusual</comment>
      <text xml:space="preserve">{{Recipesummary|Salad recipes|6|1 hour|2|660 kcal.}}

{{Recipe}}

==Ingredients==

* 300 g [[Cookbook:Bean Sprout|bean sprouts]], soak in hot water
* 6 sheet [[Cookbook:Lettuce|lettuce]], wash cleanly and cut into 6 pieces
* 1 big [[Cookbook:Onion|onion]], cut like ring
* 3 [[Cookbook:Tomato|tomato]], remove the seeds and slice 1 cm
* 250 g [[Cookbook:Cabbage|cabbage]]
* 6 [[Cookbook:Cucumber|cucumber]], remove the skin and slice 1 cm
* 10 hard-boiled [[Cookbook:Egg|eggs]], cut into 4 pieces

==Sauces==

* 8 tbsp. [[Cookbook:Mayonnaise|mayonnaise]]
* 3 tbsp. [[Cookbook:Mustard|mustard]]
* 3½ tbsp. [[Cookbook:Tomato Sauce|tomato sauce]]
* 1 tbsp. [[Cookbook:Sugar|sugar]]
* 1 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Pepper|black pepper]]

==Procedure==

# Mix all the vegetables ingredients on a bowl, and then quiet until 5 minutes.
# Mix all the sauce ingredients with spoon.
# Place the sauce into the vegetable mixture, and then mix again.
# Serves for 6.

[[Category:Salad recipes]]
[[Category:Vegetable recipes]]
[[Category:Inexpensive recipes]]</text>
      <sha1>q3sk0ohfpgdvmk7nk4pexe6d5e11tir</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:One-to-One Laptop Schools/Ethiopia</title>
    <ns>1</ns>
    <id>201350</id>
    <revision>
      <id>1552869</id>
      <timestamp>2009-06-30T15:22:12Z</timestamp>
      <contributor>
        <username>Miroliwosz</username>
        <id>115200</id>
      </contributor>
      <comment>Created page with '0031617801826 University of Farniggam Nina Hanvem Monitoring and evaluation of psychological effects'</comment>
      <text xml:space="preserve">0031617801826 University of Farniggam
Nina Hanvem
Monitoring and evaluation of psychological effects</text>
      <sha1>57prex32sket3w9blphjrxfj3cqb6ip</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/gu</title>
    <ns>10</ns>
    <id>201351</id>
    <revision>
      <id>1552879</id>
      <parentid>1552878</parentid>
      <timestamp>2009-06-30T15:24:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/gu]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Gujarati
 |text = આ સભ્ય {{#switch:{{{2}}}
   |0=લખી કે વાંચી શકતો નથી.
   |1=પ્રારંભિક કક્ષાનું પ્રદાન કરી શકે તેમ છે.
   |2=મધ્યમ કક્ષાનું પ્રદાન કરી શકે તેમ છે.
   |3=ઉચ્ચ કક્ષાનું ગુજરાતી લખી શકે છે.
   |4=લગભગ માતૃભાષા જેવી ગુણવત્તાનું યોગદાન કરી શકે છે.
   |N=માતૃભાષાની ગુણવત્તાનું યોગદાન કરી શકે છે.}} [[:category:user gu|ગુજરાતી]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/gu]]&lt;/noinclude&gt;</text>
      <sha1>4wbsmm35sd0ecf9a4r3p5el876q32xz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/haw</title>
    <ns>10</ns>
    <id>201353</id>
    <revision>
      <id>1553779</id>
      <parentid>1552886</parentid>
      <timestamp>2009-06-30T22:05:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category link</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Hawaiian
 |text = {{#switch:{{{2}}}
   |0=‘A‘ole hiki i kēia mea ho‘ohana ke heluhelu ai‘ole ke kākau i ka [[:Category:User haw|‘ōlelo Hawai‘i]].
   |1=Maopopo ka [[:Category:User haw|‘ōlelo Hawai‘i]] i kēia mea ho‘ohana me ka ‘apomana‘o ma‘alahi.
   |2=Maopopo ka [[:Category:User haw|‘ōlelo Hawai‘i]] i kēia mea ho‘ohana me ka ‘apomana‘o mawaena.
   |3=Maopopo ka [[:Category:User haw|‘ōlelo Hawai‘i]] i kēia mea ho‘ohana me ka ‘apomana‘o maika‘i loa.
   |4=Mai hiki kēia mea ho‘ohana ke ‘ōlelo i ka [[:Category:User haw|‘ōlelo Hawai‘i]] me ka ‘apomana‘o mānaleo.
   |N=He mānaleo [[:Category:User haw|‘ōlelo Hawai‘i]] kēia mea ho‘ohana.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/haw]]&lt;/noinclude&gt;</text>
      <sha1>2ztsxvwau5eek1q30nwh6b6aycrxw3j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/he</title>
    <ns>10</ns>
    <id>201354</id>
    <revision>
      <id>1552894</id>
      <parentid>1552893</parentid>
      <timestamp>2009-06-30T15:27:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/he]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Hebrew
 |text = {{rtl|משתמש זה {{#switch:{{{2}}}|0=אינו מבין [[:category:user he|עברית]]|1=מסוגל לתרום ברמה בסיסית של [[:category:user he|עברית]] |2=מסוגל לתרום ברמה בינונית של [[:category:user he|עברית]] |3=מסוגל לתרום ברמה מתקדמת של [[:category:user he|עברית]] |4=מסוגל לתרום ברמה קרובה לשפת אם של [[:category:user he|עברית]] |N=דובר [[:category:user he|עברית]] כשפת אם}}.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/he]]&lt;/noinclude&gt;</text>
      <sha1>om1w1x7xyzg1km2pkzafcglgf3g4oqc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/hi</title>
    <ns>10</ns>
    <id>201355</id>
    <revision>
      <id>1552899</id>
      <parentid>1552898</parentid>
      <timestamp>2009-06-30T15:28:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/hi]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Hindi
 |text = यह सदस्य [[:category:user hi|हिन्दी]] भाषा {{#switch:{{{2}}}
   |0=लिखने एवं पढ़ने में सक्षम नहीं है
   |1=में प्रारंभिक रूप से योगदान करने में सक्षम है
   |2=में माध्यमिक रूप से योगदान करने में सक्षम है
   |3=में विकसित रूप से योगदान करने में सक्षम है
   |4=में लगभग मातृभाषा के रूप में योगदान करने में सक्षम है
   |N=में मातृभाषा के रूप में योगदान करने में सक्षम है}}|
}}&lt;noinclude&gt;[[Category:Template subpages|User language/hi]]&lt;/noinclude&gt;</text>
      <sha1>1d3vx3trlw83iw7zp1bblhtpjzl8ch7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/hif</title>
    <ns>10</ns>
    <id>201356</id>
    <revision>
      <id>1552906</id>
      <parentid>1552905</parentid>
      <timestamp>2009-06-30T15:30:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/hif]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Fiji Hindi
 |text = Ii user parrhe aur likhe sake hai {{#switch:{{{2}}}|0=kuch nahi |1=khali thorra |2=kaam chalaae bhar |3=ekdam accha se |4=jaise iske matr bhasa hai| N=iske matr bhasa hai}} [[:category:user hif|Fiji Hindi]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/hif]]&lt;/noinclude&gt;</text>
      <sha1>qskcux1c46ub9z30yx324xcwak0f5ol</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/hr</title>
    <ns>10</ns>
    <id>201357</id>
    <revision>
      <id>2091663</id>
      <parentid>1552910</parentid>
      <timestamp>2011-05-03T12:49:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Croatian
 |text = Ovaj suradnik {{#switch:{{{2}}}
   |0=ne razumije [[:category:user hr|hrvatski]] ili ima velike teškoće u sporazumijevanju.
   |1=poznaje osnove [[:category:user hr|hrvatskog jezika]].
   |2=srednje dobro govori [[:category:user hr|hrvatski]].
   |3=govori prilično dobro [[:category:user hr|hrvatski]].
   |4=govori [[:category:user hr|hrvatski]] skoro kao materinski jezik.
   |N=govori [[:category:user hr|hrvatski]] kao materinski jezik.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/hr]]&lt;/noinclude&gt;</text>
      <sha1>csv6xzfqbbq4k1f7mbbcno29jobbtaq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/hsb</title>
    <ns>10</ns>
    <id>201358</id>
    <revision>
      <id>1552915</id>
      <parentid>1552914</parentid>
      <timestamp>2009-06-30T15:31:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/hsb]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Upper Sorbian
 |text = Tutón wužiwar ma {{#switch:{{{2}}}|1=zakładne znajomosće |2=rozšěrjene znajomosće|3=jara dobre znajomosće|N=maćernorěčnym niwowje}} [[:category:user hsb|hornjoserbšćiny]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/hsb]]&lt;/noinclude&gt;</text>
      <sha1>0ux19h3wrttjmxyvx8h1dojuyehbnld</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ht</title>
    <ns>10</ns>
    <id>201359</id>
    <revision>
      <id>1552920</id>
      <parentid>1552919</parentid>
      <timestamp>2009-06-30T15:32:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ht]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Haitian Creole
 |text = {{#switch:{{{2}}}|0=Moun sa pa konnen pale ditou |1=Moun sa konnen kèk bagay nan |2=Moun sa konnen pale |3=Moun sa kapab byen pale |4=Moun sa a, vanse menm jan ak lang matènèl li, kapab pale |N=Lang matènèl moun sa a se }} [[:category:user ht|Kreyòl Ayisyen]].
}}&lt;noinclude&gt;[[Category:Template subpages|User languages/ht]]&lt;/noinclude&gt;</text>
      <sha1>ojrq7c62cz3pululyafg4lv1khaxhiq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/hu</title>
    <ns>10</ns>
    <id>201360</id>
    <revision>
      <id>1552924</id>
      <parentid>1552923</parentid>
      <timestamp>2009-06-30T15:33:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/hu]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Hungarian
 |text = {{#switch:{{{2}}}
    |0= Ez a szerkesztő nem tud [[:category:user hu|magyarul]]
    |1= Ez a szerkesztő alapszinten beszéli a [[:category:user hu|magyar]] nyelvet
    |2= Ez a szerkesztő középszinten beszéli a [[:category:user hu|magyar]] nyelvet
    |3= Ez a szerkesztő magas szinten beszéli a [[:category:user hu|magyar]] nyelvet
    |4= Ez a szerkesztő anyanyelvi szinten beszéli a [[:category:user hu|magyar]] nyelvet
    |N= Ennek a szerkesztőnek [[:category:user hu|magyar]] az anyanyelve}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/hu]]&lt;/noinclude&gt;</text>
      <sha1>ljfp0bayhlqdsde4a3syifa7c3mxu53</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ia</title>
    <ns>10</ns>
    <id>201361</id>
    <revision>
      <id>1552927</id>
      <parentid>1552926</parentid>
      <timestamp>2009-06-30T15:33:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ia]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Interlingua
 |text = Iste usator {{#switch:{{{2}}}
   |0=non sape leger e scriber
   |1=pote contribuer a nivello basic in
   |2=pote contribuer a nivello medie in
   |3=pote contribuer a nivello avantiate in
   |4=pote contribuer a nivello quasi native in
   |N=pote contribuer a nivello native in}} [[:category:user ia|interlingua]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ia]]&lt;/noinclude&gt;</text>
      <sha1>nd7yjw0xtpz3aszwtpwnwlkh3h9krb6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/id</title>
    <ns>10</ns>
    <id>201362</id>
    <revision>
      <id>1552932</id>
      <parentid>1552931</parentid>
      <timestamp>2009-06-30T15:34:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/id]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Indonesian
 |text = {{#switch:{{{2}}}|0=Pengguna ini sama sekali tidak mengerti [[:category:user id|Bahasa Indonesia]]|1=Pengguna ini mengerti [[:category:user id|Bahasa Indonesia]] tingkat dasar|2=Pengguna ini mengerti [[:category:user id|Bahasa Indonesia]] tingkat menengah|3=Pengguna ini mahir berkomunikasi dalam [[:category:user id|Bahasa Indonesia]]|4=Pengguna ini mengerti [[:category:user id|Bahasa Indonesia]] layaknya penutur asli|N=Pengguna ini merupakan penutur asli [[:category:user id|Bahasa Indonesia]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/id]]&lt;/noinclude&gt;</text>
      <sha1>6wcldgx88zg53cfv7ghtl2jsztiu2wd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/is</title>
    <ns>10</ns>
    <id>201363</id>
    <revision>
      <id>2091665</id>
      <parentid>1552940</parentid>
      <timestamp>2011-05-03T12:52:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Icelandic
|text = Þessi notandi {{#switch:{{{2}}}
   |0= talar ekki íslensku
   |1= hefur grundvallar-kunnáttu á [[:category:user is|íslensku máli]]
   |2= hefur miðlungsþekkingu á [[:category:user is|íslensku máli]]
   |3= hefur mjög góð tök á [[:category:user is|íslensku máli]]
   |4= talar [[:category:user is|íslensku]] eins og innfæddur
   |N= hefur [[:category:user is|íslensku]] að móðurmáli
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/is]]&lt;/noinclude&gt;</text>
      <sha1>sy5opcosv8r3cus1ebzc8ea1x4l6zk9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/it</title>
    <ns>10</ns>
    <id>201364</id>
    <revision>
      <id>1552947</id>
      <parentid>1552946</parentid>
      <timestamp>2009-06-30T15:36:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/it]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Italian
 |text = Questo utente {{#switch:{{{2}}}
|0=non riesce a leggere o scrivere in [[:category:user it|italiano]]
|1=può contribuire con un [[:category:user it|italiano]] di livello semplice 
|2=può contribuire con un [[:category:user it|italiano]] di livello intermedio 
|3=può contribuire con un [[:category:user it|italiano]] di livello avanzato 
|4=può contribuire con un [[:category:user it|italiano]] di livello quasi madrelingua
|N=può contribuire con un [[:category:user it|italiano]] di livello madrelingua}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/it]]&lt;/noinclude&gt;</text>
      <sha1>79xjsjj1r17goeizc0q07luo6webgj1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ja</title>
    <ns>10</ns>
    <id>201365</id>
    <revision>
      <id>1552955</id>
      <parentid>1552954</parentid>
      <timestamp>2009-06-30T15:36:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ja]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Japanese
 |text = このユーザは{{#switch:{{{2}}}
 |0=まったく[[:category:user ja|日本語]]を読み書きできません。
 |1=基本的な[[:category:user ja|日本語]]を読み書きします。
 |2=ある程度の[[:category:user ja|日本語]]を読み書きします。
 |3=流暢な[[:category:user ja|日本語]]を読み書きします。
 |4=母語に近い程度に[[:category:user ja|日本語]]を読み書きします。
 |N=母語として[[:category:user ja|日本語]]を読み書きします。}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ja]]&lt;/noinclude&gt;</text>
      <sha1>cn64prlqvt3w71j9kzzr8e9actlg3el</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/jv</title>
    <ns>10</ns>
    <id>201366</id>
    <revision>
      <id>1552959</id>
      <parentid>1552958</parentid>
      <timestamp>2009-06-30T15:38:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/jv]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Javanese
 |text = Panganggo iki {{#switch:{{{2}}}
   |0=ora ngerti
   |1=ngerti tataran dhasar
   |2=ngerti tataran madya
   |3=mahir
   |4=kaya penutur ibu ing
   |N=penutur ibu ing}} [[:category:user jv|Basa Jawa]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/jv]]&lt;/noinclude&gt;</text>
      <sha1>itgufp18f183vcpn7bt2cggt4rsbr6x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ka</title>
    <ns>10</ns>
    <id>201367</id>
    <revision>
      <id>2091667</id>
      <parentid>1552967</parentid>
      <timestamp>2011-05-03T12:54:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Georgian
 |text = ამ მომხმარებელს {{#switch:{{{2}}}
       |0=არ ესმის [[:category:user ka|ქართული ენა]].
       |1=შეუძლია წვლილი შეიტანოს [[:category:user ka|ქართული ენის]] ცოდნის ელემენტარულ
       |2=შეუძლია წვლილი შეიტანოს [[:category:user ka|ქართული ენის]] ცოდნის საშუალო 
       |3=შეუძლია წვლილი შეიტანოს [[:category:user ka|ქართული ენის]] ცოდნის მაღალ 
       |4=შეუძლია წვლილი შეიტანოს [[:category:user ka|ქართული ენის]] ცოდნის
       |N=შეუძლია წვლილი შეიტანოს [[:category:user ka|ქართული ენის]] ცოდნის მშობლიურ
}} დონეზე.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ka]]&lt;/noinclude&gt;</text>
      <sha1>sbyn8m0nzskln9g19xgy527dor8vcuk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/kk</title>
    <ns>10</ns>
    <id>201368</id>
    <revision>
      <id>2091668</id>
      <parentid>1552971</parentid>
      <timestamp>2011-05-03T12:55:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Kazak
 |text = {{#switch:{{{2}}}
   |0=This user cannot read or write in [[:category:user kk|Kazak]].
   |1=Бұл қатысушы [[:Category:User kk|қазақ тілін]] бастапқы деңгейде меңгереді
   |2=Бұл қатысушы [[:Category:User kk|қазақ тілін]] орташа деңгейде меңгереді
   |3=Бұл қатысушы [[:Category:User kk|қазақ тілін]] жоғарғы деңгейде меңгереді
   |4=Бұл қатысушы [[:Category:User kk|қазақ тілін]] ана тіліне жақын деңгейде меңгереді.
   |N=[[:Category:User kk|Қазақ тілі]] бұл қатысушының ана тілі боп саналады}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/kk]]&lt;/noinclude&gt;</text>
      <sha1>8f22j3lc3ay9rmm0dsaw5fdzfwvmqqv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/km</title>
    <ns>10</ns>
    <id>201369</id>
    <revision>
      <id>1552986</id>
      <parentid>1552985</parentid>
      <timestamp>2009-06-30T15:44:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/km]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Khmer
 |text = អ្នកប្រើប្រាស់នេះ{{#switch:{{{2}}}|0=មិនអាចអាន ឬសរសេរ[[:category:user km|ភាសាខ្មែរ]]បានទេ |1=អាចរួមចំនែកក្នុង [[:category:user km|ភាសាខ្មែរ]]ក្នុងកំរិតទាប |2=អាចរួមចំនែកក្នុង [[:category:user km|ភាសាខ្មែរ]]ក្នុងកំរិតមធ្យម |3=អាចរួមចំនែកក្នុង[[:category:user km|ភាសាខ្មែរ]] ក្នុងកំរិតល្អបង្គួរ |4=អាចរួមចំនែកក្នុង [[:category:user km|ភាសាខ្មែរ]]ក្នុងកំរិតល្អបង្គួរ |N=[[:category:user km|ជាជនជាតិខ្មែរ]]
}}។
}}&lt;noinclude&gt;[[Category:Template subpages|User language/km]]&lt;/noinclude&gt;</text>
      <sha1>9z0eepgka054z4e6rf1zzaabj4d9i2z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ko</title>
    <ns>10</ns>
    <id>201370</id>
    <revision>
      <id>1552990</id>
      <parentid>1552989</parentid>
      <timestamp>2009-06-30T15:45:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ko]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Korean
 |text = 이 사용자는 [[:Category:User ko|한국어]]를 {{#switch:{{{2}}}
 |0 = 전혀 읽고 쓸 수 없습니다.
 |1 = 조금 읽고 쓸 수 있습니다.
 |2 = 어느 정도 읽고 쓸 수 있습니다.
 |3 = 능숙하게 읽고 쓸 수 있습니다.
 |4 = 모국어에 준하는 수준으로 읽고 쓸 수 있습니다.
 |N = 모국어로서 읽고 쓸 수 있습니다.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ko]]&lt;/noinclude&gt;</text>
      <sha1>kqqjzelhmg7v1pza483lrq7od70upvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ksh</title>
    <ns>10</ns>
    <id>201371</id>
    <revision>
      <id>1553001</id>
      <parentid>1553000</parentid>
      <timestamp>2009-06-30T15:48:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ksh]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ripuarian
 |text = Dä Medmaacher hee {{#switch:{{{2|}}}|0=kann [[:category:user ksh|ripoarisch Shprooche]] nit lesse un onnit schriive|kallt {{#switch:{{{2}}}|1=winnisch fun|}} en [[:category:user ksh|ripoarisch Shprooch]]{{#switch:{{{2}}}|1=|2=&amp;#x20;meddeljoot |3=&amp;#x20;joot |4=&amp;#x20;bahl wiijenne &amp;Euml;ijnh&amp;euml;imesche|N=, un dat es däm sing Mottershprooch}}}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ksh]]&lt;/noinclude&gt;</text>
      <sha1>qi2utci30s5vg3dp7o51x3o1u0s60e9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ku</title>
    <ns>10</ns>
    <id>201372</id>
    <revision>
      <id>1553007</id>
      <parentid>1553006</parentid>
      <timestamp>2009-06-30T15:48:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ku]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Kurdish
 |text = Ev bikarhênera zimanê kurdî {{#switch:{{{2}}}
 |0=[[:category:user ku|nizane]]
 |1=kêm [[:category:user ku|dizane]]
 |2=hindik [[:category:user ku|dizane]]
 |3=baş [[:category:user ku|dizane]]
 |4=wek zimanê dayîkê [[:category:user ku|dizane]]
 |N=zimanê [[:category:user ku|xwe ye]]}} .
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ku]]&lt;/noinclude&gt;</text>
      <sha1>2maevmjn9jprhqfdewki2xs9m7nq70p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/la</title>
    <ns>10</ns>
    <id>201373</id>
    <revision>
      <id>1553013</id>
      <parentid>1553012</parentid>
      <timestamp>2009-06-30T15:49:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/la]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Latin
 |text = Hic usor {{#switch:{{{2}}}|1=simplice |2=media |3=callidissima |4=optima |N=natively in}} [[:category:user la|Latinitate]] contribuere potest.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/la]]&lt;/noinclude&gt;</text>
      <sha1>4idxrw9bgy5i50alqzweh61862zcqew</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lb</title>
    <ns>10</ns>
    <id>201374</id>
    <revision>
      <id>2091675</id>
      <parentid>1553020</parentid>
      <timestamp>2011-05-03T13:06:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Luxemburgish
 |text = {{#switch:{{{2}}}
   |0=Dëse Benotzer versteet kee [[:category:user lb|Lëtzebuergesch]]
   |1=Dëse Benotzer huet Grondkenntnisser vun der [[:category:user lb|Lëtzebuergescher Sprooch]]
   |2=Dëse Benotzer huet erweidert Kenntnisser vun der [[:category:user lb|Lëtzebuergescher Sprooch]]
   |3=Dëse Benotzer ka fléissend [[:category:user lb|Lëtzebuergesch]]
   |4=Dëse Benotzer ka [[:category:user lb|Lëtzebuergesch]] &amp;#x20;fléissend wéi seng Mammesprooch
   |N=Dësem Benotzer seng Mammesprooch ass [[:category:user lb|Lëtzebuergesch]]
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lb]]&lt;/noinclude&gt;</text>
      <sha1>kfza3st3t41hws818ymy0bpryk3ldp8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lfn</title>
    <ns>10</ns>
    <id>201375</id>
    <revision>
      <id>1553039</id>
      <parentid>1553038</parentid>
      <timestamp>2009-06-30T15:51:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lfn]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lingua Franca Nova
 |text = Esta usor pote leje e scrive a un nivel {{#switch:{{{2}}}|1=basal de |2=medial de |3=avansada de |N=nativa de }} [[:category:user lfn|lingua franca nova]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lfn]]&lt;/noinclude&gt;</text>
      <sha1>22wb5yvqhzy11zwgxi9e2f8kict988x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/li</title>
    <ns>10</ns>
    <id>201376</id>
    <revision>
      <id>2091677</id>
      <parentid>1553044</parentid>
      <timestamp>2011-05-03T13:07:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Limurgish
 |text = Deze gebroeker {{#switch:{{{2}}}
   |0=kalt gei [[:category:user li|Limburgs]]
   |1=haet 'n baziskinnis van 't [[:category:user li|Limburgs]]
   |2=haet 'n matige kinnis van 't [[:category:user li|Limburgs]]
   |3=kalt hoegwierdig [[:category:user li|Limburgs]]
   |4=kalt [[:category:user li|Limburgs]] wie 'ne mojertaalsjpraeker
   |N=haet [[:category:user li|Limburgs]] es mojertaal}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/li]]&lt;/noinclude&gt;</text>
      <sha1>8a63r4vxboy31kpsc1iquno70g2tzej</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lij</title>
    <ns>10</ns>
    <id>201377</id>
    <revision>
      <id>1553050</id>
      <parentid>1553049</parentid>
      <timestamp>2009-06-30T15:55:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lij]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ligurian
 |text = St'utente {{#switch:{{{2}}}
   |0=ô no capisce o [[:Category:User lij|lìggûre]] (o capisce con ben-ben de difficultæ)
   |1=ô l'è'n prinçipiante de [[:Category:User lij|lìggûre]].
   |2=ô l'è a mediô levellu de [[:Category:User lij|lìggûre]].
   |3=ô sa asæ de [[:Category:User lij|lìggûre]], ô l'è avançou.
   |4=ô parla [[:Category:User lij|lìggûre]] quæxi comme ûn d'o paize.
   |N=ô l'è nustran [[:Category:User lij|lìggûre]].}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lij]]&lt;/noinclude&gt;</text>
      <sha1>t6q8me5m1v2pyzisbf90i9d10o0ac65</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lld</title>
    <ns>10</ns>
    <id>201378</id>
    <revision>
      <id>1553054</id>
      <parentid>1553053</parentid>
      <timestamp>2009-06-30T15:56:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lld]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ladin
 |text = Chësc utënt {{#switch:{{{2}}}
   |0=ne sa nia da liejer y scrì
   |1=possa contribuì cun n livel bas de
   |2=possa contribuì cun n livel mesan de
   |3=possa contribuì cun n livel aut de
   |4=possa contribuì cun n livel daujin ala rujeneda de l'oma de
   |N=possa contribuì cun n livel de rujeneda de l'oma de}} [[:category:user lld|ladin]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lld]]&lt;/noinclude&gt;</text>
      <sha1>tfzo2bhrr3zthezsg44f3iviravcm6f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lmo</title>
    <ns>10</ns>
    <id>201379</id>
    <revision>
      <id>1553058</id>
      <parentid>1553057</parentid>
      <timestamp>2009-06-30T15:57:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lmo]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lombard
 |text = Cala persuna chì la parla {{#switch:{{{2}}}
   |0=
   |1=apéna 'n cininìn
   |2=assée
   |3=pròpi bén
   |4=
   |N=cumè sua léngua}} [[:category:user lmo|lumbart]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lmo]]&lt;/noinclude&gt;</text>
      <sha1>0khjhtl6zk7x5isp920nfgilgueqjdp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ln</title>
    <ns>10</ns>
    <id>201380</id>
    <revision>
      <id>1553062</id>
      <parentid>1553061</parentid>
      <timestamp>2009-06-30T15:58:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ln]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Lingala
 |text = Moto óyo ayébí koloba [[:category:user ln|lingala]] {{#switch:{{{2}}}
|0=tɛ̂
|1=mwâ mokɛ́
|2=mokɛ́
|3=malámu
|4=malámu mpenza
|N=bandá mbótama}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User languages/ln]]&lt;/noinclude&gt;</text>
      <sha1>7i4xoorlglyc6u3qh2l2sve7ipb9b1u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lo</title>
    <ns>10</ns>
    <id>201381</id>
    <revision>
      <id>1553071</id>
      <parentid>1553070</parentid>
      <timestamp>2009-06-30T15:59:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lo]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Laos
 |text = ຜູ້ໃຊ້ຄົນນີ້ໃຊ້[[:category:user lo|ພາສາລາວ]]{{#switch:{{{2}}}|0=ບໍ່ໄດ້ເລີຍຫຼືໃຊ້ໄດ້ດ້ວຍຄວາມຍາກລຳບາກ|1=ໃນລະດັບພື້ນຖານ|2=ໃນລະດັບກາງ |3=ໃນລະດັບສູງ |4=ໄດ້ຄືພາສາແມ່|N=ເປັນພາສາແມ່}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lo]]&lt;/noinclude&gt;</text>
      <sha1>0izxi2mhviyzcjt5bihnmhy3le0smkr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lt</title>
    <ns>10</ns>
    <id>201382</id>
    <revision>
      <id>1553076</id>
      <parentid>1553075</parentid>
      <timestamp>2009-06-30T16:00:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lt]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lithuanian
 |text = {{#switch:{{{2}}}|0=Šis naudotojas nesupranta [[:category:user lt|lietuvių kalbos]]|1=Šis naudotojas gali prisidėti pradinio lygio [[:category:user lt|lietuvių kalba]]|2=Šis naudotojas gali prisidėti vidutinio lygio [[:category:user lt|lietuvių kalba]]|3=Šis naudotojas gali prisidėti aukšto lygio [[:category:user lt|lietuvių kalba]]|4=Šis naudotojas kalba [[:category:user lt|lietuvių kalba]] kaip gimtąja kalba|N=Šio naudotojo gimtoji kalba yra [[:category:user lt|lietuvių kalba]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lt]]&lt;/noinclude&gt;</text>
      <sha1>g2c88iz6789b14xftritae7ym589lcn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lv</title>
    <ns>10</ns>
    <id>201383</id>
    <revision>
      <id>1553079</id>
      <parentid>1553078</parentid>
      <timestamp>2009-06-30T16:01:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/lv]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Latvian
 |text = Šis lietotājs [[:category:user lv|latviešu valodu]] {{#switch:{{{2}}}
   |0=nesaprot
   |1=prot pamata līmenī
   |2=prot vidējā līmenī
   |3=prot augstā līmenī
   |4=prot gandrīz dzimtās valodas līmenī
   |N=prot dzimtās valodas līmenī}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/lv]]&lt;/noinclude&gt;</text>
      <sha1>nuggxvijta2c1stfcvb96zvbcq684vf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mdf</title>
    <ns>10</ns>
    <id>201384</id>
    <revision>
      <id>1553084</id>
      <parentid>1553083</parentid>
      <timestamp>2009-06-30T16:03:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mdf]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Moksha
 |text = Тя тиись {{#switch:{{{2}}}
   |0=аф шарьхкоди
   |1=содасы мъзярошка валхт
   |2=шарьхкоди ди машты аф лама корхтамс
   |3=шарьхкоди, корхтай ди сёрмады
   |4=машты кода эсь кяльса корхтамс
   |N=идькспингстонза корхтай}} [[:category:user mdf|мокшекс]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mdf]]&lt;/noinclude&gt;</text>
      <sha1>0nkj38fltzmwhp6zwrfzidqzkit5ick</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mg</title>
    <ns>10</ns>
    <id>201385</id>
    <revision>
      <id>1553093</id>
      <parentid>1553092</parentid>
      <timestamp>2009-06-30T16:05:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mg]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Malagasy
 |text = {{#switch:{{{2}}}
   |0=Tsy mahay manoratra sy miteny
   |1=Manana ny foton'ny fiteny
   |2=Antonontonony amin'ny fiteny
   |3=Havanana amin'ny fiteny 
   |4=Ity mpikambana ity dia miteny
   |N=Ny teny }} [[:category:user mg|Malagasy]] {{#switch: {{{2}}} |N=No tenim-pirenena an'ity mpikambana ity|4=Mira-lenta amin'ny tenin-dreniny|default=ity mpikambana ity}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mg]]&lt;/noinclude&gt;</text>
      <sha1>h79vk9h7afn4l6swr1timozm1tsysxv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mi</title>
    <ns>10</ns>
    <id>201386</id>
    <revision>
      <id>2091681</id>
      <parentid>1553833</parentid>
      <timestamp>2011-05-03T13:12:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Māori
 |text = {{#switch:{{{2}}}
|0=He [[:Category:User mi-0|kore mōhio]] tēnei tangata ki [[:Category:User mi|te reo Māori]].
|1=He [[:Category:User mi-1|tapepa]] rawa [[:Category:User mi|te reo Māori]] o tēnei tangata.
|2=Kua taea e tēnei tangata te [[:Category:User mi-2|takawaenga]] mō [[:Category:User mi|te reo Māori]].
|3=He [[:Category:User mi-3|matatau]] tēnei tāngata ki [[:Category:User mi|te reo Māori]].
|4=Ko tēnei tangata he [[:Category:User mi-4|tino matatau]] ki [[:Category:User mi|te reo Māori]].
|N=Ko [[:Category:User mi|te reo Māori]] te [[:Category:User mi-N|reo tupu]] o tēnei tangata.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mi]]&lt;/noinclude&gt;</text>
      <sha1>tmvmlzmkpnw8zemsd6w8fw6ki29n5pd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mk</title>
    <ns>10</ns>
    <id>201387</id>
    <revision>
      <id>1553101</id>
      <parentid>1553100</parentid>
      <timestamp>2009-06-30T16:07:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mk]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Macedonian
 |text = Овој корисник {{#switch:{{{2}}}
   |0=не може да чита и пишува на
   |1=може да придонесе со основно ниво на
   |2=може да придонесе со средно ниво на
   |3=може да придонесе со напредно ниво на
   |4=може да придонесе со скоро мајчин
   |N=може да придонесе со мајчин}} [[:category:user mk|македонски јазик]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mk]]&lt;/noinclude&gt;</text>
      <sha1>anx8q7jiw7j7h6lzjcd1eomo34mr3yf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ml</title>
    <ns>10</ns>
    <id>201388</id>
    <revision>
      <id>1553108</id>
      <parentid>1553107</parentid>
      <timestamp>2009-06-30T16:07:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ml]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Malayalam
 |text = {{#switch:{{{2}}}|0=ഈ ഉപയോക്താവിനു [[:category:user ml|മലയാളം]] അറിയുകയേ ഇല്ല|1=ഈ ഉപയോക്താവിനു [[:category:user ml|മലയാളം]] കഷ്ടിച്ച് എഴുതാനും വായിക്കാനും അറിയാം |2=ഈ ഉപയോക്താവിനു [[:category:user ml|മലയാളം]] ഒരുവിധം എഴുതാനും വായിക്കാനും അറിയാം |3=ഈ ഉപയോക്താവിനു [[:category:user ml|മലയാളം]] നന്നായി എഴുതാനും വായിക്കാനും അറിയാം |4=ഈ ഉപയോക്താവിനു [[:category:user ml|മലയാളം]] മാതൃഭാഷ എന്നപോലെ കൈകാര്യം ചെയ്യാന്‍ സാധിക്കും|N=[[:category:user ml|മലയാളം]] മാതൃഭാഷയായുള്ള വ്യക്തി}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ml]]&lt;/noinclude&gt;</text>
      <sha1>ocbiy3zx9ft781q26mml5vkaqzjh2n2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mn</title>
    <ns>10</ns>
    <id>201389</id>
    <revision>
      <id>1553112</id>
      <parentid>1553111</parentid>
      <timestamp>2009-06-30T16:08:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mn]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Mongolian
 |text = {{#switch:{{{2}}}
   |0= Энэ хэрэглэгч [[:category:user mn|монгол хэл]] мэдэхгүй.
   |1= Энэ хэрэглэгч [[:category:user mn|монгол хэлний]] анхан шатны мэдлэгтэй.
   |2= Энэ хэрэглэгч [[:category:user mn|монгол хэлний]] дунд шатны мэдлэгтэй.
   |3= Энэ хэрэглэгч [[:category:user mn|монгол хэлийг]] сайн мэднэ.
   |4= Энэ хэрэглэгч [[:category:user mn|монгол хэлийг]] төрөлх хэл шигээ мэддэг.
   |N= Энэ хэрэглэгчийн төрөлх хэл нь [[:category:user mn|монгол хэл]].
}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mn]]&lt;/noinclude&gt;</text>
      <sha1>nfirkyovjg1prg49f111tk0xyzh49fn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mr</title>
    <ns>10</ns>
    <id>201390</id>
    <revision>
      <id>1553117</id>
      <parentid>1553116</parentid>
      <timestamp>2009-06-30T16:09:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mr]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Marathi
 |text = {{#switch:{{{2}}} 
   |0=हा सदस्य [[:category:user mr|मराठी]] भाषा लिहू अथवा वाचू शकत नाही
   |1=हा सदस्य [[:category:user mr|मराठी]] भाषेमध्ये प्राथमिक स्तरावरचे योगदान देऊ शकतो
   |2=हा सदस्य [[:category:user mr|मराठी]] भाषेमध्ये मध्यम स्तरावरचे योगदान देऊ शकतो
   |3=हा सदस्य [[:category:user mr|मराठी]] भाषेमध्ये उच्च स्तरावरचे योगदान देऊ शकतो
   |4=हा सदस्य [[:category:user mr|मराठी]] भाषेमध्ये जवळ जवळ स्थानिक लोकांप्रमाणे योगदान देऊ शकतो
   |N=ह्या सदस्याची मातृभाषा [[:category:user mr|मराठी]] आहे}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mr]]&lt;/noinclude&gt;</text>
      <sha1>n59nitje40x85g7ok2492gykpfbh52t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ms</title>
    <ns>10</ns>
    <id>201391</id>
    <revision>
      <id>1553126</id>
      <parentid>1553125</parentid>
      <timestamp>2009-06-30T16:10:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ms]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Malay
 |text = Pengguna ini {{#switch:{{{2}}}
  |0 = tidak mampu membaca dan menulis
  |1 = mampu membaca dan menulis pada tingkat dasar
  |2 = mampu membaca dan menulis pada tingkat sederhana
  |3 = mampu membaca dan menulis dengan mahir
  |4 = mampu membaca dan menulis seperti penutur bahasa ibunda
  |N = berbahasa ibunda
}} dalam [[:category:user {{{3|ms}}}|{{#switch:{{{3|ms}}}|ms=Bahasa Melayu |{{#ifexist:template:user language/{{{3}}}|{{user language/{{{3}}}|name}}|''{{#language:{{{3}}}}}''}}}}]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ms]]&lt;/noinclude&gt;</text>
      <sha1>3dbdi5bsb1iwu4kvj1smgramsp17zcn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mt</title>
    <ns>10</ns>
    <id>201392</id>
    <revision>
      <id>1553129</id>
      <parentid>1553128</parentid>
      <timestamp>2009-06-30T16:11:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mt]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Maltese
 |text = Dan l-utent {{#switch:{{{2}}}
   |0=ma jistax jaqra jew jikteb bil-[[:category:user mt|Malti]]
   |1=jista' jikkontribwixxi b'[[:category:user mt|Malti]] ta' livell sempliċi 
   |2=jista' jikkontribwixxi b'[[:category:user mt|Malti]] ta' livell intermedju
   |3=jista' jikkontribwixxi b'[[:category:user mt|Malti]] ta' livell avvanzat
   |4=jista' jikkontribwixxi b'[[:category:User mt|Malti]] ta' livell qrib in-nattiv
   |N=jista' jikkontribwixxi b'[[:category:User mt|Malti]] ta' livell nattiv}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mt]]&lt;/noinclude&gt;</text>
      <sha1>1tg8b4bp5fz10841l3ppsxy9dg7fr2x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mwl</title>
    <ns>10</ns>
    <id>201393</id>
    <revision>
      <id>1553133</id>
      <parentid>1553132</parentid>
      <timestamp>2009-06-30T16:11:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mwl]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Mirandese
 |text = Este outelizador {{#switch:{{{2}}}
   |0=num sabe lher nien screbir
   |1=puode ajudar cul básico
   |2=puode ajudar nun nible antermédio
   |3=puode ajudar nun nible abançado
   |4=sabe falar quaije natibamente an
   |N=sabe falar quaije natibamente an}} [[:category:user mwl| Mirandés]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mwl]]&lt;/noinclude&gt;</text>
      <sha1>p4snmyix2ejk4f9s97r7dfk5wviq8tl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/my</title>
    <ns>10</ns>
    <id>201394</id>
    <revision>
      <id>1553141</id>
      <parentid>1553140</parentid>
      <timestamp>2009-06-30T16:12:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/my]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Burmese
 |text = ဤ မန်ဘာသည် {{#switch:{{{2}}}
   |0=[[:category:user my|မြန်မာစာ]]မရေးနိုင်၊ မဖတ်နိုင်ပါ
   |1=[[:category:user my|မြန်မာစာ]]အနည်းငယ် တတ်ပါသည်။
   |2=[[:category:user my|မြန်မာစာ]]အသင့်အတင့် တတ်ပါသည်။
   |3=[[:category:user my|မြန်မာစာ]]အတော် အတန် ရေးနိုင်၊ ဖတ်နိုင်ပါသည်။
   |4=[[:category:user my|မြန်မာစာ]]အလွန် ကျွမ်းကျင်ပါသည်။ 
   |N=[[:category:user my|မြန်မာစာ]]မိခင်ဘာသာစကား ဖြစ်သည်။}}

}}&lt;noinclude&gt;[[Category:Template subpages|User language/my]]&lt;/noinclude&gt;</text>
      <sha1>4alovga185bp27mf3767sww94z7vs7h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/mzn</title>
    <ns>10</ns>
    <id>201395</id>
    <revision>
      <id>1553145</id>
      <parentid>1553144</parentid>
      <timestamp>2009-06-30T16:14:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/mzn]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Mazandarani
 |text = i kārver betundəne baxūne o banviş hākəne [[:category:user mzn|Taperi Giləki]] re {{#switch:{{{2}}}|1=atteke pəçuk |2=atteke xojir |3=xale xār |N=şe mār zivun vāri}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/mzn]]&lt;/noinclude&gt;</text>
      <sha1>kzzaqa4tipc9tflqfuhpc18d5mzuh6a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nap</title>
    <ns>10</ns>
    <id>201396</id>
    <revision>
      <id>1553153</id>
      <parentid>1553152</parentid>
      <timestamp>2009-06-30T16:15:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/nap]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Neapolitan
 |text = Chesta perzona {{#switch:{{{2}}}
   |0=nun pô parlà [[:category:user nap|napulitano]]
   |1=pò parlà [[:category:user nap|napulitano]] a nu livello semprice
   |2=pò parlà [[:category:user nap|napulitano]] a nu livello 'e miezo
   |3=pô parlà [[:category:user nap|napulitano]] a nu livello auto
   |4=pô parlà [[:category:user nap|napulitano]] comme fusse lengua materna
   |N=parla [[:category:user nap|napulitano]] comme lengua materna}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nap]]&lt;/noinclude&gt;</text>
      <sha1>1fifijhhj24ppx5xdx0xg2v27zr26oz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nb</title>
    <ns>10</ns>
    <id>201397</id>
    <revision>
      <id>1553160</id>
      <parentid>1553159</parentid>
      <timestamp>2009-06-30T16:16:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/nb]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Norwegian (Bokmål)
 |text = {{#switch:{{{2}}} |0=Denne brukeren forstår ikke [[:category:user nb|bokmål]]. |N=Denne brukeren har norsk som morsmål og skriver [[:category:user nb|bokmål]]. |Denne brukeren kan lese og skrive [[:category:user nb|bokmål]] {{#switch:{{{2}}}|1=på grunnleggende nivå|2=på mellomnivå|3=flytende|4=på morsmålsnivå}}.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nb]]&lt;/noinclude&gt;</text>
      <sha1>aavfkdilqsrbx68ulyf2wl70f5ul65z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nds</title>
    <ns>10</ns>
    <id>201398</id>
    <revision>
      <id>2091686</id>
      <parentid>1553166</parentid>
      <timestamp>2011-05-03T13:19:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Low Saxon
 |text = {{#switch:{{{2}}}
   |0= Disse gebruker praot gien [[:category:user nds|Nedersaksisch]].&lt;br /&gt;Disse Bruker kann gorkeen [[:category:user nds|Plattdüütsch]] snacken
   |1= Disse gebruker praot [[:category:user nds|Nedersaksisch]] op beteund nivo.&lt;br /&gt;Disse Bruker kann en beten [[:category:user nds|Plattdüütsch]] snacken
   |2= Disse gebruker praot redelijk goed [[:category:user nds|Nedersaksisch]].&lt;br /&gt;Disse Bruker kann good [[:category:user nds|Plattdüütsch]] snacken
   |3= Disse gebruker praot iezig goed [[:category:user nds|Nedersaksisch]].&lt;br /&gt;Disse Bruker kann temlich good [[:category:user nds|Plattdüütsch]] snacken
   |4= Disse gebruker praot [[:category:user nds|Nedersaksisch]] op moerstaalnivo.&lt;br /&gt;Disse Bruker snackt [[:category:user nds|Plattdüütsch]] so good as wenn dat sien Moderspraak weer
   |N= Disse gebruker praot [[:category:user nds|Nedersaksisch]] as moerstaal.&lt;br /&gt;Disse Bruker snackt [[:category:user nds|Plattdüütsch]] as Moderspraak}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nds]]&lt;/noinclude&gt;</text>
      <sha1>l81kou3sd5b330ioxizt95y7vhcqaue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nl</title>
    <ns>10</ns>
    <id>201400</id>
    <revision>
      <id>1553188</id>
      <parentid>1553187</parentid>
      <timestamp>2009-06-30T16:21:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/nl]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Dutch
 |text = {{#ifeq: {{{2}}}|N|De moedertaal van deze|Deze}} gebruiker {{#switch:{{{2}}}
   |0=kan niet lezen en schrijven in het
   |1=heeft basiskennis van het
   |2=heeft middelmatige kennis van het
   |3=heeft uitstekende kennis van het
   |4=spreekt het
   |N=is het}} [[:category:user nl|Nederlands]]{{#if:{{{4|}}}|op moedertaalniveau|}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nl]]&lt;/noinclude&gt;</text>
      <sha1>b923p3j49803d24xixq49jcy9uqp0wu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nn</title>
    <ns>10</ns>
    <id>201401</id>
    <revision>
      <id>2091687</id>
      <parentid>1553195</parentid>
      <timestamp>2011-05-03T13:21:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>name</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
|name = Norwegian Nynorsk
|text = Denne brukaren kan {{#switch:{{{2}}}
 |0=korkje lese eller skrive [[:category:user nn|nynorsk]]
 |1=lese og skrive [[:category:user nn|nynorsk]] på grunnleggjande nivå
 |2=lese og skrive [[:category:user nn|nynorsk]] på mellomnivå
 |3=lese og skrive [[:category:user nn|nynorsk]] flytande
 |4=lese og skrive [[:category:user nn|nynorsk]] på eit svært høgt nivå
 |N=lese og skrive [[:category:user nn|nynorsk]] på morsmålsnivå
 }}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nn]]&lt;/noinclude&gt;</text>
      <sha1>6cm6zojdo5mjfe4l5p4z0883ec3q6a7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/no</title>
    <ns>10</ns>
    <id>201402</id>
    <revision>
      <id>1553203</id>
      <parentid>1553202</parentid>
      <timestamp>2009-06-30T16:34:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/no]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Norwegian
 |text = {{#switch:{{{2}}} |0=Denne brukeren forstår ikke [[:category:user no|norsk]]. |N=Denne brukeren har [[:category:user no|norsk]] som morsmål. | Denne brukeren kan lese og skrive [[:category:user no|norsk]] {{#switch:{{{2}}} |1=på grunnleggende nivå |2=på mellomnivå |3=flytende |4=på morsmålsnivå}}.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/no]]&lt;/noinclude&gt;</text>
      <sha1>f3drggjt6dntb81tsapk6xacxpt2kd2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/nso</title>
    <ns>10</ns>
    <id>201403</id>
    <revision>
      <id>1553210</id>
      <parentid>1553209</parentid>
      <timestamp>2009-06-30T16:35:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/nso]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Pedi
 |text = Mošomiši wo {{#switch:{{{2}}}
   |0=cannot read and write
   |1=o tseba go ngwala ga nnyane
   |2=o tseba go ngwala gabotsana
   |3=o tseba go ngwala gabotse
   |4=o nale botsibe bja makgonthe bja 
   |N=ke mmoledi ka tswalo wa }} [[:category:user nso|Sepedi]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/nso]]&lt;/noinclude&gt;</text>
      <sha1>7eodaouje1t3spundugt9hjlhgv4fc6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/oc</title>
    <ns>10</ns>
    <id>201404</id>
    <revision>
      <id>1553218</id>
      <parentid>1553217</parentid>
      <timestamp>2009-06-30T16:36:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/oc]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Occitan
 |text =  {{#switch:{{{2}}}
   |0=Aqueste utilizaire compren pas l’
   |1=Aqueste utilizaire pòt contribuir amb un nivèl basic d'
   |2=Aqueste utilizaire pòt contribuir amb un nivèl mejan d'
   |3=Aqueste utilizaire pòt contribuir amb un nivèl avançat d'
   |4=Aqueste utilizaire pòt contribuir amb un nivèl plan avançat d'
   |N=Aqueste utilizaire a per lenga mairala l'}} [[:category:user oc|occitan]].
}}&lt;noinclude&gt;[[Category:Template subpages|User languages/oc]]&lt;/noinclude&gt;</text>
      <sha1>s6hlaelf2skk09puayn53p4343z2pg1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pa</title>
    <ns>10</ns>
    <id>201405</id>
    <revision>
      <id>1553228</id>
      <parentid>1553227</parentid>
      <timestamp>2009-06-30T16:37:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/pa]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Punjabi
 |text = ਇਹ ਮੈਂਬਰ {{#switch:{{{2}}}
   |0=[[:category:user pa|ਪੰਜਾਬੀ]] ਪੜ੍ਹ ਅਤੇ ਲਿਖ ਨਹੀਂ ਸਕਦਾ ।।
   |1=ਬੁਨਿਆਦੀ ਤੌਰ ਤੇ [[:category:user pa|ਪੰਜਾਬੀ]] ਵਿੱਚ ਯੋਗਦਾਨ ਦੇ ਸਕਦਾ ਹੈ ।।
   |2=ਵਿਚਕਾਰਲੇ ਤੌਰ ਤੇ [[:category:user pa|ਪੰਜਾਬੀ]] ਵਿੱਚ ਯੋਗਦਾਨ ਦੇ ਸਕਦਾ ਹੈ ।।
   |3=ਬਹੁਤ ਹੀ ਚੰਗੀ ਤਰਾਂ [[:category:user pa|ਪੰਜਾਬੀ]] ਵਿੱਚ ਯੋਗਦਾਨ ਦੇ ਸਕਦਾ ਹੈ ।।
   |4=[[:category:user pa|ਪੰਜਾਬੀ]] ਪੜ੍ਹਨ ਅਤੇ ਲਿਖਣ ਵਿੱਚ ਕਰੀਬ-ਕਰੀਬ ਸਹਿਜ ਹੈ ।।
   |N=[[:category:user pa|ਪੰਜਾਬੀ]] ਪੜ੍ਹਨ ਅਤੇ ਲਿਖਣ ਵਿੱਚ ਸਹਿਜ ਹੈ ।।}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pa]]&lt;/noinclude&gt;</text>
      <sha1>aqe0d9qnqz961nqp9qsn63n7tqx2j1g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pdc</title>
    <ns>10</ns>
    <id>201406</id>
    <revision>
      <id>1553236</id>
      <parentid>1553235</parentid>
      <timestamp>2009-06-30T16:39:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/pdc]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Pennsylvania Dutch
 |text = Der Yuuser {{#switch:{{{2}}}
   |0=do schwetzt ka [[:category:User pdc|Pennsilfaanisch Deitsch]].
   |1=do schwetzt ebbes [[:category:User pdc|Pennsilfaanisch Deitsch]].
   |2=do schwetzt gut [[:category:User pdc|Pennsilfaanisch Deitsch]].
   |3=do schwetzt eschd subber [[:category:User pdc|Pennsilfaanisch Deitsch]].
   |4=do schwetzt fascht wie als wär's sei Muddersprooch, also echdes [[:category:User pdc|Pennsilfaanisch Deitsch]].
   |N=hot als Muddersprooch [[:category:User pdc|Pennsilfaanisch Deitsch]].
}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pdc]]&lt;/noinclude&gt;</text>
      <sha1>7993bx4bzb8rtze6ev81830uz804ojj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pfl</title>
    <ns>10</ns>
    <id>201407</id>
    <revision>
      <id>1553867</id>
      <parentid>1553241</parentid>
      <timestamp>2009-06-30T23:20:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category link</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Palatine German
 |text = Seller Benutzer {{#switch:{{{2}}}
  |0= hott kee Erfahrunge mit [[:category:user pfl|Pälzisch]].
  |1= konn e bissje [[:category:user pfl|Pälzisch]].
  |2= konn rescht gut [[:category:user pfl|Pälzisch]].
  |3= is en erfahrener [[:category:user pfl|Pälzisch]]-Schwätzer.
  |4= babbelt [[:category:user pfl|Pälzisch]] fast wie en Eschde.
  |N= hot [[:category:user pfl|Pälzisch]] als Muddersproch.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pfl]]&lt;/noinclude&gt;</text>
      <sha1>gl311lv8paeqfbutrfl57te4m87i2zr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pl</title>
    <ns>10</ns>
    <id>201408</id>
    <revision>
      <id>2091688</id>
      <parentid>1553249</parentid>
      <timestamp>2011-05-03T13:24:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Polish
 |text = {{#switch:{{{2}}}
   | 0 = Ta osoba nie rozumie [[:category:user pl|języka polskiego]] (albo ma z nim olbrzymie trudności).
   | 1 = {{gender:{{BASEPAGENAME}}|Ten użytkownik|Ta użytkowniczka}} posługuje się  [[:category:user pl|językiem polskim]] na poziomie podstawowym.
   | 2 = {{gender:{{BASEPAGENAME}}|Ten użytkownik|Ta użytkowniczka}} posługuje się  [[:category:user pl|językiem polskim]] na poziomie średnio zaawansowanym.
   | 3 = {{gender:{{BASEPAGENAME}}|Ten użytkownik|Ta użytkowniczka}} posługuje się  [[:category:user pl|językiem polskim]] na poziomie zaawansowanym.
   | 4 = {{gender:{{BASEPAGENAME}}|Ten użytkownik|Ta użytkowniczka}} posługuje się  [[:category:user pl|językiem polskim]] prawie jak językiem ojczystym.
   | N = [[:category:user pl|Polski]] jest językiem ojczystym {{gender:{{BASEPAGENAME}}|tego użytkownika|tej użytkowniczki}}.
 }}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pl]]&lt;/noinclude&gt;</text>
      <sha1>ok7hu4fhxdv7odi4n1rh6yg2kzlnvve</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/plm</title>
    <ns>10</ns>
    <id>201409</id>
    <revision>
      <id>1553253</id>
      <parentid>1553252</parentid>
      <timestamp>2009-06-30T16:45:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/plm]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Palembang
 |text = Wong ni pacak makai [[:category:user plm|baso Plembang]] di tingkat {{#switch:{{{2}}}|1=dasar |2=nengah |3=mahir |N=petamonyo}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/plm]]&lt;/noinclude&gt;</text>
      <sha1>ou4fevrp3jtb3uvgbakdak25dvihsum</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pms</title>
    <ns>10</ns>
    <id>201410</id>
    <revision>
      <id>1553258</id>
      <parentid>1553257</parentid>
      <timestamp>2009-06-30T16:46:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/pms]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Piedmontese
 |text = Cost utent {{#switch:{{{2}}}
   |0=
   |1= a peul giuté con un livel elementar ëd [[:Category:User pms|piemontèis]]
   |2= a peul giuté con un livel medi ëd [[:Category:User pms|piemontèis]]
   |3= a peul giuté con un bon livel ëd [[:Category:User pms|piemontèis]]
   |4=
   |N= a parla [[:Category:User pms|piemontèis]] come lenga mare
}}.
}}
&lt;noinclude&gt;[[Category:Template subpages|User language/pms]]&lt;/noinclude&gt;</text>
      <sha1>cim0zxrma7tv7a6xcoy9t67sz5a8jdw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pnt</title>
    <ns>10</ns>
    <id>201411</id>
    <revision>
      <id>1553262</id>
      <parentid>1553261</parentid>
      <timestamp>2009-06-30T16:47:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/pnt]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Pontic
 |text = Ατός ο χρήστες {{#switch:{{{2}}}
   |0=ξάι 'κ εγροικά τα  [[:category:user pnt|Ποντιακά]] (ή με τρανόν ζορ).
   |1=καλατςέβ έναν ξάι [[:category:user pnt|Ποντιακά]].
   |2=καλατςέβ ολίγα [[:category:user pnt|Ποντιακά]].
   |3=καλατςέβ τσίπ καλά [[:category:user pnt|Ποντιακά]].
   |4=καλατςέβ σκυρά [[:category:user pnt|Ποντιακά]].
   |5=καλατςέβ επαγγελματικά [[:category:user pnt|Ποντιακά]].
   |N=εχ' μητρικόν λαλίαν τα [[:category:user pnt|Ποντιακά]].
}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pnt]]&lt;/noinclude&gt;</text>
      <sha1>tfedzb9v6vowfcd2uqp5fks0mcqeo8a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/pt</title>
    <ns>10</ns>
    <id>201412</id>
    <revision>
      <id>1553274</id>
      <parentid>1553273</parentid>
      <timestamp>2009-06-30T16:48:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/pt]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Portuguese
 |text = Este usuário {{#switch:{{{2}}}|0=não sabe ler ou escrever em |1=pode contribuir com um nível básico de |2=pode contribuir com um nível médio de |3=pode contribuir com um nível avançado de |4=pode contribuir com um nível quase nativo em |N=tem como língua nativa o}} [[:category:user pt|português]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/pt]]&lt;/noinclude&gt;</text>
      <sha1>61vt2n0amr6vyqj83sprrsyo15o8jhx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/qu</title>
    <ns>10</ns>
    <id>201413</id>
    <revision>
      <id>1553277</id>
      <parentid>1553276</parentid>
      <timestamp>2009-06-30T16:49:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/qu]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Quechua
 |text = Kay runaqa {{#switch:{{{2}}}
   |0=[[:category:user qu|imapis qhichwa simi]]ta parlayta manam atinchus
   |1=[[:category:user qu|imapis qhichwa simi]]pi sillpallata rurayta atinsi
   |2=[[:category:user qu|imapis qhichwa simi]]pi chawpita rurayta atinsi
   |3=[[:category:user qu|imapis qhichwa simi]]pi allinta rurayta atinsi
   |4=[[:category:user qu|imapis qhichwa simi]]pi paqarisqanmanta pachamanta hina rurayta atinsi
   |N=[[:category:user qu|imapis qhichwa simi]]pi paqarisqanmanta pachamanta rurayta atinsi}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/qu]]&lt;/noinclude&gt;</text>
      <sha1>9hlzwq2cbeiv3iihxdnuiovwvmrass5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/rif</title>
    <ns>10</ns>
    <id>201414</id>
    <revision>
      <id>1553281</id>
      <parentid>1553280</parentid>
      <timestamp>2009-06-30T16:50:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/rif]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Tarifit
 |text = Aseqdac a {{#switch:{{{2}}}
   |0=war izmar ad yari ula ad iɣar
   |1=issen drustit n
   |2=issen cwayt n
   |3=issen aṭṭas 
   |4=issen ɛlayen am irifiyyen
   |N=tutlayt ines tamezwarut d}} [[:category:user rif|Tarifit]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/rif]]&lt;/noinclude&gt;</text>
      <sha1>4eug65760nkjjeryegkrfbbq10kjzf7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ro</title>
    <ns>10</ns>
    <id>201415</id>
    <revision>
      <id>1553286</id>
      <parentid>1553285</parentid>
      <timestamp>2009-06-30T16:50:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ro]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Romanian
 |text = Acest utilizator {{#switch:{{{2}}}
   |0=nu vorbeşte limba
   |1=poate contribui cu un nivel de bază de
   |2=poate contribui cu un nivel intermediar de
   |3=poate contribui cu un nivel avansat de
   |4=poate contribui cu un nivel aproape nativ de
   |N=vorbeşte nativ limba}} [[:category:user ro|română]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ro]]&lt;/noinclude&gt;</text>
      <sha1>2hs9t6lt7eavv2yw2e0zf0pyqsrlngx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ru</title>
    <ns>10</ns>
    <id>201416</id>
    <revision>
      <id>1553294</id>
      <parentid>1553293</parentid>
      <timestamp>2009-06-30T16:52:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ru]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Russian
 |text = {{#switch:{{{2}}}
|0=Этот участник не умеет читать или писать [[:category:user ru|на русском языке]]
|1=Этот участник владеет [[:category:user ru|русским языком]] на начальном уровне
|2=Этот участник владеет [[:category:user ru|русским языком]] на среднем уровне
|3=Этот участник бегло говорит и пишет на [[:category:user ru|русском языке]]
|4=Этот участник владеет [[:category:user ru|русским языком]] почти как родным
|N=Для этого участника [[:category:user ru|русский язык]] является родным}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ru]]&lt;/noinclude&gt;</text>
      <sha1>aejekzviomsg54m9nxx96xetzvwxyvq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sa</title>
    <ns>10</ns>
    <id>201417</id>
    <revision>
      <id>1553951</id>
      <parentid>1553300</parentid>
      <timestamp>2009-07-01T00:42:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Fixed category links - only point to the one.</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Sanskrit
 |text = {{#switch:{{{2}}}&lt;!--
--&gt;|0=एष उपयोजकः [[:Category:User sa|संस्कृते]] लिखितुं न शक्नोति (अतीव प्रयत्नान्ते पढितुं शक्नोति च)।&lt;!--
--&gt;|1=एष उपयोजकः सरल-[[:Category:User sa|संस्कृते]] लिखितुं शक्नोति।&lt;!--
--&gt;|2=एष उपयोजकः मध्यम-[[:Category:User sa|संस्कृते]] लिखितुं शक्नोति।&lt;!--
--&gt;|3=एष उपयोजकः उत्तम-[[:Category:User sa|संस्कृते]] लिखितुं शक्नोति।&lt;!--
--&gt;|4=एष उपयोजकः उच्चतम-[[:Category:User sa|संस्कृते]] लिखितुं शक्नोति।&lt;!--
--&gt;|N=एष उपयोजकस्य मातृभाषा [[:Category:User sa|संस्कृतम्‌]] अस्ति।&lt;!--
--&gt;}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sa]]&lt;/noinclude&gt;</text>
      <sha1>rekdlgga031wctiuwyxxht2vpxmfavt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sg</title>
    <ns>10</ns>
    <id>201418</id>
    <revision>
      <id>1553304</id>
      <parentid>1553303</parentid>
      <timestamp>2009-06-30T16:53:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sg]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Sango
 |text = Azo nî {{#switch:{{{2}}}
|0=tene yânga tî Sango ape
|1=tene yânga tî Sango kete
|2=tene tî Sango ayeke ngongu
|3=tene tî Sango ayeke ngongu mingî
|4=tene Sango tongana azo tî Bêafrîka
|N=Sango ayeke yanga tî aswewa tî ala}} [[:category:user sg|sango]].
}}&lt;noinclude&gt;[[Category:Template subpages|User languages/sg]]&lt;/noinclude&gt;</text>
      <sha1>0vhwaoodrfrvz1h36l7kqfaqi1tioza</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sah</title>
    <ns>10</ns>
    <id>201419</id>
    <revision>
      <id>1553315</id>
      <parentid>1553314</parentid>
      <timestamp>2009-06-30T16:54:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sah]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}} |name = Sakha
 |text = {{#switch:{{{2}}}
|0=[[:category:user sah|Саха тылынан]] бу кыттааччы аахпат да, суруйбат да
|1=[[:category:user sah|Саха тылын]] бу кыттааччы кыратык билэр
|2=[[:category:user sah|Саха тылынан]] бу кыттааччы иннин-кэннин быһаарынар кыахтаах
|3=[[:category:user sah|Саха тылын]] бу кыттааччы ааттаах үчүгэйдик билэр
|4=[[:category:user sah|Саха тылын]] бу кыттааччы төрөөбүт тылын курдук билэр
|N=[[:category:user sah|Саха тыла]] бу кыттааччы төрөөбүт тыла}}
}}&lt;noinclude&gt;[[category:Template subpages|User language/sah]]&lt;/noinclude&gt;</text>
      <sha1>7ubmx401ctndem44yy9k1ww1rfj9dj2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sc</title>
    <ns>10</ns>
    <id>201420</id>
    <revision>
      <id>1553319</id>
      <parentid>1553318</parentid>
      <timestamp>2009-06-30T16:55:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sc]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Sardinian
 |text = Custu cumpanzu potet azudare  {{#switch:{{{2}}}
   |0=
   |1=pro ite unu azzicu de [[:Category:User sc|Sardu]] lu connoschet.
   |2=pro ite connoschet su [[:Category:User sc|Sardu]] e lu cumprendet
   |3=meda pro ite ischit faeddare e iscrìere su [[:Category:User sc|Sardu]].
   |4=
   |N=in tottu pro ite pro isse su [[:Category:User sc|Sardu]] est sa limba sua
}}.}}
&lt;noinclude&gt;[[Category:Template subpages|User language/sc]]&lt;/noinclude&gt;</text>
      <sha1>hyct2ccmj7jhp9ryfbtjhwlya0xe1qb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/scn</title>
    <ns>10</ns>
    <id>201421</id>
    <revision>
      <id>1553325</id>
      <parentid>1553324</parentid>
      <timestamp>2009-06-30T16:56:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/scn]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name =Sicilian
 |text = St'utenti {{#switch:{{{2}}}
   |0=
   |1= pò cuntribbuiricci ôn liveddu vasciu in
   |2= pò cuntribbuiricci ôn liveddu mediu in
   |3= pò cuntribbuiricci ôn liveddu avanzatu in 
   |4= 
   |N=canusci comu la sò lingua matri lu}} [[:category:user scn|sicilianu]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/scn]]&lt;/noinclude&gt;</text>
      <sha1>amqmkorowm14ksm6v3vcarsehrrz0q0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sco</title>
    <ns>10</ns>
    <id>201422</id>
    <revision>
      <id>1553333</id>
      <parentid>1553332</parentid>
      <timestamp>2009-06-30T16:58:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sco]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Scots
 |text = This uiser{{#switch:{{{2}}}
   |0=&lt;nowiki /&gt; disna ken hou tae spaek
   |1=&lt;nowiki /&gt; can contreibute wi a laich level o
   |2=&lt;nowiki /&gt; can contreibute wi a middlin level o
   |3=&lt;nowiki /&gt; can contreibute wi a heich level o
   |4='s the stang o the trump whan it comes tae contreebutin in
   |N=&lt;nowiki /&gt;haes}} [[:category:user sco|Scots]]{{#switch:{{{2}}}
   |4=&lt;nowiki /&gt; as a mither tung}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sco]]&lt;/noinclude&gt;</text>
      <sha1>cuffqw1uuhgqrierigct3w1y8knsi83</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/se</title>
    <ns>10</ns>
    <id>201423</id>
    <revision>
      <id>1553337</id>
      <parentid>1553336</parentid>
      <timestamp>2009-06-30T16:59:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/se]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Northern Sami
 |text = Dát geavaheaddji máhttá [[:category:user se|sámegiela]] {{#switch:{{{2}}}|1=veaháš |2=viehka bures |3=hui bures |N=eatnigiellan}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/se]]&lt;/noinclude&gt;</text>
      <sha1>2igmke4qy6clykwasb9ipcbslkiu10h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/ses</title>
    <ns>10</ns>
    <id>201424</id>
    <revision>
      <id>1553344</id>
      <parentid>1553343</parentid>
      <timestamp>2009-06-30T17:01:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/ses]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Koyraboro Senni Songhay
 |text = Bora woo {{#switch:{{{2}}}
   |0=šii maa [[:category:user ses|koyra šenni]]
   |1=ga maa [[:category:user ses|koyra šenni]] kayna
   |2=ga maa [[:category:user ses|koyra šenni]]
   |3=ga hanse a ka maa [[:category:user ses|koyra šenni]]
   |4=ga hanse a ka maa [[:category:user ses|koyra šenni]]
   |N=[[:category:user ses|Soŋay]] ize no}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/ses]]&lt;/noinclude&gt;</text>
      <sha1>pqxdjrkwg9hw8fojlhglggr3hgw4rjj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sh</title>
    <ns>10</ns>
    <id>201425</id>
    <revision>
      <id>2091691</id>
      <parentid>1553349</parentid>
      <timestamp>2011-05-03T13:32:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Serbo-Croatian
 |text = Ovaj korisnik {{#switch:{{{2}}}
   |0=ne razume [[:category:user sh|srpskohrvatski]]. Овај корисник не разуме
   |1=poseduje osnovno znanje [[:category:user sh|srpskohrvatski]]. Овај корисник поседује основно знање
   |2=srednje govori [[:category:user sh|srpskohrvatski]]. Овај корисник средње говори
   |3=vrlo dobro govori [[:category:user sh|srpskohrvatski]]. Овај корисник врло добро говори
   |4=odlično govori [[:category:user sh|srpskohrvatski]]. Овај корисник одлично говори
   |N=govori kao maternji jezik [[:category:user sh|srpskohrvatski]]. Овај корисник говори као матерњи језик
}} [[:category:user sh|српскохрватски]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sh]]&lt;/noinclude&gt;</text>
      <sha1>0nevkgbe1rwkgw932rulht2wiat5eg3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sk</title>
    <ns>10</ns>
    <id>201426</id>
    <revision>
      <id>1553359</id>
      <parentid>1553358</parentid>
      <timestamp>2009-06-30T17:03:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sk]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Slovak
 |text = {{#switch:{{{2}}}
   |0=Tento redaktor nerozumie po [[:category:user sk|slovensky]]
   |1=Tento redaktor má základné znalosti [[:category:user sk|slovenčiny]]
   |2=Tento redaktor má stredné znalosti [[:category:user sk|slovenčiny]] 
   |3=Tento redaktor má pokročilé znalosti [[:category:user sk|slovenčiny]]
   |4=Tento redaktor má porovnateľné znalosti [[:category:user sk|slovenčiny]] ako rodený Slovák.
   |N=Tento redaktor má [[:category:user sk|slovenčinu]] ako materinský jazyk}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sk]]&lt;/noinclude&gt;</text>
      <sha1>d7b8uoy3zhq5tkfstpknmeylygh05z8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sl</title>
    <ns>10</ns>
    <id>201427</id>
    <revision>
      <id>1553365</id>
      <parentid>1553364</parentid>
      <timestamp>2009-06-30T17:05:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sl]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Slovenian
 |text = Ta uporabnik {{#switch:{{{2}}}
   |0=ne razume [[:category:user sl|slovenščine]] oz. ima velike težave pri sporazumevanju.
   |1=pozna osnove [[:category:user sl|slovenskega jezika]].
   |2=srednje dobro govori [[:category:user sl|slovensko]].
   |3=govori zelo dobro [[:category:user sl|slovensko]].
   |4=govori [[:category:user sl|slovensko]] skoraj tako dobro kot materni jezik.
   |N=govori [[:category:user sl|slovensko]] kot materni jezik.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sl]]&lt;/noinclude&gt;</text>
      <sha1>0w7vin9ixsb579g9vdorrhvz0pxupe8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sli</title>
    <ns>10</ns>
    <id>201428</id>
    <revision>
      <id>1553368</id>
      <parentid>1553367</parentid>
      <timestamp>2009-06-30T17:05:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sli]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Lower Silesian
 |text = Dieser Benutzer {{#switch:{{{2}}}
  |0=koann [[:category:user sli|Schläsch]] weder schreiba noo lesa
  |1=hoatt grundlegende [[:category:user sli|Schläschkenntnisse]]
  |2=hoatt fortgeschrittene [[:category:user sli|Schläschkenntnisse]]
  |3=sehr gute [[:category:user sli|Schläschkenntnisse]]
  |4=beherrscht [[:category:user sli|Schläsch]] uff muttersproachlichem Niveau
  |N=spricht [[:category:user sli|Schläsch]] als Muttersproache
}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sli]]&lt;/noinclude&gt;</text>
      <sha1>bkusqx3cawe46hqkl5qdbk5zrt027so</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sma</title>
    <ns>10</ns>
    <id>201429</id>
    <revision>
      <id>1553372</id>
      <parentid>1553371</parentid>
      <timestamp>2009-06-30T17:06:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sma]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Southern Sami
 |text = Dïhte nuhtjien mahtte låhka jih tjaeledh {{#switch:{{{2}}}|1=eensi-laakan |2=gaskesne |3=galkehtje |N=ietnien-gïele}} [[:category:user sma|Åarjelsaemien gïele]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sma]]&lt;/noinclude&gt;</text>
      <sha1>gqgy6mis0g4uifhnqimlxba6clrk8hr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sq</title>
    <ns>10</ns>
    <id>201430</id>
    <revision>
      <id>1553378</id>
      <parentid>1553377</parentid>
      <timestamp>2009-06-30T17:07:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sq]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Albanian
 |text = Ky përdorues {{#switch:{{{2}}}
   |0=nuk mund të shkruaj apo të lexoj
   |1=mund të kontriboujë në nivel fillestar në
   |2=mund të kontribuojë në nivel mesater në
   |3=mund të kontribuojë në nivel të avancuar në
   |4=mund të kontribuojë në nivel pothuajse amëtar në
   |N=mund të kontribuojë në nivel amëtar në}} [[:category:user sq|shqip]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sq]]&lt;/noinclude&gt;</text>
      <sha1>4apdnmdbo96kfcdgnalpb64kv4azrfo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sr</title>
    <ns>10</ns>
    <id>201431</id>
    <revision>
      <id>1553383</id>
      <parentid>1553382</parentid>
      <timestamp>2009-06-30T17:08:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sr]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Serbian
 |text = {{#switch:{{{2}}}
   |0=Овај корисник не разуме [[:category:user sr|српски језик]].
   |1=Овај корисник почетнички говори [[:category:user sr|српски језик]].
   |2=Овај корисник средње говори [[:category:user sr|српски језик]]. 
   |3=Овај корисник доста добро говори [[:category:user sr|српски језик]].
   |4=Овај корисник течно говори [[:category:user sr|српски језик]].
   |N=Матерњи језик овог корисника је [[:category:user sr|српски језик]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sr]]&lt;/noinclude&gt;</text>
      <sha1>6kdk0r12l2bfxhwwt1q2im6r0y3b0i4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sux</title>
    <ns>10</ns>
    <id>201432</id>
    <revision>
      <id>1553389</id>
      <parentid>1553388</parentid>
      <timestamp>2009-06-30T17:09:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sux]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Sumerian
 |text = Dubsarbe {{#switch:{{{2}}}|0=[[:category:user sux|Eme-gire]] ĝeštug lababĝaĝa |1=lalaš [[:category:user sux|Eme-gire]] ĝeštug babĝaĝa |2=dugaš [[:category:user sux|Eme-gire]] ĝeštug babĝaĝa |3=dirigaš [[:category:user sux|Eme-gire]] ĝeštug babĝaĝa |4=lu girgin [[:category:user sux|Eme-gire]] ĝeštug babĝaĝa |N=[[:category:user sux|Eme-gire]] ĝeštug babĝaĝa}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sux]]&lt;/noinclude&gt;</text>
      <sha1>e2o68fyck6742fmynwar2c9ege6kv96</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:MKB3232</title>
    <ns>2</ns>
    <id>201433</id>
    <revision>
      <id>1569887</id>
      <parentid>1553419</parentid>
      <timestamp>2009-07-15T19:22:42Z</timestamp>
      <contributor>
        <username>MKB3232</username>
        <id>248439</id>
      </contributor>
      <minor />
      <text xml:space="preserve">== Advanced Placement United States Government ==

'''Summary'''
This book is a collaborative writing project of the AP US Government class at an independent high school.  Rather than passively reading other textbooks, we gathered information from various sources and created our own.  We used the College Board's Advanced Placement [http://www.collegeboard.com/student/testing/ap/sub_usgov.html curriculum] as a guide.


I keep trying to understand this -- but it's not going well Ang!  I can't, most importantly, find the darn thing through the search.</text>
      <sha1>0ggpsjh7ddvzn1i4guu62ui5e79stzn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sv</title>
    <ns>10</ns>
    <id>201434</id>
    <revision>
      <id>1553399</id>
      <parentid>1553398</parentid>
      <timestamp>2009-06-30T17:10:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sv]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Swedish
 |text = Denna användare {{#switch:{{{2}}}
  |0= kan inte läsa eller skriva [[:category:user sv|svenska]].
  |1= kan läsa och skriva [[:category:user sv|svenska]] på en grundläggande nivå.
  |2= kan läsa och skriva [[:category:user sv|svenska]] på medelnivå.
  |3= kan läsa och skriva [[:category:user sv|svenska]] på en avancerad nivå.
  |4= kan läsa och skriva [[:category:user sv|svenska]] som om det vore dennes modersmål.
  |N= har [[:category:user sv|svenska]] som modersmål.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sv]]&lt;/noinclude&gt;</text>
      <sha1>8y5j3d4cg6he4iiac08tr54dcp9wa31</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sw</title>
    <ns>10</ns>
    <id>201435</id>
    <revision>
      <id>1553405</id>
      <parentid>1553404</parentid>
      <timestamp>2009-06-30T17:11:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sw]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Swahili
 |text = Mtumiaji huyu {{#switch:{{{2}}}
   |0=hasemi [[:category:user sw|Kiswahili]]
   |1=aweza kushiriki kwa [[:category:user sw|Kiswahili]] cha kiwango cha msingi
   |2=aweza kushiriki kwa [[:category:user sw|Kiswahili]] cha kiwango cha katikati
   |3=aweza kushiriki kwa [[:category:user sw|Kiswahili]] cha kiwango cha juu
   |4=aweza kushiriki kwa [[:category:user sw|Kiswahili]] kama mwenyeji
   |N=ni [[:category:user sw|Mswahili]]}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sw]]&lt;/noinclude&gt;</text>
      <sha1>plqs0qrjiv4ladzi2kmmbzz53daem6k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/swg</title>
    <ns>10</ns>
    <id>201436</id>
    <revision>
      <id>1553408</id>
      <parentid>1553407</parentid>
      <timestamp>2009-06-30T17:11:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/swg]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Swabian
 |text = Der Mitmacher schwätzt {{#switch:{{{2}}}
   |0=kei
   |1=a bisle
   |2=ebbes besser
   |3=ned schlecht}} [[:category:user swg|Schwäbisch]]{{#switch:{{{2}}}
   |4=&amp;#x20;wia an waschechder Schwoob
   |N=&amp;#x20;seit er schwätza ka}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/swg]]&lt;/noinclude&gt;</text>
      <sha1>jcmbzbd47qo8w4lwz6quqjsutbcyjy6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/sxu</title>
    <ns>10</ns>
    <id>201437</id>
    <revision>
      <id>1553413</id>
      <parentid>1553412</parentid>
      <timestamp>2009-06-30T17:12:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/sxu]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Upper Saxon
 |text = Där Benutzor hior gann {{#switch:{{{2}}}|0=gar nisch [[:category:user sxu|Säggssch]] |1=ä bissel [[:category:user sxu|Säggssch]] |2=ganz ordndlisch [[:category:user sxu|Säggssch]] |3=gud [[:category:user sxu|Säggssch]] |4=[[:category:user sxu|Säggssch]] wie ä äschder Saggse |N=rischdsch dolle [[:category:user sxu|Säggssch]]}} läsn un schreibm.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/sxu]]&lt;/noinclude&gt;</text>
      <sha1>ppfzbhgyjik3jgoyn8j597qgwe8w975</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/te</title>
    <ns>10</ns>
    <id>201438</id>
    <revision>
      <id>1553418</id>
      <parentid>1553417</parentid>
      <timestamp>2009-06-30T17:13:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/te]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Telugu
 |text = ఈ సభ్యులు {{#switch:{{{2}}}
   |0=[[:category:user te|తెలుగు]] చదవలేరు మరియు వ్రాయలేరు
   |1=[[:category:user te|తెలుగు]] భాషలో ప్రాథమిక పరిజ్ఞానం కలిగి ఉన్నారు
   |2=[[:category:user te|తెలుగు]] భాషలో మధ్యస్థ నిపుణత కలిగి ఉన్నారు
   |3=[[:category:user te|తెలుగు]] బాగా చదవగలరు వ్రాయగలరు
   |4=[[:category:user te|తెలుగు]] భాషలో మాతృభాష వంటి పరిజ్ఞానం కలిగి ఉన్నారు
   |N=తన మాతృభాష [[:category:user te|తెలుగు]]లో రచనలు చేస్తారు}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/te]]&lt;/noinclude&gt;</text>
      <sha1>myb31q5gsl4ozbihjvtxlwmofva2aqc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/tet</title>
    <ns>10</ns>
    <id>201439</id>
    <revision>
      <id>1553423</id>
      <parentid>1553422</parentid>
      <timestamp>2009-06-30T17:13:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/tet]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Tetum
 |text = Uza-na'in ne'e {{#switch:{{{2}}}
|1=bele kontribui ho nivel báziku iha 
|2=bele kontribui ho nivel maizumenus iha 
|3=bele kontribui ho nivel aas 
|N=lian inan }} [[:category:user tet|lian tetun]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/tet]]&lt;/noinclude&gt;</text>
      <sha1>rd4g8pmhnm9nzypbslkaad4td1og9oj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/th</title>
    <ns>10</ns>
    <id>201440</id>
    <revision>
      <id>1553427</id>
      <parentid>1553426</parentid>
      <timestamp>2009-06-30T17:14:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/th]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1|}}}
 |name = Thai
 |text = {{#switch:{{{2}}}|0=ผู้ใช้คนนี้ไม่สามารถใช้[[:category:user th|ภาษาไทย]]ได้ หรือใช้ได้ด้วยความยากลำบาก|1=ผู้ใช้คนนี้สามารถใช้[[:category:user th|ภาษาไทย]]ได้ในระดับพื้นฐาน|2=ผู้ใช้คนนี้สามารถใช้[[:category:user th|ภาษาไทย]]ได้ในระดับกลาง|3=ผู้ใช้คนนี้สามารถใช้[[:category:user th|ภาษาไทย]]ได้ในระดับสูง|4=ผู้ใช้คนนี้สามารถใช้[[:category:user th|ภาษาไทย]]ได้เหมือนภาษาแม่|N=ผู้ใช้คนนี้ใช้[[:category:user th|ภาษาไทย]]เป็นภาษาแม่}}
}}&lt;noinclude&gt;[[Category:Template subpages|User languages/th]]&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Template subpages|User language/th]]&lt;/noinclude&gt;</text>
      <sha1>t88u7pu6ahd99c8b70sbnq7y3r3uf1h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/tl</title>
    <ns>10</ns>
    <id>201441</id>
    <revision>
      <id>1553433</id>
      <parentid>1553432</parentid>
      <timestamp>2009-06-30T17:15:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/tl]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Tagalog
 |text = {{#switch:{{{2}}}
   |0=Ang mga tagagamit na ito ay hindi nakakapag-ambag sa kahit anong antas ng [[:category:user tl|Tagalog]].
   |1=Ang mga tagagamit na ito ay nakakapag-ambag sa mababang antas ng [[:category:user tl|Tagalog]].
   |2=Ang mga tagagamit na ito ay nakakapag-ambag sa panggitnang antas ng [[:category:user tl|Tagalog]].
   |3=Ang mga tagagamit na ito ay nakakapag-ambag sa mataas na antas ng [[:category:user tl|Tagalog]].
   |4=Ang mga tagagamit na ito ay nakakapag-ambag ng [[:category:user tl|Tagalog]] sa malakatutubong antas.
   |N=Ang mga tagagamit na ito ay nakakapag-ambag ng [[:category:user tl|Tagalog]] sa katutubong antas.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/tl]]&lt;/noinclude&gt;</text>
      <sha1>cdwpnutb507jfbdvzh32igr9rn2sx3k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/tr</title>
    <ns>10</ns>
    <id>201442</id>
    <revision>
      <id>2155586</id>
      <parentid>1553441</parentid>
      <timestamp>2011-08-09T08:13:45Z</timestamp>
      <contributor>
        <username>Sae1962</username>
        <id>384871</id>
      </contributor>
      <comment>&quot;Türkçe'yi&quot; should be written without an apostrophe!</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Turkish
 |text = Bu kullanıcı [[:category:user tr|Türkçeyi]] {{#switch:{{{2}}}
 |0=anlayamaz ve konuşamaz
 |1=basit düzeyde anlayabilir ve konuşabilir 
 |2=orta düzeyde anlayabilir ve konuşabilir
 |3=akıcı olarak anlayabilir ve konuşabilir
 |4=neredeyse ana dili gibi anlayabilir ve konuşabilir
 |N=ana dili gibi anlayabilir ve konuşabilir}}}}&lt;noinclude&gt;[[Category:Template subpages|User language/tr]]&lt;/noinclude&gt;</text>
      <sha1>17oa2ok8fm6s9lkkog4u1p3oq5b48wu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/tt</title>
    <ns>10</ns>
    <id>201443</id>
    <revision>
      <id>1553446</id>
      <parentid>1553445</parentid>
      <timestamp>2009-06-30T17:16:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/tt]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Tatar
 |text = Бу кулланучы {{#switch:{{{2}}} [[:category:user tt|tatarça/татарча]]
   |0=белми
   |1=башлангыч дәрәҗәдә белә
   |2=урта дәрәҗәдә белә
   |3=югары дәрәҗәдә белә
   |4=туган якынлы дәрәҗәдә белә
   |N=туган телдә сөйләшә}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/tt]]&lt;/noinclude&gt;</text>
      <sha1>eue7daug0ty2u7g4v4jr6xi6mdl8vn8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/uk</title>
    <ns>10</ns>
    <id>201444</id>
    <revision>
      <id>1553451</id>
      <parentid>1553449</parentid>
      <timestamp>2009-06-30T17:17:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/uk]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Ukrainian
 |text = {{#switch:{{{2}}}
|0=Цей користувач не вміє писати або читати [[:category:user uk|українською мовою]]
|1=Цей користувач володіє [[:category:user uk|українською мовою]] на початковому рівні
|2=Цей користувач володіє [[:category:user uk|українською мовою]] на середньому рівні
|3=Цей користувач володіє [[:category:user uk|українською мовою]] на високому рівні
|4=Цей користувач володіє [[:category:user uk|українською мовою]] майже як рідною
|N=Для цього користувача [[:category:user uk|українська мова]] є рідною}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/uk]]&lt;/noinclude&gt;</text>
      <sha1>m3giun6vrt1n4xpmh4ors8qsw7w4110</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/uz</title>
    <ns>10</ns>
    <id>201445</id>
    <revision>
      <id>1553460</id>
      <parentid>1553459</parentid>
      <timestamp>2009-06-30T17:17:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/uz]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Uzbek
 |text = Bu ishtirokchi [[:category:user uz|O'zbek tilini]] {{#switch:{{{2}}} 
   |0= '''umuman bilmaydi'''.
   |1= '''boshlang'ich''' darajada biladi.
   |2= '''o'rta''' darajada  biladi.
   |3= '''yaxshi''' darajada biladi.
   |4= '''a'lo''' darajada biladi.
   |N=Bu ishtirokchining ona tili '''O'zbek''' tilidir.}}
}}&lt;noinclude&gt;[[Category:Template subpages|User language/uz]]&lt;/noinclude&gt;</text>
      <sha1>k2gex6utzhiqsf1k8igrj81l7ufruqu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/vec</title>
    <ns>10</ns>
    <id>201446</id>
    <revision>
      <id>1553465</id>
      <parentid>1553464</parentid>
      <timestamp>2009-06-30T17:18:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/vec]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Venetian
 |text = {{#switch:{{{2}}}|0=Sto utente qûa no 'l capise mìa el [[:category:user vec|vèneto]], o lo capise soło co tanta dificoltà|1=Sto utente qûa el pode contribuir en [[:category:user vec|vèneto]] de liveło ełementar|2=Sto utente qûa el pode contribuir en [[:category:user vec|vèneto]] de liveło medio|3=Sto utente qûa el pode contribuir en [[:category:user vec|vèneto]] de liveło alto|4=Sto utente qûa el pode contribuir en [[:category:user vec|vèneto]] de liveło cofà ła só łengoa mare|N=Sto utente qûa el pode contribuir en [[:category:user vec|vèneto]] de liveło łengoa mare}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/vec]]&lt;/noinclude&gt;</text>
      <sha1>2k9m9q02f5ts3hk0978obr9d29gm1et</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/vi</title>
    <ns>10</ns>
    <id>201447</id>
    <revision>
      <id>1553471</id>
      <parentid>1553470</parentid>
      <timestamp>2009-06-30T17:19:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/vi]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Vietnamese
 |text = Thành viên này {{#ifeq:{{{2}}}|0|không biết đọc và ghi [[:category:user vi|tiếng Việt]]|sử dụng [[:category:user vi|tiếng Việt]] {{#switch:{{{2}}}|1=với trình độ cơ bản|2=với trình độ trung bình|3=một cách thông thạo|4=gần như ngôn ngữ mẹ đẻ|N=như ngôn ngữ mẹ đẻ}}}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/vi]]&lt;/noinclude&gt;</text>
      <sha1>jbp6qkau3sfgq6tdjfeyfqgj630yjz4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/vls</title>
    <ns>10</ns>
    <id>201448</id>
    <revision>
      <id>1553475</id>
      <parentid>1553474</parentid>
      <timestamp>2009-06-30T17:19:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/vls]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = West Flemish
 |text = {{#switch:{{{2}}}
   |0=Deze gebruker kan niet te vet vele [[:category:user vls|West-Vlams]] klappn
   |1=Deze gebruker kan e hêel klêen bitje e koutnansje voern in 't [[:category:user vls|West-Vlams]]
   |2=Deze gebruker kan [[:category:user vls|West-Vlams]] klapp'n van e middelmoatig niveau
   |3='t Niveau van [[:category:user vls|West-Vlams]] van deze gebruker es styf ôge
   |4=Dizzn gebruker klapt [[:category:user vls|West-Vlams]] gelik nen echtn
   |N=Dien gebruker ier es geboorn en gekwêekt in 't [[:category:user vls|West-Vlams]]
}}.}}&lt;noinclude&gt;[[Category:Template subpages|User language/vls]]&lt;/noinclude&gt;</text>
      <sha1>j806ejuz4p96eldupbcw3ggo8l2mqe7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/vo</title>
    <ns>10</ns>
    <id>201449</id>
    <revision>
      <id>1553480</id>
      <parentid>1553479</parentid>
      <timestamp>2009-06-30T17:20:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/vo]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Volapük
 |text = Geban at kanon kompenön pö spikots me [[:category:user vo|Volapük]] nivoda {{#switch:{{{2}}}|1=balugik |2=vüik |3=löpik |N=lomapükik}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/vo]]&lt;/noinclude&gt;</text>
      <sha1>kkodhabjyr8kv3g6fel8pta1b28eyxz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/yi</title>
    <ns>10</ns>
    <id>201450</id>
    <revision>
      <id>1553492</id>
      <parentid>1553491</parentid>
      <timestamp>2009-06-30T17:21:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/yi]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Yiddish
 |text = דיזער בענוצער {{#switch:{{{2}}}
   |0=קען נישט שרייבן און ליינען אין 
   |1= קען קוים שרייבן און ליינען אין
   |2= קען כמעשהדיג שרייבן און ליינען אין
   |3= קען גאנץ גוט
   |4= קען כמעט פליסיג 
   |N=קען א היימישן }} [[:category:user yi|יידיש]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/yi]]&lt;/noinclude&gt;</text>
      <sha1>5uwbzpcrkene6flhjv4rhjkw5166qfs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/yo</title>
    <ns>10</ns>
    <id>201451</id>
    <revision>
      <id>1553498</id>
      <parentid>1553496</parentid>
      <timestamp>2009-06-30T17:22:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/yo]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Yoruba
 |text = Onìṣe yìí {{#switch:{{{2}}}
   |0=kò ní ìmọ̀ rárá nínú
   |1=bíntín ni ìmọ̀ rẹ̀ nínú
   |2=àbọ̀ ni ìmọ̀ rẹ̀ nínú
   |3=gíga ni ìmọ̀ rẹ̀ nínú
   |4=gígúnrégé ni ìmọ̀ rẹ̀ nínù
   |N=abínibí ni ìmọ̀ rẹ̀ nínú}} [[:category:user yo|èdè Yorùbá]].
}}&lt;noinclude&gt;[[Category:Template subpages|User language/yo]]&lt;/noinclude&gt;</text>
      <sha1>8s5uh998it4qqj2rxr75xaqd1xpoz9e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/yue</title>
    <ns>10</ns>
    <id>201452</id>
    <revision>
      <id>1553506</id>
      <parentid>1553505</parentid>
      <timestamp>2009-06-30T17:23:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/yue]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Cantonese
 |text = 呢個維基友{{#switch:{{{2}}}|0=唔識寫|1=識寫啲咁多|2=識寫普通嘅|3=識寫流暢嘅|4=識寫幾乎地道嘅|N=識寫地道嘅}} [[:category:user yue|廣東話]]。
}}&lt;noinclude&gt;[[Category:Template subpages|User language/yue]]&lt;/noinclude&gt;</text>
      <sha1>ohng5wnyqt1zuuzgchh99x7igvmm7mk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/zh</title>
    <ns>10</ns>
    <id>201453</id>
    <revision>
      <id>1553514</id>
      <parentid>1553513</parentid>
      <timestamp>2009-06-30T17:24:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/zh]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Chinese
 |text = 這名使用者{{#switch:{{{2}}}|0=不識|1=會寫基本|2=能讀寫中等程度的|3=能熟練地讀寫|4=可讀寫近乎母語程度的|N=之母語為}}[[:category:user zh|漢語]]。&lt;br /&gt;这名用户可以用{{#switch:{{{2}}}|1=简单的|2=中等的|3=熟练的|4=近乎母语|N=母语}}程度阅读或撰写[[:category:user zh|汉语]]。}}&lt;noinclude&gt;[[Category:Template subpages|User language/zh]]&lt;/noinclude&gt;</text>
      <sha1>1zdmgd1z5dk04hymdcwf8a199ls5ukm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/zh-hant</title>
    <ns>10</ns>
    <id>201454</id>
    <revision>
      <id>2091694</id>
      <parentid>1553517</parentid>
      <timestamp>2011-05-03T13:42:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>update from Meta</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Chinese (Traditional)
 |text = 這個用戶{{#switch:{{{2}}}|0=不能|1=可以用簡單的程度|2=可以用中等的程度|3=可以用熟練的程度|4=可以用近乎母語的程度|N=可以用母語程度}}閱讀或撰寫[[:category:user zh-hant|繁體中文]]。}}&lt;noinclude&gt;[[Category:Template subpages|User language/zh-hant]]&lt;/noinclude&gt;</text>
      <sha1>pig5ol0y05nhr3zy8oqzdvpsmwcjmgr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/als</title>
    <ns>10</ns>
    <id>201455</id>
    <revision>
      <id>1553523</id>
      <parentid>1553522</parentid>
      <timestamp>2009-06-30T17:26:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/als]]&quot;: High-impact page ([edit=autoconfirmed] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Alemannic German
 |text = Dä Benutzer {{#switch:{{{2}}}
 |0=cha Alemannisch nid schribe und nid läse
|1=het grundlegendi [[:category:user als|Alemannisch-Kenntniss]]
|2=het fortgschritteni [[:category:user als|Alemannisch-Kenntniss]] 
|3=het sehr gueti [[:category:user als|Alemannisch-Kenntniss]]
|4=cha [[:category:user als|Alemannisch]] uf muettersprachlechem Niveau
|N=redt [[:category:user als|Alemannisch]] aus Muetersprach}}.
}}&lt;noinclude&gt;[[Category:Template subpages|User language/als]]&lt;/noinclude&gt;</text>
      <sha1>t1cee4b381dqbonb3u08m0nbzbolg4w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/number</title>
    <ns>0</ns>
    <id>201460</id>
    <revision>
      <id>1578130</id>
      <parentid>1572332</parentid>
      <timestamp>2009-07-24T13:51:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Synopsis==

&lt;pre&gt;
\number&lt;number&gt;
&lt;/pre&gt;

==Description==
Typeset the decimal representation of &lt;number&gt;, where &lt;number&gt; may be either an octal, decimal, or hexadecimal integer; or a register or parameter that contains an integer. Leading zeros are removed.

==Examples==
Recall that octals are represented by placing a ' (right quote) in front of the number, and hexadecimal are represented by placing a &quot; (quotation mark) in front of the number, for example, '10 is the octal representation of 8, while &quot;10 is the hexadecimal representation of 16. So
&lt;pre&gt;
\number'10
&lt;/pre&gt;
will typeset 8, while
&lt;pre&gt;
\number&quot;10
&lt;/pre&gt;
will typeset 16.

The parameter [[TeX/day|\day]] contains the current day of the current month, unless it has been set otherwise.
If today is, say, June 30th, then normally \day should contain 30, and
&lt;pre&gt;
\number\day
&lt;/pre&gt;
will typeset 30. 

This functionality of \number overlaps with the command [[TeX/the|\the]].

{{BookCat}}</text>
      <sha1>4w694wsvovel25dipywgux6hmq559xw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/day</title>
    <ns>0</ns>
    <id>201461</id>
    <revision>
      <id>1578124</id>
      <parentid>1553564</parentid>
      <timestamp>2009-07-24T13:50:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\day=&lt;integer&gt;
\day&lt;integer&gt;
&lt;/pre&gt;

==Description==
\day is a parameter that TeX initiates to the day of the month. It may be changed to any integer &lt;integer&gt; with either of two equivalent forms above.

==Examples==
Recall that the command [[TeX/number|\number]] will typeset the decimal representation of whatever follows it, and so if todays date is the 30th then
&lt;pre&gt;
\number\day
&lt;/pre&gt;
will typeset 30, if the \day parameter has not be redefined.
&lt;pre&gt;
\day=-45
\number\day
&lt;/pre&gt;
will typeset -45.

{{BookCat}}</text>
      <sha1>6ux0vxisctuumv3rer8w4esl2gm0b6x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/lang</title>
    <ns>10</ns>
    <id>201462</id>
    <revision>
      <id>2091672</id>
      <parentid>1553607</parentid>
      <timestamp>2011-05-03T13:04:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>link to template instead</comment>
      <text xml:space="preserve">{{#if:{{{2|}}}|[[Template:User language/{{{2}}}|{{{1}}}]]|[[Template:User language/{{{1}}}|{{{1}}}]]}} ({{#ifexist:Template:User language/{{{1}}}|{{User language/{{{1}}}|name}}|''{{#language:{{{1}}}}}''}} &amp;#448; ''{{#language:{{{1}}}}}'')&lt;noinclude&gt;[[Category:Template subpages|User language/lang]]&lt;/noinclude&gt;</text>
      <sha1>lsc9e6ldjmuhwh3x4vsju3tv7a25ciy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/year</title>
    <ns>0</ns>
    <id>201463</id>
    <revision>
      <id>1604792</id>
      <parentid>1578133</parentid>
      <timestamp>2009-08-10T13:34:21Z</timestamp>
      <contributor>
        <ip>90.80.39.42</ip>
      </contributor>
      <comment>fix example</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\year=&lt;integer&gt;
\year&lt;integer&gt;
&lt;/pre&gt;

==Description==
\year is a parameter that TeX initiates to the current year. It may be changed to any integer &lt;integer&gt; with either of two equivalent forms above.

==Examples==
Recall that the command [[TeX/number|\number]] will typeset the decimal representation of whatever follows it, and so in the year 2009
&lt;pre&gt;
\number\year
&lt;/pre&gt;
will typeset 2009, if the \year parameter has not be redefined.
&lt;pre&gt;
\year=670
\number\year
&lt;/pre&gt;
will typeset 670.

{{BookCat}}</text>
      <sha1>oxvdf4vs4dnahn89oiatz392bs4tofh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/month</title>
    <ns>0</ns>
    <id>201464</id>
    <revision>
      <id>1578129</id>
      <parentid>1553585</parentid>
      <timestamp>2009-07-24T13:51:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\month=&lt;integer&gt;
\month&lt;integer&gt;
&lt;/pre&gt;

==Description==
\month is a parameter that TeX initiates to the decimal representation of the current month, for example, in June, TeX will initially set \month to 6. This parameter may be changed to any integer &lt;integer&gt; with either of two equivalent forms above.

==Examples==
Recall that the command [[TeX/number|\number]] will typeset the decimal representation of whatever follows it, and so in the month of June,
&lt;pre&gt;
\number\month
&lt;/pre&gt;
will typeset 6, if \month has not be redefined.
&lt;pre&gt;
\month=13
\number\month
&lt;/pre&gt;
will typeset 13.

{{BookCat}}</text>
      <sha1>l3ycx0dz1ssbnt4s6lqlzukqwbl27ah</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.1.1</title>
    <ns>1</ns>
    <id>201465</id>
    <revision>
      <id>1568760</id>
      <parentid>1567055</parentid>
      <timestamp>2009-07-14T16:56:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/Content Articles/2.1.1]] to [[Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.1.1]]: Talk page wasn't m</comment>
      <text xml:space="preserve">'''Reader Responses'''

Wow, this article was really interesting to read. I did not know there were so many different names for philosophies of teaching. After reading the differences in philosophies, I could see which category my beliefs lie in. I could also see which philosophies or school of thought my past teachers have believed in. I wonder if philosophies of teaching are based on generation and/or environmental upbringing. Do you think that philosophies change over time starting with the time you begin your teaching career to ten years later? It makes you wonder if school districts have an impact on one's teaching philosophy. Anyway, I really enjoyed reading this article because it was very informative and gave me something to ponder. Nice job of transitioning each section.[[User:Scarlett1|Scarlett1]] ([[User talk:Scarlett1|talk]]) 18:46, 30 June 2009 (UTC)

In this chapter it exposed many of the philosophies of teaching and it was very interesting to see how those philosophies have evolved over time. I really enjoyed getting into the foundations of teaching and learning about this aspect if teaching made me excited for the future of teaching for me and my children. The Progressive philosophy will maximize the emphasis on team work and hands on experimentation, which I think will appeal to students. This is a philosophy that I feel that many teachers are headed to, but also balancing this philosophy with others to create a more well-rounded student. Jnewh001 (talk) 19:39, 5 July 2009 (UTC)
[[User:Jnewh001|Jnewh001]] ([[User talk:Jnewh001|talk]]) 20:55, 8 July 2009 (UTC)

I don't think my approach would be encompassed in entirely one school of philosophy, nor do I think it should. This is an interesting look at several different branches/takes on pedagogical disciplines– I particularly like progressivism, and would dare to say that it centers mostly on what I would be interested in doing, and seems the less restrictive of the bunch. [[User:Hsmit022|Hsmit022]] ([[User talk:Hsmit022|talk]]) 18:53, 12 July 2009 (UTC)

Many of these approaches seemed archaic at first glance to me, but upon further reflection I can see the practicality of many of these approaches. While I am a person who believes in teaching with compassion and creativity, things change, times change, and most importantly students change. At first I could never imagine teaching with an essentialist approach, I’m far too democratic a thinker, but when looking at high challenge urban areas, I could not think of a more effective approach. It seems to me that each philosophy has its place within the learning spectrum and situational uses. [[User:BitterAsianMan|BitterAsianMan]] ([[User talk:BitterAsianMan|talk]]) 04:18, 13 July 2009 (UTC)</text>
      <sha1>lg3dtianuvnjpgg7bgh6yxza0y6ipiy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:LeonTolstoy/monobook.css</title>
    <ns>2</ns>
    <id>201466</id>
    <revision>
      <id>1553616</id>
      <timestamp>2009-06-30T18:59:01Z</timestamp>
      <contributor>
        <username>LeonTolstoy</username>
        <id>249353</id>
      </contributor>
      <comment>Created page with 'pre {padding:0; border: none; margin:0; line-height: 1.5em; } .code .input ol {list-style: none; font-size: 1.2em; margin-left: 0;} .code .input ol li div:before {content: &quot;\003E...'</comment>
      <text xml:space="preserve">pre {padding:0; border: none; margin:0; line-height: 1.5em; }
.code .input ol {list-style: none; font-size: 1.2em; margin-left: 0;}
.code .input ol li div:before {content: &quot;\003E \0020&quot;;}
table.subfigures div.thumbinner, table.subfigures tr td, table.subfigures {border: 0;}</text>
      <sha1>mhzd3q6x9s0mc6bvq16qpih8dvsebje</sha1>
      <model>css</model>
      <format>text/css</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Smoky Chipotle Marinade</title>
    <ns>102</ns>
    <id>201467</id>
    <revision>
      <id>1838978</id>
      <parentid>1838977</parentid>
      <timestamp>2010-06-10T21:17:02Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Marinade recipes]] [[Category:Meat recipes]]

== Ingredients ==
* 1/2 cup [[Cookbook:Smoky Chipotle Hot Sauce|chipotle-based hot sauce]]
* 1/4 cup adobo sauce
* 1/2 cup honey
* 1/2 cup tequila
* 1 cup chicken broth
* 1/4 cup malt vinegar
* A few pieces of meat

== Procedure ==
#Combine all ingredients in a large zip-top plastic bag. Insert meat in and refrigerate for as long as you like.</text>
      <sha1>kfxmfkl2hwl6xu6w0zksat2210mofnu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cornish Game Hen</title>
    <ns>102</ns>
    <id>201469</id>
    <revision>
      <id>1553630</id>
      <timestamp>2009-06-30T19:17:08Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <comment>Created page with '{{ingredient}} | [[Cookbook:Basic foodstuffs|Basic foodstuffs]] | [[Cookbook:Meat and poultry|Meat and poultry]]  A '''Cornish/Rock Game Hen''' is an immature chicken generally h...'</comment>
      <text xml:space="preserve">{{ingredient}} | [[Cookbook:Basic foodstuffs|Basic foodstuffs]] | [[Cookbook:Meat and poultry|Meat and poultry]]

A '''Cornish/Rock Game Hen''' is an immature chicken generally harvested between 18 and 20 weeks old.</text>
      <sha1>eplh4r52udt84xdrxpyruwnf26frjlo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:French/Lessons/Food and drink</title>
    <ns>1</ns>
    <id>201470</id>
    <revision>
      <id>1867158</id>
      <parentid>1864516</parentid>
      <timestamp>2010-06-28T23:13:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>replaced: {{WikiProject Languages}} → {{WikiProject Languages|french=yes}}</comment>
      <text xml:space="preserve">{{WikiProject Languages|french=yes}} 

Hi, I'm not a French native speaker but I do have near-native proeficiency and good accent. Please let me know how can I contribute (I have no idea how to make sound files but I'd love to help).

Contact through WikiHow user tak page: Beare
Bye!</text>
      <sha1>kvxesgcsb56twm6kz9z0jgya25u02ia</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pages</title>
    <ns>14</ns>
    <id>201471</id>
    <revision>
      <id>1553638</id>
      <timestamp>2009-06-30T19:25:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User page category (for folders with all of a user's pages)</comment>
      <text xml:space="preserve">[[Category:Users|Pages]]</text>
      <sha1>1xgr21scglysn0e2uvt40u1fs5bvc97</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by language</title>
    <ns>14</ns>
    <id>201472</id>
    <revision>
      <id>2502357</id>
      <parentid>2309178</parentid>
      <timestamp>2013-03-16T09:01:21Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>r2.7.2) (Robot: Removing [[cs:Kategorie:Uživatelé:Podle jazyka]]</comment>
      <text xml:space="preserve">This is a list of registered users of English Wikibooks, organized by the [[w:ISO 639|ISO 639]] codes of the languages that they speak.

People listed here usually have a [[Wikibooks:Babel|language template]].

[[Category:Users| Language]]

[[ca:Categoria:Usuaris per idioma]]
[[da:Kategori:Wikibookianere efter sprogkundskaber]]
[[de:Kategorie:Benutzer nach Sprache]]
[[el:Κατηγορία:Χρήστες ανά γλώσσα]]
[[es:Categoría:Wikilibros:Usuarios por idioma]]
[[fr:Catégorie:Utilisateurs par langue]]
[[ko:분류:바벨]]
[[hy:Կատեգորիա:Վիքիգրքեր:Օգտվողների լեզուները]]
[[id:Kategori:Pengguna menurut bahasa]]
[[it:Categoria:Utenti per lingua]]
[[hu:Kategória:Felhasználók nyelvei]]
[[ja:カテゴリ:言語別の利用者]]
[[no:Kategori:Wikipedia-brukere etter språk]]
[[pl:Kategoria:Języki użytkowników]]
[[pt:Categoria:Usuários línguas]]
[[ru:Категория:Викиучебник:Участники по языкам]]</text>
      <sha1>jeb5wi9uoeo2e15kqtam265xsbshpgk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Solved Question Papers - IIT JEE/PAPER 1</title>
    <ns>0</ns>
    <id>201473</id>
    <revision>
      <id>1553662</id>
      <parentid>1553660</parentid>
      <timestamp>2009-06-30T19:46:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">'''SOLUTIONS TO IIT-JEE 2009'''
'''&lt;big&gt;CHEMISTRY: Paper-I '''&lt;/big&gt;'''

'''SECTION – I ''''Single Correct Choice Type'''''
''This section contains 8 multiple choice questions. Each question has 4 choices (A), (B), (C) and (D), for its answer out of
which ONLY ONE is correct.''

'''''Note: Questions with (*) mark are from syllabus of class XI.'''

 ''1.'' Among the electrolytes Na&lt;sub&gt;2&lt;/sub&gt;SO&lt;sub&gt;4&lt;/sub&gt;, CaCl&lt;sub&gt;2&lt;/sub&gt;, Al&lt;sub&gt;2&lt;/sub&gt;(SO4)&lt;sub&gt;3&lt;/sub&gt; and NH&lt;sub&gt;4&lt;/sub&gt;Cl, the most effective coagulating agent for Sb&lt;sub&gt;2&lt;/sub&gt;S&lt;sub&gt;3&lt;/sub&gt; sol is
 (A) Na&lt;sub&gt;2&lt;/sub&gt;SO&lt;sub&gt;4&lt;/sub&gt; (B) CaCl&lt;sub&gt;2&lt;/sub&gt; (C) Al&lt;sub&gt;2&lt;/sub&gt;(SO4)&lt;sub&gt;3&lt;/sub&gt; (D) NH&lt;sub&gt;4&lt;/sub&gt;Cl                              
 '''Sol.:''' According to Hardy–Schulze rule, the coagulating power of an ion is directly proportional to the magnitude of its charge.
        So, For negatively charged Sb&lt;sub&gt;2&lt;/sub&gt;S&lt;sub&gt;3&lt;/sub&gt; sol, the most effective coagulating agent would be Al&lt;sub&gt;2&lt;/sub&gt;(SO4)&lt;sub&gt;3&lt;/sub&gt; .
 '''Correct choice: (C)'''

 ''*2.'' Given that the abundances of isotopes &lt;sup&gt;54&lt;/sup&gt;Fe, &lt;sup&gt;56&lt;/sup&gt;Fe and &lt;sup&gt;57&lt;/sup&gt;Fe are 5%, 90% and 5%, respectively, the atomic mass of Fe is
 (A) 55.85 (B) 55.95 (C) 55.75 (D) 56.06
  '''Sol.:''' Average atomic mass of an element = ∑AiXi
   where Ai and Xi represents the atomic mass and mole fraction of the component in the mixture.
   Average atomic mass of Fe =(54×5)+(56×90)+(57×5)/100
                             = 55.95 
 '''Correct choice: (B)'''

 ''*3.'' The correct acidity order of the following is
   http://upload.wikimedia.org/wikipedia/commons/4/48/JEE_Benzene_Derivatives.jpg
 (A) (III) &gt; (IV) &gt; (II) &gt; (I) (B) (IV) &gt; (III) &gt; (I) &gt; (II) (C) (III) &gt; (II) &gt; (I) &gt; (IV) (D) (II) &gt; (III) &gt; (IV) &gt; (I)
  '''Sol.:''' Carboxylic acid is stronger acid than phenol. The presence of electron donating methyl group decreases acidic strength while
      presence of electron withdrawing halogen increases acidic strength.
 '''Correct choice: (A)'''

 ''*4.'' The IUPAC name of the following compound is
  http://upload.wikimedia.org/wikipedia/commons/e/e0/Chemistry-IITJEE.jpg
 (A) 4-Bromo-3-cyanophenol (B) 2-Bromo-5-hydroxybenzonitrile
 (C) 2-Cyano-4-hydroxybromobenzene (D) 6-Bromo-3-hydroxybenzonitrile
  '''Sol.:''' –CN group is principal functional group.
 '''Correct choice: (B)'''

 ''*5.'' The term that corrects for the attractive forces present in a real gas in the van der Waals equation is
 (A) nb     (B) &lt;math&gt;an^2/V^2&lt;/math&gt;  (C) -&lt;math&gt;an^2/V^2&lt;/math&gt;   (D) -nb
  '''Sol.:''' The attractive forces in a real gas decreases its pressure relative to an ideal gas.
            P&lt;sub&gt;r&lt;/sub&gt; = P&lt;sub&gt;i&lt;/sub&gt; - &lt;math&gt;an^2/V^2&lt;/math&gt; ; P&lt;sub&gt;i&lt;/sub&gt; = P&lt;sub&gt;r&lt;/sub&gt; + &lt;math&gt;an^2/V^2&lt;/math&gt;
           The term that accounts for decrease in pressure due to attractive forces among molecules of a real gas must be added to the
           real gas pressure (observed) to get the ideal gas pressure.
 '''Correct choice: (B)'''

 ''6.'' Among cellulose, poly(vinyl chloride), nylon and natural rubber, the polymer in which the intermolecular force of attraction is weakest is
 (A) Nylon (B) Poly(vinyl chloride) (C) Cellulose (D) Natural Rubber
  '''Sol.:''' Nylon and cellulose, both have intermolecular hydrogen bonding whereas polyvinyl chloride has dipole-dipole interaction.
        Natural rubber will have London forces which are weakest.
 '''Correct choice: (D)'''

 ''7.'' The reaction of P&lt;sub&gt;4&lt;/sub&gt; with X leads selectively to P&lt;sub&gt;4&lt;/sub&gt;O&lt;sub&gt;6&lt;/sub&gt;. The X is
 (A) Dry O&lt;sub&gt;2&lt;/sub&gt; (B) A mixture of O&lt;sub&gt;2&lt;/sub&gt; and N&lt;sub&gt;2&lt;/sub&gt;
 (C) Moist O&lt;sub&gt;2&lt;/sub&gt; (D) O&lt;sub&gt;2&lt;/sub&gt; in the presence of aqueous NaOH
   '''Sol.:''' P&lt;sub&gt;4&lt;/sub&gt; reacts with O&lt;sub&gt;2&lt;/sub&gt; in limited supply of air (a mixture of O&lt;sub&gt;2&lt;/sub&gt; and N&lt;sub&gt;2&lt;/sub&gt;) to give P&lt;sub&gt;4&lt;/sub&gt;O&lt;sub&gt;6&lt;/sub&gt;.
       P&lt;sub&gt;4&lt;/sub&gt; + 3O&lt;sub&gt;2&lt;/sub&gt; &lt;s&gt;&lt;sup&gt;limited supply of air&lt;/sup&gt;&lt;/s&gt;→ P&lt;sub&gt;4&lt;/sub&gt;O&lt;sub&gt;6&lt;/sub&gt;.
 '''Correct choice: (B)'''

 ''8.'' The Henry’s law constant for the solubility of N&lt;sub&gt;2&lt;/sub&gt; gas in water at 298 K is 1.0 × 10&lt;sup&gt;5&lt;/sup&gt; atm. The mole fraction of N&lt;sub&gt;2&lt;/sub&gt; in air is 0.8.
 The number of moles of N&lt;sub&gt;2&lt;/sub&gt; from air dissolved in 10 moles of water at 298 K and 5 atm pressure is
 (A) 4.0 × 10&lt;sup&gt;–4&lt;/sup&gt; (B) 4.0 × 10&lt;sup&gt;–5&lt;/sup&gt; (C) 5.0 × 10&lt;sup&gt;–4&lt;/sup&gt; (D) 4.0 × 10&lt;sup&gt;–6&lt;/sup&gt;
  '''Sol.:''' According to Henry’s law
      P&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; = K&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; X&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt;
   Where K is the Henry’s constant (in atm) and
   X&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; is mole fraction of N&lt;sub&gt;2&lt;/sub&gt;.
   P&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; = X&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; P&lt;sub&gt;T&lt;/sub&gt; = 0.8 × 5 atm = 4.0 atm.
   4 atm = 1.0 × 10&lt;sup&gt;5&lt;/sup&gt; atm × X&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt;
   4 × 10&lt;sup&gt;–5&lt;/sup&gt; =  &lt;u&gt;   n&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt;   &lt;/u&gt;      =  &lt;u&gt;   n&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; &lt;/u&gt;
                n&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; + n&lt;sub&gt;H&lt;sub&gt;2&lt;/sub&gt;O&lt;/sub&gt;       n&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; + 10
  n&lt;sub&gt;N&lt;sub&gt;2&lt;/sub&gt;&lt;/sub&gt; = 4 × 10&lt;sup&gt;-4&lt;/sup&gt; moles
 '''Correct choice: (A)'''

{{BookCat}}</text>
      <sha1>0vg47081ou9x7wjo1ar3xrdrgf2rd5p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User too long</title>
    <ns>10</ns>
    <id>201474</id>
    <revision>
      <id>1553668</id>
      <parentid>1553654</parentid>
      <timestamp>2009-06-30T19:49:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Simplified code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:0px; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#ffe496;&quot;
| style=&quot;width:45px; height:45px; background:#ffb466; text-align:center; font-size:12pt; color:#000;&quot; | '''[[Image:Crystal kthememgr.svg|40px]]'''
| style=&quot;font-size:{{{info-size|8}}}pt; padding:4pt; line-height:1.25em; color:{{{info-color|#000000}}};&quot; | This user has been using [[Wikibooks:Userboxes|userboxes]] too long and constantly refers to {{{1}}}self as &quot;this user&quot;.
|}&lt;/div&gt;&lt;noinclude&gt;
&lt;br style=&quot;clear: both;&quot; /&gt;


This template takes a parameter: ''him'' or ''her'' depending on your gender.

[[Category:Userbox user templates|Too long]]&lt;/noinclude&gt;</text>
      <sha1>auq2q7y3qcea9503juqnii2c5zwl3ks</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>PAPER 1</title>
    <ns>0</ns>
    <id>201477</id>
    <redirect title="Solved Question Papers - IIT JEE/PAPER 1" />
    <revision>
      <id>1553661</id>
      <timestamp>2009-06-30T19:45:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[PAPER 1]] to [[Solved Question Papers - IIT JEE/PAPER 1]]: Moving into book linking to it.</comment>
      <text xml:space="preserve">#REDIRECT [[Solved Question Papers - IIT JEE/PAPER 1]]</text>
      <sha1>pnbd4ayqjdl1bcfc92zci2e88ln9c1n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User colorful</title>
    <ns>10</ns>
    <id>201478</id>
    <revision>
      <id>2375019</id>
      <parentid>1553675</parentid>
      <timestamp>2012-07-08T20:55:01Z</timestamp>
      <contributor>
        <username>Addihockey10 (automated)</username>
        <id>502783</id>
      </contributor>
      <minor />
      <comment>Bot : Replacing raster images with vectorized equivalents - [[File:AdditiveColorMixingII.png]] → [[File:Synthese+.svg]]</comment>
      <text xml:space="preserve">{{Userbox |border-c=hotpink |border-s=2 |id-c=black |id-s=14 |id-fc=black |info-c=aqua |info-s=8 |info-fc=black |id=[[Image:Synthese+.svg|45px]] |info=This user feels that all userboxes should be colorful and appealing.}}&lt;noinclude&gt;[[Category:Userbox user templates|Colorful]]&lt;/noinclude&gt;</text>
      <sha1>o66v2j0xcquwf6e98sfwo5j76wnpgji</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Sharedupload-desc-here</title>
    <ns>8</ns>
    <id>201479</id>
    <revision>
      <id>1941434</id>
      <parentid>1941432</parentid>
      <timestamp>2010-09-30T17:28:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>topicon formatting</comment>
      <text xml:space="preserve">{{fmbox
| type  = system
| id    = mw-sharedupload
| image = [[File:Commons-logo.svg|40x40px|Wikimedia Commons logo|alt=]]
| textstyle = font-size: 90%; text-align: center;
| text  = &lt;div&gt;
&lt;big&gt;This is a file from the {{sec link auto|commons|Main Page|Wikimedia Commons|padlock=yes}}. The description on its '''{{sec link auto|commons|{{FULLPAGENAME}}|description page there|padlock=yes}}''' is shown below.&lt;/big&gt; &lt;br /&gt; Commons is a freely licensed media file repository. {{sec link auto|commons|Commons:Welcome|You can help|padlock=yes}}.
&lt;/div&gt;
}}{{#ifeq:{{lc:{{NAMESPACE}}}}|file|
&lt;div class=&quot;metadata topicon&quot; id=&quot;commons-icon&quot; style=&quot;display:none; right:2px;&quot;&gt;[[File:Commons-logo.svg|x25px|link={{sec link image|commons|{{FULLPAGENAME}} }}|This is a file from the Wikimedia Commons]]&lt;/div&gt;}}</text>
      <sha1>bjd1rg6ikzkhk1tc4x72l6mdcr4dqum</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/time</title>
    <ns>0</ns>
    <id>201480</id>
    <revision>
      <id>1578131</id>
      <parentid>1553686</parentid>
      <timestamp>2009-07-24T13:51:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\time=&lt;integer&gt;
\time&lt;integer&gt;
&lt;/pre&gt;

==Description==
\time is a parameter that TeX initiates to the number of minutes that have completed in the current day. TeX sets this parameter once upon start-up. If, for example, TeX starts at 10:32:45am, then \time  would be set to 60*10+32=632, dropping the 45 seconds. This parameter may be changed to &lt;integer&gt; with either of the two equivalent forms above.

==Examples==
Recall that the command [[TeX/number|\number]] will typeset the decimal representation of whatever follows it, and TeX started at, say, 10:32:04am then
&lt;pre&gt;
\number\time
&lt;/pre&gt;
will typeset 632, if the \time parameter has not be redefined since TeX started.
&lt;pre&gt;
\time=-45
\number\time
&lt;/pre&gt;
will typeset -45.

{{BookCat}}</text>
      <sha1>a2tlbxacs02jr12kz9zlbvkjplznuvu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language category</title>
    <ns>10</ns>
    <id>201482</id>
    <revision>
      <id>1768353</id>
      <parentid>1618346</parentid>
      <timestamp>2010-04-22T03:46:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">&lt;includeonly&gt;This category sorts {{#ifexist:template:user language/{{{1}}}|{{user language/{{{1}}}|name}}|''{{#language:{{{1}}}}}''}} users by order of fluency (&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=1}} 1 = native], [{{fullurl:{{FULLPAGENAMEE}}|from=2}} 2 = nearly native], [{{fullurl:{{FULLPAGENAMEE}}|from=3}} 3 = fluent], [{{fullurl:{{FULLPAGENAMEE}}|from=4}} 4 = intermediate], [{{fullurl:{{FULLPAGENAMEE}}|from=5}} 5 = basic]&lt;/span&gt;).

{| class=&quot;wikitable&quot;
!Code||Result||Sort number
|-
|{{tlx|user language|{{{1}}}|N}}
|{{user language|{{{1|}}}|N|align=none|category=}}
|&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=1}} 1 = native]&lt;/span&gt;
|-
|{{tlx|user language|{{{1}}}|4}}
|{{user language|{{{1|}}}|4|align=none|category=}}
|&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=2}} 2 = nearly native]&lt;/span&gt;
|-
|{{tlx|user language|{{{1}}}|3}}
|{{user language|{{{1|}}}|3|align=none|category=}}
|&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=3}} 3 = fluent]&lt;/span&gt;
|-
|{{tlx|user language|{{{1}}}|2}}
|{{user language|{{{1|}}}|2|align=none|category=}}
|&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=4}} 4 = intermediate]&lt;/span&gt;
|-
|{{tlx|user language|{{{1}}}|1}}
|{{user language|{{{1|}}}|1|align=none|category=}}
|&lt;span class=&quot;plainlinks&quot;&gt;[{{fullurl:{{FULLPAGENAMEE}}|from=5}} 5 = basic]&lt;/span&gt;
|-
|{{tlx|user language|{{{1}}}|0}}
|{{user language|{{{1|}}}|0|align=none|category=}}
|(not included)
|}{{{category|[[Category:Users by language|{{{1|}}}]]}}}&lt;/includeonly&gt;&lt;noinclude&gt;
This template displays the various language skill levels associated with a particular spoken language, the syntax for adding a userbox to one's user page to indicate one's skill level, and also provides links to jump to a particular skill level in the resulting listing of users proficient in that language.

==Usage==
&lt;nowiki&gt;{{User language category|language}}&lt;/nowiki&gt; where &quot;language&quot; corresponds to the language code listed at [[Wikibooks:Babel]].

==Example==
&lt;nowiki&gt;{{User language category|en}}&lt;/nowiki&gt;

produces the following:

{{User language category|en|category=}}

[[Category:Category namespace templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>9htwqyngvxf4s3kmfglt7rd7uhttk1h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/count</title>
    <ns>0</ns>
    <id>201483</id>
    <revision>
      <id>1578123</id>
      <parentid>1553705</parentid>
      <timestamp>2009-07-24T13:49:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\count&lt;number&gt;=&lt;integer&gt;
&lt;/pre&gt;

==Description==
&lt;number&gt; is an integer from 0 to 255. For each &lt;number&gt;, \count&lt;number&gt; is a register that can hold an integer value.  A \count register can be set to &lt;integer&gt; with the above form.

Various arithmetic operations can be performed on the \count registers; see [[TeX/advance|\advance]], [[TeX/multiply|\multiply]], and [[TeX/divide|\divide]].

==Examples==
Uses of the \count registers include keep track of section and equation numbering.

{{BookCat}}</text>
      <sha1>buehw0yd7yv9i7ir4fwexvjne2pwp7g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User akk</title>
    <ns>14</ns>
    <id>201484</id>
    <revision>
      <id>1553709</id>
      <timestamp>2009-06-30T20:41:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{User language category|akk}}</text>
      <sha1>csaok8uu2deyzwn3budpmoajvqfo5wg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User als</title>
    <ns>14</ns>
    <id>201485</id>
    <revision>
      <id>1553711</id>
      <timestamp>2009-06-30T20:42:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{User language category|als}}</text>
      <sha1>mqn58dogjugk7sqzer8zjhyl6tvws5c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User am</title>
    <ns>14</ns>
    <id>201486</id>
    <revision>
      <id>1553713</id>
      <timestamp>2009-06-30T20:44:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{User language category|am}}</text>
      <sha1>cwp87roo2eop4ux7c7shsmqh41dfnq0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User an</title>
    <ns>14</ns>
    <id>201487</id>
    <revision>
      <id>1553714</id>
      <timestamp>2009-06-30T20:44:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{User language category|an}}</text>
      <sha1>1rwftspaiikjmn7gs30khz3zs4uu57x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ang</title>
    <ns>14</ns>
    <id>201488</id>
    <revision>
      <id>1553716</id>
      <timestamp>2009-06-30T20:46:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{User language category|ang}}</text>
      <sha1>t4y3v0zw8wnyocf4xypayr02ohhyrik</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Rtl</title>
    <ns>10</ns>
    <id>201489</id>
    <revision>
      <id>1662497</id>
      <parentid>1553717</parentid>
      <timestamp>2009-11-21T17:52:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">&lt;div style=&quot;text-align:right;&quot; dir=&quot;rtl&quot;&gt;{{{1}}}&lt;/div&gt;&lt;noinclude&gt;[[Category:Multilingual support templates|Rtl]]&lt;/noinclude&gt;</text>
      <sha1>mm6svjoqzafa5i8z2d8vxhqtaf939zb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Shii</title>
    <ns>2</ns>
    <id>201490</id>
    <revision>
      <id>1553724</id>
      <timestamp>2009-06-30T21:01:57Z</timestamp>
      <contributor>
        <username>Shii</username>
        <id>114956</id>
      </contributor>
      <comment>Created page with 'Please use en.wikipedia talk page'</comment>
      <text xml:space="preserve">Please use en.wikipedia talk page</text>
      <sha1>qi2pptjfn186aauondn90a5pvgoi6lr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ast</title>
    <ns>14</ns>
    <id>201491</id>
    <revision>
      <id>1553725</id>
      <timestamp>2009-06-30T21:02:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ast}}</text>
      <sha1>6w4i2iy8qqfjwmh6paazcypk4w5j4ff</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User avk</title>
    <ns>14</ns>
    <id>201492</id>
    <revision>
      <id>1553726</id>
      <timestamp>2009-06-30T21:03:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|avk}}</text>
      <sha1>jr9wy53owrdq6q819lsjbwx88wq0fi7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User az</title>
    <ns>14</ns>
    <id>201493</id>
    <revision>
      <id>1553728</id>
      <timestamp>2009-06-30T21:07:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|az}}</text>
      <sha1>lssvyc6fg3fqx3nz6tvb8ktkrhrjfmt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bar</title>
    <ns>14</ns>
    <id>201494</id>
    <revision>
      <id>1553729</id>
      <timestamp>2009-06-30T21:07:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bar}}</text>
      <sha1>7ltxqv11dah92fif13bcl0516tgksb6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bcc</title>
    <ns>14</ns>
    <id>201495</id>
    <revision>
      <id>1553730</id>
      <timestamp>2009-06-30T21:07:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bcc}}</text>
      <sha1>mkraq8zihz1alfu7w24rs9b0v2sr0ol</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User be</title>
    <ns>14</ns>
    <id>201496</id>
    <revision>
      <id>1553731</id>
      <timestamp>2009-06-30T21:09:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|be}}</text>
      <sha1>blcr2viztpbs155ucy3deckt70v6w3c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bew</title>
    <ns>14</ns>
    <id>201497</id>
    <revision>
      <id>1553732</id>
      <timestamp>2009-06-30T21:09:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bew}}</text>
      <sha1>6z5io2nsytebzlqcih1ln2mr27iznr2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bm</title>
    <ns>14</ns>
    <id>201498</id>
    <revision>
      <id>1553734</id>
      <timestamp>2009-06-30T21:10:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bm}}</text>
      <sha1>gjyw4bwau60r1z9d1qxv819adxuz44g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bqi</title>
    <ns>14</ns>
    <id>201499</id>
    <revision>
      <id>1553735</id>
      <timestamp>2009-06-30T21:10:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bqi}}</text>
      <sha1>3piejoy09mdmzrortofjs8t2r8lghoe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User bs</title>
    <ns>14</ns>
    <id>201500</id>
    <revision>
      <id>1553736</id>
      <timestamp>2009-06-30T21:11:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|bs}}</text>
      <sha1>p9izwoy8717913edmgc65odp9hh01ll</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ca</title>
    <ns>14</ns>
    <id>201501</id>
    <revision>
      <id>1842973</id>
      <parentid>1553737</parentid>
      <timestamp>2010-06-15T10:59:33Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>robot Adding: [[tr:Kategori:Kullanıcı ca]]</comment>
      <text xml:space="preserve">{{user language category|ca}}

[[tr:Kategori:Kullanıcı ca]]</text>
      <sha1>4jzw9i9yk0qltefyr25g0utbaluvy4u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ceb</title>
    <ns>14</ns>
    <id>201502</id>
    <revision>
      <id>1553739</id>
      <timestamp>2009-06-30T21:11:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ceb}}</text>
      <sha1>d2uwezihruuzanbbeuczkslwurnufuj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User co</title>
    <ns>14</ns>
    <id>201503</id>
    <revision>
      <id>1553740</id>
      <timestamp>2009-06-30T21:11:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|co}}</text>
      <sha1>bcjc59c0i7ihw6ogn8grej7ex5neteb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User crh</title>
    <ns>14</ns>
    <id>201504</id>
    <revision>
      <id>1553741</id>
      <timestamp>2009-06-30T21:12:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|crh}}</text>
      <sha1>6ovt727hbco4r27etb62vdv0fsjkyau</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User cu</title>
    <ns>14</ns>
    <id>201505</id>
    <revision>
      <id>1553744</id>
      <timestamp>2009-06-30T21:13:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|cu}}</text>
      <sha1>jnu12bum69hffndac96ds0gf4c4fc72</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User dsb</title>
    <ns>14</ns>
    <id>201507</id>
    <revision>
      <id>1553749</id>
      <timestamp>2009-06-30T21:24:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|dsb}}</text>
      <sha1>5x1s8pwj9mq04tltxqkxv7c85smilvm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User eu</title>
    <ns>14</ns>
    <id>201509</id>
    <revision>
      <id>1553759</id>
      <timestamp>2009-06-30T21:42:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|eu}}</text>
      <sha1>e8ksv1e0faesifh6wrqc0hie5pbjfg4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User eur</title>
    <ns>14</ns>
    <id>201510</id>
    <revision>
      <id>1553763</id>
      <timestamp>2009-06-30T21:50:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|eur}}</text>
      <sha1>a0ygsbc5qwim14g6uov3ye3arccwin7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Clarinet/Clarinet Repertoire</title>
    <ns>0</ns>
    <id>201511</id>
    <revision>
      <id>2530863</id>
      <parentid>1553784</parentid>
      <timestamp>2013-06-02T14:55:55Z</timestamp>
      <contributor>
        <username>Radivojl</username>
        <id>673481</id>
      </contributor>
      <text xml:space="preserve">W.A. Mozart Concerto for clarinet and orchestra A-dur
            Clarinet quintet
K. &amp; J. Stamitz a lot of concertos for clarinet and orchestra
C.M. Weber Concertino for clarinet and orchestra Es-dur
           Variations for clarinet and orchestra Es-dur
           Concerto for clarinet and orchestra N.1 f-moll
           Concerto for clarinet and orchestra N.2 Es-dur
           Clarinet quintet
           Introduction,theme and variations for clarinet and string quartet
G. Rossini Introduction,theme and variations for clarinet and orchestra
J. Brahms  Sonata for clarinet and piano N.1 f-moll
           Sonata for clarinet and piano N.2 Es-dur
           Clarinet quintet

{{BookCat}}



[[sr:Kларинет/Репертоар - страни композитори за кларинет]]</text>
      <sha1>mqcvkqnl3a5fpt3bp5gdwsr07nizpty</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User gan</title>
    <ns>14</ns>
    <id>201512</id>
    <revision>
      <id>1553771</id>
      <timestamp>2009-06-30T22:00:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|gan}}</text>
      <sha1>notge5m3n05zskvl7ox0efiwsie42db</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User gd</title>
    <ns>14</ns>
    <id>201513</id>
    <revision>
      <id>1553772</id>
      <timestamp>2009-06-30T22:00:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|gd}}</text>
      <sha1>iulg9lv6rxryb2bbch2tdfdfc0710qj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User gsw</title>
    <ns>14</ns>
    <id>201514</id>
    <revision>
      <id>1553776</id>
      <timestamp>2009-06-30T22:03:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|gsw}}</text>
      <sha1>1k9vbaf8z3kxnldkpqtya6ptyncljwi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User gu</title>
    <ns>14</ns>
    <id>201515</id>
    <revision>
      <id>1553777</id>
      <timestamp>2009-06-30T22:03:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|gu}}</text>
      <sha1>tv9kwtmopgzvmxi6lxy4sq4v5is8ara</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User haw</title>
    <ns>14</ns>
    <id>201516</id>
    <revision>
      <id>1553778</id>
      <timestamp>2009-06-30T22:04:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|haw}}</text>
      <sha1>4hpsz3untsjpr1xgvu3rwyk8v2lmzo2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User hif</title>
    <ns>14</ns>
    <id>201517</id>
    <revision>
      <id>1553783</id>
      <timestamp>2009-06-30T22:10:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|hif}}</text>
      <sha1>p8qj4839t0uomhsl0sywwlba53k6v9j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User hsb</title>
    <ns>14</ns>
    <id>201518</id>
    <revision>
      <id>1553786</id>
      <timestamp>2009-06-30T22:11:44Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|hsb}}</text>
      <sha1>lwd45wemrdgy767xs4twdw0uhbr8z0k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ht</title>
    <ns>14</ns>
    <id>201519</id>
    <revision>
      <id>1553787</id>
      <timestamp>2009-06-30T22:13:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ht}}</text>
      <sha1>9k977fac4pclkwsipaf3mpotnrlm02i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User jv</title>
    <ns>14</ns>
    <id>201520</id>
    <revision>
      <id>1553802</id>
      <timestamp>2009-06-30T22:29:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|jv}}</text>
      <sha1>oplf8yn0sz3fqkbxja7x87bc5gtof68</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ka</title>
    <ns>14</ns>
    <id>201521</id>
    <revision>
      <id>1553804</id>
      <timestamp>2009-06-30T22:31:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ka}}</text>
      <sha1>5sej32y4pki9j3ircoylpnspyw1z5ik</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User kk</title>
    <ns>14</ns>
    <id>201522</id>
    <revision>
      <id>1553805</id>
      <timestamp>2009-06-30T22:31:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|kk}}</text>
      <sha1>hmbouo6lymevywu0gezhk2gxhxcy9x7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User km</title>
    <ns>14</ns>
    <id>201523</id>
    <revision>
      <id>1553806</id>
      <timestamp>2009-06-30T22:33:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|km}}</text>
      <sha1>0x4d2nkkoj9do3ftodyf3ttho87uz8d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ksh</title>
    <ns>14</ns>
    <id>201524</id>
    <revision>
      <id>1553809</id>
      <timestamp>2009-06-30T22:35:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ksh}}</text>
      <sha1>k4v1n7ewj6zbzx5ve3gqbp94g546fic</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ku</title>
    <ns>14</ns>
    <id>201525</id>
    <revision>
      <id>1553810</id>
      <timestamp>2009-06-30T22:36:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ku}}</text>
      <sha1>jn4r768d9rqm0rr6po0edv8smoqtt0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lb</title>
    <ns>14</ns>
    <id>201526</id>
    <revision>
      <id>1553814</id>
      <timestamp>2009-06-30T22:37:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lb}}</text>
      <sha1>hb31uul61a0lr59fharq2ltdmifh3tc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lfn</title>
    <ns>14</ns>
    <id>201527</id>
    <revision>
      <id>1553816</id>
      <timestamp>2009-06-30T22:38:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lfn}}</text>
      <sha1>og1wbq962pcs87e7zpb07ouvotoots4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User li</title>
    <ns>14</ns>
    <id>201528</id>
    <revision>
      <id>1553817</id>
      <timestamp>2009-06-30T22:38:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|li}}</text>
      <sha1>0aoankirsbdhont9nzbvafp01hpdoaq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lij</title>
    <ns>14</ns>
    <id>201529</id>
    <revision>
      <id>1553818</id>
      <timestamp>2009-06-30T22:38:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lij}}</text>
      <sha1>e92t2mq1tee7pgfed3r8sas77s0mmxz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lld</title>
    <ns>14</ns>
    <id>201530</id>
    <revision>
      <id>1553820</id>
      <timestamp>2009-06-30T22:40:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lld}}</text>
      <sha1>538dhc8zcm3a1ejb593bnuke74s07e3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lmo</title>
    <ns>14</ns>
    <id>201531</id>
    <revision>
      <id>1553821</id>
      <timestamp>2009-06-30T22:40:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lmo}}</text>
      <sha1>p280az4nsitjptumxfr9onjfnq5jqz7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ln</title>
    <ns>14</ns>
    <id>201532</id>
    <revision>
      <id>1553822</id>
      <timestamp>2009-06-30T22:41:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ln}}</text>
      <sha1>cecqlc446l2uljuuokuh4pwktjnavfs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lo</title>
    <ns>14</ns>
    <id>201533</id>
    <revision>
      <id>1553824</id>
      <timestamp>2009-06-30T22:41:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lo}}</text>
      <sha1>m3gh8ngj2fcls2svuk4cgqcbglw62mb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lt</title>
    <ns>14</ns>
    <id>201534</id>
    <revision>
      <id>1553825</id>
      <timestamp>2009-06-30T22:42:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lt}}</text>
      <sha1>m77x1ucdrymqkxtmyclihjroaegz3ol</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User lv</title>
    <ns>14</ns>
    <id>201535</id>
    <revision>
      <id>1553826</id>
      <timestamp>2009-06-30T22:42:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|lv}}</text>
      <sha1>6fjpadskn5omoakfrca93nbmqp8y7lj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mdf</title>
    <ns>14</ns>
    <id>201536</id>
    <revision>
      <id>1553827</id>
      <timestamp>2009-06-30T22:42:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mdf}}</text>
      <sha1>ogk1hkw3tcz9gq920s6jpewyj46ze4t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mg</title>
    <ns>14</ns>
    <id>201537</id>
    <revision>
      <id>1553828</id>
      <timestamp>2009-06-30T22:43:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mg}}</text>
      <sha1>mvnx5mzmmzw7dhmuco8ynefgm30712a</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mi</title>
    <ns>14</ns>
    <id>201538</id>
    <revision>
      <id>1553829</id>
      <timestamp>2009-06-30T22:43:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mi}}</text>
      <sha1>qxm5ymjika6v8xdl82a3mqkhv0iabet</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mk</title>
    <ns>14</ns>
    <id>201539</id>
    <revision>
      <id>1553835</id>
      <timestamp>2009-06-30T22:45:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mk}}</text>
      <sha1>c3c9dsdup8h4ni4ff38q55psjsq35gf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mn</title>
    <ns>14</ns>
    <id>201540</id>
    <revision>
      <id>1553837</id>
      <timestamp>2009-06-30T22:46:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mn}}</text>
      <sha1>ngylahluhjeegsumjfc9mlvjensut7b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mr</title>
    <ns>14</ns>
    <id>201541</id>
    <revision>
      <id>1553838</id>
      <timestamp>2009-06-30T22:46:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mr}}</text>
      <sha1>if1kgg8318nwqeb1zpcwamb8gsih7a1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ms</title>
    <ns>14</ns>
    <id>201542</id>
    <revision>
      <id>2574172</id>
      <parentid>1553839</parentid>
      <timestamp>2013-10-25T17:13:18Z</timestamp>
      <contributor>
        <username>Piet-c</username>
        <id>428753</id>
      </contributor>
      <text xml:space="preserve">{{user language category|ms}}

[[eo:kategorio:uzanto ms]]</text>
      <sha1>ih4hcalzpnfzy4m64eq3s0fo3tmha25</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mt</title>
    <ns>14</ns>
    <id>201543</id>
    <revision>
      <id>1553840</id>
      <timestamp>2009-06-30T22:47:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mt}}</text>
      <sha1>nfevvwkob32ulefwj0lq4cvt4ndsh7i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mwl</title>
    <ns>14</ns>
    <id>201544</id>
    <revision>
      <id>1553842</id>
      <timestamp>2009-06-30T22:47:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mwl}}</text>
      <sha1>t31dj5kanyfjya3q3wwc8hmo2agnzst</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User my</title>
    <ns>14</ns>
    <id>201545</id>
    <revision>
      <id>1553843</id>
      <timestamp>2009-06-30T22:47:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|my}}</text>
      <sha1>69hfhnqux27db06nqk622vv3l3e75y7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User mzn</title>
    <ns>14</ns>
    <id>201546</id>
    <revision>
      <id>1553844</id>
      <timestamp>2009-06-30T22:47:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|mzn}}</text>
      <sha1>71ihqitut9pz4ys2bwk2jvm7jgia7db</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User nap</title>
    <ns>14</ns>
    <id>201547</id>
    <revision>
      <id>1553845</id>
      <timestamp>2009-06-30T22:48:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|nap}}</text>
      <sha1>djmvvbykugb8yixj8c3u39plqanolhi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User nb</title>
    <ns>14</ns>
    <id>201548</id>
    <revision>
      <id>1553846</id>
      <timestamp>2009-06-30T22:48:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|nb}}</text>
      <sha1>i887nndristpiwia0o69v5m1r1fxm4d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User nds</title>
    <ns>14</ns>
    <id>201549</id>
    <revision>
      <id>1553847</id>
      <timestamp>2009-06-30T22:48:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|nds}}</text>
      <sha1>ozlxbbpdhyloxdkqsk5v0d38w05xtdt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User nso</title>
    <ns>14</ns>
    <id>201550</id>
    <revision>
      <id>1553861</id>
      <timestamp>2009-06-30T23:18:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|nso}}</text>
      <sha1>cshkka6kqibatdrfgq0ycnfu994y0hs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User oc</title>
    <ns>14</ns>
    <id>201551</id>
    <revision>
      <id>1842972</id>
      <parentid>1553862</parentid>
      <timestamp>2010-06-15T10:59:23Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>robot Adding: [[tr:Kategori:Kullanıcı oc]]</comment>
      <text xml:space="preserve">{{user language category|oc}}

[[tr:Kategori:Kullanıcı oc]]</text>
      <sha1>2drdmfqia29wx5y5v5u08hxd9vi1bgx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pa</title>
    <ns>14</ns>
    <id>201552</id>
    <revision>
      <id>1553863</id>
      <timestamp>2009-06-30T23:18:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|pa}}</text>
      <sha1>6mtujrf5m570l6yvidp1sbmz34yx7tp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pdc</title>
    <ns>14</ns>
    <id>201553</id>
    <revision>
      <id>1553864</id>
      <timestamp>2009-06-30T23:19:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|pdc}}</text>
      <sha1>jrgmnaolpdrge8gpy6uu599qp9ydiwk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pfl</title>
    <ns>14</ns>
    <id>201554</id>
    <revision>
      <id>1553866</id>
      <timestamp>2009-06-30T23:19:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|pfl}}</text>
      <sha1>cp7wgzl5pbaoniszo3tssem180she4c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User plm</title>
    <ns>14</ns>
    <id>201555</id>
    <revision>
      <id>1553870</id>
      <timestamp>2009-06-30T23:22:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|plm}}</text>
      <sha1>l5xvld2g1928pplpgpowar4tnhuawh7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pms</title>
    <ns>14</ns>
    <id>201556</id>
    <revision>
      <id>1998783</id>
      <parentid>1553873</parentid>
      <timestamp>2010-12-13T04:45:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>{{pp-semi-indef}}</comment>
      <text xml:space="preserve">{{user language category|pms}}{{pp-semi-indef}}</text>
      <sha1>bnw764fzejrz8ijcz4zfsrotqbzxf5l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User pnt</title>
    <ns>14</ns>
    <id>201557</id>
    <revision>
      <id>1553874</id>
      <timestamp>2009-06-30T23:24:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|pnt}}</text>
      <sha1>1r70kvidihx6yrkofpazvw6kbqiixvv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User qu</title>
    <ns>14</ns>
    <id>201558</id>
    <revision>
      <id>1553878</id>
      <timestamp>2009-06-30T23:26:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|qu}}</text>
      <sha1>qn553k4tc5fnovdsd1sy8z12ovs90wj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User rif</title>
    <ns>14</ns>
    <id>201559</id>
    <revision>
      <id>1553879</id>
      <timestamp>2009-06-30T23:26:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|rif}}</text>
      <sha1>a45jxcqp6r1x4mwb2oxelkuxm6jv4w2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Israeli History/Lesson 1</title>
    <ns>1</ns>
    <id>201562</id>
    <redirect title="Talk:Israeli History/The Zionist Movement" />
    <revision>
      <id>1553912</id>
      <timestamp>2009-07-01T00:16:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Talk:Israeli History/Lesson 1]] to [[Talk:Israeli History/The Zionist Movement]]: History merge.</comment>
      <text xml:space="preserve">#REDIRECT [[Talk:Israeli History/The Zionist Movement]]</text>
      <sha1>9eaaa2x4oohodfg7sah62pezusrkl1s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sa</title>
    <ns>14</ns>
    <id>201571</id>
    <revision>
      <id>1553949</id>
      <timestamp>2009-07-01T00:41:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sa}}</text>
      <sha1>kqbbk18uocemzdtwcvujjp7njjf52ca</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Portugal</title>
    <ns>0</ns>
    <id>201572</id>
    <revision>
      <id>2246798</id>
      <parentid>2224124</parentid>
      <timestamp>2012-01-05T03:54:17Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Removing &quot;Portugal.gif&quot;, it has been deleted from Commons by [[commons:User:Jameslwoodward|Jameslwoodward]] because: Per [[commons:Commons:Deletion requests/File:Portugal.gif]].</comment>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}
== Portugal’s Magellan Initiative: Preparing the children for a knowledge-based world ==

According to Intel (2008b), there are one billion students enrolled worldwide. This company advocates the preparation of students for a fast-changing world, a knowledge-based society and a global economy. They are trying to create learning environments to free the confidence, ingenuity, and potential of those one billion eager minds looking for the chance to learn and contribute the world. They also stated that research shows a strong correlation between education and economies. Just one more year of schooling can increase personal income nearly ten percent. In addition, studies show national returns on education as high as twelve percent. On the other hand, technology gives teachers new resources for engaging and effective education. They believe that technology sparks the joy of discovery, joins students with a wider world, and builds skills that build the future. However, only five percent of the world’s children have access to a PC or the Internet. They acknowledged that innovative learning tools are now available to allow children to collaborate, bring technology to the classroom, and meet their local needs. For Intel and Portugal, all children deserve the chance to dream, grow, and prosper.

=== Educational priorities in Portugal ===

One of the educational priorities in Portugal is to improve the relevance and quality of education. Intel (2008a) maintained that Portugal’s priority to make technology accessible to schools and children is a model for governments and corporations working together to prepare future generations for long-term opportunities. According to The Portugal News Online (2008a), the Prime Minister José Sócrates reaffirmed the commitment that the current administration wants Portuguese schools to be &quot;at the frontline of technological change&quot;. In addition, they reported that the Prime Minister would like to see citizens who join the labour market 15 years from now to be prepared to use new technologies. The Prime Minister contended that by equipping the schools with state-of-the-art computing technology and Internet connectivity, the government of Portugal hopes to hasten the transition to economic models that benefit their citizens (Intel, 2008a).

[[Image:LocationPortugalInEurope.png|thumb|300px|right|Courtesy of Richie]]

Another educational priority in the country is to prepare future Portuguese generations to learn English. The Portugal News Online (2008a) reported that in the 2008-2009 academic year, the Ministry of Education introduced the teaching of English as of the first grade in all primary schools in the country.

The World Bank (2005) recommended countries to ensure access to relevant and quality education for those strata of society that have been excluded because of poverty, ethnicity, gender, and other related factors. Evidence of the relationship between education and economic growth points to the importance of a balanced expansion of access to quality education. According to The World Bank (2002), the poor quality of teacher training programs has detrimental effects on the quality of learning in primary and secondary education.

Portugal’s commitment is to advance quickly toward a knowledge-based economy. The World Bank (2007) contended that a knowledge-based economy is one in which knowledge assets are deliberately accorded more importance than capital and labor assets, and where the quantity and sophistication of the knowledge pervading economic and societal activities reaches very high levels. It is an economy in which knowledge is acquired, created, disseminated, and applied to enhance economic development. ENTERWeb noted that technological developments in the 20th century transformed the majority of wealth-creating world from physically-based to knowledge-based. They contended that technology and knowledge are now the key factors of production.

Steffen (2006) contended that new thinking, trade, and collaboration yield economic growth and innovation. Moreover, he recognized that people need better tools, models, and ideas for changing the world. In effect, the more people that know about these tools, models and ideas, the better their own ideas will get, and the more ideas will become available. According to The World Bank Institute (2007), well-educated and skilled people are essential for creating, sharing, and using knowledge effectively. Utne (2006) claimed that sharing the power of knowledge among vastly greater numbers of people is not only more essential than ever, but also more possible than ever.

According to Publico (2009c), the Prime Minister, announced that the Government would investment 400 million euros (563,274,942 USD) in the area of the Education in 2008, for the installation of Internet in all the classrooms.

=== Educational needs in Portugal ===

Matthews, Klaver, Lannert, Conluain, and Ventura (2009) contended that mainland Portugal is a country of demographic contrasts. The density and number of the population is much higher in the northern of the Tagus river, which includes the North and Central Regions and Lisbon, than in the south – Alentejo and the Algarve. They reported that Portugal has a tradition of isolated primary schools with isolated teachers. In the school year of 2005/2006 there were 7,400 schools with first cycle education and approximately 416,500 pupils. From these schools, 1,570 of them had fewer than 10 pupils, 1300 had between 10 and 20. In addition, there were big differences in provision between the rural and urban areas. Rural areas were dominated by small schools with poor facilities and urban areas had overcrowded schools with double shift education. This network was very inefficient, the retention rate in the second grade was very high, around 15%, and the mobility and fluctuation of quality of teachers, particularly in the rural areas, resulted in poor and frequently disrupted educational provision.

It had been decided to rationalize the primary education system and to close down small schools having less than 10 pupils in 1984, but the essential political will was not definitive enough to make more than gentle progress in implementing this policy. By 2005/06, research had confirmed that pupils in smaller schools were making slower progress than their peers in larger schools. The decision to close smaller first cycle schools was made two years ago after ‘several feasibility studies’, which by 2005/06 indicated a direct relationship between the size of school and student success. The reasons for the relative ineffectiveness of smaller schools are not hard to find. The social conditions in Portugal have contributed to two related phenomena, low population densities due to the declining birth rate and the depopulation of rural areas, for example, in Alentejo. This has led to a sharp drop in attendance in rural schools over the last decade. In the last few years, therefore, first cycle schools have seen their student numbers fall, which has led to closures.

On the other hand, schools were unattractive to many teachers, with the result that teachers did not stay long, were hard to replace and had to work in professional isolation.
The decline in teaching standards is reported to have been accompanied by a decline in  the physical condition of school buildings. Students were taught in mixed age groups, often experiencing similar work year after year. Moreover, since they failed to make the expected progress, retention rates were high. Thus many children left the first cycle underprepared for the ensuing stage of their education.

To increase the effectiveness and the quality of first cycle schools, the government determined that small schools showing higher rates of retention than the national average must be shut down during 2005/06 and ‘fostering’ schools must be identified to receive the pupils from the schools which were discontinued. This was part of an urgent reorganization and redeployment program.

=== The Classmate PC ===
[[Image:Intel Classmate PC.jpg|thumb|220px|right|Courtesy of Megapixie]]
Intel (2009a) contended that their vision is to connect people to a world of opportunity by driving adoption and designing the right kinds of technology in education. This company has invested in comprehensive ethnographic and human factors research in real classrooms to design purpose-built solutions for education. In addition, their vision is to design technology for classrooms and &quot;micro-mobility&quot; which increases potential for computer use at desks, in small groups, sitting on a floor, sitting at a bench, or standing, typed and written, alone and shared, seamlessly moving between all of these conditions.

While driving costs down is a goal for Intel, they also focus on adding innovation throughout the product development and evolution process so that students, teachers, administrators, and parents can integrate technology into their lives. Their first designs, the Intel-powered classmate PCs, are rugged, affordable, child-friendly netbooks. Furthermore, Intel's Learning Series Alliance is brought to life by local technology companies that customize the products and services for their market. Intel collaborates with vendors worldwide to ensure the right infrastructure, external accessories, and software for school settings, optimized for Intel Learning Series products.

=== The Magellan Initiative ===
[[Image:Magellan 1810 engraving.jpg|thumb|180px|left|Courtesy of Flad]]
According to Nagel (2008), the Magellan Initiative is similar in some ways to the One Laptop Per Child (OLPC) initiative in that its aim is to deliver low-cost, mobile systems to school children around the world. Intel (2008) contended that the Magellan project is one of the most comprehensive educational technology programs in the world. It is a global and pioneering initiative from the government of Portugal to provide 500,000 laptops to all primary school children from their first to their fourth year of schooling. That means 500,000 children between the ages of six and ten, in basic education, will have access to their first laptop through Portugal's Ministry of Public Works, Transportation and Communications (MOPTC).

In addition, they informed that the Magellan Initiative complements Portugal’s e-Escola project, which provides educational notebooks and Internet access to teachers and students for the secondary level of school education. Just like the voyage of Ferdinand Magellan, the Magellan laptop will bring people of the world together by expanding the concept of e-inclusion to citizens of other countries who have had little access to information or technology. The Portugal News Online (2008) reported that Portugal's Socialist government plans to invest some 400 million euros in the next few years to equip the country's primary, middle and high schools with broadband and IT technology.

According to e.escolinha (2009a), the initiative results from a set of partnerships between the Portuguese Government, Intel, the principal operators of telecommunications – Optimus, TMN, Vodafone, Zon –, Microsoft, the Caixa Mágica (Magic Box) and the autarchy followers. The Portugal News Online (2008b) reported that the Education Minister, Maria de Lurdes Rodrigues, informed the Lusa News Agency that the programme was financed by telecommunications companies through a fund that was established when 3G licences were attributed. Taylor (2008a) echoed that these machines are expected to be delivered over a period of three years. There are 3 scales for the acquisition of a Magellan laptop. For students who qualify in the first scale, that is those who are poor, the laptop is free of charge. In addition, the computer is also sold to others staring at 20 Euros (28 USD) in the second scale and 50 Euros (70 USD) for the third scale.

In addition, Taylor (2008b) reported that through a protocol signed by the government and Intel, a largely Portuguese consortium will be established to develop and manufacture laptops in Portugal. The Portuguese PC maker called &quot;JP Sá Couto&quot; set up a plant in the Freixieiro zone of the town of Matosinhos. He also stated that this factory is expected to produce 4 million cheap computers for both the domestic and international markets, starting in early 2009. This pioneering project will make this company the first one in the European Union to manufacture its own computers.

e.escolinha (2009b) contended that the distribution of the Magallan computer for the present school year has practically concluded. There are currently 404,600 pupils in basic education enrolled in the program. The deadline for enrolling for the next academic year ended on June 26. Currently 370,000 Magellan computers have bee delivered to students from public and private schools. There are still 3,000 laptops in transit, to be deployed to students who have already payed for them. In addition, e.escolinha reported that there have been 31,600 enrolled students in the program to whom the Magellan laptop has not yet been issued mainly because of incorrect registration data (basically the telephone number of the contact person in charge or receiving them) or for absence of payment. Parents and people in charge of students who have not received the laptops because of data issues are encouraged to contact a call center at 707 102 526 to receive further instructions. In addition, the date for payment of the registration fee or correction of data is July 15. The Regional Education Office has ensured that the laptops will be delivered until the end of July to all the students. Finally, e.escolinha informed that there have been around 50,000 students of the first cycle that have not been enrolled in the program. Most of them are students in fourth grade whose parents have opted to enroll them the following school year when they will receive laptops in their basic education cycle.

In addition, according to e.escolinha (2009c), the Magellan Initiative is being supported by a Web site (http://www.dgidc.min-edu.pt/eescolinha/) that contains resources, examples and support materials for the teachers in the first cycle. This site provides teachers with Information and Communication Technogy (ICT) solutions for their classes, specially for those who use the Magellan laptop. Teachers are encouraged to select materials and use whatever they consider is relevant and appropriate for them and their schools. In addition, the Ministry of Education carries out workshops which may last for two days for the ICT Coordinators in charge of schools in the first cycle. These training sessions focused on managing the Magellan laptop in class, and using the Internet safely without-parental control. The workshops were organized by the Ministry of Education and the partner-businesses like Intel, Microsoft and Caixa Mágica.

=== Characteristics of the Magellan laptop ===

According to TMN (2009), the Magelllan laptop features Intel processors, an 8.9&quot; (1024x600) screen, a 30 GB hard drive, 1 GB of RAM, webcam and Wi-Fi. In relation to the software, the laptop has both Windows XP + Office and Linux + Open Office. Taylor (2008a) reported that the Magellan is a second generation Classmate PC, based on the Celeron 900 unit. He added that the laptop comes completely full of privacy protection tools as well as a “pay-as-you-go” internet access and a rather original games module that is unlocked if the student has done his homework. The Magellan comes with the necessary software so the children can do their school work and develop projects. The Magellan allows teachers and students to be connected in a network and share knowledge, during school hours and beyond. It avoids excessive waste of paper and ensures the children are always updated. The Magellan was designed to encourage youngsters to develop a thirst for discovery.

According to Intel (2009b), the full-functional classmate PCs are designed for young students; the systems are compact, simple to use, water and shock resistant. Education-oriented software for classmate PCs is currently available in Portuguese and other languages.

Publico (2009c) reported that the cost of prodution of the first Portuguese portable computer will be around 80 million Euros (112,545,138 USD) and each of the 500,000 portable computers will have a cost of production of 180 Euros (253 USD).

Nagel (2008) reported that Microsoft had launched its Magellan Learning Suite, a package of software solutions and services designed to support the Magellan laptop. He added that the suite would initially support Portuguese initiatives aimed at infusing technology into the Portuguese education system and delivering technology and training to disadvantaged youth in the country. In addition, he stated that Microsoft's involvement with Magellan includes the development of a Magellan-specific desktop and providing productivity and educational software for use on the systems, including Office 2007, Microsoft Student Learning Essentials, Microsoft Math(s) and Microsoft Encarta Online. Get Real Weekly (2008) added that the agreements signed represent an investment from Microsoft in the Magellan project by way of the Microsoft Unlimited Potential programme.

=== Advantages of the Magellan Initiative ===

According to Publico (2009b), the Canadian specialist in technology Don Tapscott pointed Portugal as an example to follow in education, praising the investment in individual computers in the classrooms. In the opinion of Tapscott, Portugal is to become a world-wide leader to rethink the education for the XXI century.

Nagel (2008) reported that Microsoft will be investing in student, parent and teacher training, as well as providing education resources through the Microsoft Digital Literacy Curriculum and Security Curriculum and providing collaborative services via Microsoft's Live@Edu. According to Microsoft Presspass (2008), through Microsoft Live@Edu, the following collaborative services will be made available for students, parents and teachers: Windows Live Mail, Windows Live Spaces, Windows Live SkyDrive, Windows Live Messenger, Windows Live Mesh and Microsoft Office Live Workspace. Furthermore, with this service suite, all Magellan users will be able to communicate with each other in a security-enhanced and collaborative environment. He also reported that the government of Venezuela ordered 1 million of the devices from Portugal.

According to Taylor (2008a), the Mistress of Education, Maria de Lurdes Rodrigues, claimed that the current PC-to-Student ratio is 5:1, and plans are on course to reduce that to 2:1 putting it ahead of the rest of Europe. He also reported that the cunning plan to boost computer literacy and school achievement levels has no specific agenda except raising the bar on education. However, he also believes there is a secondary target in mind, which the Portuguese government is working on: providing cheaper internet access at home.
 
e.escolinha (2009) contended that the Magalhães can be used by the whole family. It will be available gratuitously or at reduced prices, in accordance with the economical conditions of the families. In addition, the families in less advantageous economical conditions will receive support from companies that provide Internet access. The service is not compulsory, but it is important to guarantee that they all have access to the Internet at home.

Microsoft Presspass (2008) reported that training and technical support through the National Teacher Training Program is aimed at fostering a richer and more productive usage of Magellan, in and outside the classroom. At the training plan level, special focus shall be given to parents in what concerns a more secure usage of technology, to empower them to give support and be able to answer their children’s queries.

According to Magellan (2009), Portugal intends to become a technology advanced country where training and learning represent important development pillars. Intel will serve as the government's technology advisor, providing support and advice in managing, promoting and implementing the Magellan Initiative, as it did with Portugal's existing e-Escola subsidy program for older students. They are also planning to create a “Competence Centre” in Portugal to expand the use of mobile PCs and Internet access and use that knowledge to replicate pilot projects in other countries. In addition, Intel reported that they would be providing advice on needed infrastructure and training, as well as designing the student laptops that will form the bases of the program.

Finally, Intel asserted that the umbrella plan is to increase the use of computers and the Internet to provide Portuguese citizens with the latest technology and support them to participate in a knowledge-based economy. The Magellan initiative will help to stimulate the Portuguese economy in the area of new technologies, an area which is crucial to the future of Portugal, by exporting Magellan computers and access to information for everyone.

=== Barriers to the Magellan Initiative ===

The Magellan Initiative is devised to follow the guidelines of two major companies like Intel and Microsoft. This causes great dependancy in terms of the applications and classroom solutions that are provided to the teachers and students.

Publico (2009a) reported that there are still many problems to solve in terms of reducing the dropout rates in schools. The newspaper stated that Ana Bettencourt,  presidente do Conselho Nacional de Educação (CNE), informed that many children abandon school due to school failure or simply because they do not learn.

According to Publico (2009c), the Portuguese Society of Oftalmologia (SPO) alerter that the use of the Magellan computer can increase myopia cases amongst the children due to the size of the portable device and to the very small letters. Other concerns are related to the possible theft of the Magellan laptops in various locations. The newspaper also reported some serious errors of Portuguese spelling in some applications. For this reason, the government requested the company to make corrections before deploying the laptops.

Another major problem is the delay in the deployment of the Magellan laptops to the schools. According to Publico (2009c), from the 354,000 enrolled students to receive the Magellan through the e-escolinhas program, only 200,000 have the portable computer so far. The Confederation of the Associations of Parents have reported the delays and allegue that the process is run badly. The fact that only certain students in some classrooms have received them, may force them to keep them at home to ensure that all students work under the same conditions. Many of the problems are originated due to the incorrect information filled by the parents or failure to complete the whole application with important information.

=== Conclusions ===

Portugal has set an example to the whole world. Technology is a means to providing greater opportunities for learning and communication. In the hands of the small portuguese children, the Classmate PC will allow them to become technologically savvy and gain better preparation for the future decades. The shift to a knowledged-based economy has been graciously adopted by the socialist government of Portugal. The changes in educational outcomes will take years to develop. There needs to pertinent preparation of local teachers and local educational technology specialists that can provide just in time assistance in every school in the country. The Magellan Initiative is receiving support from major technology corporations who have an interest in the development of the initiative. My recommendation is to form a high level committee in the government that supervises local deployment and implementation of the program. They should be in charge of assessing every situation and find adequate mechanisms to solve problems. This team should be represented by policymakers, educators, and representatives of the communities such as parents.

There are still a few things that need to be corrected basically in the process of registration for the laptops. It seems to be a bit difficult for parents to fill out the form. Sample forms could be sent to the schools so that the people responsible for receiving the computers (the contact person) can train parents in filling the form with the required information.

Teachers must always be taken into account and given the opportunities to test and get familiarized with this new technology. In terms of assessment, teachers must learn to evaluate not just the product of students' work but also the process that they had to go through to achieve their work. This requires a shift and accommodation of school assessments with support from the Ministry of Education. Workshops for teachers should focus on how to evaluate the new work that students will begin to do. I also want to believe that teachers have seen and embrace the true potential of these laptops. They need to be the first ones to believe in the project and work hard to change the gears of education so that they move at the ideal pace.

The success of the Magellan Initiative is also in the hands of the telecommunications companies. They have the responsibility to ensure Internet access in all the homes of the children who use the Magellan laptop. There may be complications at the beginning, but I want to believe in their commitment to invest in building a robust and reliable communications network.

Finally, I hope this initiative does not fall in the game of being categorized as one more &quot;big deal&quot; from the major technology companies and local private interests. Let's all hope that it truly serves it's purpose which is to bring people together and provide them with tools to become beter citizens.

=== References ===

ENTERWeb. (2005). Knowledge economy. Retrieved May 6, 2009, from http://www.enterweb.org/know.htm.

e.escolinha. (2009a). Introduction. Retrieved June 24, 2009, from http://www.eescolinha.gov.pt/portal/server.pt/community/e-escolinha/200/apresentacao.

e.escolinha. (2009b). Iniciativa. Retrieved Jul 01, 2009, from http://www.eescolinha.gov.pt/portal/server.pt/community/e-escolinha/200/home.

e.escolinha. (2009c). Professores. Retrieved Jul 01, 2009, from http://www.eescolinha.gov.pt/portal/server.pt/community/e-escolinha/professores.

Get Real Weekly (2008). Magalhães partners with Microsoft. Retrieved Jul 01, 2009 from http://www.getrealweekly.com/Images/Edition%2089/flash.html#/2/.

Intel (2008a). Intel Collaborates with Government of Portugal on a comprehensive new education initiative. Retrieved June 15, 2009, from http://www.intel.com/pressroom/archive/releases/20080730corp.htm?iid=pr1_releasepri_20080730r.

Intel (2008b). Intel-powered classmate PC. Retrieved June 21, 2009, from http://www.youtube.com/watch?v=IdBuvfVb3Y0.

Intel. (2009a). Vision. Retrieved June 21, 2009, from http://www.classmatepc.com/vision/.

Intel. (2009b). What's an Intel-powered convertible classmate PC?. Retrieved June 30, 2009, from http://www.classmatepc.com/where-to-buy/convertible/design-and-features/.

Magellan. (2009). Magellan, an Intel-powered classmate PC, in Portugal. Retrieved June 21, 2009, from http://www.youtube.com/watch?v=DFybCHNmDTw.

Matthews, P., Klaver, E., Lannert, J., Conluain, G. &amp; Ventura, A. (2009). Policy measures implemented in the first cycle of compulsory education in Portugal. Retrieved June 22, 2009, from http://www.oecd.org/dataoecd/63/26/42065538.pdf.

Microsoft PressPass. (2008). Portuguese government and Microsoft partner on affordable computing agreement for schoolchildren. Retrieved June 30, 2009.

Nagel, D. (2008). Microsoft launches learning suite for Magellan Initiative. Retrieved June 30, 2009.

Publico. (2009a). Conselho Nacional reconhece que abandono escolar ainda é um problema. Retrieved June 30, 2009, from http://ultimahora.publico.clix.pt/noticia.aspx?id=1389535&amp;idCanal=58.

Publico. (2009b). Especialista considera Portugal &quot;líder mundial a repensar a educação&quot;. Retrieved June 30, 2009, from http://ultimahora.publico.clix.pt/noticia.aspx?id=1388568&amp;idCanal=58.

Publico. (2009c). Pesquisa. Retrieved June 30, 2009, from http://www.publico.clix.pt/search.aspx?q=Classmate%20PC.

Taylor, P. (2008a). Portugal offers one laptop per half a child. Retrieved June 11, 2009, from http://www.theinquirer.net/inquirer/news/1017302/laptop-per-half-child.

Taylor, P. (2008b). Portuguese Classmate PC to circumnavigate globe . Retrieved June 30, 2009, from http://www.theinquirer.net/inquirer/news/1023771/portuguese-classmate-pc.

The Portugal News Online. (2008a). Gov't commits 400m Euros to equip schools with IT. Retrieved Jul 01, 2009 from http://www.the-news.net/cgi-bin/article.pl?id=979-23.

The Portugal News Online. (2008b). PM, ministers begin delivery of 500,000 ‘classmate’ computers to primary school. Retrieved Jul 01, 2009 from http://www.the-news.net/.

The World Bank. (2002). Constructing knowledge societies: New challenges for tertiary education. Washington, DC: Author.

The World Bank. (2005). Expanding opportunities and building competencies for young people: A new agenda for secondary education. Retrieved April 25, 2009, from http://web.worldbank.org/WBSITE/EXTERNAL/TOPICS/EXTEDUCATION/0,,contentMDK:20521267~menuPK:738179~pagePK:148956~piPK:216618~theSitePK:282386~isCURL:Y~isCURL:Y~isCURL:Y~isCURL:Y,00.html.

The World Bank. (2007). Building Knowledge Economies: Advanced Strategies for Development. Washington, DC: The World Bank.

The World Bank Institute. (2007). Building Knowledge Economies: Advanced Strategies for Development. Washington, DC: Author.

TMN. (2009). escolinha. Retrieved June 24, 2009, from http://www.tmn.pt/portal/site/tmn/menuitem.0143d3546741f79ae8f48210751056a0/?vgnextoid=0584222fbfa8c110VgnVCM1000005401650aRCRD.

Steffen, A. (2006). Worldchanging: A user’s guide for the 21st century. NY: Abrams.

Utne, L. (2006). Education and literacy. In A. Steffen (Ed.). Worldchanging: A user’s guide for the 21st century. NY: Abrams.</text>
      <sha1>8belygg0we0l2iz2vvnpz2ddoet6vdl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Israel</title>
    <ns>0</ns>
    <id>201573</id>
    <redirect title="Israeli History" />
    <revision>
      <id>1553954</id>
      <timestamp>2009-07-01T00:44:01Z</timestamp>
      <contributor>
        <username>Shii</username>
        <id>114956</id>
      </contributor>
      <comment>Some pages seem to link here</comment>
      <text xml:space="preserve">#REDIRECT [[Israeli History]]</text>
      <sha1>o6q4clciiw12q8djuc7omxqa7hnblps</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sg</title>
    <ns>14</ns>
    <id>201574</id>
    <revision>
      <id>1553971</id>
      <timestamp>2009-07-01T01:07:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sg}}</text>
      <sha1>ocmdis9zd5u56l0ze751wh9bwndcl8o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sah</title>
    <ns>14</ns>
    <id>201575</id>
    <revision>
      <id>1553972</id>
      <timestamp>2009-07-01T01:08:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sah}}</text>
      <sha1>8bp65njfehp4kvesmlr61zbhwky6x3k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sc</title>
    <ns>14</ns>
    <id>201576</id>
    <revision>
      <id>1553973</id>
      <timestamp>2009-07-01T01:09:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">{{user language category|sc}}</text>
      <sha1>g12epc1u9sc2uzbdppn9mrjmn949yi0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User scn</title>
    <ns>14</ns>
    <id>201577</id>
    <revision>
      <id>1553974</id>
      <timestamp>2009-07-01T01:09:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|scn}}</text>
      <sha1>ssmz36jfbf7geelkvye2ml41yhma3sa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sco</title>
    <ns>14</ns>
    <id>201578</id>
    <revision>
      <id>1553975</id>
      <timestamp>2009-07-01T01:09:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sco}}</text>
      <sha1>ih7aigl51yhtm4n2xf1qpyv0rxv0zat</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Israeli History/Peace and Likud Rule</title>
    <ns>0</ns>
    <id>201579</id>
    <revision>
      <id>1555078</id>
      <parentid>1554165</parentid>
      <timestamp>2009-07-01T22:40:46Z</timestamp>
      <contributor>
        <username>Shii</username>
        <id>114956</id>
      </contributor>
      <text xml:space="preserve">Jimmy Carter goes here.
[[File:Yamit evacuation 1.jpg|thumb|right]]

[[w:Yamit|Yamit]]


{{BookCat}}</text>
      <sha1>rw9k4fl1d13708hv52jhpk5x8wrocc1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User se</title>
    <ns>14</ns>
    <id>201580</id>
    <revision>
      <id>1553977</id>
      <timestamp>2009-07-01T01:10:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|se}}</text>
      <sha1>3tacwsumlit8dt7wod58x1nxakdepqn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User ses</title>
    <ns>14</ns>
    <id>201581</id>
    <revision>
      <id>1553978</id>
      <timestamp>2009-07-01T01:11:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|ses}}</text>
      <sha1>g55ln0qm18lv84sufq56dc7x6knynny</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sh</title>
    <ns>14</ns>
    <id>201582</id>
    <revision>
      <id>1842974</id>
      <parentid>1553979</parentid>
      <timestamp>2010-06-15T10:59:43Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>robot Adding: [[tr:Kategori:Kullanıcı sh]]</comment>
      <text xml:space="preserve">{{user language category|sh}}

[[tr:Kategori:Kullanıcı sh]]</text>
      <sha1>mihsmdsj5ax3lhbms8rkm2b5wb8ehq9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sk</title>
    <ns>14</ns>
    <id>201583</id>
    <revision>
      <id>1842975</id>
      <parentid>1553980</parentid>
      <timestamp>2010-06-15T10:59:53Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>robot Adding: [[tr:Kategori:Kullanıcı sk]]</comment>
      <text xml:space="preserve">{{user language category|sk}}

[[tr:Kategori:Kullanıcı sk]]</text>
      <sha1>75ejzwcl217zh2kjcamzs5geu45ojf0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Dry Rub Grilled Ribeye</title>
    <ns>102</ns>
    <id>201584</id>
    <revision>
      <id>1716644</id>
      <parentid>1553982</parentid>
      <timestamp>2010-02-08T21:50:05Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Beef recipes]]

== Ingredients ==
* 4 thick cut ribeye steaks
* [[Cookbook:Steak Rub|Steak Rub]], as needed
* Dijon mustard, as needed
* A heat-resistant towel soaked in oil and tied with twine
* Worcestershire sauce in a spray bottle

== Procedure ==
#Spread a thin layer of mustard on both sides of each steak. Shake on Rub liberally and gently massage into meat. Set aside.
#Quickly wipe the towel on the grate of a preheated charcoal grill. Add steaks to the hottest part and cook 1 1/2 minutes, then twist 90° and cook for another 1 1/2 minutes. Flip and repeat 1 more time. If flare-ups appear close to meat, spray with Worcestershire sauce. If not, leave alone.
#Move to a cooler part of the grill and cook, turning often until 10 degrees under your desired doneness.
#Remove and let rest for 10 minutes. Serve.</text>
      <sha1>k55fq6hxawt7hj991uioyzbseg2sgxn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sl</title>
    <ns>14</ns>
    <id>201585</id>
    <revision>
      <id>1553983</id>
      <timestamp>2009-07-01T01:14:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sl}}</text>
      <sha1>ka1staixp39nuetqy6m5ahb4mypj24d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sli</title>
    <ns>14</ns>
    <id>201586</id>
    <revision>
      <id>1553985</id>
      <timestamp>2009-07-01T01:14:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sli}}</text>
      <sha1>6egvid6scd6iasetcn6mefarggvvtbn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sma</title>
    <ns>14</ns>
    <id>201587</id>
    <revision>
      <id>1553987</id>
      <timestamp>2009-07-01T01:14:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sma}}</text>
      <sha1>el5rqomy7y6xybjv7w3qr6wg0xd0ki4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sq</title>
    <ns>14</ns>
    <id>201588</id>
    <revision>
      <id>1553988</id>
      <timestamp>2009-07-01T01:15:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sq}}</text>
      <sha1>6pk6w1pz7iyn22odd5p7a43v27fjrcm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sux</title>
    <ns>14</ns>
    <id>201589</id>
    <revision>
      <id>1998784</id>
      <parentid>1553992</parentid>
      <timestamp>2010-12-13T04:46:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>{{pp-semi-indef}}</comment>
      <text xml:space="preserve">{{user language category|sux}}{{pp-semi-indef}}</text>
      <sha1>rx24w5s4vj8p8oh8an5u17nr3fj9kgx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sw</title>
    <ns>14</ns>
    <id>201590</id>
    <revision>
      <id>1553995</id>
      <timestamp>2009-07-01T01:19:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sw}}</text>
      <sha1>ijcils2a27aztupin0eyuz8kfgvzksr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User swg</title>
    <ns>14</ns>
    <id>201591</id>
    <revision>
      <id>1553996</id>
      <timestamp>2009-07-01T01:19:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|swg}}</text>
      <sha1>3f6fswobdn0od4a4y8a291fp8mxses5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User sxu</title>
    <ns>14</ns>
    <id>201592</id>
    <revision>
      <id>1553997</id>
      <timestamp>2009-07-01T01:19:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|sxu}}</text>
      <sha1>ptsn80mgye8fe7ph9gjuxleag4ce87l</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User te</title>
    <ns>14</ns>
    <id>201593</id>
    <revision>
      <id>1553998</id>
      <timestamp>2009-07-01T01:20:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|te}}</text>
      <sha1>45y8hqbnnzu89xwp72i4dhdpoq251eu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User tet</title>
    <ns>14</ns>
    <id>201594</id>
    <revision>
      <id>1553999</id>
      <timestamp>2009-07-01T01:20:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|tet}}</text>
      <sha1>3fw5d6tyrru9kfbxp2b6owxg3d3fyjp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Online OsiriX Documentation/Using OsiriX as a PACS workstation</title>
    <ns>1</ns>
    <id>201595</id>
    <revision>
      <id>1554002</id>
      <timestamp>2009-07-01T01:22:58Z</timestamp>
      <contributor>
        <ip>96.243.153.76</ip>
      </contributor>
      <comment>Added qualifying statement.  The origional author makes a sweeping statement without explaning it.</comment>
      <text xml:space="preserve">But can other DICOM clients like GE Advantage Sim query your OsiriX application?  If not then perhaps you can't use OsiriX as a PACS afterall.  OsiriX clients seem to be able to query eachother, does anyone know if other clients can do so as well?

Why does OsiriX advertise that you should get the free PACS system and that it is only a client?</text>
      <sha1>mw013v52ris096vwyecyuzf8vn5vs1o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User tt</title>
    <ns>14</ns>
    <id>201596</id>
    <revision>
      <id>1554005</id>
      <timestamp>2009-07-01T01:23:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|tt}}</text>
      <sha1>2n9aw34whuzw6b324w9y33knv56b678</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User uz</title>
    <ns>14</ns>
    <id>201597</id>
    <revision>
      <id>1554009</id>
      <timestamp>2009-07-01T01:25:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|uz}}</text>
      <sha1>k95s3iq4pawtrt05ia7zrvej0x0x8lz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vec</title>
    <ns>14</ns>
    <id>201598</id>
    <revision>
      <id>1554010</id>
      <timestamp>2009-07-01T01:25:49Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|vec}}</text>
      <sha1>0ocljxstxi8e269n8sb31tm50dh0j5n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vi</title>
    <ns>14</ns>
    <id>201599</id>
    <revision>
      <id>2008912</id>
      <parentid>1554011</parentid>
      <timestamp>2010-12-27T12:44:11Z</timestamp>
      <contributor>
        <username>Chaojoker</username>
        <id>216884</id>
      </contributor>
      <minor />
      <comment>+hy</comment>
      <text xml:space="preserve">{{user language category|vi}}

[[hy:Կատեգորիա:User vi]]</text>
      <sha1>k24l40w32cs7tph00y2elqlkgol5t39</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vls</title>
    <ns>14</ns>
    <id>201600</id>
    <revision>
      <id>1554012</id>
      <timestamp>2009-07-01T01:26:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|vls}}</text>
      <sha1>3t10k8uimcdfmz4jkt23nv67kbg9mrc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User vo</title>
    <ns>14</ns>
    <id>201601</id>
    <revision>
      <id>1554013</id>
      <timestamp>2009-07-01T01:26:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|vo}}</text>
      <sha1>judzjg2j4etp21n0shbythipg24uwwu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User yo</title>
    <ns>14</ns>
    <id>201602</id>
    <revision>
      <id>1554015</id>
      <timestamp>2009-07-01T01:27:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|yo}}</text>
      <sha1>081j5i3b1cbb2nvplgv3cbmfgi5yve8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User yue</title>
    <ns>14</ns>
    <id>201603</id>
    <revision>
      <id>1554016</id>
      <timestamp>2009-07-01T01:27:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{user language category|yue}}</text>
      <sha1>g2q9jw0nk1j86lu2yctjnoo7tw3mvpf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in the United Kingdom</title>
    <ns>14</ns>
    <id>201604</id>
    <revision>
      <id>2014087</id>
      <parentid>1558443</parentid>
      <timestamp>2011-01-07T22:36:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">{{userbox category|United Kingdom}}
[[Category:Users in Europe|United Kingdom]]</text>
      <sha1>50ksb2tgnl2stoh33kt5r2456uuf26g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in Europe</title>
    <ns>14</ns>
    <id>201605</id>
    <revision>
      <id>1554038</id>
      <timestamp>2009-07-01T01:50:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>user category</comment>
      <text xml:space="preserve">[[Category:Users by location|Europe]]</text>
      <sha1>5hnn5nqpkh487vuzsf2qzlur757eoea</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by location</title>
    <ns>14</ns>
    <id>201606</id>
    <revision>
      <id>2309179</id>
      <parentid>1554039</parentid>
      <timestamp>2012-04-19T06:44:18Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <text xml:space="preserve">[[Category:Users| Location]]</text>
      <sha1>mnwg9zf7c8slne1qyan08ij72pkqmf0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Dark chocolate</title>
    <ns>10</ns>
    <id>201607</id>
    <redirect title="User:Antome/templates/dark chocolate" />
    <revision>
      <id>1554051</id>
      <timestamp>2009-07-01T01:56:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Dark chocolate]] to [[User:Antome/templates/dark chocolate]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Antome/templates/dark chocolate]]</text>
      <sha1>7bnb47485sfl08x2she8zrp0sz8m2rb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Love cake</title>
    <ns>10</ns>
    <id>201608</id>
    <redirect title="User:Antome/templates/love cake" />
    <revision>
      <id>1554053</id>
      <timestamp>2009-07-01T01:56:57Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Love cake]] to [[User:Antome/templates/love cake]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Antome/templates/love cake]]</text>
      <sha1>fukf1vzkt4if8qro71govxni6d2hl3w</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Pie</title>
    <ns>10</ns>
    <id>201609</id>
    <redirect title="User:Antome/templates/pie" />
    <revision>
      <id>1554055</id>
      <timestamp>2009-07-01T01:57:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Pie]] to [[User:Antome/templates/pie]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Antome/templates/pie]]</text>
      <sha1>mdrt6ull2e4a67t0x7bi33bzhy5f7qw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Userbar</title>
    <ns>10</ns>
    <id>201610</id>
    <redirect title="User:Antome/templates/userbar" />
    <revision>
      <id>1554059</id>
      <timestamp>2009-07-01T01:58:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:Userbar]] to [[User:Antome/templates/userbar]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Antome/templates/userbar]]</text>
      <sha1>osxikmho53dl3y3sh5czdbgmjiy2j5e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User copyleft</title>
    <ns>10</ns>
    <id>201611</id>
    <redirect title="User:Antome/templates/copyleft" />
    <revision>
      <id>1554064</id>
      <timestamp>2009-07-01T01:59:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User copyleft]] to [[User:Antome/templates/copyleft]]: Moving into user space.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Antome/templates/copyleft]]</text>
      <sha1>ovm76jpbneai9k73qrfkdwn0vo6qraj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in New Zealand</title>
    <ns>14</ns>
    <id>201612</id>
    <revision>
      <id>2014088</id>
      <parentid>1558444</parentid>
      <timestamp>2011-01-07T22:36:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">{{userbox category|New Zealand}}
[[Category:Users in Oceania|New Zealand]]</text>
      <sha1>7v5f8mk11ifun5q17cp9mugibp0vk23</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in Oceania</title>
    <ns>14</ns>
    <id>201613</id>
    <revision>
      <id>1554069</id>
      <timestamp>2009-07-01T02:00:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>user category</comment>
      <text xml:space="preserve">[[Category:Users by location|Oceania]]</text>
      <sha1>i8ag0dwctgf3ltxlu2554w7taysjhqb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in the United States</title>
    <ns>14</ns>
    <id>201621</id>
    <revision>
      <id>1554116</id>
      <timestamp>2009-07-01T02:16:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>user category</comment>
      <text xml:space="preserve">[[Category:Users in North America|United States]]</text>
      <sha1>5556cptmo9onqyrxixakw9s88r2az90</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in North America</title>
    <ns>14</ns>
    <id>201622</id>
    <revision>
      <id>1554117</id>
      <timestamp>2009-07-01T02:16:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User category</comment>
      <text xml:space="preserve">[[Category:Users by location|North America]]</text>
      <sha1>pb4m0p5u7cfjbff485u9z9achojh66p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by status</title>
    <ns>14</ns>
    <id>201624</id>
    <revision>
      <id>2309183</id>
      <parentid>1554136</parentid>
      <timestamp>2012-04-19T06:44:30Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <text xml:space="preserve">[[Category:Users| Status]]</text>
      <sha1>9kdsv8lmjr6ln4413vxexabz9rdauqh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users who are bots</title>
    <ns>14</ns>
    <id>201625</id>
    <revision>
      <id>2501997</id>
      <parentid>2287877</parentid>
      <timestamp>2013-03-15T09:49:40Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>r2.7.2) (Robot: Adding [[ms:Kategori:Bot Wikibooks]]</comment>
      <text xml:space="preserve">[[Category:Users by status|Bots]]

[[de:Kategorie:Wikibooks:Bots]]
[[fr:Catégorie:Bots Wikilivres]]
[[hy:Կատեգորիա:Վիքիգրքերի բոտեր]]
[[is:Flokkur:Wikibækur:Vélmenni]]
[[ms:Kategori:Bot Wikibooks]]
[[ru:Категория:Викиучебник:Боты]]</text>
      <sha1>dt50f4a0jwbyn4obg45snqivtqz0r0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Rinick/Problem1</title>
    <ns>2</ns>
    <id>201626</id>
    <revision>
      <id>1554140</id>
      <timestamp>2009-07-01T02:32:58Z</timestamp>
      <contributor>
        <username>Rinick</username>
        <id>138732</id>
      </contributor>
      <comment>Created page with 'Place 4 points in 2 dimensional space and connect them with 6 line segments.&lt;br /&gt; It's possible that some of these line segments have the same length, but there will be at least...'</comment>
      <text xml:space="preserve">Place 4 points in 2 dimensional space and connect them with 6 line segments.&lt;br /&gt;
It's possible that some of these line segments have the same length, but there will be at least 2 different lengths.&lt;br /&gt;
And we can get 6 different shapes with this feature, as shown in the following image:&lt;br /&gt;&lt;br /&gt;
[[File:ZHOU_D2_P4_L2.svg]]&lt;br /&gt;&lt;br /&gt;
Let the lengths in each shape be L&lt;sub&gt;1&lt;/sub&gt;, L&lt;sub&gt;2&lt;/sub&gt; ( L&lt;sub&gt;1&lt;/sub&gt; &lt; L&lt;sub&gt;2&lt;/sub&gt; ) and find the sum of L&lt;sub&gt;2&lt;/sub&gt; / L&lt;sub&gt;1&lt;/sub&gt;, the answer is:&lt;br /&gt;&lt;br /&gt;
&lt;math&gt;\sum\frac{L_2}{L_1}=\sqrt{2}+\sqrt{3}+\sqrt{3}+\frac{\sqrt{5}+1}{2}+\sqrt{2+\sqrt{3}}+\sqrt{2+\sqrt{3}}\approx10.360052&lt;/math&gt;
&lt;br /&gt;&lt;br /&gt;
'''What is the answer for 5 points in 3 dimensional space?'''
&lt;br /&gt;</text>
      <sha1>e174f0c1czqzkizp4r1z9lb9ljtpkey</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users who have bots</title>
    <ns>14</ns>
    <id>201627</id>
    <revision>
      <id>1554148</id>
      <timestamp>2009-07-01T02:39:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User category</comment>
      <text xml:space="preserve">[[Category:Users by status|Bots]]</text>
      <sha1>n00ymice61glb6tv9srx67nhi62rrpc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by operating system</title>
    <ns>14</ns>
    <id>201628</id>
    <revision>
      <id>2309180</id>
      <parentid>1554153</parentid>
      <timestamp>2012-04-19T06:44:21Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <text xml:space="preserve">[[Category:Users| Operating System]]</text>
      <sha1>8fytdbpk8q6rswat1c5rrcigoelcgpv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Programmers</title>
    <ns>14</ns>
    <id>201629</id>
    <revision>
      <id>1554162</id>
      <timestamp>2009-07-01T02:46:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>user category</comment>
      <text xml:space="preserve">[[Category:Users by skill|Programmers]]</text>
      <sha1>rc7zdaaz6mwmys3pnqdx1laraudn8vw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by skill</title>
    <ns>14</ns>
    <id>201630</id>
    <revision>
      <id>2309181</id>
      <parentid>1554163</parentid>
      <timestamp>2012-04-19T06:44:23Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <text xml:space="preserve">[[Category:Users| Skill]]</text>
      <sha1>btlydptwu1m6pck9o7edlvqcuh471ww</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:User py</title>
    <ns>14</ns>
    <id>201633</id>
    <revision>
      <id>1554168</id>
      <timestamp>2009-07-01T02:50:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+template</comment>
      <text xml:space="preserve">{{usersprogram|py}}</text>
      <sha1>3ugz0cbrfb6hs68l24oyvdn7t1bydvh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Programming language/py</title>
    <ns>10</ns>
    <id>201634</id>
    <revision>
      <id>1554174</id>
      <timestamp>2009-07-01T02:53:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Subpage for Python</comment>
      <text xml:space="preserve">{{#switch:{{{1}}}
 |name = Python
 |text = This user is {{#switch:{{{2}}}
   |1=a beginning
   |2=an intermediate
   |3=an advanced
   |4=an expert}} programmer in '''[[:Category:User py|Python]]'''.
}}&lt;noinclude&gt;[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>ore0af9sketaxnzfq4fc6ywrft1j1vy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Copyright user templates</title>
    <ns>14</ns>
    <id>201635</id>
    <revision>
      <id>2312339</id>
      <parentid>1554181</parentid>
      <timestamp>2012-04-25T05:04:32Z</timestamp>
      <contributor>
        <username>InverseHypercube</username>
        <id>434331</id>
      </contributor>
      <text xml:space="preserve">[[Category:Wikibooks-related user templates]]
[[Category:Copyright templates]]</text>
      <sha1>96ua6ngt27f5bkrqy661i1aqr7vd4gt</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Views</title>
    <ns>4</ns>
    <id>201636</id>
    <revision>
      <id>1872912</id>
      <parentid>1664528</parentid>
      <timestamp>2010-07-02T22:09:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+1</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User agf}}
{{usbk|User bold}}
{{usbk|User infallible}}
{{usbk|User mandatory sign-in}}
{{usbk|User newcomer}}
{{usbk|User npov}}
{{usbk|User please be nice}}
{{usbk|User print version}}
{{usbk|User redirect}}
{{usbk|User wikibooks non commercial}}
{{usbk|User talk page stalker}}
{{usbkbottom}}

==Copyright==
{{usbktop}}
{{usbk|User cc-by}}
{{usbk|User copyright}}
{{usbk|User copyright pain}}
{{usbk|User pd}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>06pmg10vpga71x1t2agf0r6pe1p1q4t</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by web browser</title>
    <ns>14</ns>
    <id>201637</id>
    <revision>
      <id>1554185</id>
      <timestamp>2009-07-01T03:06:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>user category</comment>
      <text xml:space="preserve">[[Category:Users by software|Web browser]]</text>
      <sha1>eynj6onpcglmghx17lj2hs86bn3f6vj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users by software</title>
    <ns>14</ns>
    <id>201638</id>
    <revision>
      <id>2309182</id>
      <parentid>1554186</parentid>
      <timestamp>2012-04-19T06:44:25Z</timestamp>
      <contributor>
        <username>Koavf</username>
        <id>16549</id>
      </contributor>
      <text xml:space="preserve">[[Category:Users| Software]]</text>
      <sha1>jvh45js3omblv8w7v44k28gcse1s75x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Babelold</title>
    <ns>10</ns>
    <id>201639</id>
    <revision>
      <id>1884186</id>
      <parentid>1554256</parentid>
      <timestamp>2010-07-09T12:56:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>{{documentation}}</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:{{{align|right}}}; align:{{{align|right}}}; clear:{{{align|right}}}; width:238px; margin:1px; border:1px solid #{{#switch:{{{2}}}|0=FFB3B3 |1=C0C8FF |2=77E0E8 |3=99B3FF |4=FFFF99 |5=CC0000 |6EF7A7 }};&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;background:#{{#switch:{{{2}}}|0=FFE0E8 |1=F0F8FF |2=D0F8FF |3=E0E8FF |4=FFFF99 |5=FF5555 |C5FCDC}};&quot;
|-
| style=&quot;width:45px; background:#{{#switch:{{{2}}}|0=FFB3B3 |1=C0C8FF |2=77E0E8 |3=99B3FF |4=FFFF00 |5=FF0000 |6EF7A7 }}; text-align:center;&quot;| '''{{{1|en}}}-{{{2|3}}}'''
| style=&quot;padding:4px; line-height:1.25em; font-size:8pt;&quot; lang=&quot;{{{1|en}}}&quot; xml:lang=&quot;{{{1|en}}}&quot;| {{user language/text|{{{1|en}}}|{{#switch:{{{2|3}}}|5=4|{{{2|3}}}}}}}
|}{{{category|{{#switch:{{NAMESPACE}}|User|User talk={{user language/category|{{{1}}}|{{{2}}}}}}}}}}{{{deprecated_babel|}}}&lt;/div&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>lblv7mw31wrix7w7o6ge5w75djft8cs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User language/text</title>
    <ns>10</ns>
    <id>201640</id>
    <revision>
      <id>1554253</id>
      <parentid>1554252</parentid>
      <timestamp>2009-07-01T03:32:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Protected &quot;[[Template:User language/text]]&quot;: High-impact page: Should not be edited. Used for deprecated templates. ([edit=sysop] (indefinite) [move=sysop] (indefinite))</comment>
      <text xml:space="preserve">{{#switch:{{{2}}}|0|1|2|3|4|N={{#ifexist:template:user language/{{{1}}}|{{user language/{{{1}}}|text|{{{2}}}}}|{{user language/en|text|{{{2}}}|{{{1}}}}}&lt;hr style=&quot;width:50%;&quot;&gt;&lt;small&gt;''[[Template:User language#Translating the template|Translate this template!]]''&lt;/small&gt;}}|'''&amp;lt;invalid fluency level (see [[Template:User language|documentation]]).&amp;gt;'''}}{{user language/category|{{{1}}}{{{2}}}}}&lt;noinclude&gt;
----
This template is used by {{[[template:babelold|babelold]]}} to mimic the old format using the standard text and categories.

[[Category:Template subpages|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>9lqdvrd9ds59bv82glgv5tmfymwchjp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Deprecated babel</title>
    <ns>10</ns>
    <id>201641</id>
    <revision>
      <id>1554332</id>
      <parentid>1554330</parentid>
      <timestamp>2009-07-01T04:20:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Fixed if statement</comment>
      <text xml:space="preserve">{{babelold|{{{2}}}|{{{3}}}|deprecated_babel=&lt;small style=&quot;line-height:1em;&quot;&gt;This template is deprecated; please use &lt;br /&gt;{{[[template:user language|user language]]|{{{2}}}|{{{3}}}}}.&lt;/small&gt;}}&lt;includeonly&gt;{{#ifeq:{{NAMESPACE}}|Template|[[Category:Deprecated templates|{{PAGENAME}}]]|}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Language user templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>p79ffrmrbyy4ad6a6gdpqphcopft7ua</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Israeli history</title>
    <ns>0</ns>
    <id>201642</id>
    <redirect title="Israeli History" />
    <revision>
      <id>1554271</id>
      <timestamp>2009-07-01T03:39:12Z</timestamp>
      <contributor>
        <username>Shii</username>
        <id>114956</id>
      </contributor>
      <comment>Redirected page to [[Israeli History]]</comment>
      <text xml:space="preserve">#REDIRECT [[Israeli History]]</text>
      <sha1>o6q4clciiw12q8djuc7omxqa7hnblps</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User New Hampshire</title>
    <ns>10</ns>
    <id>201643</id>
    <revision>
      <id>2552727</id>
      <parentid>1554293</parentid>
      <timestamp>2013-08-30T13:55:49Z</timestamp>
      <contributor>
        <username>Courcelles</username>
        <id>379867</id>
      </contributor>
      <minor />
      <comment>[[:commons:COM:FR|File renamed]]: [[File:Old Man 4-26-03.jpg]] → [[File:Old Man of the Mountain 4-26-03.jpg]] FR2; this is Old Man of the Mountain, not an actual old man.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #00004d 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px;&quot;
| style=&quot;width: 45px; height: 45px; background: #00317b; text-align: center; font-size: {{{5|{{{id-s|14}}}}}}pt; color: {{{id-fc|black}}};&quot; | '''[[File:Old Man of the Mountain 4-26-03.jpg|45px]]'''
| style=&quot;background: gold; font-size: {{{info-s|8}}}pt; padding: 4pt; line-height: 1.15em; color: {{{info-fc|#00004d}}};&quot; | This user lives in the State of [[w:New Hampshire|'''New Hampshire''']].
|}&lt;/div&gt;&lt;includeonly&gt;{{{category|[[Category:Users in the United States|{{PAGENAME}}]]}}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:United States user templates|New Hampshire]]&lt;/noinclude&gt;</text>
      <sha1>lrai9evfnfzhs6gw2nu7wnq6drh3nz2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User New Hampshire</title>
    <ns>0</ns>
    <id>201644</id>
    <redirect title="Template:User New Hampshire" />
    <revision>
      <id>1554294</id>
      <timestamp>2009-07-01T03:52:15Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <comment>moved [[User New Hampshire]] to [[Template:User New Hampshire]]: it's a template!</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User New Hampshire]]</text>
      <sha1>p126bq6tplmzasbxsftlpt1se15gi61</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/San Diego</title>
    <ns>0</ns>
    <id>201645</id>
    <revision>
      <id>2528079</id>
      <parentid>2528078</parentid>
      <timestamp>2013-05-22T15:18:25Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

==Alway-on Learning: The one-to-one laptop initiative in San Diego==

===Introduction===

The San Diego Unified School District (SDUSD) serves over 130,000 students at 187 different sites. This makes SDUSD the eighth largest district in the United States.  It is an urban district with close to 70% of its students receiving free or reduced school lunch. The student community is very diverse with large percentages of both Hispanic and Asian students. 

For the last few years, SDUSD has been developing plans to give each of their students access to a computer on a regular basis, an arrangement that is known as one-to-one computing. This initiative is an effort to improve student engagement and motivation and also to foster higher level thinking skills. One-to-one initiatives also act to bridge the digital divide that separates lower income students from higher income students, as the latter often have computers and high speed Internet access at home which gives them an obvious advantage over their less wealthy classmates.

At one time, one-to-one laptop initiatives were big news in education circles. One-to-one programs were once considered  controversial because of the high expense of purchasing the equipment. There was also controversy about whether a laptop for each  student will necessarily result in improved learning. Today, the controversy continues about the power of one-to-one programs to revolutionize learning, but educators today barely raise an eyebrow when an announcement is made about a new one-to-one initiative because they are becoming so common. San Diego’s one-to-one initiative stands out for the sheer size of the project and also for the fact that the District plans on allowing the students to take the computers home with them after school for more effective completion of homework assignments. There are other aspects of this ambitious project which make it stand out which will be explained later in this study.


===Always-on Learning===
The San Diego School District’s one-to-one initiative is called the ''Always-on Learning'' Initiative and District IT personnel are proceeding at a slower pace than other LEAs that have already implemented programs in an effort to avoid the problems that emerge with initiatives like this. Like most school districts today, SDUSD must watch their expenses, and an aggressive initiative like this is quite costly. For that reason, IT personnel have chosen as an operating system, Novell’s SUSE Linux &lt;ref name=ESNews””&gt; Devany, L. (June 21, 2007) San Diego rolls out laptops with Linux. E School News Retrieved June 25, 2009 from http://www.eschoolnews.com/news/top-news/index.cfm?i=46376&amp;page=2&lt;/ref&gt;. District personnel knew that Novell’s version of Linux works well with the District’s systems that are already in place. Linux makes sense for the district because it is open sourced and freely distributed. It is therefore much less expensive than Microsoft Windows or Apple’s OX operating systems which was another important consideration of IT personnel &lt;ref name=”interview”&gt;D.Wolfson (personal communication, June 24, 2009)&lt;/ref&gt;. Expenses were also reduced by utilizing Firefox as a Web browser, and a freely distributed, robust suite of productivity tools called Open Office. The District is also making available some Web based Google tools and implementing a learning management system hosted by Moodle.

===Phase one===
The first phase of the Always-on Learning initiative was rolled out in March of 2007. According to a deployment journal kept by District IT personnel and made available online, five secondary teachers, two middle school teachers and one elementary school teacher were each selected to pilot the new program. Computer carts containing Lenovo R65 Thinkpad computers loaded with Novell's SUSE Linux Enterprise Desktop also known as SLED were deployed to each of these teacher’s classrooms. Each cart had one wireless access point for the whole set of computers which proved to be a mistake. This was due to the fact that bandwidth is divided up between all computers that feed in to the access points and performance was seriously compromised as a result. The District now uses two of these access points per cart as their standard as more carts are brought on–line. This kind of issue is exactly why the District has chosen to move slower in their deployment. Correcting an oversight like this would have been a much more complicated and lengthy undertaking if it had to be done to several thousand computers. Another issue which became apparent during the phase one rollout is that students had trouble with the Thinkpad trackpoints which are used for navigation on the computers. Students also had trouble adjusting to the rather sensitive trackpad that the Thinkpads have. To address these issues, IT personnel merely removed the small red ball, and lessened the sensitivity in new deployments &lt;ref name=&quot;SDIT”&gt; SDUSD IT Department(2007) Phase I Pilot Deployment Journal . Retrieved June 20, 2009 from http://moodle.sandi.net/mod/resource/view.php?inpopup=true&amp;id=21813&lt;/ref&gt;.

===Phase two===
Phase two of the program was initiated in February of 2008. Twenty more teachers were selected to each receive a cart containing twenty machines. The district used a newer Lenovo computer, the R61 which were priced at $697 each. Also, a district policy was enacted which states that schools who want to purchase these machines will need to sign up for professional development which is crucial for the success of any rollout like this. Surveys administered by SDUSD technology personnel indicated that slightly over half of teachers that completed the survey felt they were “somewhat prepared” to use technology (computers/internet) in the classroom and almost 60 percent of the respondents indicated a need for training on integrating technology into the curriculum but the Always-on Learning program was soon to make a dramatic change in direction &lt;ref name=”TechPlanWiki”&gt; Cavallaro, M., Lugo, D., Rolon, A., Suranofsky, M. (2008) San Diego City Schools (SDCS) Technology Plan 2005-2010. Retrieved June 30, 2009 from http://en.wikibooks.org/wiki/Technology_Planning/Appendix#San_Diego_City_Schools_.28SDCS.29_Technology_Plan_2005-2010&lt;/ref&gt;.

===A new direction===
After Phase two was enacted, it became apparent that the current model the District was following would not be sustainable in the long run. According to Dan Wolfson, project manager of Always-on Learning, the SDUSD would be unable to meet the goals of their one-to-one initiative due to the prohibitively high cost of the Lenovo R61. For that reason, beginning in fall of 2009, the District will be deploying the Lenovo S10 E to three middle schools &lt;ref name=”interview”&gt;D.Wolfson (personal communication, June 24, 2009)&lt;/ref&gt;. 
These machines are a different kind of computer known in the industry as ''netbooks''. Machines like this are a newer development in the computer industry. They weigh 2 to 3 pounds, have a slightly smaller keyboard and a 9 or 10 inch screen. The machines are somewhat weaker then the multimedia computers that the school was initially planning to deploy through the original one-to-one plan. They do not have the power to run Windows Vista and Apple OS X is not made available for machines in this price range. The operating system most of them use is Windows XP home edition or a generally less familiar version of Linux &lt;ref name=&quot;CNET”&gt; Horowitz, M. (2008) What is a Netbook computer? . Retrieved June 24, 2009 from http://news.cnet.com/what-is-a-netbook-computer/&lt;/ref&gt;

Because netbooks lack the computing power of the other machines deployed in the previous phase of the program, they do not have similar capabilities, especially in the area of multimedia applications. Multimedia capability for all students at all times however is not crucial for the District. Few netbook computers have any serious multimedia capacity, but they are good with the basics that a student would need such as word processing and Web research and this is what makes netbook style computers ideal for San Diego. It is the District’s plan to utilize a mix of computers by having available in the classrooms up to four higher performance, multimedia computers and also carts filled with 25 to 30 multimedia machines which teachers can sign out to use for special projects at school. This blended model will satisfy the need for multimedia machines in the District’s classrooms.

While these machines lack some computing capacity, there are other aspects about them which make them particularly attractive for SDUSD and this is especially true in the area of cost. While no specific per machine price was available from the District, the Lenovo Website, lists similar computers which can be purchased from the manufacturer for a price of $399 &lt;ref name=”Lenovo”&gt; Lenovo (2009) Retrieved June 23, 2009 from http://www.lenovo.com&lt;/ref&gt;. This obviously compares quite favorably to the almost $700 per machine the District was paying for the Lenovo R61. This lower price point allows District IT personnel to meet the goal of deploying an inexpensive machine for each student in the San Diego District. The machines also have a longer life, lasting five to seven years, longer than more expensive multimedia machines. The hard drives of these machines can be easily wiped clean and reset for new students as older students graduate&lt;ref name=”interview”&gt;D.Wolfson (personal communication, June 24, 2009)&lt;/ref&gt;. 

These new machines that the San Diego District is deploying will be running Windows but IT personnel still feel strongly about Linux. They are continuing to explore Linux and it may eventually replace Windows as the operating system on the District’s netbook computers. Open Office, Moodle and several Google tools will available on the new netbooks as they are accessed through the Web which is the same model pursued as part of the previous phase of SDUSD’s one-to-one program. Also some applications will be made available through thin client technology as well &lt;ref name=”interview”&gt;D.Wolfson (personal communication, June 24, 2009)&lt;/ref&gt;. 

===Wireless access at home===
Most one-to-one programs provide a computer for each student to use in school. The SDUSD program goes farther because they allow the students to take the machines home with them when school is done. This is a crucial step because many students from less affluent households have no access to computers or the Internet when school is out leaving them at a disadvantage compared to other students from more affluent families. Poorer students are also unable to complete homework assignments in the same fashion as those who own a computer with Internet access. There were no details available about insurance for the machines, or carrying bags for the netbooks, but information was available about the wireless access that each student will enjoy. Through a strong relationship that the school has cultivated with Lenovo, the manufacturer has committed to adding to the computers a built-in 3G card for wireless so the machines will be about to pickup a wireless signal without a bulky and impractical wireless device that used to have to be attached to the outside of the machine. Through another strong relationship that was developed with another of the school’s suppliers came wireless access throughout the entire 211 square miles that make up the area which is served by the San Diego School District. AT&amp;T, the supplier of this service has configured the wireless access to effectively utilize the school’s firewall and other Internet restrictions providing a save computing environment for the students to work in even if the computers are being used off campus which is truly a valuable aspect of this wireless service.

===Conclusion===
Servicing a large, urban region, the San Diego Unified School District faces many challenges when it comes to the establishment of an effective, safe and cost effective one-to-one computing initiative. This District however has an excellent chance of being successful for two distinct reasons: One is the thoroughness of the planning that was put into the initiative. Other LEA’s who have set up one-to-one programs seemed to have jumped directly into their initiatives with a less than necessary amount of planning put into crucial aspects of the program like sustainability. In some situations, one-to-one programs have been established, but then have run short of needed money to maintain and replace machines as they grow obsolete. The second reason SDUSD has an excellent chance of success is the strong partnerships they have developed with several of their suppliers especially Lenovo and AT&amp;T. Partnerships like this are built in the business world all the time, but it seems that LEAs often miss out on the opportunities that come from building strong relationships with their suppliers. 

The San Diego Unified School District is on its way to creating a truly unique and powerful learning system which after full deployment will include computers which the students can take home for the completion of school assignments. At home or at school, the computers will be able to access the wonders of the Internet through wireless access made safer because it is configured to use existing District firewall systems. This one-to-one program has the potential to change learning through the utilization of technology in the classroom and also to truly bridge the digital divide that currently exists between wealthier students and their poorer classmates.&lt;br&gt;&lt;br&gt;

==References==
{{reflist}}
{{BookCat}}</text>
      <sha1>l5imzfgs2qoduz2fl9jhva46ne34xwy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Java JDBC using SQLite/Working with data</title>
    <ns>0</ns>
    <id>201647</id>
    <revision>
      <id>2611047</id>
      <parentid>2428373</parentid>
      <timestamp>2014-02-22T06:55:33Z</timestamp>
      <contributor>
        <ip>2.36.7.100</ip>
      </contributor>
      <comment>/* Understanding the data */ fixed code indentation</comment>
      <text xml:space="preserve">JDBC provides a number of different ways of approaching data and data object manipulation. Typically these fall into three categories: methods which broker Prepared statements, methods which expect data to be returned from the database (these are methods which will invariably return a ResultSet) and finally methods which act on the database without expecting a return of information, e.g. an instruction to create a table or to delete some data from a table.

===Methods using PreparedStatements===

====When and why to use PreparedStatement methods====

There are strong reasons for using PreparedStatement (PS) methods to interact with the database, and this is particularly the case when the interactions are repetitious since the PS is sent to the database for compilation, which means that on subsequent calls the database can access the call without having to recompile it, resulting in faster execution time.

====How to implement a PreparedStatement====

As with other method calls using Statements, which are associated with a Connection object,a PreparedStatement also is associated with the Connection:

&lt;source lang=&quot;java&quot;&gt;
[.. pseudocode ..]
Connection conn = new Connection(); // whatever it might be
String psString = &quot;UPDATE myTable SET myText = 'First Update'&quot;;
String psStringWithParms = &quot;UPDATE myTable SET myText = ?&quot;;

// prepare &amp; execute the psString 
PreparedStatement ps = conn.prepareStatement(psString);
ps.executeUpdate();

// now we will overwrite this using the parameterised psString
PreparedStatement psParms = conn.prepareStatement(psStringWithParms);
psParms.setString(1,&quot;Revised update&quot;);
psParms.executeUpdate();
&lt;/source&gt;

===Methods using ResultSets===

===JDBC Database Methods which expect no data to be returned===

===Understanding the data===
It is not unusual to find yourself in a situation when working with databases to not know the column names or the types of data which will be returned by a given sql query. Fortunately, the JDBC class provides two very useful interfaces which can be exploited to resolve this: ResultSetMetaData and DatabaseMetaData.

The Java documentation for the resultset interface can be found here: [http://java.sun.com/j2se/1.4.2/docs/api/java/sql/ResultSet.html]. The interface usefully exposes column names, and data types (and much more) in any given resultset instance. 

You can for instance expose your column names with the following example method:

&lt;source lang=&quot;java&quot;&gt;
public static String[] getColumnNameArray(ResultSet rs) {
  String sArr[] = null;
  try {
    ResultSetMetaData rm = rs.getMetaData();
    String sArray[] = new String[rm.getColumnCount()];
    for (int ctr = 1; ctr &lt;= sArray.length; ctr++) {
      String s = rm.getColumnName(ctr);
      sArray[ctr - 1] = s;
    }
    return sArray;
  } catch (Exception e) {
    System.out.println(e);
    return sArr;
  }
}
&lt;/source&gt;

You can do the same thing for the datatypes:

&lt;source lang=&quot;java&quot;&gt;
public static String[] getColumnTypeArray(ResultSet rs) {
  String sArr[] = null;
  try {
    ResultSetMetaData rm = rs.getMetaData();
    String sArray[] = new String[rm.getColumnCount()];
    for (int ctr = 1; ctr &lt;= sArray.length; ctr++) {
      String s = rm.getColumnTypeName(ctr);
      sArray[ctr - 1] = s;
    }
    return sArray;
  } catch (Exception e) {
    System.out.println(e);
    return sArr;
  }
}
&lt;/source&gt;

By using the ResultSetMetaData ''getColumnCount()'' method we can save some unnecessary handing off to a Vector and recasting back to a String[] array because we can size our String[] array appropriately right from the get-go.

It may have occurred to you by now that apart from the ResultSetMetaData method invoked, these two blocks of code are functionally close to identical and that some rationalisation could be done here either with a third method which handles the iteration, or, possibly, uses java.lang.reflect to load the methods dynamically. In a production system you probably would want to steer clear of adding to the work done by the JVM in reflection (Java reflection is inherently expensive) but you could easily code a switch block to do the appropriate trivialisation, passing an additional argument to indicate which method is to be invoked in constructing the String[] array.

Now let's put this together a little by pretending we're creating a class to query a database table called testme, whose column names and types are unknown to us...

&lt;source lang=&quot;java&quot;&gt;
import java.sql.ResultSetMetaData;

public class MyDbTest
{
  public void main(String[] args)
  {
    SqliteDb db = new Sqlite(&quot;C:/DbStore/test.db&quot;);
    String sqltest = &quot;SELECT * FROM testme&quot;;
    Vector&lt;Object&gt; v = new Vector&lt;Object&gt;();

  try
  {
    ResultSet rs = db.executeQry(sqltest);
    String[] columnNames = getColumnNameArray(rs);
    String[] columnTypes = getColumnTypeArray(rs);
    //iterate the rows in the result set...
    while(rs.next())
    {
      // now walk each column in the array...
      for (int i = 1; i &lt; columnNames.length; i++)
      {
        Object o = rs.getObject(columnNames[i]);

        if (columnTypes[i].toUpper().equals(&quot;VARCHAR&quot;))
        {
          sVal = o.toString();
        }
[etcetera ..]

[..]
    }
  }
  catch (Exception e)
  {
[..]
  } 
}
&lt;/source&gt;

For a full list of column types see the [[../Appendix/]].

{{BookCat}}</text>
      <sha1>b8zw6yx13rie29ckwygh0fj0aci5gc5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Micro-organisms</title>
    <ns>0</ns>
    <id>201648</id>
    <redirect title="NCEA Level 1 Science/Ecology" />
    <revision>
      <id>2457271</id>
      <parentid>2184608</parentid>
      <timestamp>2012-12-09T11:57:52Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Ecology]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Ecology]]</text>
      <sha1>bvldhy2m7i0ctcoj9lmy47vnua3dlgj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Java JDBC using SQLite/Example base class</title>
    <ns>0</ns>
    <id>201651</id>
    <revision>
      <id>2603427</id>
      <parentid>2365790</parentid>
      <timestamp>2014-01-23T20:43:45Z</timestamp>
      <contributor>
        <username>Roper Klacks</username>
        <id>974348</id>
      </contributor>
      <minor />
      <comment>Indented code</comment>
      <text xml:space="preserve">This page provides an example of a base class you can use as a skeleton for creating your own, and ideas of ways of extending this class. You should note that your central focus of concern should be on getting your initial context set up correctly, and there are many and diverse ways of skinning this particular cat. This base class is abstract since we will want to extend it to more precisely suit our requirements. There is however nothing particularly esoteric in there to prevent you ''concretizing'' this class by declaring it public and using it out of the box, modifying and supplying your own constructor(s) accordingly. 

You should also note that there are a number of fields and methods in this base class which are declared public which more properly should be declared private, however these have been left public for visibility and since you may wish to experiment with the implications of some of the calls. Additionally, leaving these fields and methods public gives you a broad brush scope to invoke and adjust them by reflection.

===Base Class===
&lt;source lang=&quot;java&quot;&gt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


/** Database connection class &amp; utilities **/

abstract class Db {

    public  String sDriver = &quot;&quot;; 
    public  String sUrl = null;
    public  int iTimeout = 30;
    public  Connection conn = null;
    public  Statement statement = null;


    /* Stub constructor for quick instantiation o/t fly for using some of the ancillary stuff */

    public  Db()
    {}

    /* quick and dirty constructor to test the database passing the DriverManager name and the fully loaded url to handle */
    /* NB this will typically be available if you make this class concrete and not abstract */
    public Db(String sDriverToLoad, String sUrlToLoad) throws Exception
    {
        init(sDriverToLoad, sUrlToLoad);
    }
    
    public void init(String sDriverVar, String sUrlVar) throws Exception
    {
        setDriver(sDriverVar);
        setUrl(sUrlVar);
        setConnection();
        setStatement();
    }

    private void setDriver(String sDriverVar)
    {
        sDriver = sDriverVar;
    }

    private void setUrl(String sUrlVar)
    {
        sUrl = sUrlVar;
    }

    public  void setConnection() throws Exception {
        Class.forName(sDriver);
        conn = DriverManager.getConnection(sUrl);
    }


    public  Connection getConnection() {
        return conn;
    }

    public  void setStatement() throws Exception {
        if (conn == null) {
            setConnection();
        }
        statement = conn.createStatement();
        statement.setQueryTimeout(iTimeout);  // set timeout to 30 sec.
    }

    public  Statement getStatement() {
        return statement;
    }

    public  void executeStmt(String instruction) throws SQLException {
        statement.executeUpdate(instruction);
    }

    // processes an array of instructions e.g. a set of SQL command strings passed from a file
    //NB you should ensure you either handle empty lines in files by either removing them or parsing them out 
    // since they will generate spurious SQLExceptions when they are encountered during the iteration....
    public void executeStmt(String[] instructionSet) throws SQLException {
        for (int i = 0; i &lt; instructionSet.length; i++) {
            executeStmt(instructionSet[i]);
        }
    }

    public ResultSet executeQry(String instruction) throws SQLException {
        return statement.executeQuery(instruction);
    } 

    public void closeConnection() {
        try { conn.close(); } catch (Exception ignore) {}
    }

}

&lt;/source&gt;

*Next page: [[../Extending the base class/]]
*Previous page: [[../Improving/]]

{{BookCat}}</text>
      <sha1>lo8qnyvxm4zgaq85nvcdsynky1gn8pm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Micro-organisms/Life processes of micro-organisms</title>
    <ns>0</ns>
    <id>201654</id>
    <redirect title="NCEA Level 1 Science/Ecology" />
    <revision>
      <id>2457273</id>
      <parentid>2184614</parentid>
      <timestamp>2012-12-09T11:58:12Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Ecology]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Ecology]]</text>
      <sha1>bvldhy2m7i0ctcoj9lmy47vnua3dlgj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Straight Line Motion and Force/Mass</title>
    <ns>0</ns>
    <id>201657</id>
    <redirect title="NCEA Level 1 Science/Physical inquiry and physics concepts" />
    <revision>
      <id>2457288</id>
      <parentid>2180767</parentid>
      <timestamp>2012-12-09T11:59:39Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Physical inquiry and physics concepts]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Physical inquiry and physics concepts]]</text>
      <sha1>jly15c0haztgk09it8fsk4z58vd82ea</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Islam In The World/Al Waleed Bin Talal</title>
    <ns>0</ns>
    <id>201658</id>
    <revision>
      <id>1554441</id>
      <timestamp>2009-07-01T06:41:44Z</timestamp>
      <contributor>
        <username>الحارث بن همام</username>
        <id>236599</id>
      </contributor>
      <comment>about Al Walid</comment>
      <text xml:space="preserve">* The owner of Rotana group. a group that support Arabic singers and dancers. and has a group of music channels.&lt;ref&gt;[[w:Rotana_Records]]&lt;/ref&gt;
* Tries to allow Cinemas in the [[../Saudi Arabia/]]&lt;ref&gt;[http://www.dr-alahmad.com/index.php?option=com_ftawa&amp;task=view&amp;id=30626] Shaikh Yousef Ahmed fatwa in Cenima and Waled bin Talal - Arabic&lt;/ref&gt;

==References==
&lt;references/&gt;

[[category:Islam In The World]]
[[ar:مستخدم:الحارث بن همام/حقوق الله/الوليد بن طلال]]</text>
      <sha1>pwu6jvaxsrfjifzjslv6ijazs2hjaph</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Java JDBC using SQLite/Extending the base class</title>
    <ns>0</ns>
    <id>201659</id>
    <revision>
      <id>2365793</id>
      <parentid>2307070</parentid>
      <timestamp>2012-06-18T19:47:05Z</timestamp>
      <contributor>
        <ip>213.182.11.46</ip>
      </contributor>
      <comment>Added link to next and previous page</comment>
      <text xml:space="preserve">===Extending the Base Class===

Let's now turn to extending and implementing our concrete class. First we'll create a concrete implementation of the base abstract class with no additional functionality:

&lt;source lang=&quot;java&quot;&gt;
public class MyDb extends Db
{}
&lt;/source&gt;

We can now call our database connector in our codebase and invoke it with the driver name and the url using the parameterised constructor.....

&lt;source lang=&quot;java&quot;&gt;
String sUrlString = &quot;jdbc:sqlite:hello.db&quot;;
MyDb mydb = new MyDb(&quot;org.sqlite.JDBC&quot;,sUrlString);
&lt;/source&gt;

Here we have these parameters hard-coded but typically you would have these values stored as values against keys in a properties file and load them from there.

Now let's move on and add some functionality to the MyDb child.

&lt;source lang=&quot;java&quot;&gt;
public class MyDb extends Db
{

public MyDb(String sDriverKey, String sUrlKey)
{

init(sDriverKey, sUrlKey);
if(conn != null)
{
System.out.println(&quot;Connected OK using &quot; + sDriverKey + &quot; to &quot; + sUrlKey);
}
else
{
System.out.println(&quot;Connection failed&quot;);
}
}

}
&lt;/source&gt;

Interesting but not particularly useful. However the parameterised overload should be saying to you that if you can do this in a generic sort of way, there is nothing to stop you from making a per database type subclass; e.g. from Db you could subclass not only SqliteDb, but also OracleDb, MySqlDb etc, etc, and add to these the required database specific functionality. 

&lt;source lang=&quot;java&quot;&gt;
public class SqliteDb extends Db
{
String sDriverForClass = &quot;org.sqlite.JDBC&quot;;

public SqliteDb(String sUrlKey)
{

init(sDriverForClass, sUrlKey);
[..] etcetera
&lt;/source&gt;

The implications of this should be becoming apparent. By carefully structuring your class hierarchies and relationships, it is possible to provide as much or as little appropriate functionality as is necessary.

*Next page: [[../Working with data/]]
*Previous page: [[../Example base class/]]

{{BookCat}}</text>
      <sha1>8nsdig5pidd2yapzn07l6ibszlqsepb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Transfer of genetic information</title>
    <ns>0</ns>
    <id>201660</id>
    <redirect title="NCEA Level 1 Science/Evolution" />
    <revision>
      <id>2457278</id>
      <parentid>2184604</parentid>
      <timestamp>2012-12-09T11:58:46Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Evolution]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Evolution]]</text>
      <sha1>tglzxmnosw0mqwuquywe183re1ju9hh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Transfer of genetic information/The purpose of mitosis and meiosis</title>
    <ns>0</ns>
    <id>201664</id>
    <redirect title="NCEA Level 1 Science/Evolution" />
    <revision>
      <id>2457274</id>
      <parentid>2184605</parentid>
      <timestamp>2012-12-09T11:58:22Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Evolution]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Evolution]]</text>
      <sha1>tglzxmnosw0mqwuquywe183re1ju9hh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Genetics/The purpose of mitosis and meiosis</title>
    <ns>0</ns>
    <id>201666</id>
    <redirect title="NCEA Level 1 Science/Evolution" />
    <revision>
      <id>2457277</id>
      <parentid>2184606</parentid>
      <timestamp>2012-12-09T11:58:41Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Evolution]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Evolution]]</text>
      <sha1>tglzxmnosw0mqwuquywe183re1ju9hh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:122.58.138.249</title>
    <ns>3</ns>
    <id>201668</id>
    <revision>
      <id>1554540</id>
      <timestamp>2009-07-01T10:05:56Z</timestamp>
      <contributor>
        <username>DZadventiste</username>
        <id>185773</id>
      </contributor>
      <minor />
      <comment>warning user</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/122.58.138.249|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. }}</text>
      <sha1>iq8pvp9jvjxdho2ndoz7sq84a38a6xf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:DrrBom</title>
    <ns>3</ns>
    <id>201672</id>
    <revision>
      <id>1554563</id>
      <timestamp>2009-07-01T10:40:34Z</timestamp>
      <contributor>
        <username>DZadventiste</username>
        <id>185773</id>
      </contributor>
      <minor />
      <comment>Welcome to Wikibooks!!!!!!</comment>
      <text xml:space="preserve">&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, DrrBom!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;

&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;

{{mbox|type=serious|image=BeboldBooks.svg|size=80px|msg=
If you think something needs to be changed, don't hesitate! Wikibooks is a [[w:wiki|wiki]] which means that everybody (including you) can edit any page by clicking '''edit this page'''. You don't even have to [[Special:userlogin|log in]]! Newcomers are always [[Wikibooks:Welcome, newcomers|welcome]] to Wikibooks, so don't be afraid of making mistakes. If you don't know how to edit pages, check out [[Help:Editing]] or experiment in the [[Wikibooks:Sandbox|Sandbox]]. 
}}

[[User:DZadventiste|DZadventiste]] ([[User talk:DZadventiste|talk]]) 10:40, 1 July 2009 (UTC)</text>
      <sha1>9ny2k15nj3sksjl9a07iriemf0annkh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Islam In The World/Organizations</title>
    <ns>0</ns>
    <id>201673</id>
    <revision>
      <id>1633638</id>
      <parentid>1554573</parentid>
      <timestamp>2009-09-22T17:34:40Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <text xml:space="preserve">== Non-Governmental Organizations ==
*[[../Human Rights Watch/]]
*[[../Amnesty/]]
*[[../Reporters Without Boarders/]]

== Other International Organizations ==
*[[../United Nations/]]

[[category:Islam In The World]]
[[ar:مستخدم:الحارث بن همام/حقوق الله/منظمات]]</text>
      <sha1>5fgztai3itntgqaf6xovz2ur5y5zoat</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Islam In The World/Organization</title>
    <ns>0</ns>
    <id>201674</id>
    <redirect title="Islam In The World/Organizations" />
    <revision>
      <id>1554587</id>
      <parentid>1554575</parentid>
      <timestamp>2009-07-01T11:02:18Z</timestamp>
      <contributor>
        <username>الحارث بن همام</username>
        <id>236599</id>
      </contributor>
      <comment>Undo revision 1554575 by [[Special:Contributions/الحارث بن همام|الحارث بن همام]] ([[User talk:الحارث بن همام|Talk]])</comment>
      <text xml:space="preserve">#REDIRECT [[Islam In The World/Organizations]]</text>
      <sha1>h5y4mslz5clvldchueg61h4dmlqvajp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Acid and Base Reactions/Visible effects of acids</title>
    <ns>0</ns>
    <id>201675</id>
    <redirect title="NCEA Level 1 Science/Properties and changes of matter" />
    <revision>
      <id>2457297</id>
      <parentid>2184600</parentid>
      <timestamp>2012-12-09T12:00:24Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Properties and changes of matter]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Properties and changes of matter]]</text>
      <sha1>55veeppdza2w5vq9vlozah4gdo55y0g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>NCEA Level 1 Science/Contents/Acid and Base Reactions/Acids and Carbonates</title>
    <ns>0</ns>
    <id>201676</id>
    <redirect title="NCEA Level 1 Science/Properties and changes of matter" />
    <revision>
      <id>2457293</id>
      <parentid>2184601</parentid>
      <timestamp>2012-12-09T12:00:00Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect to [[NCEA Level 1 Science/Properties and changes of matter]]</comment>
      <text xml:space="preserve">#REDIRECT [[NCEA Level 1 Science/Properties and changes of matter]]</text>
      <sha1>55veeppdza2w5vq9vlozah4gdo55y0g</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crabstick</title>
    <ns>102</ns>
    <id>201678</id>
    <revision>
      <id>1708893</id>
      <parentid>1554597</parentid>
      <timestamp>2010-01-30T19:45:47Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{ingredient}}
[[File:Kanikama.jpg|thumb|right|250px|Kanikama, the type of crabstick.]]

'''Crabstick''' or '''immitation crab meat''' is a type of processed seafood made of surimi, or finely pulverized white fish flesh.

==Recipes==

See [[Cookbook:Crabstick recipes|Crabstick recipes]].

[[Category:Seafood]]</text>
      <sha1>kwm8upewobqpp145arsifrxl42l7vvx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crabstick recipes</title>
    <ns>102</ns>
    <id>201679</id>
    <redirect title="Category:Crabstick recipes" />
    <revision>
      <id>1554598</id>
      <timestamp>2009-07-01T11:12:25Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <comment>Redirected page to [[Category:Crabstick recipes]]</comment>
      <text xml:space="preserve">#redirect [[Category:Crabstick recipes]]</text>
      <sha1>89gzi0ggq9ih6p8e7d6vo17vhuvf06f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Crabstick recipes</title>
    <ns>14</ns>
    <id>201680</id>
    <revision>
      <id>1554599</id>
      <timestamp>2009-07-01T11:13:41Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <comment>Created page with '* [[Cookbook:Crabstick]]  [[Category:Recipes by type]]'</comment>
      <text xml:space="preserve">* [[Cookbook:Crabstick]]

[[Category:Recipes by type]]</text>
      <sha1>1mp316pa6knz9ko8b7z2rt1fbevv6wr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Daniel Souza</title>
    <ns>2</ns>
    <id>201681</id>
    <revision>
      <id>1554627</id>
      <timestamp>2009-07-01T12:20:03Z</timestamp>
      <contributor>
        <username>Daniel Souza</username>
        <id>205283</id>
      </contributor>
      <comment>Created page with 'Olá, meu nome é Daniel de Souza Telles, sou um geek militante do software livre, seguidor do manifesto cypherpunk, pirata em horas vagas, leitor de livros científicos e de fic...'</comment>
      <text xml:space="preserve">Olá, meu nome é Daniel de Souza Telles, sou um geek militante do software livre, seguidor do manifesto cypherpunk, pirata em horas vagas, leitor de livros científicos e de ficção cientifico, e um amante do puro lirismo, de vez em quando leio ficção pura e romances, exclua Sidney Sheldon, Veríssimo, e outras merdas que encontramos por aí. Também mostro minha outra face nerd e vejo bastante seriados, filmes e animes, desde que os mesmos se enquadrem nos meus interesses. Tenho várias idéias e projetos de sucesso na cabeça, mas me faltam estímulos para os mesmos, talvez se alguém quiser dar uma mãozinha.
Então prefiro ficar por aí experimentando os jogos do Kong, visitando blogs e atualizando o twitter, e colaborando casualmente para algumas wikis.</text>
      <sha1>p3ufzxza3ebb1g4dpb0qmxmzgvqxove</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Chili Pepper</title>
    <ns>102</ns>
    <id>201684</id>
    <redirect title="Cookbook:Chiles" />
    <revision>
      <id>1554638</id>
      <timestamp>2009-07-01T12:42:55Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <comment>moved [[Cookbook:Chili Pepper]] to [[Cookbook:Chiles]]: If you look at the history of the word youll see that originally, it was chile and chili resulted as a twist of the locals.</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Chiles]]</text>
      <sha1>3j5278gik2ieg3d5jmjpr47dcbgyc45</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Chili Pepper</title>
    <ns>103</ns>
    <id>201685</id>
    <redirect title="Cookbook talk:Chiles" />
    <revision>
      <id>1554640</id>
      <timestamp>2009-07-01T12:42:56Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <comment>moved [[Cookbook talk:Chili Pepper]] to [[Cookbook talk:Chiles]]: If you look at the history of the word youll see that originally, it was chile and chili resulted as a twist of the locals.</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook talk:Chiles]]</text>
      <sha1>idtvfg2ofyxitq1b7x87mh96j778mek</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/Content Articles/1.6.2</title>
    <ns>1</ns>
    <id>201686</id>
    <revision>
      <id>1560331</id>
      <parentid>1555159</parentid>
      <timestamp>2009-07-05T02:31:21Z</timestamp>
      <contributor>
        <username>Sston008</username>
        <id>226894</id>
      </contributor>
      <comment>/* Reader Response */</comment>
      <text xml:space="preserve">
== Reader Response ==

I would overall very much agree with this article.  The term highly qualified is just a guideline the state uses to justify the education that is being presented.  I would agree with the article that a highly qualified teacher is one that knows the content, has good classroom managment, works hard, etc.  On the other hand I would say and agree with parts of the page to say that a teacher that is determined highly qualified is not always highly qualified or may not be the greatest judge of who would make a great teacher or not.  Such as those students who have a difficult time to pass the standardized tests.  Some of those people may be some of the greatest teachers out there yet they are held back because of one single test.  Overall, I do agree with this article and think it was a great topic to discuss. [[User:Sston008|Sston008]] ([[User talk:Sston008|talk]]) 02:31, 5 July 2009 (UTC)

I really found this article to be an interesting read that raised a lot of questions. The question, &quot;What makes a highly qualified teacher&quot; is a controversial and much debated topic today. I tried to see where I fit on the idea and realized it is not black and white. I do not think that all of the standards and qualifications required by the NCLB are all completely bad. I agree that teachers must show competency in subject areas and in most cases tests are needed to prove this. I also believe that a &quot;highly qualified&quot; teacher is one that is encouraging, caring, a good listener and a good role model. How is this tested? I am not sure what the answer is; however, I see both sides of the argument. I do not think that students' test scores or a teacher's expertise in one subject reflects on their qualification as a teacher. In previous articles I read, and firmly believe, that good teachers simply have the passion and innate ability to teach. Perhaps some day soon we will find a good mix of tests and standards that will measure not only knowledge of subject matter but will also take into consideration the passion and desire to teach that so many &quot;highly qualified&quot; teachers demonstrate. [[User:Khedl002|Khedl002]] ([[User talk:Khedl002|talk]]) 12:57, 1 July 2009 (UTC)khedl002</text>
      <sha1>fehshbac982txjwjp6zbojrtlbk69v5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Crayfish</title>
    <ns>102</ns>
    <id>201688</id>
    <redirect title="Cookbook:Crawfish" />
    <revision>
      <id>1554677</id>
      <timestamp>2009-07-01T13:40:44Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <comment>moved [[Cookbook:Crayfish]] to [[Cookbook:Crawfish]] over redirect: crawfish way predates crayfish.</comment>
      <text xml:space="preserve">#REDIRECT [[Cookbook:Crawfish]]</text>
      <sha1>sd0p39nvy9stu2kpdgkihtfrvvld5py</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Arthurbuliva</title>
    <ns>2</ns>
    <id>201690</id>
    <revision>
      <id>1554683</id>
      <timestamp>2009-07-01T13:45:24Z</timestamp>
      <contributor>
        <username>Arthurbuliva</username>
        <id>249681</id>
      </contributor>
      <comment>Created page with '{{Babel|sw|en-4}}  {{softredirect|sw:User:Arthurbuliva}}  The page I prefer may be found [http://sw.wikipedia.org/wiki/Mtumiaji:Arthurbuliva here].'</comment>
      <text xml:space="preserve">{{Babel|sw|en-4}}

{{softredirect|sw:User:Arthurbuliva}}

The page I prefer may be found [http://sw.wikipedia.org/wiki/Mtumiaji:Arthurbuliva here].</text>
      <sha1>7c930wam1xdi697jvqfusqli5p4295h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/Content Articles/1.1.1</title>
    <ns>1</ns>
    <id>201691</id>
    <revision>
      <id>1567053</id>
      <parentid>1566103</parentid>
      <timestamp>2009-07-13T04:13:41Z</timestamp>
      <contributor>
        <username>BitterAsianMan</username>
        <id>226947</id>
      </contributor>
      <text xml:space="preserve">I enjoyed reading this article because I gained a new perspective for the basics of the teaching profession.  I currently teach preschool and love every minute of it.  Yes there is the freedom of having your summers off but it also gives one the opportunity to relax, or make extra money by working summer school or running a summer camp.  I  feel teaching is one of the most important professions and sadly the passion in teaching is based soley on the love for it not the money you are making while teaching.  I feel there are many challenges to teaching but seeing your students succeed is one of the beast rewards.  [[User:Lwill031|Lwill031]] ([[User talk:Lwill031|talk]]) 13:40, 11 July 2009 (UTC) 


I thought this article was a very good overview of teaching as a profession.  One of the perks of being a school teacher wasn't mentioned in this article.  Every time I talk with someone about being a teacher, one of their first comments usually go something like this: &quot;I bet you enjoy having your summers off!&quot;.   Being married to another teacher, our summers are worth their weight in gold.  There are quite a few February days when we long for the break that summers bring.  Teaching is hard work.  We both are mentally and physically drained at the end of the year, so summertime is our time to recharge our batteries.   I do agree that teachers need to be passionate.  The teachers that students and their peers deem as &quot;good teachers&quot; are passionate about their work.  Their passion is contagious and it rubs off on the students.   [[User:Jtmitchem|Jtmitchem]] ([[User talk:Jtmitchem|talk]]) 16:12, 1 July 2009 (UTC)

I felt that this article adequately covered the basics and introduction to teaching as a profession. I am genuinely interested when I learn and am exposed to different and new material on the profession of teaching. I am excited to learn more, and hopefully be more prepared for teaching as a result. I feel this article mentioned great points of what it is like to teach as a profession, along with the benefits as well. I feel that the article addressed many of the issues that people look and consider when considering teaching as a profession. I feel that passion and love are key components to teaching, but also agree with the article's mention of the challenges to teaching. [[User:Rburt005|Rburt005]] ([[User talk:Rburt005|talk]]) 23:26, 1 July 2009 (UTC)

I thought this article was a good overview of the many different reasons people enter the field of teaching.  I enjoyed reading about the different people who have become teachers and how they have brought their passion for their subject into the classroom to inspire students.  I especially liked how the one teacher uses his love of entertaining also in the classroom.  The article also mentions the challenges of teaching and how some teachers overcome it.  Teaching is not for everyone and it shouldn't be a &quot;fall back position&quot;. [[User:Sciaston|Sciaston]] ([[User talk:Sciaston|talk]]) 18:43, 2 July 2009 (UTC)

I throughly enjoyed this article. I know personally why I want to teach, but some of my reasons were different than others. I agree that teaching is a challenge and I strive on any type of challenge. For the most part teachers do enjoy their work even though we are a little underpaid (thankfully our salaries are on the rise). Love and passion for the subject we teach keep us going as well. I love every aspect of Biology; some parts more so than others but I love it. I love being able to share my knowledge with young minds. Maybe one day one of them will unlock the cure for cancer and I can say that I taught that person high school biology. There is no greater reward. [[User:Hcomb003|Hcomb003]] ([[User talk:Hcomb003|talk]]) 15:56, 3 July 2009 (UTC)

I really enjoyed reading this article. I really liked the parts where the author mentioned different people in the teaching profession by giving examples, quotations, etc. It really gave the article a personal touch. I agree that teachers do not choose this profession for the money, but instead for the love of children and a passion for making a difference. I really liked the fact that this article did not just &quot;sugar-coat&quot; the reasons for being a teacher. I thought that this article gave a very accurate description of why people choose to become teachers as well as why it it is not a career for everyone because it takes a special person to be a successful teacher.[[User:Alucy001|Alucy001]] ([[User talk:Alucy001|talk]]) 03:09, 5 July 2009 (UTC)

I enjoyed this chapter because it gave all the fundamental reasons of why I went into teaching. I also think that there were many reasons in this chapter why there are some teachers who may not be viewed as a professional. I hope that many teachers that are just starting out realize the many things that make up a good teacher and the it is not just conveyance of the knowledge but also caring for the students that you will interact with. Jnewh001 (talk) 17:25, 5 July 2009 (UTC)

I enjoyed this article because it mentioned all my go-to reasons for being a teacher.  Sure the pay sucks, the qualifications are pretty high, the hours blow, and the workload is absurd, but it’s something that is fulfilling on a much deeper level. I liked the fact that the article provided links to teacher salaries and that it touched on the importance of creativity in the classroom. Personally, I think the key to learning is to make it accessible and nothing is more accessible than entertainment. If you can make a lesson not appear as such it seems as if half the battle is over.  Also, I thought the direct quotation from a  faculty member was an elegant touch that really helped illustrate the points represented within the article in a concise, authoritative way. [[User:BitterAsianMan|BitterAsianMan]] ([[User talk:BitterAsianMan|talk]]) 04:13, 13 July 2009 (UTC)</text>
      <sha1>jfc24sp98ixtg3r5u9nzaua8dgb8qwy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.3.2</title>
    <ns>1</ns>
    <id>201692</id>
    <revision>
      <id>1604294</id>
      <parentid>1568762</parentid>
      <timestamp>2009-08-09T20:36:27Z</timestamp>
      <contributor>
        <username>Msmhobbs04</username>
        <id>227944</id>
      </contributor>
      <text xml:space="preserve">The article had a lot of interesting points. I believe the purpose of education is to give students the knowledge and know-how to make it in today's society.  If a student doesn't know how to add or subtract then they will not make it in society.  As for the No Child Left Behind Act (NCLB) I think it still needs more work done.  The NCLB Act is how I got started with my education classes, because as a paraprofessional (teacher's assistant) I had to be qualified doing my job.[[User:Msmhobbs04|Msmhobbs04]] ([[User talk:Msmhobbs04|talk]]) 20:36, 9 August 2009 (UTC) 

The county that I work for has the following mission statement.  &quot;The Albemarle County Public Schools' core purpose is to establish a community of learners and learning, through rigor, relevance, and relationships, one student at a time.&quot;  I believe they have their finger on the purpose of education.  Education is like dominoes.  If you line a row of dominoes and tip the first one over it will cause a chain reaction causing all of the other dominoes to fall.  When you teach students to ask questions, they will continue asking questions for the rest of their life.  Once you teach people how to learn, they will long for information.  Having a community of lifelong learners, will always promote education and the need for information on all levels. [[User:Jtmitchem|Jtmitchem]] ([[User talk:Jtmitchem|talk]]) 16:26, 1 July 2009 (UTC)

I felt that the article addressed many of the issues people often consider when questioning what is the purpose of education. I do believe that there are many beneficial rewards to education, and to understand those rewards you have to look at both the history of education and the future of education as mentioned in the article. I feel that NCLB is another important aspect of education because it insures that no student is denied access to education, which I feel is a critical purpose of education. [[User:Rburt005|Rburt005]] ([[User talk:Rburt005|talk]]) 23:39, 1 July 2009 (UTC) 



== Reader Response ==
 
I thought overall the article had a lot of great information.  I do believe it is important to remember that education has to do with learning basic skills in subjects but also real life skills that will help individuals survive the real world.  I do believe schools prepare students academically but in many cases they are missing our on other important skills such as understand a creedit card.  Tehre are arguments where these skills do not belong in a classroom and others say this would fit nicely in a math lesson.  The education system is very controversial.  I think it was great to include the no child left behind act.  I think it plays a major part in our schools these days and hopefully having teachers and administration hold themselves accountable for quality of teaching. [[User:Sston008|Sston008]] ([[User talk:Sston008|talk]]) 02:36, 5 July 2009 (UTC)


I really enjoyed reading this article because I agree with so much of the information. I truly believe that the purpose of education is not only to pass along knowledge in the basic subject areas, but also to address issues that will arise in daily life. Teaching things like honesty, respect, generosity, confidence, etc. are just as important to me as teaching math and science. Being knowledgeable in the subject areas can take you far in life, but having the various other skills and traits that I listed above can take you even further. I really liked how this article discussed different view points about the purpose of education. It is humerous to read the response from a child on what they think the purpose is. I dont think that it is until later in life that children come to appreciate all that they learn in school; however, I think it is of utmost importance to teach these life lessons early on! [[User:Khedl002|Khedl002]] ([[User talk:Khedl002|talk]]) 00:12, 2 July 2009 (UTC)khedl002</text>
      <sha1>7ei514e6gmzwvlz30dsckwm11ec7nhl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Punjabi/Navigation panel</title>
    <ns>0</ns>
    <id>201693</id>
    <revision>
      <id>2643867</id>
      <parentid>2643866</parentid>
      <timestamp>2014-04-30T12:23:59Z</timestamp>
      <contributor>
        <username>Jaspalkaler</username>
        <id>52103</id>
      </contributor>
      <minor />
      <comment>Undid revision 2643866 by [[Special:Contributions/Jaspalkaler|Jaspalkaler]] ([[User talk:Jaspalkaler|discuss]])</comment>
      <text xml:space="preserve">&lt;noinclude&gt;This template is used by the [[Punjabi]] wikibook to produce a consistent navigation.
&lt;/noinclude&gt;{| width=&quot;100%&quot; style=&quot;text-align: center; border: 1px solid #50A6C2; background-color: #F0F8FF;&quot;
| {{#ifeq:{{{1}}}|Punjabi|
&lt;big&gt;&lt;big&gt;[[Punjabi|&lt;u&gt;Punjabi&lt;/u&gt;]]&lt;/big&gt; • [[Punjabi/Gurmukhi|Gurmukhi]] • [[Punjabi/Muharni|Muharni]] • [[Punjabi/Vocabulary|Vocabulary]] • [[Punjabi/Conversation|Conversation]] &lt;/big&gt;
[[Punjabi/Introduction|About Punjabi]] {{stage short|00%|Aug 10, 2008}}
[[Punjabi/About|About this wikibook]] {{stage short|00%|Nov 15, 2008}}
[[Punjabi/HTUTB|How to use this wikibook]] {{stage short|00%|Nov 15, 2008}}
[[Punjabi/Author|Contributors]] {{stage short|00%|Aug 10, 2008}}
|{{#ifeq:{{{1}}}|Gurmukhi|
&lt;big&gt;[[Punjabi|Punjabi]] • &lt;big&gt;[[Punjabi/Gurmukhi|&lt;u&gt;Gurmukhi&lt;/u&gt;]]&lt;/big&gt; • [[Punjabi/Muharni|Muharni]] • [[Punjabi/Vocabulary|Vocabulary]] • [[Punjabi/Conversation|Conversation]] &lt;/big&gt;
[[Punjabi/Gurmukhi/First-row|Row 1]] •
[[Punjabi/Gurmukhi/Vowels|Vowels]] •
[[Punjabi/Gurmukhi/Diacritics|Diacritics]] •
[[Punjabi/Gurmukhi/Velars|Row 2]] •
[[Punjabi/Gurmukhi/Palatals|Row 3]] •
[[Punjabi/Gurmukhi/Retroflexes|Row 4]] •
[[Punjabi/Gurmukhi/Dentals|Row 5]] •
[[Punjabi/Gurmukhi/Labials|Row 6]] •
[[Punjabi/Gurmukhi/Semi-vowels|Row 7]] •
[[Punjabi/Gurmukhi/Neo-group|Row 8]] •
[[Punjabi/Gurmukhi/Conjuncts|Conjuncts]] •
[[Punjabi/Gurmukhi/Practice|Practice]]
|{{#ifeq:{{{1}}}|Muharni|
 &lt;big&gt;[[Punjabi|Punjabi]] • [[Punjabi/Gurmukhi|Gurmukhi]] • &lt;big&gt;[[Punjabi/Muharni|&lt;u&gt;Muharni&lt;/u&gt;]]&lt;/big&gt; • [[Punjabi/Vocabulary|Vocabulary]] • [[Punjabi/Conversation|Conversation]]&lt;/big&gt; 
[[Punjabi/Muharni/FirstRow|First row]] • 
[[Punjabi/Muharni/Velars|Second row]] • 
[[Punjabi/Muharni/Palatals|Third row]] • 
[[Punjabi/Muharni/Retroflexes|Fourth row]] • 
[[Punjabi/Muharni/Dentals|Fifth row]] • 
[[Punjabi/Muharni/Labials|Sixth row]] • 
[[Punjabi/Muharni/Semi-vowels|Seventh row]] • 
[[Punjabi/Muharni/FullMuharni|Full muharni]]
|{{#ifeq:{{{1}}}|Vocabulary|
&lt;big&gt;[[Punjabi|Punjabi]] • [[Punjabi/Gurmukhi|Gurmukhi]] • [[Punjabi/Muharni|Muharni]] • &lt;big&gt;[[Punjabi/Vocabulary|&lt;u&gt;Vocabulary&lt;/u&gt;]]&lt;/big&gt; • [[Punjabi/Conversation|Conversation]]&lt;/big&gt;
[[Punjabi/Vocabulary/Colors|Colors]] • 
[[Punjabi/Vocabulary/Weekdays|Weekdays]] • 
[[Punjabi/Vocabulary/Months|Months]] • 
[[Punjabi/Vocabulary/Birds|Birds]] • 
[[Punjabi/Vocabulary/Animals|Animals]] • 
[[Punjabi/Vocabulary/Relations|Relations]] • 
[[Punjabi/Vocabulary/Body|Body parts]] •
[[Punjabi/Vocabulary/Flowers|Flowers]] • 
[[Punjabi/Vocabulary/Plant|Plant]] • 
[[Punjabi/Vocabulary/Trees|Trees]] • 
[[Punjabi/Vocabulary/Vegetables|Vegetables]] • 
[[Punjabi/Vocabulary/Fruits|Fruits]] • 
[[Punjabi/Vocabulary/Food|Food]] • 
[[Punjabi/Vocabulary/Transport|Transport]] • 
[[Punjabi/Vocabulary/Sports|Sports]] • 
[[Punjabi/Vocabulary/Health|Health]] • 
[[Punjabi/Vocabulary/Metals|Metals]] • 
[[Punjabi/Vocabulary/Furniture|Furniture]] • 
[[Punjabi/Vocabulary/Numbers|Numbers]] • 
[[Punjabi/Vocabulary/Miscellaneous|Miscellaneous]]
|{{#ifeq:{{{1}}}|Conversation|
&lt;big&gt;[[Punjabi|Punjabi]] • [[Punjabi/Gurmukhi|Gurmukhi]] • [[Punjabi/Muharni|Muharni]] • [[Punjabi/Vocabulary|Vocabulary]] • &lt;big&gt;[[Punjabi/Conversation|&lt;u&gt;Conversation&lt;/u&gt;]]&lt;/big&gt;&lt;/big&gt; 
[[Punjabi/Conversation/Lesson1|Lesson 1]] • 
[[Punjabi/Conversation/Lesson2|Lesson 2]] • 
[[Punjabi/Conversation/Lesson3|Lesson 3]] • 
[[Punjabi/Conversation/Lesson4|Lesson 4]] • 
[[Punjabi/Conversation/Lesson5|Lesson 5]] • 
[[Punjabi/Conversation/Lesson6|Lesson 6]] • 
[[Punjabi/Conversation/Lesson7|Lesson 7]] • 
[[Punjabi/Conversation/Lesson8|Lesson 8]] • 
[[Punjabi/Conversation/Lesson9|Lesson 9]] • 
[[Punjabi/Conversation/Lesson10|Lesson 10]]}} }} }} }} }}
|}&lt;noinclude&gt;[[Category:Punjabi|Navigation panel]]&lt;/noinclude&gt;</text>
      <sha1>ngsys5ql30gssqezmb0sh9qyypmihrm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User MSN Messenger</title>
    <ns>10</ns>
    <id>201694</id>
    <redirect title="Template:User msn messenger" />
    <revision>
      <id>1554836</id>
      <timestamp>2009-07-01T18:16:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User MSN Messenger]] to [[Template:User msn messenger]]: Consistency with most other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User msn messenger]]</text>
      <sha1>9qq4ydxwjubw4o28jruksyxuzoscbuq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User lin</title>
    <ns>10</ns>
    <id>201695</id>
    <redirect title="Template:User linux" />
    <revision>
      <id>1554849</id>
      <timestamp>2009-07-01T18:19:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User lin]] to [[Template:User linux]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User linux]]</text>
      <sha1>5allpagh0la947m1dy7l879h3hdmjtj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.5.1</title>
    <ns>1</ns>
    <id>201696</id>
    <revision>
      <id>1604900</id>
      <parentid>1568764</parentid>
      <timestamp>2009-08-10T18:04:41Z</timestamp>
      <contributor>
        <username>Rcoll029</username>
        <id>227936</id>
      </contributor>
      <comment>/* Reader Responses */</comment>
      <text xml:space="preserve">
== Reader Responses ==

Constructivism...a popular theory that is believed to be the best student-centered approach out there.  I really thought this article was well written and organized.  Piaget and Vygotsky were leaders in the constructivist approach.  Piaget truly believed that students learned by doing.  That students learned by physically seeing, touching, smelling, sensing the world around them.  A Piagetian classroom would be structured much like a Montessori classroom.  There would be a lot of sensori-motor activities and physical manipulatives.  Whereas Montessori believed in the value of quiet, independent work, Piaget believed in smaller groups where students work together to collaboratively solve problems.  Vygotsky, on the other hand, believed that language was the main way we “construct” the world around us.  More important than physical manipulatives was the role language played in our understanding.  Children need to be read to, spoken to, and kept in language rich environments.  Vygotsky believed that developing internal language, or self-talk, was the most fundamental of all capabilities.  It is important to study child theory.  It broadens the scope of understanding as to what students need from classrooms.   [[User:Abitt002|Abitt002]] ([[User talk:Abitt002|talk]]) 19:36, 1 July 2009 (UTC)



Although constructivism is a fairly new philosophy, it is still an important one.  I like that you discussed both Piaget and Lev Vygotsky theories on constructivism.  It is important as a teacher to understand all of the different philosophies as well as the views on each philosophy so that you can figure out which ones to apply in your classroom. [[User:Rcoll029|Rcoll029]] ([[User talk:Rcoll029|talk]]) 18:04, 10 August 2009 (UTC)</text>
      <sha1>nrcjgcacaz8zobkxnbftsk1cdy3x2jk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Peace Movements &amp; Peace Museums/Article 9</title>
    <ns>0</ns>
    <id>201697</id>
    <revision>
      <id>2066107</id>
      <parentid>1561703</parentid>
      <timestamp>2011-03-06T04:37:36Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: Minsiter → Minister using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">== Article 9 National Debate ==


'''&lt;big&gt;Overview:&lt;/big&gt;'''

Article 9 of the Japanese constitution prohibits an act of war by the state. It came into effect May 3, 1947 immediately following WWII.

The official English translation is:

''“Article 9.  Aspiring sincerely to an international peace based on justice and order, the Japanese people forever denounce war as a sovereign right of the nation and the threat or use of force as means of settling international disputes. (2) In order to accomplish the aim of the preceding paragraph, land, sea, and air forces as well as other war potential, will never be maintained. The right of belligerency of the state will not be recognized.”'' (Japanese Constitution)

Prime minister Kijuro Shidehara proposed the article. He wanted to prohibit any military establishment for Japan. He believed any substandard post war military would lose the respect of the people and he feared people would begin to obsess with rearming Japan. 
	
In 1950, the US Military was pulled out of Japan to assist in the Korean War, leaving Japan without armed protection.  The US Military created a 75,000 person group called National Police Reserve (NPR) to maintain order and defend any possible invasion. This eventually turned into Japan Self-Defense Forces (JSDF) which has self defense forces for land, air and sea.

In 2007, Prime Minister Shinzo Abe called for a review of the document to allow the country to take a larger role in global security and revive national pride. However, many oppose this idea and it therefore has become a national debate.

'''&lt;big&gt;Some Arguments for Article 9 Revisions:&lt;/big&gt;'''

Some feel that countries have the right to govern their own militaries with their fullest capabilities. This could give Japan a stronger world presence.

North Korea missile testing in Japanese airspace as well as Chinese and South Korean land conflicts press some to want to build a stronger defense against these kinds of possible regional dangers.

Japanese allies would benefit from their investments in military and support in times of crisis.

Many countries have put their wrongs behind them such as Germany has sent troops to Afghanistan and Kosovo. Some feel Japan should look beyond past war crimes and join world military forces again.

&lt;big&gt;'''Some Arguments Against an Article 9 Revision:'''&lt;/big&gt;

Japan’s enviorment could become dangerous if neighboring countries feel threatened by an aggressive Japanese military.
	
Many feel the handling of Japan’s actions in WWII are still not recognized truthfully such as shrines to war criminals and the current Prime Minister approved textbooks that skip over shameful aspects of the war. So, they feel the restrictions of Article 9 should remain.
	
Many people are comfortable with assisting the US military financially because it allows Japan to keep their pacifist approach, which has grown to become a strong cultural value for the country. They would rather seek influence than force.
	
While Japan is the only country to ever have been attacked by nuclear weapons, it still holds a non-violent and non-forceful approach to conflict. Many feel this sets a great example for the rest of the world to follow. 


&lt;big&gt;'''References:'''&lt;/big&gt;

www.asiasentinel.com

www.en.wikipedia.org

www.idebate.org

http://afe.easia.columbia.edu

www.solon.org

{{BookCat}}</text>
      <sha1>d1z1mbqja1qwhrfnmm0jje2p4he1l2m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Global Issues: Japan/Globalization/Kyocera-Business Model</title>
    <ns>0</ns>
    <id>201698</id>
    <revision>
      <id>2066112</id>
      <parentid>1561707</parentid>
      <timestamp>2011-03-06T04:38:29Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: enviormental → environmental (2), responsiblity → responsibility using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">'''&lt;big&gt; Kyocera: Business Model &amp; Technological Solutions to Global Issues &lt;/big&gt;'''

This chapter is an overview of the oral report that I gave for the Global Issues in Japan Course for Summer 2009.




Kyocera was founded in 1959 by Dr. Kazuo Inamori and 7 of his colleagues. It started as a small suburban factory with no money or creditentials. The founders shared a vision of creating a company dedicated to succcessful manufacturing and sale of innovative and high quality products. Kyocera's original product was a ceramic insulator for television tubes. Kyocera's product list has grown today to include solar power generators, telecommunications equiptment, such as cell phones, copiers, electronic components, cutting tools, and medical and dental implant system components. Fine ceramics are still Kyocera's core competence. Kyocera maintains a broad expertise that allows them to have a hand in the full range of processes, beginning with development, then to production to sales and logistics, all with one product line.  Each product line management team develops new products and markets them by integrating Kyocera technologies to lead in new trends. It pracitces a &quot;Customer First Principle&quot; to create value through complete customer satisfaction in price, quality, service and delivery. Today, Kyocera's employees include over 68,000 and a unique approach to business. Its corporate motto is &quot;Respect the Divine and Love People.&quot; Kyocera's goal is to preserve the spirit, to work fairly and honorably respect the people, our work, our company and our global community. 



Kyocera has a unique philosophy behind its management style, which are based on three pillars: Coexist with our society, coexist with our global community,and coexist with nature. Kyocera encourages employees to do what is right as human being and practice this in day to day application. Management strives to provide opportunities for the material and intellectual growth of all employees and contribute to the advancement of society and humankind through joint efforts.



Kyocera began developing solar energy capabilities and have been continuously since 1975. Its aim is to make it more pracitcal, affordable and available. It has made many achievements in solar power, the generating systems have been installed in 100 homes in Kobe,Japan to inspire community development that is good for the people and for the enviorment. Kyocera, most recently developed solar modules for the Toyota Prius, and powered a New Jersey sewage treatment plant and installed solar modules in the European Court of Justice.



Kyocera does many different things to uphold its philosophies and principles such as:
 
-reducing greenhouse gases emitted through product life cycles by developing clean enery technologies such as solar power

-on-site environmental classes for children because Kyocera believes the children are responsible for the next era

-employee guide called &quot;Eco Life Note&quot; which is an Earth and budget friendly guide for the home

-the company has had a environmental division since 1985

-printers were first to receive Ecomark certification

-hold social responsibility meetings and enviorment report meetings as well as business meetings with employees

-before releasing any chemicals from produciton plants into water ways, the waste is purified to a clean state

-first company to mass produce solar cells

-first company to sell solar power generation systems in residential homes


Kyocera has been a very innovative company and has plans to continue to do so for a long time.


&lt;big&gt;''' References: '''&lt;/big&gt;


http://en.wikipedia.org

http://global.kyocera.com

http://www.kyocerasolar.com

{{BookCat}}</text>
      <sha1>mx23yl2asfpbkves84nor7dttmjgixw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mac OS X Tiger/</title>
    <ns>0</ns>
    <id>201699</id>
    <redirect title="Mac OS X Tiger" />
    <revision>
      <id>1555047</id>
      <parentid>1555017</parentid>
      <timestamp>2009-07-01T21:30:18Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>Redirected page to [[Mac OS X Tiger]]</comment>
      <text xml:space="preserve">#redirect [[Mac OS X Tiger]]</text>
      <sha1>4u3i1oxhm7bhhto6ruvnf9qllqx7bdc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:Mac OS X Tiger/Navigation</title>
    <ns>10</ns>
    <id>201700</id>
    <revision>
      <id>1555019</id>
      <timestamp>2009-07-01T20:50:58Z</timestamp>
      <contributor>
        <username>PAC</username>
        <id>244523</id>
      </contributor>
      <comment>Created page with '&lt;div class=&quot;noprint&quot; style=&quot;background-color: #efe; border: 1px solid #8b8; padding: 0.5em; font-size: small; text-align: left; float: right; clear: right; width: 25%; margin: 0....'</comment>
      <text xml:space="preserve">&lt;div class=&quot;noprint&quot; style=&quot;background-color: #efe; border: 1px solid #8b8; padding: 0.5em; font-size: small; text-align: left; float: right; clear: right; width: 25%; margin: 0.5em&quot;&gt;
[[Image:Rlogo.png|60px|right]]
'''[[Mac OS]]'''&lt;br /&gt;
----
*
----
&lt;small&gt;[http://en.wikibooks.org/w/index.php?title=Template:Mac_OS_X_Tiger/Navigation&amp;action=edit edit this box]&lt;/small&gt;
&lt;/div&gt;&lt;noinclude&gt;[[Category:Exclude in print]]&lt;/noinclude&gt;{{BookCat}}</text>
      <sha1>0w16beicgqf6tme9db5t64ljwj2hgmc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:75.4.228.179</title>
    <ns>3</ns>
    <id>201701</id>
    <revision>
      <id>1555045</id>
      <timestamp>2009-07-01T21:28:36Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>Created page with '{{subst:test|--~~~~}}'</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/75.4.228.179|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. --[[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 21:28, 1 July 2009 (UTC)}}</text>
      <sha1>hx1dksmvstte7eptz2bndaqj48kkpe0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Israeli History/1990s</title>
    <ns>0</ns>
    <id>201702</id>
    <revision>
      <id>1566484</id>
      <parentid>1555085</parentid>
      <timestamp>2009-07-11T22:08:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">* [[w:Israel–Palestine Liberation Organization letters of recognition|Israel–Palestine Liberation Organization letters of recognition]]
* [[w:Oslo Accords|Oslo Accords]]
* [[w:Israel–Jordan peace treaty|Israel–Jordan peace treaty]]
* [[w:2000 Camp David Summit|2000 Camp David Summit]]

{{BookCat}}</text>
      <sha1>sjy1orhcvy1se3m6klp4egkrx22fqg0</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User many languages</title>
    <ns>10</ns>
    <id>201703</id>
    <redirect title="User:Girdi/User many languages" />
    <revision>
      <id>1555106</id>
      <timestamp>2009-07-01T23:38:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User many languages]] to [[User:Girdi/User many languages]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Girdi/User many languages]]</text>
      <sha1>lfn7ayghxm36try4azzdah8wfsg1hdd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Vandalism user templates</title>
    <ns>14</ns>
    <id>201704</id>
    <revision>
      <id>1555123</id>
      <timestamp>2009-07-02T00:23:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category</comment>
      <text xml:space="preserve">[[Category:Wikibooks-related user templates]]</text>
      <sha1>72qdfvnv62kr9ifsij1z534bmlpc9yq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Vandalism</title>
    <ns>4</ns>
    <id>201705</id>
    <revision>
      <id>1559790</id>
      <parentid>1555951</parentid>
      <timestamp>2009-07-04T18:42:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added templates</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User CVU1-en}}
{{usbk|User CVU2-en}}
{{usbk|User np patrol}}
{{usbk|User rc patrol}}
{{usbk|User twinkle}}
{{usbk|User twinkle2}}
{{usbk|User vandalized}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>ew7eu40a6u3t8f2m8woy4egljfvx65c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User kosovo serbia</title>
    <ns>10</ns>
    <id>201706</id>
    <redirect title="User:Xania/User kosovo serbia" />
    <revision>
      <id>1555132</id>
      <timestamp>2009-07-02T00:37:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User kosovo serbia]] to [[User:Xania/User kosovo serbia]]: Only used by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:Xania/User kosovo serbia]]</text>
      <sha1>oaj740bhz3g9qnyic169li4gq9bkggi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ug-physics</title>
    <ns>10</ns>
    <id>201708</id>
    <redirect title="User:SPat/User ug-physics" />
    <revision>
      <id>1555207</id>
      <timestamp>2009-07-02T01:39:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User ug-physics]] to [[User:SPat/User ug-physics]]: Used only by this user.</comment>
      <text xml:space="preserve">#REDIRECT [[User:SPat/User ug-physics]]</text>
      <sha1>qna1kmylcx9nth41fdq8b2tjhp9vdgm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Colors/White</title>
    <ns>111</ns>
    <id>201709</id>
    <revision>
      <id>1555288</id>
      <timestamp>2009-07-02T02:48:40Z</timestamp>
      <contributor>
        <username>S8333631</username>
        <id>249948</id>
      </contributor>
      <comment>Created page with 'I think this could do with a clouds picture that does not have a foreground, so so that it is absolutely clear what the subject of the photo is.  It might also work to just crop ...'</comment>
      <text xml:space="preserve">I think this could do with a clouds picture that does not have a foreground, so so that it is absolutely clear what the subject of the photo is.  It might also work to just crop the current photo.  Opinions?[[User:S8333631|S8333631]] ([[User talk:S8333631|talk]]) 02:48, 2 July 2009 (UTC)</text>
      <sha1>6p8djehxg7qjln2etmj6pateix6osyc</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Shii</title>
    <ns>3</ns>
    <id>201710</id>
    <revision>
      <id>1555303</id>
      <timestamp>2009-07-02T03:01:34Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>Welcome!</comment>
      <text xml:space="preserve">== Welcome! ==
&lt;div style=&quot;font-size:110%; font-weight:bold;&quot;&gt;[[Wikibooks:Welcome|Welcome]] to Wikibooks, Shii!&lt;/div&gt;
&lt;div style=&quot;width:55%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#15304f; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#f4eed7;&quot;&gt;[[Image:Crystal Clear app korganizer.png|20px]] '''First steps tutorial'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
'''Wikibooks is for freely-licensed collaboratively-developed [[WB:WIW|textbooks]].'''&lt;br/&gt;
You don't need technical skills in order to contribute here. '''[[WB:BOLD|Be bold]]''' contributing and ''[[WB:AGF|assume good faith]]'' about the intentions of others. Remember, this is a ''[[w:wiki|wiki]]'', so you're allowed to change just about anything, and changes can be made easily. Come [[Wikibooks:Reading room/General|introduce yourself]] to everyone, and let us know what [[Wikibooks:Reading room/Projects|interests you]].

If you're coming here from other Wikimedia projects, you should read [[Help:Wikibooks for Wikimedians|our primer for Wikimedians]] to get quickly up-to-speed.
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#2a62a1; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#e9deaf;&quot;&gt;[[Image:Icon apps query.svg|20px]] '''Getting help'''&lt;/div&gt;
&lt;div style=&quot;padding:0.4em 1em 0.3em 1em;&quot;&gt;
* See the '''Wikibooks [[Help:Contents|help pages]]''' for common issues.
* Remember, every edit is saved, so if you make mistakes, you can [[Wikibooks:Reverting|revert]] to an earlier version if needed.
* Get help from the community in the [[Wikibooks:Reading room|Reading room]] or in our [[irc:wikibooks|IRC channel]].
* You cannot upload an image until you have been a member for at least '''4 days'''. If your upload is tagged with {{tlx|nld}}, {{tlx|bfu}}, or {{tlx|nfur}}, please read the template message as it explains the violation of [[WB:MEDIA|our media policy]]. Please be sure to provide the required {{tlx|information}}: a [[WB:ICT|license tag]] and source citation are always required; fair use images require a {{tlx|fair use rationale}}. Get help in the [[WB:HELP|user assistance room]].
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;width:43%; float:left; margin: .2em; border:1px solid #15304f; background-color:#f4eed7;&quot;&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Transmission icon.png|20px]] '''Goodies, tips and tricks'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* Please fill in [[:w:Help:Edit summary|the edit summary]] and [[Help:Show preview|preview]] your edits before saving.
* Sign your name on [[Help:Talk page|discussion pages]] by typing &amp;#126;&amp;#126;&amp;#126;&amp;#126;
* User scripts can make many tasks easier. Look at the ''Gadgets'' tab of [[Special:Preferences|''my preferences'']]; check off the boxes for the scripts you want, and hit ''save''!
&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; background-color:#5f96d3; padding:0.2em 0.5em 0.2em 0.5em; font-size:110%; font-weight:bold; color:#15304f;&quot;&gt;[[Image:Nuvola filesystems trashcan full.png|20px]] '''Made a mistake?'''&lt;/div&gt;
&lt;div style=&quot;border-bottom:1px solid #15304f; padding:0.4em 1em 0.3em 1em;&quot;&gt;
* '''Please make sure you follow our [[WB:NP|naming policy]]''' - modules should be named like &lt;code&gt;Book Title/Chapter Title&lt;/code&gt;.
* Need to rename a page? Use the ''move'' tab (only become available once your account is 4 days old - until then, ask for [[WB:HELP|help]]).
* To get a page deleted, add {{tlx|delete|''your reason for requesting deletion''}} to the top of the page.
* If something you wrote was deleted, please read the [[WB:DP|deletion policy]], and check the [[Special:Log/delete|deletion log]] to find out why. Also check the [[WB:VFD|VFD]] archives if applicable. You can request undeletion at [[WB:VFU]], or ask the administrator who deleted the page.
&lt;/div&gt;
&lt;div style=&quot;background-color:#transparent; padding:0.2em 0.5em 0.2em 0.5em;&quot;&gt;Thanks, [[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 03:01, 2 July 2009 (UTC)&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both; text-align:right; font-size:smaller&quot;&gt;(P.S. Would you like to provide [[Template talk:Bigwelcome|feedback]] on this message?)&lt;/small&gt;&lt;/div&gt;</text>
      <sha1>poimvx6jxomr60ot47b5towc931tn8x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:X86 Assembly/16 32 and 64 Bits</title>
    <ns>1</ns>
    <id>201711</id>
    <revision>
      <id>2220897</id>
      <parentid>1555331</parentid>
      <timestamp>2011-11-27T03:04:13Z</timestamp>
      <contributor>
        <username>Eatingrapunzel</username>
        <id>503238</id>
      </contributor>
      <comment>/* Mixup of different terms in section &quot;The A20 Gate Saga&quot; */ new section</comment>
      <text xml:space="preserve">Why not use offset addressing in 32bit mode? Then instead of having access to only 4 Gigs of memory, you'd have access to a maximum of roughly 68 gigs.
&lt;pre&gt;
FFFFFFFF:FFFFFFFF
= FFFFFFFF * 10 + FFFFFFFF
= FFFFFFFF0 + FFFFFFFF
= 10 FFFF FFEF
&lt;/pre&gt;
[[User:Nikayah|Nikayah]] ([[User talk:Nikayah|talk]]) 03:29, 2 July 2009 (UTC)

== Mixup of different terms in section &quot;The A20 Gate Saga&quot; ==

In section &quot;The A20 Gate Saga&quot; it is stated you say first that
* FFFFF is ''equal'' to 1MB
* FFF0 is ''equal'' to 64KB minus 16 bytes.
So far, so good; it is consistent in itself, but not quite right.

FFFFF is the address of the most significant byte in a 1MB region of memory, but the size of a 1MB region is usually denoted by 100000; otherwise we had a discrepancy in describing 1 byte alone, with the address 0 and size of its ''region''... umm... 0??? You know what I mean.

You do (know) because just three paragraphs later you make use of the notation, that I just described, yourself, when saying that a reference to 1MB would get wrapped to address 0 etc.

Though this has no effective implication to todays programming practices, I don't think it's like nitpicking :-) Would be nice to see this fixed. Thanks.

Furthermore, in the line just above the first claim, where you calculate those hex values, none of them (as in this post) is suffixed by the 'h' character, but the 10, which was just above declared to be in hex already...

CU Jagged</text>
      <sha1>2vu52w300xmqgd5a731cbwpf3k90aty</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User singular they:iffy</title>
    <ns>10</ns>
    <id>201712</id>
    <revision>
      <id>1555346</id>
      <parentid>1555343</parentid>
      <timestamp>2009-07-02T03:43:38Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">{{userbox|id-c=#ddd|info-c=#eee|id=they|info=This user considers '''[[w:singular they|singular they]]''' standard, modern, ''informal'' English usage, so avoids it on Wikibooks.|border-c=#999}}&lt;noinclude&gt;&lt;br style=&quot;clear:left;&quot;&gt;

==Usage==
Just put {{tlx|User singular they:iffy}} on your user page.

[[Category:Grammar user templates|Singular they:iffy]]
&lt;/noinclude&gt;</text>
      <sha1>gqvvb1d9npqjen1dtg9qex7gq1spk7u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User singular they:yes</title>
    <ns>10</ns>
    <id>201714</id>
    <revision>
      <id>1555363</id>
      <parentid>1555362</parentid>
      <timestamp>2009-07-02T03:45:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <text xml:space="preserve">{{Userbox
  |border-c = #9FC
  |border-s = 1
  |id-c     = #EEFFE0
  |id-s     = 14
  |id-fc    = #000
  |info-c   = #EEFFEE
  |info-s   = 8
  |info-fc  = #000
  |id       = they
  |info     = This user considers '''[[w:singular they|singular they]]''' standard English usage.
}}&lt;noinclude&gt;&lt;br style=&quot;clear:both&quot; /&gt;
==Usage==
To use this template, add it to your user page:
 &lt;nowiki&gt;{{User singular they:yes}}&lt;/nowiki&gt;
[[Category:Grammar user templates|Singular they:yes]]
&lt;/noinclude&gt;</text>
      <sha1>0yt2mbcnrwxzpkrp7j9kyfk24v429nu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User singular they:gender</title>
    <ns>10</ns>
    <id>201716</id>
    <revision>
      <id>1555370</id>
      <parentid>1555368</parentid>
      <timestamp>2009-07-02T03:47:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">{{Userbox
  |border-c = #9FC
  |border-s = 1
  |id-c     = lightblue
  |id-s     = 14
  |id-fc    = #000
  |info-c   = lightblue
  |info-s   = 8
  |info-fc  = #000
  |id       = they
  |info     = This user frequently uses '''[[w:singular they|singular they]]''' as it is a handy [[w:gender-neutral language|gender-neutral]] pronoun.
}}
&lt;noinclude&gt;
&lt;br style=&quot;clear:both&quot; /&gt;
==Usage==
To use this template, add it to your user page:
 &lt;nowiki&gt;{{User singular they:gender}}&lt;/nowiki&gt;
[[Category:Grammar user templates|Singular they:gender]]
&lt;/noinclude&gt;</text>
      <sha1>i5u2f7allz35j4z90r838p4f6gzgd9i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User singular they:no</title>
    <ns>10</ns>
    <id>201718</id>
    <revision>
      <id>1555386</id>
      <parentid>1555383</parentid>
      <timestamp>2009-07-02T03:49:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #EEE0FF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #EEEFFF;&quot;
| style=&quot;width: 45px; height: 45px; background: #EEE0FF; text-align: center; font-size: 12pt; color: black;&quot; | '''&lt;strike&gt;they&lt;/strike&gt;&lt;br&gt;it'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user considers the '''[[w:singular they|singular they]]''' to be substandard English usage.
|}&lt;/div&gt;&lt;noinclude&gt;
&lt;br style=&quot;clear:both&quot; /&gt;
==Usage==
To use this template, add it to your user page:
 &lt;nowiki&gt;{{User singular they:no}}&lt;/nowiki&gt;
[[Category:Grammar user templates|Singular they:no]]
&lt;/noinclude&gt;</text>
      <sha1>pbdv6vka18rtg8lz1be9v5mu6yvzir7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User prepositions:no</title>
    <ns>10</ns>
    <id>201720</id>
    <revision>
      <id>1555409</id>
      <parentid>1555406</parentid>
      <timestamp>2009-07-02T03:53:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #EEE0FF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #EEEFFF;&quot;
| style=&quot;width: 45px; height: 45px; background: #EEE0FF; text-align: center; font-size: 14pt; color: black;&quot; | '''...&amp;nbsp;&lt;s&gt;in&lt;/s&gt;.'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | Ending a sentence with a '''[[w:Preposition and postposition|preposition]]''' is something up with which this user will not put.
|}&lt;/div&gt;&lt;noinclude&gt;

[[Category:Grammar user templates|Prepositions:no]]&lt;/noinclude&gt;</text>
      <sha1>b8yaj5bztyzvix3t6nzh2mbagknv1xk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User passive voice:yes</title>
    <ns>10</ns>
    <id>201721</id>
    <revision>
      <id>1555421</id>
      <parentid>1555419</parentid>
      <timestamp>2009-07-02T03:56:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #FFEEEE 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#FFEEEE;&quot;
| style=&quot;width:45px; height:45px; background:#FFE0EE; text-align:center; font-size:12pt; color:#000;&quot; | '''by'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:#000;&quot; | The &lt;b&gt;[[w:English passive voice|passive voice]]&lt;/b&gt; may be used by this user.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Passive voice:yes]]&lt;/noinclude&gt;</text>
      <sha1>bkw6jb5j0eawrfyo5larr5louj3ckvp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User passive voice:no</title>
    <ns>10</ns>
    <id>201723</id>
    <revision>
      <id>1555433</id>
      <parentid>1555430</parentid>
      <timestamp>2009-07-02T03:58:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #EEEEFF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#EEEEFF;&quot;
| style=&quot;width:45px; height:45px; background:#E0EEFF; text-align:center; font-size:12pt; color:#000;&quot; | '''&lt;strike&gt;by&lt;/strike&gt;'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:#000;&quot; | This user does not like the &lt;b&gt;[[w:English passive voice|passive voice]]&lt;/b&gt;.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Passive voice:no]]&lt;/noinclude&gt;</text>
      <sha1>j7k1c96u69bj82ag7xke3w12g4e80gr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User if whether</title>
    <ns>10</ns>
    <id>201725</id>
    <revision>
      <id>1555444</id>
      <parentid>1555442</parentid>
      <timestamp>2009-07-02T04:00:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #EEE0FF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #EEEFFF;&quot;
| style=&quot;width: 45px; height: 45px; background: #EEE0FF; text-align: center; font-size: 10pt; color: black;&quot; | '''if &amp;amp; whether'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user knows how to use &quot;'''if'''&quot; and &quot;'''whether'''&quot;  correctly.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|If whether]]&lt;/noinclude&gt;</text>
      <sha1>if4tc19mppwams4rb6m9nf851ewnwpx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Australia</title>
    <ns>0</ns>
    <id>201727</id>
    <revision>
      <id>1560863</id>
      <parentid>1560861</parentid>
      <timestamp>2009-07-05T20:21:35Z</timestamp>
      <contributor>
        <username>Sgarrigan</username>
        <id>67273</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}
=OLPC AUSTRALIA=
[[Image:Geography-australia-1506313-l.jpg|right|thumb|300px|]]
==Introduction==
This is 100% an education project not a laptop project, was a statement by Jeff Waugh (2008), a board of director member of OLPC Australia&lt;ref&gt; Waugh, J. (2008). OLPC Australia: XO targeting education and definitely NO Windows. http://www.itwire.com/content/view/18143/1023/1/0/ &lt;/ref&gt;
. OLPC should in essence be a constructivist ideology because it customizes student learning experiences. To effectively enhance student learning experiences, scaling up constructivist instruction will create a system wide revamp of instructional technology approaches. Australia’s OLPC program has created a constructivist system that enhances student learning by providing children access to laptops, open-source software, and internet connectivity. Dede (2005), a leading academic in the field, is a supporter of the relationship between constructivism and technology. He affirmed that technology is not the object of learning, rather, it supports teaching and learning &lt;ref&gt; Dede, C, Honan, J, &amp; Peters, L (2005). Scaling Up Success: Lessons from Technology-Based Educational Improvement.  San Francisco: Jossey-Bass &lt;/ref&gt;. Australia’s OLPC initiative combines constructivism and technology to form a platform that augments education. Research performed by Wenglinsky (2005) pointed out that learning consists of three pieces, the teacher, the student, and the medium; and it is not possible to separate one from the other&lt;ref&gt; Wenglinsky, H (2005). Using Technology Wisely: The Keys to Success in Schools. New York, NY: Teachers College Press &lt;/ref&gt;. The medium for this discussion is the XO laptop provided by the Australian Government. Through the constructivism platform, Australia’s OLPC presents to its students the chance to succeed in the classroom.

==Mission==
According to Harvard scholar Clayton Christensen (2008), the proper use of technology as a platform for learning offers a chance to modularize the system and thereby customize learning…student-centric learning opens the door for students to learn in ways that match their intelligence types in the places and at the paces they prefer by combining content in customized sequences&lt;ref&gt; Christensen, C (2008). Disrupting Class: How Disruptive Innovation Will Change the Way the World Learns. New York, NY: McGraw-Hill &lt;/ref&gt;. In essence, he is speaking about the application of constructivism as a tool to enhance learning with technology. This is the excerpt from Australia’s OLPC (2009) website that explains how they want this program to work in the country:

&quot;OLPC Australia's mission is to create educational opportunities for the country's disadvantaged children by providing each child with a rugged, low-cost, low power, connected laptop (the XO) whose hardware and software have been designed especially for kids. As in many other developed nations, there are stark differences in the quality of life experienced in Australian rural and remote regions (heavily populated by indigenous people) and metropolitan areas. This has led to an enormous disparity between the life expectancy and achievements of indigenous and non-indigenous people. The 2008 National Assessment Program: Literacy and Numeracy (NAPLAN) study showed that in metropolitan areas 58.8 per cent of indigenous eight-year olds were above the minimum 	national standard in reading, while in very remote areas this figure was just 12.7 per 	cent. Clearly, the issue is not race or colour, but environment - the current system of teaching does not engage rural children or their teachers as well as their peers in metropolitan areas. Based on five core principles and decades of research, OLPC Australia has developed a sustainable solution to address this critical issue in our community, and its mission is to see it implemented across the nation.&quot;&lt;ref&gt; OLPC Australia. (2009). Mission. Retrieved June 29, 2009.  http://www.olpc.org.au/vision/mission/&lt;/ref&gt; 

Australia’s OLPC initiative is exciting and hopeful because they are reaching out to all students by providing access to new technologies that will positively impact their education. The Twenty-First Century learner needs to have access to these technologies because the world is moving in a technological direction.

==Progress==
[[Image:Babynerd.jpg|left|thumb|300px|]]
OLPC started gaining momentum in 2008. The program started working with the Australian authorities to try and find a way to distribute over 300,000 XO laptops to children in remote parts of Australia. An important stakeholder who helped realize this goal was the Commonwealth Bank of Australia. The entire community was behind this initiative, from the government to banks. This became a tremendous partnership that was able to provide XO laptops to Australian students. Australia’s OLPC (2009) is currently working with three remote Australian community schools, two of the communities will be fully saturated with one laptop per school child, while the third will initially have enough machines to saturate half the school. In the medium term, OLPC Australia is hoping to use corporate assistance to expand these 1,800 laptops to 5,000, and eventually to as many as are required to reach every remote child. These are steps towards progress that eventually 21st Century students will have had access to technology for learning.&lt;ref&gt; OLPC Australia. (2009). Mission. Retrieved June 29, 2009.  http://www.olpc.org.au/vision/mission/&lt;/ref&gt;

==The Schools==

The three Australian schools that have implemented the OLPC program are, the Rawa Community School in remote Western-Australia that received 90 XO laptops. The students in this school fall well below the Australian socio-economic standard. The second school is Newcastle Waters School located in the central Northern Territory and received 30 XO laptops. This school is in a town of 500 people and they also fall well below the national socio-economic standard. The last school is Shepherdson College also located in the Northern Territory with just over 100 XO laptops. Again, the students in this school are in the lower echelons of the socio-economic standard. This initiative is small, but important because the process has begun for providing a laptop to every child.
	
Technology websites, such as Gizmodo, have articles that support the Australian OLPC project. Australian, Nick Broughall (2009) wrote in Gizmodo, for gadget nuts like you and me, the XO OLPC may not quite have the grunt to be usable, but for the poor, indigenous communities out in the middle of the Northern Territory, it’s fantastic. And a couple of days ago, the first OLPCs were officially handed out to Aboriginal primary school children at Shepherdson College on Elcho Island, Northern Territory. Over the next six months, the plan is to distribute another 5000 of the XO laptops to remote primary school children, with an overall goal of putting one in every one of the 400,000 remote childrens’ hands. This is a fantastic cause, and if you’re looking for a charity to donate to, this one definitely gets the Giz tick of approval&lt;ref&gt; Broughall, N. (2009). OLPC Hits Indigenous Australia. Found in Gizmodo. Retrieved June 29, 2009.  	
http://www.gizmodo.com.au/2009/05/olpc_hits_indigenous_australia/&lt;/ref&gt;. The support is there, it is only a matter of time for every student to have an XO laptop. To support the XO initiative in Australia, Wenglinsky’s (2005) notion is that teaching should be highly customized and this customization should be so extensive that teachers are viewed as facilitating student construction of knowledge.&lt;ref&gt; Wenglinsky, H (2005). Using Technology Wisely: The Keys to Success in Schools. New York, NY: Teachers College Press. &lt;/ref&gt;

==Deployment==
OLPC Australia has developed a strategy that ensures the sustainability of the project. Three main points that guarantee the existence and effectiveness of OLPC Australia are: teacher training, deployment and evaluation. OLPC Australia runs XO teacher-training workshops at the deployment schools before the laptops are given to the children. This allows for the teachers to familiarize themselves with the XO, its capabilities and functionality and, in turn, understand the added benefit the educational tools have in the classroom. Teacher-training sessions also assist the teacher in integrating the XO into the curriculum &lt;ref&gt; OLPC Australia. (2009). Deployment. Retrieved June 29, 2009.  http://www.olpc.org.au/vision/mission/&lt;/ref&gt;. There does not appear to be any continual training for teachers throughout the project, rather a crash course for teachers at the onset of the academic year. The OLPC website does not specify how much time is spent for teacher training or a summative assessment at the end of the academic school year. The teachers convey what they know to their students, but steps should be taken to have a more continuous professional development.

Deployment of the XO’s has to do with students taking ownership of their laptop and making them responsible for the welfare of the XO. To ensure the success of the project, OLPC Australia has chosen entire classrooms, grades or schools to receive the XOs to achieve a level of digital saturation. The key point is choosing the best scale for each circumstance. In this way the whole community becomes responsible for the OLPC program, opening up children and adults alike to new experiences beyond their neighborhoods. Opportunities to improve their own circumstances, and that of the wider community, become evident, and in the end this deployment strategy will help these communities grow together and expand in different directions, outside of what was ever considered possible before &lt;ref&gt; OLPC Australia. (2009). Deployment. Retrieved June 29, 2009.  http://www.olpc.org.au/vision/mission/&lt;/ref&gt;. Large scale ownership for the OLPC provides meaningful learning, in that there is a connection between the classroom, the technology and the student. 											

Evaluation is important to finding the effectiveness of the OLPC initiative. A combination of formative and summative assessment of the program helps create a picture of the impact of the XO laptops. Acer has been involved with OLPC Australia and CBA to develop a framework with which to measure the success of the remote deployments. Having interviewed the indigenous communities prior to the integration of the XOs, Acer will return six months after the deployments to collate empirical evidence on the effectiveness of the devices. Acer will measure differences in student attendance, student morale and the teachers' capacity since introducing the XOs into classrooms &lt;ref&gt; OLPC Australia. (2009). Deployment. Retrieved June 29, 2009.  http://www.olpc.org.au/vision/mission/&lt;/ref&gt;.

==Conclusion==
Children in remote areas don’t lack the capacity to learn, only the opportunity &lt;ref&gt; Srikhanta, R. (2009). OLPC Australia uses education to help remote communities. Retrieved June 29, 2009. 
www.watterson.com.au/news_uploads/OLPC/OLPC_Aust_launch_release_final.pdf&lt;/ref&gt;. This statement best illustrates what is a world-wide unfortunate phenomenon. Students are capable of learning, it is up to the governments to provide access to 21st Century education. Australia’s OLPC program is starting to provide students equal access to modern education. OLPC is also effective because it allows for constructivist education. The use of technology in the constructivist classroom is easier to facilitate, which results in deeper understanding for students. Wenglinsky (2005) indicated that point by implying, if technology is used in a constructivist fashion, it is a useful tool; and if used in a didactic fashion, it is worthless, or even destructive, burying students in the drill-and-kill model that turns all but the greatest or automatons off learning&lt;ref&gt; Wenglinsky, H (2005). Using Technology Wisely: The Keys to Success in Schools. New York, NY: Teachers College Press. &lt;/ref&gt;. This notion helps to transcend technological and instructional applications that address the needs of the 21st century learner. Constructivist techniques that introduce technology as a basis for learning are steps in the right direction. Australia is moving in that direction.

==References==
{{reflist}}</text>
      <sha1>bt3heu7gdf205zxvcby7jspu9htg75z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User less fewer</title>
    <ns>10</ns>
    <id>201728</id>
    <revision>
      <id>1555467</id>
      <parentid>1555464</parentid>
      <timestamp>2009-07-02T04:02:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed sort key</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #1E90FF 1px; margin: 1px&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #AFEEEE&quot;
| style=&quot;width: 45px; height: 45px; background: #1E90FF; text-align: center; font-size: 110%&quot; | '''less&amp;nbsp;&amp; fewer'''
| style=&quot;font-size: 90%; padding: 4pt; line-height: 1.25em&quot; | This user understands the [[w:List_of_English_words_with_disputed_usage#L|difference between '''less''' &amp;amp; '''fewer''']].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Less fewer]]&lt;/noinclude&gt;</text>
      <sha1>8cnoeppx8sqgj2blcgp9zq56lzvp8gb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User fewer</title>
    <ns>10</ns>
    <id>201731</id>
    <redirect title="Template:User less fewer" />
    <revision>
      <id>1555465</id>
      <timestamp>2009-07-02T04:02:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User fewer]] to [[Template:User less fewer]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User less fewer]]</text>
      <sha1>mbkydh9gwfm81fo6o5kdxn9vv57wg3y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User much many</title>
    <ns>10</ns>
    <id>201732</id>
    <revision>
      <id>1555474</id>
      <parentid>1555470</parentid>
      <timestamp>2009-07-02T04:04:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #1E90FF 1px; margin: 1px&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #AFEEEE&quot;
| style=&quot;width: 45px; height: 45px; background: #1E90FF; text-align: center; font-size: 110%&quot; | '''much&amp;nbsp;&amp; many'''
| style=&quot;font-size: 90%; padding: 4pt; line-height: 1.25em&quot; | This user understands the [[w:List_of_English_words_with_disputed_usage#M|difference]] between '''much''' &amp;amp; '''many'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Much many]]&lt;/noinclude&gt;</text>
      <sha1>lqnpmpbfjyk8rcjo4juai8qtrovqqvf</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User many</title>
    <ns>10</ns>
    <id>201733</id>
    <redirect title="Template:User much many" />
    <revision>
      <id>1555471</id>
      <timestamp>2009-07-02T04:03:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User many]] to [[Template:User much many]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User much many]]</text>
      <sha1>30r6w2ci1yoi21jj722wfigy8w5fu2k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User than then</title>
    <ns>10</ns>
    <id>201735</id>
    <revision>
      <id>1555481</id>
      <parentid>1555478</parentid>
      <timestamp>2009-07-02T04:06:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #9FC 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; height: 45px; background: #EEFFEE;&quot;
| style=&quot;width: 60px; height: 45px; background: #EEFFE0; text-align: center; font-size: 14pt; color: black; line-height: 1.125em;&quot; | '''than / then'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.2em; color: black;&quot; | This user understands the difference between using &quot;'''[[wiktionary:than|than]]'''&quot; and &quot;'''[[wiktionary:then|then]]'''&quot;.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Than then]]&lt;/noinclude&gt;</text>
      <sha1>pwy4646sm930z94ella85ejzvahdx4b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User theire</title>
    <ns>10</ns>
    <id>201737</id>
    <revision>
      <id>1555484</id>
      <parentid>1555483</parentid>
      <timestamp>2009-07-02T04:06:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>2 revisions from [[:w:Template:User theire]]</comment>
      <text xml:space="preserve">{{Userbox
  |border-c = #000
  |border-s = 1
  |id-c     = #aaa
  |id-s     = 8
  |id-fc    = #000
  |info-c   = #ddd
  |info-s   = 8
  |info-fc  = #000
  |id       = theire?
  |info     = This user will use the words '''there''' and '''their''' interchangeably.
}}&lt;noinclude&gt;[[Category:Grammar user templates|Theire]]&lt;/noinclude&gt;</text>
      <sha1>mu5plg62vgn6055kdjgkmafayihq0kh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User your you're</title>
    <ns>10</ns>
    <id>201739</id>
    <revision>
      <id>1555498</id>
      <parentid>1555496</parentid>
      <timestamp>2009-07-02T04:08:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed sort key.</comment>
      <text xml:space="preserve">{{Userbox
  |border-c = #000
  |border-s = 1
  |id-c     = #def
  |id-s     = 8
  |id-fc    = #000
  |info-c   = #abc
  |info-s   = 8
  |info-fc  = #000
  |id       = your/ you're
  |info     = This user thinks that if '''your''' grammar is incorrect, then '''you're''' in need of help.
}}&lt;noinclude&gt;[[Category:Grammar user templates|Your you’re]]&lt;/noinclude&gt;</text>
      <sha1>rd1eta9vn0taoif400qyws119acgboa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User youryou're</title>
    <ns>10</ns>
    <id>201741</id>
    <redirect title="Template:User your you&#039;re" />
    <revision>
      <id>1555497</id>
      <timestamp>2009-07-02T04:07:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User youryou're]] to [[Template:User your you're]]: Two words</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User your you're]]</text>
      <sha1>10e8zi7eg8jan2qr643c5ny68ujnu93</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User punctuation</title>
    <ns>10</ns>
    <id>201742</id>
    <revision>
      <id>1555505</id>
      <parentid>1555504</parentid>
      <timestamp>2009-07-02T04:10:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #999999 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #eeeeee;&quot;
| style=&quot;width: 45px; height: 45px; background: {{{1|{{{id-c|#dddddd}}}}}}; text-align: center; font-size: 14}pt; color: black;&quot; | '''“,;:’'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user is a [[w:Eats, Shoots &amp; Leaves|punctuation stickler]].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Punctuation]]&lt;/noinclude&gt;</text>
      <sha1>f02mzwf6yolepfkowras8sw2tkvai1p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User serial comma:yes</title>
    <ns>10</ns>
    <id>201744</id>
    <revision>
      <id>1555528</id>
      <parentid>1555524</parentid>
      <timestamp>2009-07-02T04:12:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #9FC 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; height: 45px; background: #EEFFEE;&quot;
| style=&quot;width: 45px; height: 45px; background: #EEFFE0; text-align: center; font-size: 11}pt; color: black; line-height: 1.2em; padding: 1pt;&quot; | '''A, B, and C'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.2em; color: black;&quot; | This user prefers the '''[[w:serial comma|serial comma]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Serial comma:yes]]&lt;/noinclude&gt;</text>
      <sha1>pci9lv1bdj6ukkb329z1qlnd87h9aql</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User serial comma:Yes</title>
    <ns>10</ns>
    <id>201745</id>
    <redirect title="Template:User serial comma:yes" />
    <revision>
      <id>1555525</id>
      <timestamp>2009-07-02T04:11:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User serial comma:Yes]] to [[Template:User serial comma:yes]]: Rename.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User serial comma:yes]]</text>
      <sha1>l27o5alz2oeg5o7fixsnwih2vsvzast</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User serial comma:no</title>
    <ns>10</ns>
    <id>201747</id>
    <revision>
      <id>1555545</id>
      <parentid>1555540</parentid>
      <timestamp>2009-07-02T04:13:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #EEE0FF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #EEEFFF;&quot;
| style=&quot;width: 45px; height: 45px; background: #EEE0FF; text-align: center; font-size: 11pt; color: black;&quot; | '''A, B and C'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user prefers not to use the '''[[w:serial comma|serial comma]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Serial comma:no]]&lt;/noinclude&gt;</text>
      <sha1>3h4fqoxtaqq76oayif9q3ujk5r6fw4z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User serial comma:No</title>
    <ns>10</ns>
    <id>201748</id>
    <redirect title="Template:User serial comma:no" />
    <revision>
      <id>1555541</id>
      <timestamp>2009-07-02T04:12:37Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User serial comma:No]] to [[Template:User serial comma:no]]: Rename.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User serial comma:no]]</text>
      <sha1>int1dueqthfkw4h7mszuzekucbb6psg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Conlang/Advanced/Grammar/Alignment</title>
    <ns>1</ns>
    <id>201750</id>
    <revision>
      <id>1866390</id>
      <parentid>1559316</parentid>
      <timestamp>2010-06-28T22:33:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <text xml:space="preserve">{{WikiProject Languages}} 

This page is too terse to be much use, I think.  I'm going to expand it, in tandem with a lesser expansion of the [[Conlang/Intermediate/Grammar/Nouns]] section on case, since the latter will need to have forward-references to this section.  Probably David Peterson's article on ergativity would be a good see-also reference to link. --[[User:Jim Henry|Jim Henry]] ([[User talk:Jim Henry|talk]]) 04:14, 2 July 2009 (UTC)

: When we rearranged the Advanced outline a few months back (discussed [[Talk:Conlang/Advanced/Grammar/Government#What to do with Intermediate syntax|here]]), there was a wish list of stuff that should be included in Grammar/Alignment; that list also appears on the [[Conlang/Advanced/Grammar#What's in this section?|previous page]].  No new Advanced content was written during the rearrangement, beyond a few wish lists like that; old content was just shifted around into slots in the new outline.  --[[User:Pi zero|Pi zero]] ([[User talk:Pi zero|talk]]) 11:37, 2 July 2009 (UTC)</text>
      <sha1>n726e5zlshynh073691qr27fuxspsj7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User its it's</title>
    <ns>10</ns>
    <id>201752</id>
    <revision>
      <id>1555578</id>
      <parentid>1555575</parentid>
      <timestamp>2009-07-02T04:16:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #FFB3B3 1px; margin: 1px&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #FFE0E8&quot;
| style=&quot;width: 45px; height: 45px; background: #FFB3B3; text-align: center; font-size: 14pt&quot; | '''its &amp; it’s'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em&quot; | This user understands [[w:it (pronoun)|the difference]] between '''its''' and '''it’s'''. So should you.
|}
&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Its it's]]&lt;/noinclude&gt;</text>
      <sha1>2iv1jlwsaxe2xdvvb44qevp7icjr81i</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User its-it's</title>
    <ns>10</ns>
    <id>201753</id>
    <redirect title="Template:User its it&#039;s" />
    <revision>
      <id>1555576</id>
      <timestamp>2009-07-02T04:15:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User its-it's]] to [[Template:User its it's]]: Rename.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User its it's]]</text>
      <sha1>f94dnp5o15j89lolp6j163zjnb8popi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User exclam-abuse</title>
    <ns>10</ns>
    <id>201754</id>
    <revision>
      <id>1555587</id>
      <parentid>1555584</parentid>
      <timestamp>2009-07-02T04:19:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>cleaned up</comment>
      <text xml:space="preserve">{{Userbox
  |id       = ???&lt;br /&gt;?!?&lt;br /&gt;!!!
  |id-c     = #FDA9FF
  |id-s     = 110%
  |info     = This user terminates excessive use of exclamation points and question marks on sight.  '''Grow up'''.
  |info-c   = #FDEEFE
  |border-c = #F0F
}}&lt;noinclude&gt;&lt;br style=&quot;clear:left;&quot; /&gt;

==Usage==
Just put {{tlx|User exclam-abuse}} on your user page.

[[Category:Grammar user templates|Exclam-abuse]]
&lt;/noinclude&gt;</text>
      <sha1>dwnb91wygdckcx3naq055vvsab69un6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ellipses:no</title>
    <ns>10</ns>
    <id>201757</id>
    <revision>
      <id>1555597</id>
      <parentid>1555595</parentid>
      <timestamp>2009-07-02T04:22:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">{{Userbox
  |id       = [[Image:No ellipsis abuse.png|45px]]
  |id-c     = #FDFFA9
  |id-s     = 85%
  |info     = This user terminates unquoted '''[[w:Ellipsis|ellipses]]''' on sight. [[WB:NOT|This is not your blog]]. We end sentences properly.
  |info-c   = #FDFEEE
  |border-c = #FF0
}}&lt;noinclude&gt;&lt;br style=&quot;clear:left;&quot; /&gt;


==Usage==
Just put {{tlx|User ellipses:no}} on your user page. 

[[Category:Grammar user templates|Ellipses:no]]
&lt;/noinclude&gt;</text>
      <sha1>eu21lfimp1qwxbvgtglqxkkd7eyoqyu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ellipses:yes</title>
    <ns>10</ns>
    <id>201759</id>
    <revision>
      <id>1555619</id>
      <parentid>1555616</parentid>
      <timestamp>2009-07-02T04:25:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #FF0 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 237px; height: 45px; background: #FEFFEE;&quot;
| style=&quot;width: 45px; height: 45px; background: #FEFFAA; text-align: center; font-size: 14pt; color: black; line-height: 1.2em;&quot; | '''…'''
| style=&quot;font-size: 8pt; padding: 2pt 4pt 2pt 4pt; line-height: 1.15em; color: black;&quot; | This user is addicted to '''[[w:Ellipsis|ellipses]]''' and has been known to use them indiscriminately....
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Ellipses:yes]]&lt;/noinclude&gt;</text>
      <sha1>qqzfm2aygdjtal84hyva4gif9d4xqmo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User curly quotes</title>
    <ns>10</ns>
    <id>201762</id>
    <revision>
      <id>1555624</id>
      <parentid>1555623</parentid>
      <timestamp>2009-07-02T04:27:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #999 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #eee;&quot;
|style=&quot;width: 45px; height: 45px; background: #ddd; text-align: center; font-size: 11pt; color: black;&quot;| '''“…”'''
|style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot;| This user favors '''typographic quotation marks''' over typewriter style.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Curly quotes]]&lt;/noinclude&gt;</text>
      <sha1>5vvs78yy4z8nco4bomnbla44q074w9u</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User straight quotes</title>
    <ns>10</ns>
    <id>201763</id>
    <revision>
      <id>1555631</id>
      <parentid>1555630</parentid>
      <timestamp>2009-07-02T04:29:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #999 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #eee;&quot;
|style=&quot;width: 45px; height: 45px; background: #ddd; text-align: center; font-size: 11pt; color: black;&quot;| '''&quot;…&quot;'''
|style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot;| This user favors '''typewriter style quotation marks''' over typographic ones.
|}&lt;/div&gt;&lt;noinclude&gt;

[[Category:Grammar user templates|Straight quotes]]&lt;/noinclude&gt;</text>
      <sha1>aeh9gsvuo5hr9nvlnff5uunslph4mxv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Dutch/Lesson 2A</title>
    <ns>0</ns>
    <id>201764</id>
    <revision>
      <id>2090551</id>
      <parentid>1844158</parentid>
      <timestamp>2011-04-30T23:48:31Z</timestamp>
      <contributor>
        <ip>173.181.68.252</ip>
      </contributor>
      <comment>/* Exercise 2A-1 Inflection */</comment>
      <text xml:space="preserve">&lt;small&gt;[[Dutch/Lesson 2|back to lesson 2]]&lt;/small&gt;
==Exercise 2A-1 Inflection==

As you have seen in lesson two, Dutch adjectives have two main forms, an uninflected one and an inflected one in -e. In the sentences below chose the right form.

# Deze auto is {{C|rood/rode||rood}}. Het is een {{C|rood/rode||rode}} auto.
# Dit huis is {{C|groot/grote|groot}}. Ik heb een {{C|groot/grote||groot}} huis.
# Is de weg erg {{C|lang/lange||lang}}? Is het een {{C|lang/lange||lange}} of een {{C|kort/korte||korte}}?
# Is het huis {{C|mooi/mooie||mooi}}? Ja het is een {{C|prachtig/prachtige||prachtig}} huis!
# Hij heeft een {{C|beter/betere||betere}} manier gevonden.


{{BookCat}}</text>
      <sha1>k777prhzklymszcvg56jsg5tcm3r36n</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User british quotes</title>
    <ns>10</ns>
    <id>201765</id>
    <revision>
      <id>1555641</id>
      <parentid>1555638</parentid>
      <timestamp>2009-07-02T04:31:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #999 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #eee;&quot;
|style=&quot;width: 45px; height: 45px; background: #ddd; text-align: center; font-size: 11pt; color: black;&quot;| '''“…”?'''
|style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot;|This user thinks “'''[[w:quotation mark#Punctuation|British punctuation]]''' is best for quotation marks”. Do you?
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|British quotes]]&lt;/noinclude&gt;</text>
      <sha1>84wtvkhik0wpkbx3s5is0tvck4t14z8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User american quotes</title>
    <ns>10</ns>
    <id>201767</id>
    <revision>
      <id>1555648</id>
      <parentid>1555646</parentid>
      <timestamp>2009-07-02T04:35:10Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #999 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #eee;&quot;
|style=&quot;width: 45px; height: 45px; background: #ddd; text-align: center; font-size: 11pt; color: black;&quot;| '''“…!”'''
|style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot;| For quotation marks, this user would rather use “'''[[w:quotation mark#Punctuation|American punctuation]]'''.”
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|American quotes]]&lt;/noinclude&gt;</text>
      <sha1>rr17w7zqlaqjig2d14rp8gn0oawomk3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Oxford spelling</title>
    <ns>10</ns>
    <id>201768</id>
    <revision>
      <id>1555658</id>
      <parentid>1555657</parentid>
      <timestamp>2009-07-02T04:39:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Template:User Oxford Spelling]] to [[Template:User Oxford spelling]]: Fixed casing.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: ;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''OED'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user uses '''[[w:Oxford spelling|Oxford spelling]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Oxford spelling]]&lt;/noinclude&gt;</text>
      <sha1>6nj9zpdhy2hkewhtfgf536ykybfppgn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Oxford Spelling</title>
    <ns>10</ns>
    <id>201769</id>
    <redirect title="Template:User Oxford spelling" />
    <revision>
      <id>1555659</id>
      <timestamp>2009-07-02T04:39:21Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Oxford Spelling]] to [[Template:User Oxford spelling]]: Fixed casing.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User Oxford spelling]]</text>
      <sha1>siidkm2fhuuw2qf8ae2rlrju7nqsmoi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User American English</title>
    <ns>10</ns>
    <id>201770</id>
    <revision>
      <id>1555670</id>
      <parentid>1555668</parentid>
      <timestamp>2009-07-02T04:41:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleaned up</comment>
      <text xml:space="preserve">{{userbox
| border-c = blue
| id       = US
| id-c     = blue
| id-fc    = white
| id-s     = 14
| info     = This user uses '''[[w:American English|American English]]'''.
| info-c   = white
| info-fc  = black
| info-s   = 8
}}&lt;noinclude&gt;[[Category:Grammar user templates|American English]]&lt;/noinclude&gt;</text>
      <sha1>jzzyj6db01u27ifpmy1xjo4nqpm12et</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Australian English</title>
    <ns>10</ns>
    <id>201771</id>
    <revision>
      <id>1555697</id>
      <parentid>1555695</parentid>
      <timestamp>2009-07-02T04:43:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: ;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''AU'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; background-color: white;&quot; | This user speaks '''[[w:Australian English|Australian English]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Australian English]]&lt;/noinclude&gt;</text>
      <sha1>24desme10pyi3pmgjioo9n23c0wyyhs</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User New Zealand English</title>
    <ns>10</ns>
    <id>201773</id>
    <revision>
      <id>1555710</id>
      <parentid>1555705</parentid>
      <timestamp>2009-07-02T04:45:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: ;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''NZ'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user uses '''[[w:New Zealand English|New Zealand English]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|New Zealand English]]&lt;/noinclude&gt;</text>
      <sha1>mjbhc0gme3gbavs5gelk9ycorgwc9l6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User NZ English</title>
    <ns>10</ns>
    <id>201774</id>
    <redirect title="Template:User New Zealand English" />
    <revision>
      <id>1555706</id>
      <timestamp>2009-07-02T04:44:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User NZ English]] to [[Template:User New Zealand English]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User New Zealand English]]</text>
      <sha1>p13rtg5z6pk597abpvjagsyxdxojc4o</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Irish English</title>
    <ns>10</ns>
    <id>201776</id>
    <revision>
      <id>1555723</id>
      <parentid>1555719</parentid>
      <timestamp>2009-07-02T04:47:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: ;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''IE'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user uses '''[[w:Hiberno-English|Irish English]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Irish English]]&lt;/noinclude&gt;</text>
      <sha1>darzazuq7ll8hiso4r4a9146hxlzg56</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User South African English</title>
    <ns>10</ns>
    <id>201777</id>
    <revision>
      <id>1555733</id>
      <parentid>1555730</parentid>
      <timestamp>2009-07-02T04:49:50Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #F0F8FF;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''SA'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user uses '''[[w:South African English|South African English]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|South African English]]&lt;/noinclude&gt;</text>
      <sha1>h4r7c7bifghxqhc5jbsbon3v5lve5ym</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ZA English</title>
    <ns>10</ns>
    <id>201778</id>
    <redirect title="Template:User South African English" />
    <revision>
      <id>1555731</id>
      <timestamp>2009-07-02T04:48:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User ZA English]] to [[Template:User South African English]]: Better name.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User South African English]]</text>
      <sha1>2ak76a7t4xgahlord664taveykq42ko</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Canadian English</title>
    <ns>10</ns>
    <id>201779</id>
    <revision>
      <id>1555750</id>
      <parentid>1555748</parentid>
      <timestamp>2009-07-02T04:52:09Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid blue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: ;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size: 14pt; color: white;&quot; | '''CA'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user uses '''[[w:Canadian_English|Canadian English]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Grammar user templates|Canadian English]]&lt;/noinclude&gt;</text>
      <sha1>bpurg8afv4n74wguzp0psmwcp2rkmoe</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User CommonwealthE Canadian</title>
    <ns>10</ns>
    <id>201780</id>
    <redirect title="Template:User Canadian English" />
    <revision>
      <id>1555749</id>
      <timestamp>2009-07-02T04:50:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User CommonwealthE Canadian]] to [[Template:User Canadian English]]: Better name and consistent with other &quot;English&quot; templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User Canadian English]]</text>
      <sha1>dkre8is6166ol3wh7deo44x0bxwz94f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Cyrus thomas</title>
    <ns>2</ns>
    <id>201782</id>
    <revision>
      <id>1555778</id>
      <timestamp>2009-07-02T07:58:57Z</timestamp>
      <contributor>
        <username>Cyrus thomas</username>
        <id>249071</id>
      </contributor>
      <comment>Created page with 'SoftwareDepotOnline LLC is a US based software company in New York with technical software such as   Logosmartz  Logo maker software helps  in creating business logos, company lo...'</comment>
      <text xml:space="preserve">SoftwareDepotOnline LLC is a US based software company in New York with technical software such as 

Logosmartz

Logo maker software helps  in creating business logos, company logos and various others professional logos.With this software you are able to access 1000's of symbols, graphics to jot down your creative ideas on your type of logo. For More Details visit LogoSmartz.com


PDf-file.com / 123pdfconverter.com / Docsmartz.net / 123fileconvert.com / quickpdftoword.com

PDF Converter software family, a unique innovative software which can convert full version of PDF file into word, excel, powerpoint.This strong software helps to convert the images and graphic in the same look and feel in other type of files. You can browse the latest version of product with the information and complete description on the website. You can also download the free trial version of software from the website.


Proposalsmartz

Smart Proposal making software which helps in creating professional business, company and client proposal. This software is very flexible, dynamic, customize as per your needs. This also helps in creating business letters, cover letters to make your entire proposal in unique one among 1000's of general proposal from your competitors. For More Details visit ProposalSmartz.com


Banner Making Software

Banner Design Software: Flash Banner Maker for custom banner design. Banner Designer Pro is banner making software that allows you to create personalized flash banners easily. Download now!For More Details visit Bannerdesignerpro.com


There are many more Software/tools ....Visit: http://www.softwaredepotonline.com</text>
      <sha1>095ugdbsvxqb8rmaqp9xnmyg6jfopn9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Circle</title>
    <ns>0</ns>
    <id>201783</id>
    <revision>
      <id>1555814</id>
      <parentid>1555810</parentid>
      <timestamp>2009-07-02T10:06:26Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <text xml:space="preserve">This page contains a worksheet about circle.

# [[/Area and perimeter of circle/|Area and perimeter of circle]] {{stage|100%|Jul 02, 2009}}
# [[/Tangents of Circle/|Tangents of Circle]] {{stage|00%|Jul 02, 2009}}
# [[/Sector area of circle/|Sector area of circle]] {{stage|00%|Jul 02, 2009}}

[[Category:Mathematics Worksheet]]</text>
      <sha1>oex5q8ul0w4ag1se3ez3dzkowm7bp5s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Circle/Area and perimeter of circle</title>
    <ns>0</ns>
    <id>201784</id>
    <revision>
      <id>1555813</id>
      <timestamp>2009-07-02T10:05:16Z</timestamp>
      <contributor>
        <ip>114.58.232.197</ip>
      </contributor>
      <comment>Created page with 'Use &lt;math&gt;\pi=\!3,14&lt;/math&gt; if the radius are not multiple of 7 and use &lt;math&gt;\pi=\frac{22}{7}&lt;/math&gt; if the radius are multiple of 7.  # Find the area of the circle with the giv...'</comment>
      <text xml:space="preserve">Use &lt;math&gt;\pi=\!3,14&lt;/math&gt; if the radius are not multiple of 7 and use &lt;math&gt;\pi=\frac{22}{7}&lt;/math&gt; if the radius are multiple of 7.

# Find the area of the circle with the given radius:
## 2 cm
## 5 cm
## 7 cm
## 10,5 cm
## 14 cm
## 16 cm
## 11,3 cm
## 9,8 cm
## 12,53 cm
## 18 cm
## 20 cm
## 10,263 cm
## 5,6 cm
## 21 cm
## 24,5 cm
## 17,75 cm
## 32,3261 cm
## 23,5 cm
## 25,63 cm
## 12 cm
## 28 cm
## 56 cm
## 42 cm
## 63 cm
## 80 cm
# Find the perimeter of the circle with the given diameter:
## 14 cm
## 21 cm
## 12 cm
## 28 cm
## 23 cm
## 9,6 cm
## 13,42 cm
## 12,3 cm
## 19 cm
## 35 cm
## 32 cm
## 13,652 cm
## 9,462 cm
## 11,4531 cm
## 42 cm
## 45 cm
## 54 cm
## 52,5 cm
## 36,4 cm
## 25,643 cm
## 65 cm
## 76 cm
## 84 cm
## 95 cm
## 100 cm

[[Category:Mathematics Worksheet]]</text>
      <sha1>ivgne817wxq9j8d5ookqlww5ucf6g8j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Lechon Asado</title>
    <ns>103</ns>
    <id>201786</id>
    <revision>
      <id>1889345</id>
      <parentid>1889343</parentid>
      <timestamp>2010-07-15T00:30:47Z</timestamp>
      <contributor>
        <username>Moby-Dick4000</username>
        <id>198746</id>
      </contributor>
      <comment>Removed racist, vulgar comment.</comment>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Pork Tenderloin with Asparagus and Prosciutto</title>
    <ns>103</ns>
    <id>201787</id>
    <revision>
      <id>2213081</id>
      <parentid>1555869</parentid>
      <timestamp>2011-11-17T11:48:29Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor />
      <comment>moved [[Cookbook talk:Pork Tenderloin with Asparagus and Proscuitto]] to [[Cookbook talk:Pork Tenderloin with Asparagus and Prosciutto]]: spelling</comment>
      <text xml:space="preserve">
== white stuff on tenderloin ==

that white stuff isn't fat its tough cartilage so it has to be removed im gonna edit that.</text>
      <sha1>f715ee6tfud36ssoce5gby9zri82suq</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Garlic Oil</title>
    <ns>102</ns>
    <id>201788</id>
    <revision>
      <id>1838990</id>
      <parentid>1555871</parentid>
      <timestamp>2010-06-10T21:22:41Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Fats and oils]]

This oil is nice for frying chicken, fish, and fries.

== Ingredients ==
* 1/2 gallon flavorless high smoke point oil, such as canola, peanut, safflower, grapeseed, and soybean
* 40 cloves garlic
* 8 Thai bird chiles, stemmed and havled
* 1/2 tsp salt

== Procedure ==
#Combine all ingredients in a large stockpot. Heat over low heat.
#Cook for 1 hour. Strain, cool, and store in the refrigerator until oil smells off, or oil looks smoky, or tastes rancid.</text>
      <sha1>l6dtjt6hh6psbt0a92fsex14xw7arwr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Asian Chicken Wings</title>
    <ns>102</ns>
    <id>201789</id>
    <revision>
      <id>2502526</id>
      <parentid>1845353</parentid>
      <timestamp>2013-03-16T15:36:52Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <comment>+ metric + inter-cookbook links</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Chicken recipes]]

== Ingredients ==
* 24 [[Cookbook:Chicken|chicken]] wingettes
* [[Cookbook:Poultry Shake|Poultry shake]], as needed
* Cornmeal, as needed
* 2 [[Cookbook:Egg|eggs]], beaten
* 6 tbsp hoisin sauce
* 1 tbsp dark soy sauce
* 2 tbsp hot sauce
* 1/2 tbsp minced [[Cookbook:Garlic|garlic]]
* 1/2 tbsp minced [[Cookbook:Ginger|ginger]]
* [[Cookbook:Spicy Garlic Oil|Spicy garlic oil]] for deep frying

== Procedure ==
#Coat chicken with egg. Season chicken liberally with Shake.
#Dredge chicken in cornmeal. Fry at 350°F (180°C) in batches, if needed for 12 minutes. Drain on a cooling or oven rack.
#Combine remaining ingredients in a large bowl. Add wings and toss to coat.

[[Category:Recipes with metric units]]</text>
      <sha1>beniqgypkb96339h3cyirdx0rc2uiph</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Dry-Aged Prime Rib</title>
    <ns>102</ns>
    <id>201790</id>
    <revision>
      <id>1716639</id>
      <parentid>1555883</parentid>
      <timestamp>2010-02-08T21:47:12Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Beef recipes]] [[Category:Expensive recipes]]

== Ingredients ==
* 1 prime grade 4 bone standing rib roast
* [[Cookbook:Prime Rib Seasoning|Prime Rib Seasoning]], as needed
* Canola oil

== Procedure ==
#Place roast in a paper towel lined perforated box with a lid. Cover and refrigerate for 3 days, changing towels halfway.
#If any leathery spots appear, trim off. Rub roast all over with canola oil. Shake on Seasoning liberally and pat down lightly.
#Insert an oven-safe probe thermometer into the roast. Bake at 200° until internal temperature reaches 118°.
#Remove from oven and raise oven to 500°. Insert roast back in and bake until internal temperature reaches 135°.
#Remove and let rest 10 minutes and serve.</text>
      <sha1>t3dopx2gxqnhyv59in6pulgth5dk0j2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:125.63.65.181</title>
    <ns>3</ns>
    <id>201791</id>
    <revision>
      <id>1555897</id>
      <timestamp>2009-07-02T14:30:26Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>test warning</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/125.63.65.181|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. [[User:Sigma 7|Sigma 7]] ([[User talk:Sigma 7|talk]]) 14:30, 2 July 2009 (UTC)}}</text>
      <sha1>9cn9wym10k2at77sql8ts7rs3uvdzax</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User eng</title>
    <ns>10</ns>
    <id>201792</id>
    <redirect title="Template:User engineering" />
    <revision>
      <id>1555937</id>
      <timestamp>2009-07-02T15:16:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User eng]] to [[Template:User engineering]]: Distinguishes from &quot;english&quot;.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User engineering]]</text>
      <sha1>os2gua5tm9tno026ycackdp9gci1n8z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Trainz/Locating locos</title>
    <ns>0</ns>
    <id>201793</id>
    <revision>
      <id>1581559</id>
      <parentid>1555962</parentid>
      <timestamp>2009-07-28T12:47:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">Start here

http://trainz.banal.net/catalog/catalog.html

{{BookCat}}</text>
      <sha1>dipkwzaao5if1ezf8pelnnombyq0b1h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Apple Stuffed Pork Chops</title>
    <ns>102</ns>
    <id>201794</id>
    <revision>
      <id>2375979</id>
      <parentid>1672088</parentid>
      <timestamp>2012-07-10T21:14:36Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>/* Directions */general cleanup, typos fixed: refridgerate → refrigerate using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]]

== Ingredients ==
:4 thick cut bone-in pork rib chops
:2 cups [[Cookbook:Apple Stuffing|Apple Stuffing]]
:1/4 cup freshly squeezed lemon juice
:2 tbsp dark honey
:1 1/2 tsp kosher salt
:1/2 cup [[Cookbook:Chop Rub|Chop Rub]]
:A heat-proof towel tied with twine and soaked with oil

== Directions ==
#Combine lemon juice, honey, and salt in a gallon-size zip-top bag. Add pork chops, take as much air out as possible, seal, and refrigerate 24 hours.
#Take pork out. Place inside a bagel slicer. Using a narrow boning knife, make an incision until you hit bone. Sweep up and make the hole slightly larger. Repeat with remaining pork chops.
#Place Stuffing inside a gallon size zip top plastic bag. Snip a small hole in the corner. Place snipped corner inside incision in one of the pork chops. Squeeze to dispense. Dispense about 2 tbsp into each pork chop.
#Once all pork has been stuffed, massage Rub into both sides of each chop. Set aside.
#Quickly lube grill with towel. Grill pork over high heat 2 minutes, then twist 90° and cook for another 2 minutes. Flip and repeat 1 more time.
#Remove and let rest for 7 minutes. Serve.</text>
      <sha1>cak98b3zsko29wq28gpeeiymxgnfpht</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Apple Stuffing</title>
    <ns>102</ns>
    <id>201795</id>
    <revision>
      <id>2620798</id>
      <parentid>2620758</parentid>
      <timestamp>2014-03-25T01:35:49Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/24.243.118.212|24.243.118.212]]) and restored revision 1555969 by Iwatchaltonbrown</comment>
      <text xml:space="preserve">{{recipe}} [[Category:Fruit recipes]]

This works great as a stuffing for pork chops, pork roasts, or just serving as a side with roast turkey.

== Ingredients ==
:1 1/2 cups cornbread, crumbled finely
:1/2 cup dried apples
:1/2 cup apple jelly
:1/4 cup walnuts, roughly chopped
:Kosher salt and freshly ground black pepper
:2 tbsp sugar
:4 egg yolks, beaten
:4 egg whites, beaten to stiff peaks with 1/8 tsp cream of tartar
:1/4 cup shredded Fontina cheese

== Directions ==
#Combine all ingredients except cheese and egg whites. Gently fold in egg whites, in batches.
#Pour into a roasting pan. Top with shredded cheese and bake at 325° for 1/2 hour or until browned and bubbly on top.
#Remove and let rest for 7 minutes. Serve warm or use for [[Cookbook:Apple Stuffed Pork Chops|Apple Stuffed Pork Chops]].</text>
      <sha1>1nfybfwsbuazavnd9rtndd06fw6wxo8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Classic American Apple Pie</title>
    <ns>102</ns>
    <id>201796</id>
    <revision>
      <id>1707222</id>
      <parentid>1555978</parentid>
      <timestamp>2010-01-27T22:04:41Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Apple recipes]]

I don't have a problem with international food, but people are forgetting where we're from! Time to come back to America!

== Ingredients ==

'''Dough'''

* 12 ounces by weight all-purpose flour
* 8 ounces cold butter, cut into 1/2 inch pieces
* 5-7 tbsp applejack or hard cider
* 1 tsp table salt
* 1 tbsp sugar

'''Filling'''
* 6 Honeycrisp apples, peeled, cored, and cut into 12ths
* 1/2 cup sugar, divided
* 1/4 tsp salt
* 1/4 tsp freshly ground Grains of Paradise
* 3/4 tsp freshly ground cinnamon
* 1/4 cup apple jelly
* 1 tbsp apple cider
* 1/4 cup tapioca flour
* 2 tsp freshly squeezed lemon juice

== Procedure ==
#Combine Dough ingredients until it looks mealy. Split in half by weight, shape into 2 disks, and chill one hour.
#Toss apples with 1/4 cup sugar and place in a colander set over a large bowl. Let drain for 1 1/2 hours.
#Transfer liquid from bowl into a saucier and bring to a boil over medium high heat until reduced to 2 tbsp. Set aside.
#Toss apples with remaining Filling ingredients. Set aside.
#Roll out two disks of crust into rough circles. Place one inside a 9 1/2 in. to 10 inch tart pan and attach. Add apples in a concentric circle, starting from the outside and working to the inside, making the center slightly taller than the outside. Pour any liquid in the bottom of the bowl over the apples.
#Top with other half and snip 3 incisions in the center. Brush top with reduced liquid.
#Bake at 425° on the floor of the oven in a half sheet pan lined with parchment for 30 minutes. Transfer to the lower rack and bake for another 20 minutes. Remove and cool 4 hours. Serve.</text>
      <sha1>o6mj3jnaiufza8ehi4jhm92lcei8jah</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Equations of Straight Line</title>
    <ns>0</ns>
    <id>201797</id>
    <revision>
      <id>1555974</id>
      <timestamp>2009-07-02T16:19:56Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <comment>Created page with '# Determine the gradient of a segment in line that connecting points: ## &lt;math&gt;\!X=(\!4,\!2)&lt;/math&gt; and &lt;math&gt;\!Y=(\!-3,\!-4)&lt;/math&gt; ## &lt;math&gt;\!A=(\!-5,\!-2)&lt;/math&gt; and &lt;math&gt;\!B...'</comment>
      <text xml:space="preserve"># Determine the gradient of a segment in line that connecting points:
## &lt;math&gt;\!X=(\!4,\!2)&lt;/math&gt; and &lt;math&gt;\!Y=(\!-3,\!-4)&lt;/math&gt;
## &lt;math&gt;\!A=(\!-5,\!-2)&lt;/math&gt; and &lt;math&gt;\!B=(\!3,\!4)&lt;/math&gt;
## &lt;math&gt;\alpha=(\!5,\!-3)&lt;/math&gt; and &lt;math&gt;\beta=(\!-2,\!8)&lt;/math&gt;
## &lt;math&gt;\lambda=(\!-6,\!3)&lt;/math&gt; and &lt;math&gt;\Delta=(\!4,\!1)&lt;/math&gt;
## &lt;math&gt;\!P=(\!-4,\!7)&lt;/math&gt; and &lt;math&gt;\!Q=(\!6,\!-3)&lt;/math&gt;
## &lt;math&gt;\!E=(\!7,\!5)&lt;/math&gt; and &lt;math&gt;\!F=(\!4,\!6)&lt;/math&gt;
## &lt;math&gt;\kappa=(\!-5,\!-2)&lt;/math&gt; and &lt;math&gt;\Omega=(\!-4,\!-9)&lt;/math&gt;
## &lt;math&gt;\!M=(\!-3,\!4)&lt;/math&gt; and &lt;math&gt;\!N=(\!5,\!-6)&lt;/math&gt;
## &lt;math&gt;\!R=(\!-5,\!1)&lt;/math&gt; and &lt;math&gt;\!S=(\!-4,\!-10)&lt;/math&gt;
## &lt;math&gt;\!C=(\!3,\!-5)&lt;/math&gt; and &lt;math&gt;\!D=(\!5,\!-3)&lt;/math&gt;
# Find the gradient line from:
## &lt;math&gt;\!x+\!y=\!14&lt;/math&gt;
## &lt;math&gt;\!3x-\!5y=\!11&lt;/math&gt;
## &lt;math&gt;\!5x+\!4y=\!41&lt;/math&gt;
## &lt;math&gt;\!x-\!y=\!15&lt;/math&gt;
## &lt;math&gt;\!3(\!2x+\!5y)=\!3&lt;/math&gt;
## &lt;math&gt;\!5x-\!y=\!18&lt;/math&gt;
## &lt;math&gt;\!6x+\!3y=\!62&lt;/math&gt;
## &lt;math&gt;\!10x-\!5y=\!75&lt;/math&gt;
## &lt;math&gt;\!7x+\!3y=\!-8&lt;/math&gt;
## &lt;math&gt;\!3x-\!5y=\!-30&lt;/math&gt;
## &lt;math&gt;\!5x+\!9y=\!-2&lt;/math&gt;
## &lt;math&gt;\!4x+\!y=\!0&lt;/math&gt;
## &lt;math&gt;\!6x-\!3y=\!0&lt;/math&gt;
## &lt;math&gt;\!4(\!3x+\!y)=\!8&lt;/math&gt;
## &lt;math&gt;\!2x-\!0,5y=\!-7&lt;/math&gt;
## &lt;math&gt;\!1,5x+\!2,5y=\!21&lt;/math&gt;
## &lt;math&gt;\!2,4x+\!1,5y=\!14,7&lt;/math&gt;
## &lt;math&gt;\!3,2x-\!2,3y=\!5&lt;/math&gt;
## &lt;math&gt;\!4,5x+\!2,7y=\!18,9&lt;/math&gt;
## &lt;math&gt;\!6,7x-\!1,9y=\!19,2&lt;/math&gt;
# Draw in the Cartesian diagram if known the four points are:
## &lt;math&gt;\!A=\!(\!4,\!-2),\!B=\!(\!3,\!3),\!C=\!(\!-6,\!3),\!D=\!(\!5,\!4)&lt;/math&gt;
## &lt;math&gt;\!A=\!(\!-7,\!-1),\!B=\!(\!4,\!-2),\!C=\!(\!-1,\!-9),\!D=\!(\!-4,\!3)&lt;/math&gt;
## &lt;math&gt;\!A=\!(\!-5,\!5),\!B=\!(\!6,\!-6),\!C=\!(\!-3,\!3),\!D=\!(\!2,\!-2)&lt;/math&gt;
## &lt;math&gt;\!A=\!(\!1,\!-10),\!B=\!(\!-3,\!-6),\!C=\!(\!4,\!7),\!D=\!(\!-6,\!1)&lt;/math&gt;
## &lt;math&gt;\!A=\!(\!-2,\!-2),\!B=\!(\!-5,\!7),\!C=\!(\!1,\!3),\!D=\!(\!-9,\!5)&lt;/math&gt;
# From the questions number 3, calculate the gradient of line AB and line CD.
# From the questions number 3, are the both lines parallel? If not, give the reason.

[[Category:Mathematics Worksheet]]</text>
      <sha1>fd6zoh5x6waz6mse06ee73rkas650v8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Cheese Tart</title>
    <ns>102</ns>
    <id>201799</id>
    <revision>
      <id>1700633</id>
      <parentid>1555985</parentid>
      <timestamp>2010-01-19T22:46:11Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <text xml:space="preserve">{{recipe}} [[Category:Cheese recipes]]

== Ingredients ==
* 1/2 dough from [[Cookbook:Classic American Apple Pie|Classic American Apple Pie]], made with mascarpone cheese instead of applejack
* 1/2 cup Brie cheese, rind removed
* 3/4 cup mascarpone cheese
* 1/2 cup sugar
* 1/2 cup unsalted butter, melted
* Pinch of salt

== Directions ==
#Mash together all ingredients except dough. Set aside.
#Roll out dough into a rough circle. Place in a 10 inch tart pan.
#Add cheese mixture into dough and bake at 425° on the bottom of the oven for 15 minutes. Move to the bottom rack and bake for 10 minutes more.
#Remove and let rest 10 minutes. Serve.</text>
      <sha1>lsea00ao5x3qfj5p319dmscu04bzcqv</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:124.183.122.146</title>
    <ns>3</ns>
    <id>201801</id>
    <revision>
      <id>1556007</id>
      <timestamp>2009-07-02T17:31:22Z</timestamp>
      <contributor>
        <username>Chazz</username>
        <id>32521</id>
      </contributor>
      <comment>Created page with '{{subst:test}}~~~~'</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/124.183.122.146|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. }}[[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 17:31, 2 July 2009 (UTC)</text>
      <sha1>7o0tccx4fdpi92v82y8qq290c0py8bn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Rift</title>
    <ns>2</ns>
    <id>201803</id>
    <revision>
      <id>1556039</id>
      <timestamp>2009-07-02T17:58:20Z</timestamp>
      <contributor>
        <username>Rift</username>
        <id>248357</id>
      </contributor>
      <comment>Created page with '[[Image:Mind-the-gap.jpg|800px|center]] [[sv:Anv%C3%A4ndare:Rift]]'</comment>
      <text xml:space="preserve">[[Image:Mind-the-gap.jpg|800px|center]]
[[sv:Anv%C3%A4ndare:Rift]]</text>
      <sha1>jbp9h8rw1u1ogl0t3kvouh1wcry7l50</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User birding</title>
    <ns>10</ns>
    <id>201804</id>
    <revision>
      <id>1559356</id>
      <parentid>1556080</parentid>
      <timestamp>2009-07-04T16:17:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightgoldenrodyellow&quot;
| style=&quot;width: 45px; height: 45px; background: lightgoldenrodyellow; text-align: center; font-size: 14pt; color: black;&quot; | '''[[Image:Yellow_bird.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is interested in '''[[w:birding|birding]]'''.
|}&lt;noinclude&gt;[[Category:Animal user templates|Birding]]&lt;/noinclude&gt;</text>
      <sha1>521ch8l7rhvaywhk4ssu2vgx6kbg5h9</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Animal user templates</title>
    <ns>14</ns>
    <id>201806</id>
    <revision>
      <id>1556082</id>
      <timestamp>2009-07-02T19:20:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+description/category</comment>
      <text xml:space="preserve">See a visual gallery of these userboxes at [[Wikibooks:Userboxes/Animals]].

[[Category:Userboxes]]</text>
      <sha1>by3x67iwi8eq6mgx28927zwzftgragh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cockatiel owner</title>
    <ns>10</ns>
    <id>201807</id>
    <revision>
      <id>1556095</id>
      <parentid>1556093</parentid>
      <timestamp>2009-07-02T19:28:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and added category.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0f1d26 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #fff;&quot;
| style=&quot;width: 45px; height: 45px; background: #0f1d26; text-align: center; font-size: 14pt; color: black;&quot; | '''[[Image:Cockatiel face.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user is owned by one or more '''[[w:cockatiel|cockatiels]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Cockatiel owner]]&lt;/noinclude&gt;</text>
      <sha1>luj1626xx56mjuw86id7ysawjencnlu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User parrot owner</title>
    <ns>10</ns>
    <id>201809</id>
    <revision>
      <id>1559355</id>
      <parentid>1556479</parentid>
      <timestamp>2009-07-04T16:17:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid green 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightgreen;&quot;
| style=&quot;width: 45px; height: 45px; background: lightgreen; text-align: center; font-size: 14pt; color: black;&quot; | '''[[Image:Yellow naped amazon parrot left side.jpg|33px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user owns a '''[[w:parrot|parrot]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Parrot lover]]&lt;/noinclude&gt;</text>
      <sha1>oqbnh9jg3g3yr3noub9z8fmx0ytho8y</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cat owner</title>
    <ns>10</ns>
    <id>201811</id>
    <revision>
      <id>1556180</id>
      <parentid>1556172</parentid>
      <timestamp>2009-07-02T19:36:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and fixed category.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid darkblue 1px; margin: 0px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightcyan;&quot;
| style=&quot;width: 45px; height: 45px; background: white; text-align: center; font-size: 14pt&quot; | '''[[File:Cat03.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em&quot; | This user {{#ifeq:{{{1|}}}|owns|owns|is owned by}} one or more '''[[w:cat|cats]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Cat owner]]&lt;/noinclude&gt;</text>
      <sha1>2wbs49luy1k14nixqafu6f9i1oxm323</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cat lover</title>
    <ns>10</ns>
    <id>201814</id>
    <revision>
      <id>1559357</id>
      <parentid>1556227</parentid>
      <timestamp>2009-07-04T16:17:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #7FFFD4 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #FFD1DC;&quot;
| style=&quot;width: 45px; height: 45px; background: #F0F8FF; text-align: center; font-size: 17pt;&quot; | [[File:Sterling.png|43px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; text-align: center;&quot; | This user is a '''[[w:cat|cat]]''' lover.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Cat lover]]&lt;/noinclude&gt;</text>
      <sha1>55m1hateu1laup8up3sppkf395c6snb</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cat hair</title>
    <ns>10</ns>
    <id>201816</id>
    <revision>
      <id>1556241</id>
      <parentid>1556239</parentid>
      <timestamp>2009-07-02T19:41:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #85C8F2 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #CBEBFF;&quot;
| style=&quot;width: 45px; height: 45px; background: #85C8F2; text-align: center; font-size: 14pt;&quot; | [[File:Sterling.png|43px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user thinks no outfit is complete without cat hair.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Cat hair]]&lt;/noinclude&gt;</text>
      <sha1>9dgfx474c73acfl501h9xuubw47jmnu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User cats userbox</title>
    <ns>10</ns>
    <id>201818</id>
    <revision>
      <id>1556254</id>
      <parentid>1556251</parentid>
      <timestamp>2009-07-02T19:43:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Fixed links and category.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #85C8F2 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #CBEBFF;&quot;
| style=&quot;width: 60px; height: 45px; background: #85C8F2; text-align: center; font-size: 14pt;&quot; | [[File:Litter box.jpg|60px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | This user's [[w:cat|cats]] have their own [[w:litter box|userbox]].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Cats userbox]]&lt;/noinclude&gt;</text>
      <sha1>mw05lubp0uti9fofc9xifvqig5jzgnz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User dog owner</title>
    <ns>10</ns>
    <id>201820</id>
    <revision>
      <id>1556269</id>
      <parentid>1556267</parentid>
      <timestamp>2009-07-02T19:48:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0f1d26 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #fff;&quot;
| style=&quot;width: 45px; height: 45px; background: #0f1d26; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:headstudy_4.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user is owned by one or more '''[[w:dog|dogs]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Dog owner]]&lt;/noinclude&gt;</text>
      <sha1>qte0yikv4ddnaym1pjy2sk375dcuvxg</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User dalmatian owner</title>
    <ns>10</ns>
    <id>201823</id>
    <revision>
      <id>1556301</id>
      <parentid>1556297</parentid>
      <timestamp>2009-07-02T19:55:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid black 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #fff8dc;&quot;
| style=&quot;width: 45px; height: 45px; background: black; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Dalmatian_b_01.jpg|44px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is owned by a &lt;b&gt;[[w:Dalmatian (dog)|Dalmatian]]&lt;b&gt;.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Dalmatian owner]]&lt;/noinclude&gt;</text>
      <sha1>7md4unviubxd3lvliye9b2mkzwjia3f</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User poodle owner</title>
    <ns>10</ns>
    <id>201825</id>
    <revision>
      <id>1556483</id>
      <parentid>1556482</parentid>
      <timestamp>2009-07-03T03:15:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Template:User poodle lover]] to [[Template:User poodle owner]]: Renamed.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid black 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: white;&quot;
| style=&quot;width: 45px; height: 45px; background: black; text-align: center; font-size: 15pt; color: white;&quot; | '''[[File:Poodle.jpg|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user owns a '''[[w:Poodle|Poodle]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Poodle lover]]&lt;/noinclude&gt;</text>
      <sha1>jzdma18siyeugn0ey56pmb9j7jyda4b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User betta owner</title>
    <ns>10</ns>
    <id>201827</id>
    <revision>
      <id>1559358</id>
      <parentid>1556331</parentid>
      <timestamp>2009-07-04T16:18:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #413525 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #FCE7AE;&quot;
| style=&quot;width: 45px; height: 45px; background: #413525; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Kampffisch betta splendenscele4.jpg|70px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is a '''[[w:Betta|Betta]]''' owner.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Betta owner]]&lt;/noinclude&gt;</text>
      <sha1>lphtw3muuuwjzb5cnwjj5cv8dkmgjv7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User fish owner</title>
    <ns>10</ns>
    <id>201829</id>
    <revision>
      <id>1559107</id>
      <parentid>1556343</parentid>
      <timestamp>2009-07-04T01:39:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid darkblue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightcyan;&quot;
| style=&quot;width: 45px; height: 45px; background: #1600A9; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Paracheirodon axelrodi.png|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is a '''[[w:fishkeeping|fish owner]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Fish owner]]&lt;/noinclude&gt;</text>
      <sha1>a5zl7rx5etpgotte06p2pej5rmkec81</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User goldfish owner</title>
    <ns>10</ns>
    <id>201831</id>
    <revision>
      <id>1559108</id>
      <parentid>1556360</parentid>
      <timestamp>2009-07-04T01:40:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid red 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightyellow;&quot;
| style=&quot;width: 45px; height: 45px; background: #A6BCD3; text-align: center; font-size: 14pt; color: black;&quot; | [[File:Wakin goldfish plate.jpg|40px]]
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user owns '''[[w:goldfish|goldfish]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Goldfish owner]]&lt;/noinclude&gt;</text>
      <sha1>om0pjp13nl0i3mpkr1s7akn8u0qctuo</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User guppy owner</title>
    <ns>10</ns>
    <id>201833</id>
    <revision>
      <id>1559105</id>
      <parentid>1556372</parentid>
      <timestamp>2009-07-04T01:39:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid darkgreen 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: palegreen;&quot;
| style=&quot;width: 45px; height: 45px; background: green; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Guppy-male.jpg|45px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is a '''[[w:guppy|guppy]]''' owner.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Guppy owner]]&lt;/noinclude&gt;</text>
      <sha1>9cjifhi9abyh9kaq3d9r1tlk3vo0cak</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User guinea pig owner</title>
    <ns>10</ns>
    <id>201835</id>
    <revision>
      <id>2394813</id>
      <parentid>1559359</parentid>
      <timestamp>2012-08-16T17:02:36Z</timestamp>
      <contributor>
        <username>CommonsDelinker</username>
        <id>49843</id>
      </contributor>
      <minor />
      <comment>Replacing Guinea_1.jpg with [[File:Two_adult_Guinea_Pigs_(Cavia_porcellus).jpg]] (by [[commons:User:Logan|Logan]] because: [[commons:COM:FR|File renamed]]: Change from completely meaningless names into suitable names, according to what the image displa...</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #000 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #DD9200;&quot;
| style=&quot;width: 45px; height: 45px; background: #000; text-align: center; font-size: 12pt; color: #705E00;&quot; | '''[[File:Two_adult_Guinea_Pigs_(Cavia_porcellus).jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: #fff; text-align: center;&quot; | This user is a '''[[w:guinea pig|guinea pig]]''' owner.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Guinea pig owner]]&lt;/noinclude&gt;</text>
      <sha1>j9rn7k33noh9bap0tm5jm44epbo9a2k</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User hamster owner</title>
    <ns>10</ns>
    <id>201837</id>
    <revision>
      <id>1559360</id>
      <parentid>1556389</parentid>
      <timestamp>2009-07-04T16:19:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed plurality.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0f1d26 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: white;&quot;
| style=&quot;width: 45px; height: 45px; background: #white; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Chinese_Hamster.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;text-align: center;&quot; | This user likes the company of '''[[w:hamster|hamsters]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Hamster owner]]&lt;/noinclude&gt;</text>
      <sha1>l5p43pr4j7v4huh8wnkrbx5d5kcbtbl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/ifmmode</title>
    <ns>0</ns>
    <id>201839</id>
    <revision>
      <id>2574190</id>
      <parentid>2483533</parentid>
      <timestamp>2013-10-25T17:59:44Z</timestamp>
      <contributor>
        <ip>138.246.2.177</ip>
      </contributor>
      <comment>/* Examples */</comment>
      <text xml:space="preserve">==Synopsis==
&lt;pre&gt;
\ifmmode &lt;TeX code 1&gt; [\else &lt;TeX code 2&gt;] \fi
&lt;/pre&gt;

==Description==
The \ifmmode command denotes the start of an if-then-else control structure that tests whether TeX is currently in either math mode or display math mode. As indicated in the Synopsis, the \else part is optional. &lt;TeX code 1&gt; is processed if TeX is in one of the math modes, otherwise it is ignored. If the \else section is included and TeX is not in one of the math modes then &lt;TeX code 2&gt; is processed; otherwise it is ignored.

==Examples==
Here are some simple examples:
&lt;pre&gt;
$\ifmmode\mathcal{A}\fi$
&lt;/pre&gt;
will reduce to
&lt;pre&gt;
$\mathcal{A}$
&lt;/pre&gt;

While
&lt;pre&gt;
\def\A{\ifmmode \mathcal{A} \else $\mathcal{A}$ \fi}
&lt;/pre&gt;
defines a macro \A that can be used both in and out of math mode to typeset a calligraphy script A.

{{BookCat}}</text>
      <sha1>h9jn0u4qns3gc794nzr7wy7ld70vkzu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User hedgehog owner</title>
    <ns>10</ns>
    <id>201840</id>
    <revision>
      <id>1940587</id>
      <parentid>1940578</parentid>
      <timestamp>2010-09-29T00:13:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Undo revision 1940578 by [[Special:Contributions/QuiteUnusual|QuiteUnusual]] ([[User talk:QuiteUnusual|talk]]) - cat already present</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:1px solid #000; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#DD9200;&quot;
| style=&quot;width:45px; height:45px; background:#fff; text-align:center;&quot; | '''[[File:-_Erinaceus_europaeus_-.jpg|65px]]'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:#rrr; text-align: center;&quot; | This user has a pet '''[[w:Hedgehog|hedgehog]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Hedgehog owner]]&lt;/noinclude&gt;</text>
      <sha1>pi3gpr0vrmibadfeidx6xqymxy1zet8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User rabbit owner</title>
    <ns>10</ns>
    <id>201842</id>
    <revision>
      <id>1556403</id>
      <parentid>1556400</parentid>
      <timestamp>2009-07-02T21:47:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0f1d26 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #fff;&quot;
| style=&quot;width: 45px; height: 45px; background: #0f1d26; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Netherlanddwarfbunny.jpg|43px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user takes care of one or more '''[[w:rabbit|rabbits]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Rabbit owner]]&lt;/noinclude&gt;</text>
      <sha1>q4y1pasqzvbmfxgf3s51myog1pbp6ac</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Animals</title>
    <ns>4</ns>
    <id>201844</id>
    <revision>
      <id>1556964</id>
      <parentid>1556487</parentid>
      <timestamp>2009-07-03T16:56:30Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added templates.</comment>
      <text xml:space="preserve">==Birds==
{{usbktop}}
{{usbk|User birding}}
{{usbk|User cockatiel owner}}
{{usbk|User parrot owner}}
{{usbkbottom}}

==Domestic cats==
{{usbktop}}
{{usbk|User cat hair}}
{{usbk|User cat lover}}
{{usbk|User cat owner}}
{{usbk|User cats userbox}}
{{usbkbottom}}

==Domestic dogs==
{{usbktop}}
{{usbk|User dalmatian owner}}
{{usbk|User dog owner}}
{{usbk|User poodle owner}}
{{usbkbottom}}

==Fish==
{{usbktop}}
{{usbk|User betta owner}}
{{usbk|User goldfish owner}}
{{usbk|User guppy owner}}
{{usbk|User fish owner}}
{{usbkbottom}}

==Rabbits and rodents==
{{usbktop}}
{{usbk|User fancy rat owner}}
{{usbk|User guinea pig owner}}
{{usbk|User hamster owner}}
{{usbk|User hedgehog owner}}
{{usbk|User rabbit owner}}
{{usbkbottom}}

==Other animal- and pet-related userboxes==
{{usbktop}}
{{usbk|User no pet}}
{{usbk|User pets only from animal shelter}}
{{usbk|User tamagotchi}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>04wb2vga8ebvzobdlg04789gri3sol6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.6.2</title>
    <ns>1</ns>
    <id>201845</id>
    <revision>
      <id>1568765</id>
      <parentid>1566105</parentid>
      <timestamp>2009-07-14T16:58:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/Content Articles/2.6.2]] to [[Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 2/2.6.2]]: Talk page wasn't m</comment>
      <text xml:space="preserve">
== Reader Responses ==
This article i found to be very informative.  I believe that an effective teacher should use both teacher and students centered philosophies.  Positive reinforcements are  extrememly successful in the teacher centerede approach, especially when working with young children.  Student centered approachs allow students to work in groups and do more hands on activites.  I learned some of the basics of the different approaches and learned the benefits of both of the approaches. [[User:Lwill031|Lwill031]] ([[User talk:Lwill031|talk]]) 13:55, 11 July 2009 (UTC)

This well written article clearly described both teacher-centered and student-centered classrooms while providing supporting evidence for the reasoning behind and potential effectiveness for each.  I beleive that a modern classroom should have a combination of both learning environments in order to be successful.  A teacher-centered approach helps to keep student behavior in check by providing positive reinforcement through appropriate teacher modeling.  I support student-centered learning because it fosters social development through peer interaction.  Cooperative learning environments allow students at all levels the ability to participate in classroom activities while providing learning that is appropraite for their ability level.  Students remember more when they make connections to a new concept.  Children can easily memorize facts, but I find that they retain more through inquiry using interactive learning techniques. [[User:Acrow005|Acrow005]] ([[User talk:Acrow005|talk]]) 01:12, 10 July 2009 (UTC) 


This was a very good article that is beneficial to us as future teachers.  I think that student centered classrooms are important.  They engage the student with group activities. They learn problem solving and it is said that we learn 80% of what we experience personally, and 95% of what we teach to someone else.  The group activities are so important because they help build friendships, enhance self-esteem, and help establish good communication skills. The face to face interaction helps students learn to value individual differences and how to work together effectively while encouraging each other.  All of these things are important in the workforce. When students are engaged they are motivated and learn better.
[[User:Aferg006|Aferg006]] ([[User talk:Aferg006|talk]]) 23:56, 3 July 2009 (UTC)

I thought this article did a very good job of explaining the basics of the difference between student centered learning and teacher centered learning.  There are times in the classroom when one is more appropriate than the other.  Having said that, I think that more and more, student centered learning is becoming prevalent in the classroom and I am a fan of cooperative learning techniques.  I believe that student centered learning is a more active type of learning style and when a student is engaged, they are better able to remember what they have learned and better able to apply what they have learned to real world situations.[[User:Sciaston|Sciaston]] ([[User talk:Sciaston|talk]]) 23:29, 2 July 2009 (UTC)

Despite constantly hearing about a student-centered and teacher-centered classroom, I only discovered what it really meant when I visited the Newport News Public Schools website. One section had a diagram with a list of basic teaching instruction. On the side was a two-way arrow, displaying how some activities were more student-centered than others. This one diagram was really important to me, because it presented to me how student-centered, or teacher-centered, my lesson plans were. I believe that many teachers think that they know the difference between the two classrooms, when they actually do not. As a result, their students enter a learning environment where the teacher benefits more than they do. In today’s schools, it is very obvious that learning should be directed towards the student, however it is not simple to stop more than an approach of teaching and learning that has lasted since the beginning of schools. In my opinion, classrooms should be 60-70% student-centered and 30-40% teacher-centered. As the article mentioned, some concepts are best taught through a teacher-centered classroom with lecture, reading and memorization, especially for knowledge learning targets and students who are visual or auditory learners. Nevertheless, students have to be active within the learning process and be able to apply their knowledge in the real world. They are the sole reason that the classroom exist; for that reason, the classroom should designed for student. [[User:Adart001|Adart001]] ([[User talk:Adart001|talk]]) 19:52, 4 July 2009 (UTC)</text>
      <sha1>bz1d2gsljd4jcfqiz3a0ohp6ihnlmgh</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>TeX/else</title>
    <ns>0</ns>
    <id>201846</id>
    <revision>
      <id>1578126</id>
      <parentid>1556430</parentid>
      <timestamp>2009-07-24T13:50:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">==Description==
The \else command is used to include the optional else construct of TeX's many if-then-else control structures which include:  
*[[TeX/if|\if]]
*[[TeX/ifcase|\ifcase]]
*[[TeX/ifcat|\ifcat]]
*[[TeX/ifdim|\ifdim]]
*[[TeX/ifeof|\ifeof]]
*[[TeX/iffalse|\iffalse]]
*[[TeX/ifhbox|\ifhbox]]
*[[TeX/ifhmode|\ifhmode]]
*[[TeX/ifinner|\ifinner]]
*[[TeX/ifmmode|\ifmmode]]
*[[TeX/ifnum|\ifnum]]
*[[TeX/ifodd|\ifodd]]
*[[TeX/iftrue|\iftrue]]
*[[TeX/ifvbox|\ifvbox]]
*[[TeX/ifmode|\ifmode]]
*[[TeX/ifvoid|\ifvoid]]
*[[TeX/ifx|\ifx]]

The use of each of these take the form
&lt;pre&gt;
\if*&lt;arguments&gt; &lt;TeX code 1&gt; \else &lt;TeX code 2&gt; \fi
&lt;/pre&gt;
where \if* is one of the commands listed above, &lt;arguments&gt; are all the arguments, if any, required by \if*, and &lt;TeX code 1&gt; and &lt;TeX code 2&gt; are each a piece of TeX code. The code &quot;\if*&lt;arguments&gt;&quot; either evaluates to true of false; if true then TeX processes &lt;TeX code 1&gt; and ignores &lt;TeX code 2&gt;; if false then TeX ignores &lt;TeX code 1&gt; and processes &lt;TeX code 2&gt;.

==Examples==
Consider the code
&lt;pre&gt;
\ifmmode \mathcal{A} \else $\mathcal{A}$ \fi
&lt;/pre&gt;
[[TeX/ifmmode|\ifmmode]] tests whether TeX is in one of the math modes; it does not require any arguments, and so &lt;arguments&gt; is blank. If TeX is in one of the math modes then \ifmmode evaluates to true. So if the above code were used in math mode, then the expression as a whole would reduce to &quot;\mathcal{A}&quot;, otherwise &quot;$\mathcal{A}$&quot;.

Now consider
&lt;pre&gt;
\ifodd2 odd \else even \fi
&lt;/pre&gt;
In this case [[TeX/ifodd|\ifodd]] requires an argument that evaluated to an integer. &quot;\ifodd2&quot; evaluates to false, and so the TeX will typeset the word &quot;even&quot;.

{{BookCat}}</text>
      <sha1>p9cwx9phgqsmyuixv2bszxx88f6xi9p</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Trainz/Tutorial for adding night mode with Blender</title>
    <ns>0</ns>
    <id>201848</id>
    <revision>
      <id>1581566</id>
      <parentid>1556455</parentid>
      <timestamp>2009-07-28T12:49:23Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <text xml:space="preserve">Night mode consists of a second mesh that is invoked at night.  Usually this takes the form of a set of planes that cover the existing windows.  Note that for performance reasons sharing the texture file used with the main texture file is to be preferred so place the night.im file in the same folder as the main.im or body.im and texture file.  The secondary .im file can be created in Blender by sizing the plane to just cover the window or part of a window in the case of emulating curtains and referencing the normal texture file.  When creating the night.im file in Blender first move all the window planes to a separate level adjust the emit slider see under textures for self illuminating then export the night.im file.

Note any colour can be emitted not just white.

Use 86627:2474:3 or later as an example of the config.txt file.

{{BookCat}}</text>
      <sha1>3h0dz4zr6ztivw5sjh6qwm8gvaacz1x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:LordOfTheBirds</title>
    <ns>3</ns>
    <id>201849</id>
    <revision>
      <id>1556469</id>
      <timestamp>2009-07-03T02:37:26Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Unstoppable Robot</title>
    <ns>3</ns>
    <id>201850</id>
    <revision>
      <id>1556472</id>
      <timestamp>2009-07-03T02:37:28Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Dofte</title>
    <ns>3</ns>
    <id>201851</id>
    <revision>
      <id>1556473</id>
      <timestamp>2009-07-03T02:37:28Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>{{checkuserblock}}</comment>
      <text xml:space="preserve">{{mbox|type=warning|msg='''You have been indefinitely [[Wikibooks:Blocking policy|blocked]] from editing Wikibooks. This was done in accordance with policy because of your disruptive edits.

Please note that page blanking, addition of random text or spam, deliberate misinformation, privacy violations, [[Wikibooks:No personal attacks|personal attacks]], and repeated, blatant violations of our [[Wikibooks:Neutral point of view|neutral point of view]] policy are considered [[Wikibooks:vandalism|vandalism]]. If you wish to make useful contributions, you are welcome to come back after the block expires.&lt;br&gt;To request to be unblocked, add {{tlx|unblock|reason}} to [[Special:MyTalk|your user talk page]], which you can still edit.&lt;br/&gt;&amp;nbsp;'''&amp;mdash;&amp;nbsp;[[User:Mike.lifeguard|&lt;b style=&quot;color:#309;&quot;&gt;Mike.lifeguard&lt;/b&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;span style=&quot;color:#309;&quot;&gt;talk&lt;/span&gt;]]&lt;/sup&gt; 02:37, 3 July 2009 (UTC)}}</text>
      <sha1>elptm6o0jkuwvnqkd353q38jcpm5usi</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User parrot lover</title>
    <ns>10</ns>
    <id>201852</id>
    <redirect title="Template:User parrot owner" />
    <revision>
      <id>1556480</id>
      <timestamp>2009-07-03T03:11:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User parrot lover]] to [[Template:User parrot owner]]: Renaming.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User parrot owner]]</text>
      <sha1>7zkhyyl45ho3vn0n9cf2mhpn9bl4kpu</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User poodle lover</title>
    <ns>10</ns>
    <id>201853</id>
    <redirect title="Template:User poodle owner" />
    <revision>
      <id>1556484</id>
      <timestamp>2009-07-03T03:15:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User poodle lover]] to [[Template:User poodle owner]]: Renamed.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User poodle owner]]</text>
      <sha1>k213ao7u0us4osqruyo49vp7powllpm</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>One-to-One Laptop Schools/Maine</title>
    <ns>0</ns>
    <id>201854</id>
    <revision>
      <id>1561886</id>
      <parentid>1561884</parentid>
      <timestamp>2009-07-07T03:54:11Z</timestamp>
      <contributor>
        <username>Dvitalo12</username>
        <id>212119</id>
      </contributor>
      <text xml:space="preserve">{{One-to-One Laptop Schools/Contents}}
{{TOCright}}

== The Maine Initiative and its Demographics ==
[[Image:Maine_Building.jpg|right|250px|Used by permission of freelance photographer]]
The Maine Learning Technology Initiative (MLTI) is an ongoing effort to put in the hands of every student (and teacher) in the state of Maine, grades 7 through 12,  a laptop and Internet connectivity, with the ultimate goal of enhancing their learning and training them in the practice of skills many believe will be necessary to succeed and excel in the 21st century. The initiative was the thought-child in the year 2000 of, then governor of Maine, Angus King. Gov King, an established business leader, successful politician, and someone known for forward-looking thought, wrestled with how to stimulate his own economy and create jobs (Carvin, 2006). He observed other states at the time cutting taxes, encouraging R&amp;D and international trade, but he also saw those steps as too halting (“with Maine 37th in per capita income nationally, we had to do something much more far reaching”) (Carvin, 2006). He proposed that an unforeseen 70 million dollar surplus in the state budget be used for this large-scale undertaking that, in his mind, would equip the “next generation to ask the right questions and identify the issues” instead of stuffing them with facts (Carvin, 2006). The renowned educational thinker Seymour Papert, a resident of Maine, was also a key influence on his thought: Papert believed that only when every child has his/her own tool will the deeper kind of (i.e., constructivist) learning become a reality in schools.
[[Image:students-using-laptop.jpg|left|350px]]
Thus began one of the most ambitious educational endeavors ever undertaken and the first such statewide laptop initiative. Whatever else might be argued for or against Maine, no one can deny that it was characterized by incomparable planning from the beginning. In 2000, a Task Force was established to report to the legislature and it discussed in extraordinary detail virtually every aspect of the initiative, from estimated costs, to teacher training, to evaluation, to timeline (Task Force on the Maine Learning Technology Endowment, 2001). The Task Force also laid out clearly the goals of the initiative. Expanding upon the ones Gov. King had enunciated—equity of access to technology, thorough integration with Maine’s learning goals and curricula, and economic development—it added a) teacher preparation and ongoing professional development, b) sustainability, c) developing a bold vision” of integration, d) lifelong learning for Maine citizens, e) “fostering the equitable sharing of costs” (among public and private sector, taxpayers, and philanthropists, and f) local participation and flexibility (“enabling local school units and communities to determine how the MLTE plan will” in their specific district) (Task Force on the Maine Learning Technology Endowment, 2001).

Preceded by a piloting program in nine districts that involved, among other things, the creation of a vast network of teacher mentors and content specialists, the plan rolled out to 7th graders in the fall of 2002 and 8th graders in the fall of 2003. A total of 37,000 Apple 12 inch iBooks, with a full complement of software and infrastructure for wireless networks, were distributed (Muir, 2003). Teachers received their machines in the summers before each rollout and attended training conducted by Apple and later by teacher mentors (Muir, Knezek, &amp; Christensen, 2004). Middle school students were targeted first because the planners reasoned that they were still the most open to the excitement of learning, and at the same time would have more responsibility than younger children when it came to the care of the laptops (Muir, Manchester, &amp; Moulton, 2005). In the fall of this year (2009), the program will expand to all high school children and teachers (grades 9 through 12), with a deployment of over 100,000 leased Mac Books (MLTI Project Team, 2009).&lt;ref&gt;With plans to continue through 2012-2013.&lt;/ref&gt; The demographics of the state of Maine are rather diverse: they break down into generally poorer northern counties (median income at $39,000 in 2005), with less Internet penetration (15% Internet access at home in 2005) to wealthier southern counties (with median income between $50,740 and $56,999, 2007) and Internet access at 68% of homes (2007) (Task Force on the Maine Learning Technology Endowment, 2001). Primary industries in Maine are agriculture, textile, marine, shipping, and tourism. Technology, nevertheless, is well penetrated in some firms in both the north and the south (Muir, Knezek, &amp; Christensen, 2004). Computer penetration in Maine’s schools in 2002 was anywhere between a 10 to 1 ratio and a 5 to 1 ratio, many schools had rolling computer labs, most had wireless networks already, and teacher comfort and degree of use of technology in classes was low on both counts.  Difficulties teachers expressed before the initiative first rolled out had to do with not having enough time to integrate fully technology, technical problems not being resolved in a timely fashion, and lack of technical support with software (Task Force on the Maine Learning Technology Endowment, 2001).
[[Image:ibooksforyou.jpg|right|350px|Wikimedia image]]
== Maine’s Value and Importance ==

What is the value of the MLTI project for K-12 education in general? One benefit will certainly be the accumulated knowledge about how to integrate technology into classrooms and specific content areas. Much of this is being cataloged at [http://archives.mainelearns.org/index.php MaineLearns archives] where for the last 7 years, Teacher Leaders, Content Mentors, teachers, and students have been posting software tutorials and tips, lesson plans integrating technology, blogs on how to use technology in classrooms and the field, and student projects, each broken down into specific content areas and grade levels. These resources, now in the thousands--tested and honed in the fires of real classrooms--should prove valuable for educators everywhere. The resources are publicly accessible by anyone on the Internet.

Of course, another value of MLTI will be what it tells educators about the one-to-one proposition. Does it truly enhance learning? What gains were seen for student achievement and in what areas of the curriculum were they seen? What downsides were there to the initiative and how severe were they (cost of replacement cycles has been one area where more than one school has seen prohibitive costs) (Hu, 2007).  Then, are there other mixes of technology that might present a more cost-effective way of doing things? (Appel, 2006). Chris Toy, principal of the Freeport Middle School in Maine, discusses many of the things he learned from the MLTI, but the one thing he emphasizes over all else is the example the principal of each local school sets for using technology, for supporting it, and for championing it (Toy, 2008). The Initiative can also be held up as one excellent example for how to do training and professional development.

== Planning or Process Responsible for Greatest Success == 
&lt;ref&gt;Some of the material in this section comes from a perusal of Chris Toy’s article, where he discusses, quite candidly, both successes and failures of MLTI from his perspective at Freeport (Toy, 2008).&lt;/ref&gt;

Before talking about the process responsible for the greatest success in MLTI, we might want to ask what is the greatest success of MLTI? One can still only look at middle school results since the high school program is just getting ready for deployment this fall. There is still a great deal of data that one can consider when looking for the successes. Examples are data on student achievement such as test scores, observations of teachers about student work and motivation, the actual work of students, their attendance and their observations of their own work and motivation, the satisfaction of certain equity goals, and the ability to keep cost reined in for the laptop program. Studies point to significant reductions in student absenteeism, and a combination of teacher observation and student reaction report greater student motivation across subjects and grades (Maine Education Policy Research Institute, University of Maine Office, 2003). As for the data on student achievement gains, one is first of all largely reliant upon the evaluation work of certain bodies that appear to have close relationships with the planners and shapers of the MLTI, namely the Maine Education Policy Research Institute of the University of Maine.  This, indeed, has been a criticism of MLTI (Jackson, 2004). Furthermore, the criticism has been made that when it comes to the impact of laptops upon student achievement test scores, the description of the tests conducted as well as the meaning of the scores collected have been couched in vague terms (Appel, 2006).  
[[File:Training.jpg|left|350px]]

When one considers MEPRI Research Briefs such as the studies done on student writing skills, the mathematics skills, and the studies on laptop use by learning disabled students, one comes away with mixed feelings concerning what is really demonstrated. In the area of writing, 70% of students and teachers report that they felt laptops helped them write better, by enabling them to revise and make drafts easier. However, test scores on the MEA writing scale proficiency assessment (itself not explained very well) were insignificant when year 2000 was compared with 2007(Silvernail, &amp; Gritter, 2007). In the area of mathematics, the MEA mathematics test on the two clusters “Numbers and Operations” and Patterns” point to significant gains between 2002 and 2004: the report states that students, after working with their teachers using certain digital mathematics modeling tools (but we are not told which ones), improved in their ability to use causal modeling techniques and hierarchical linear modeling (Silvernail, &amp; Buffington, 2009). In the area of the special education program, teachers observed that some students were greatly helped by laptop use: their writing skills, concentration skills, and organizational skills all improved. Others were over-stimulated by the laptops and recommendations were made they not use them (Maine Education Policy Research Institute, University of Maine Office, 2004). The bottom line of this discussion seems to be that the court is still out on test achievement improvements under MLTI and, furthermore, there is a need for research from firms more distanced from the Maine initiative.

When it comes to the equity goals of MLTI, many would agree that there is definitive success here. The initiative has reached the stage where the laptops can be taken home (with parents picking up a low cost insurance claim), and this will continue in the high school program. As for Internet access at home, a $5 million gift has been earmarked to provide wireless access through the Middlemaine server at each local school district, and something like this will continue at the high school level. By accessing Internet through the Maine server, proxied or restricted access can also be maintained (MLTI Project Team, 2009). In the high school initiative, the laptops will also be loaded with links to Maine’s Career Center resources so that parents can use the machines to pursue job opportunities and career advancement (MLTI Project Team, 2009).

In the opinion of many, the greatest success of MLTI thus far and the process that lead to it must be considered the coordination of the contract for purchase and ongoing support made with Apple. In reading about other OLPC programs in the U.S. that are now defunct, one hears again and again that it was excessive maintenance costs that lead to their demise (Hu, 2007; also Jackson, 2004). From the start, the MLTI planners made good decisions about the hardware-software mix: they chose software for the machines that leaned heavily on open-source, but which also closely served educational purposes.&lt;ref&gt;See the 2009 Participation Packet for information on the software mix then and now (MLTI Project Team, 2008/09).&lt;/ref&gt; In this way, they could afford to ask for more in certain critical areas, like a maintenance plan lasting between three and four years and online and phone support from Apple, both to target past complaints from educators.&lt;ref&gt;The online database tools like inventory and trouble ticket reporting did not hurt, but one is not sure how well they work in actual practice.  See them all linked in the educator technical and policy manual here: http://maine.gov/mlti/resources/manuals.shtml&lt;/ref&gt; Of course, they emphasized wireless connections to keep down network infrastructure costs. They also coordinated a sharing of costs between federal government entities, the state of Maine, and the local school districts. The cost per local school district for the upcoming high school deployment is $242/seat, quite cost-beneficial by all accounts (MLTI Project Team, 2009).

A close second when it comes to a process involved in success has to be the way that technology integration was conceived and, as a result, the training of teachers conducted.   
Not only did the planners of MLTI and the designers of teacher training never appear to become enamored with technology apart from learning goals, but the placing of technology to the service of curricular goals and not the other way around was and remains the focus of the initiative. The Maine’s Learning Results document was held up as the focus throughout (as well as during the RFP process) (Task Force on the Maine Learning Technology Endowment, 2001). O’Donovan (2009) states: “laptop programs have to support the standards that students are expected to learn.” Even if the laptops enhance innovation, creativity, and research, this does not go far enough.&lt;ref&gt;Also, Bette Manchester, a top project director of MLTI, made the following astute and eye opening remark about the planning of the initiative: “There needs to be a leadership team that looks at things through three different lenses: the lens of curriculum and content; the lens of the culture of the building; and the lens of technical needs (O’Donovan, 2009).&lt;/ref&gt; Toy (2008) also states that “it is difficult for teachers to change practices without extensive staff development.” The planners of Maine’s training programs, evidenced by the many sessions, tutorials, and others resources one sees listed on their Mainelearns websites, kept their eyes securely on the right goals. If Toy’s (2008) comments and other blogs are any indication, MLTI seems to have excelled in the area of creating the right culture, the right support level, and the right vibe.

Thus, one concludes under this section that more research is needed into student achievement as well as more independent research. Also, it will take even more time to see gains made due to the need to train teachers on practices they are not used to; thus, an OLPC program will never be a quick fix (e.g., a school pressing to make NLCB gains should not opt for a OLPC).

== Planning or Process Responsible for Most Serious Problems ==
[[Image:teacher_child_laptop.jpg|right|200px|Used by permission of Edutopia]]
Problem areas in MLTI would have to relate to the failure to choose more independent research firms and more thorough research in general and also to a failure to get the private sector more involved in funding. MLTI was diligent about having research—formative and summative analyses—done on the initiative from the very beginning.  They recognized that without research into the effects of the initiative on student learning and achievement, they would likely not be able to get renewed funding for it (Muir, 2003). However, the avenues they pursued to do research should have been less closely connected with the state school system. The documents one reads about the mandate of the Maine Educational Policy Initiative state that it is “an institute jointly funded by the Maine State Legislature and the University of Maine System” and has no financial or conceptual interests in endorsing any particular policy or initiative in the education of Maine’s youth [http://usm.maine.edu/cepare/index.htm See here].  However, many of the research briefs come off as though they support MLTI efforts a little too often for one’s comfort. Another problem in the research done is lack of concrete detail about what the tests employed in the studies actually measure. (The writing and mathematics Research Briefs referenced above are particularly good examples).  There is also a greater need in these studies to control for other factors that may be affecting outcomes (Appel, 2006).

When it comes to funding the initiative on an ongoing basis, MLTI has done an excellent job spreading the funding around both in 2002 and today. The new deployment once again draws upon e-rate funds, State Fiscal Stabilization funds and state recovery funds as well as title funding used by the local school districts. One can’t help but admire the creative ways the shapers of MLTI have worked the initiative, allowing the local districts to decide on actual participation in the program and them assisting them in finding all available funding&lt;ref&gt;See specifically [http://www.maine.gov/tools/whatsnew/index.php?topic=MLTIdeployFAQ&amp;id=69976&amp;v=faqfull this document] under 2009 deployment FAQ’s (MLTI Project Team, 2009).&lt;/ref&gt; However, the one thing missing from funding still seems to be the influence of the private sector. We hear of nothing in the documentation after Guilford Industries enters the mix back in 2001 (MLTI Project Team, 2009). One would think that with that example and all business has to gain from such a program, there would be greater interest and greater pursuit of that dollar on the part of the planners of MLTI.

== Summary ==

MLTI was an enormous undertaking and a risky one at that, but one that in the final analysis ought to be applauded for its calculated daring in its concern for the future of Maine’s youth. Without any models to emulate, it also did an extraordinary job of keeping its focus on curriculum goals with the technology serving those goals and not the other way around, and also left a comfortable amount of room for local control. The exceptional training and background support (technical and personal/emotional) available to teachers created the right culture for success. It was also creative in its funding strategies. However, to answer the questions about student achievement gains more satisfactorily, the initiative needs more independent and well thought through research. Gains in increased student attendance and motivation are both very positive signs and may be precursors to gains in other areas more closely related to curriculum, but we need more evidence of this. The initiative has taught us all a number of very important things about the OLPC proposition; we look forward to better research (and more of it) and which focuses on content areas or curricular goals.

== Notes ==

&lt;references/&gt;

== References ==

Appel, J. (2006). School laptop debate heats up. ESchoolNews, 126. Retrieved June 28,
2009, from http://www.eschoolnews.com/news/top-news/index.cfm?i=41305&amp;CFID=16191675&amp;CFTOKEN=36251520

Carvin, A. (2006, June 22). Angus King: a brief history of Maine's laptop program.
Message posted to http://www.andycarvin.com/archives/2006/06/angus_king_a_brief_h.html

Hu, W. (2007, May 4). Seeing no progress, some schools drop laptops. The New York
Times. Retrieved from http://www.nytimes.com/2007/05/04/education/04laptop.html

Jackson, L. (2004). One-to-one computing: lessons learned and pitfalls to avoid.
Education World, 27. Retrieved June 25, 2009, from http://www.education-world.com/a_tech/tech/tech197.shtml

Maine Education Policy Research Institute, University of Maine Office. (2003). The
Maine learning technology initiative: teacher, student, and school perspectives mid-year evaluation report. Retrieved June 10, 2009, from http://mainegov-images.informe.org/mlti/articles/research/Mid-Year%20Evaluation2003.pdf

Maine Education Policy Research Institute, University of Maine Office. (2004). The
Maine learning technology initiative: laptop use by seventh grade students with disabilities: perceptions of special education teachers. Retrieved June 8, 2009, from  http://maine.gov/mlti/articles/research/MLTI_SpecEd2004.pdf

MLTI Project Team. (2008/09). MLTI 2009 deployment participation packet. Retrieved
June 20, 2009, from http://maine.gov/mlti/deployment/2009MLTIParticipationPacketv2.pdf

MLTI Project Team. (2009). MLTI 2009 deployment faq. Retrieved June 20, 2009, from
http://www.maine.gov/mlti/deployment/dfaq.shtml

Muir, M. (2003). Maine’s learning with laptop initiative. Edtechnot. Retrieved June 8,
2009, from http://www.edtechnot.com/notarticle1203.html

Muir, M., Knezek, G., &amp; Christensen, R. (2004). The power of one- to-one. (ERIC
Document Reproduction Service No. EJ695898). Retrieved from ERIC database.

Muir, M., Manchester, B., &amp; Moulton, J. (2005). Special topic: learning with laptops.
Educational Leadership, 62, 1-7.

O’Donovan, E. (2009). Are one-to-one laptop programs worth the investment? District
Administration, 149. Retrieved June 8, 2009, from http://www.districtadministration.com/viewarticlepf.aspx?articleid=1883

Silvernail, D. L. &amp; Buffington, P. J. (2009). Improving mathematics performance, using
laptop technology: the importance of professional development for success. Retrieved June 11, 2009, from University of Southern Maine, Center for Education Policy, Applied Research, and Evaluation Web site:  http://www.usm.maine.edu/cepare/pdf/Mathematics_Final_cover.pdf

Silvernail, D. L. &amp; Gritter, A. K. (2007). Maine’s middle school laptop program: creating
better writers. Retrieved March 22, 2008, from University of Southern Maine, Center for Education Policy, Applied Research, and Evaluation Web site: http://www.usm.maine.edu/cepare/Impact_on_Student_Writing_Brief.pdf 

Task Force on the Maine Learning Technology Endowment (2001). Teaching and
learning for tomorrow:
a learning technology plan for Maine’s future. Retrieved June 8, 2009, from http://maine.gov/mlti/resources/history/mlterpt.pdf

Toy, C. (2008). Ten lessons learned: considerations for school leaders when
implementing one-to-one learning. Meridian, 11(1). Retrieved June 27, 2009, from http://www.ncsu.edu/meridian/win2008/tenlessons/index.htm</text>
      <sha1>ptkns8uvam4ys6n3m4ualmjvvsx004b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Students-using-laptop.jpg</title>
    <ns>6</ns>
    <id>201856</id>
    <revision>
      <id>1556869</id>
      <parentid>1556493</parentid>
      <timestamp>2009-07-03T14:32:33Z</timestamp>
      <contributor>
        <username>Dvitalo12</username>
        <id>212119</id>
      </contributor>
      <comment>uploaded a new version of &amp;quot;[[File:Students-using-laptop.jpg]]&amp;quot;: {{Information
|Description=child and learning
|Source=Edutopia
|Date=7-21-06
|Author=MLTI
|Permission=used by permission Edutopia
|other_versions=
}}</comment>
      <text xml:space="preserve">== Licensing: ==
{{dual license|GFDL|cc-by-sa-3.0}}</text>
      <sha1>3u02fupj6n5rezuq08c981evz4b9v46</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Barbeque fried rice</title>
    <ns>102</ns>
    <id>201861</id>
    <revision>
      <id>2069124</id>
      <parentid>1785591</parentid>
      <timestamp>2011-03-13T16:08:04Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Fixed energy</comment>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|6|20 minutes|2||160 kcal.}}

{{Recipe}}

==Ingredients==

* 2½ tbsp. [[Cookbook:Olive Oil|olive oil]]
* 1½ tbsp. [[Cookbook:Sesame Oil|sesame oil]]
* 3 cloves [[Cookbook:Red onion|red onion]], minced
* 3 cloves [[Cookbook:Garlic|garlic]], minced
* 2 red [[Cookbook:Chilli|chillies]], cut 1 cm
* 200 g minced [[Cookbook:Pork|pork]]
* 1 [[Cookbook:Carrot|carrot]], diced
* ½ [[Cookbook:Horseradish|horseradish]], cut like match
* 3 [[Cookbook:Scallion|scallions]], cut 1 cm
* 500 g [[Cookbook:Rice|rice]]
* 25 ml [[Cookbook:Barbecue Sauce|barbeque sauce]]
* 2 tbsp. black [[Cookbook:Soy sauce|soy sauce]]
* 1½ tbsp. [[Cookbook:Salt|salt]]
* 1½ tbsp. [[Cookbook:Pepper|pepper]]

==Dressing (as optional)==

* Fried egg
* Pickles
* Tomato
* Cucumber
* Fried onion
* Salt
* Shrimp crackers
* Beef steak
* Vegetables (from mixture corn, carrot and peas)

==Procedures==

# Heat the olive oil and sesame oil on non-stick pan. Fry the garlic and red onion until fragrant. Stir until the garlic and red onion are golden brown. And then add the red chilli.
# Add the pork. Stir until pork changing the color. And then add horseradish and scallion.
# Add the rice, and then barbeque sauce, black soy sauce, salt and pepper. Stir until mixed all.
# Served with dressing.

[[Category:Rice recipes]]
[[Category:Fried rice recipes]]
[[Category:Barbecue recipes]]</text>
      <sha1>fu8jk7i9fac9h11lrlm5mo9ofocixr1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Abhijeet Patil</title>
    <ns>3</ns>
    <id>201862</id>
    <revision>
      <id>1556516</id>
      <timestamp>2009-07-03T07:01:45Z</timestamp>
      <contributor>
        <username>Abhijeet Patil</username>
        <id>250408</id>
      </contributor>
      <comment>Created page with 'I am abhijeet patil can I read wikibooks?'</comment>
      <text xml:space="preserve">I am abhijeet patil can I read wikibooks?</text>
      <sha1>3shw6d9uhkjddd8a159ezxt1343gefz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category talk:Non-alcoholic cocktails</title>
    <ns>15</ns>
    <id>201863</id>
    <revision>
      <id>1556638</id>
      <timestamp>2009-07-03T09:50:59Z</timestamp>
      <contributor>
        <ip>83.229.15.26</ip>
      </contributor>
      <comment>Created page with 'who is the best mixologist ever discover?pls send to agwumba75@yahoo.co.uk'</comment>
      <text xml:space="preserve">who is the best mixologist ever discover?pls send to agwumba75@yahoo.co.uk</text>
      <sha1>btd76rgknua09j9hp79k9apy6g5z1l3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Mathematics Worksheet/Volume and Surface Area of 3D Shapes</title>
    <ns>0</ns>
    <id>201865</id>
    <revision>
      <id>2492013</id>
      <parentid>2490314</parentid>
      <timestamp>2013-02-25T20:25:28Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <minor />
      <comment>formatting</comment>
      <text xml:space="preserve">==Cuboid==

# Find the volume of a cuboid if the dimensions are:
## length = 9 cm, width = 85 cm and height = 3.0 cm
## length = 6.5 cm, width = 6 cm and height = 4.5 cm
## length = 12 cm, width = 5 cm and height = 6 cm
## length = 7 cm, width = 10.2 cm and height = 8.3 cm
## length = 8.4 cm, width = 6.5 cm and height = 20 cm
## length = 5 cm, width = 10 cm and height = 20 cm
## length = 14 cm, width = 7.5 cm and height = 10 cm
## length = 22 cm, width = 7 cm and height = 5.2 cm
## length = 21 cm, width = 6 cm and height = 9 cm
## length = 15.7 cm, width = 6.4 cm and height = 8.9 cm
## length = 14.6 cm, width = 6.1 cm and height = 7.7 cm
## length = 9 cm, width = 16.7 cm and height = 11 cm
## length = 25 cm, width = 16 cm and height = 9 cm
## length = 14.6 cm, width = 5.82 cm and height = 12.5 cm
## length = 30.1 cm, width = 14 cm and height = 22.5 cm
## length = 14 cm, width = 7 cm and height = 3.5 cm
## length = 36.6 cm, width = 21.9 cm and height = 30 cm
## length = 42 cm, width = 4.74 cm and height = 12.52 cm
## length = 26 cm, width = 35 cm and height = 7 cm
## length = 50 cm, width = 16 cm and height = 15.64 cm
## length = 85 cm, width = 20 cm and height = 44 cm
# Find the surface area of a cuboid if the dimensions are:
## length = 512 cm, width =1.32cm, height=9.975cm
## length = 6 cm, width = 8 cm and height = 10 cm
## length = 15 cm, width = 6 cm and height = 9 cm
## length = 14 cm, width = 5 cm and height = 4 cm
## length = 17.5 cm, width = 12 cm and height = 8 cm
## length = 15 cm, width = 12.5 cm and height = 24 cm
## length = 25 cm, width = 15 cm and height = 20 cm
## length = 32 cm, width = 8 cm and height = 24 cm
## length = 45 cm, width = 35 cm and height = 55 cm
## length = 60 cm, width = 35 cm and height = 40 cm

==Cube==

# Find the volume of a cube if the edge is:
## 4 cm
## 6 cm
## 7.5 cm
## 12 cm
## 15 cm
## 16.5 cm
## 19.2 cm
## 21.3 cm
## 22 cm
## 25 cm
## 30 cm
## 32.7 cm
## 34.32 cm
## 37 cm
## 45 cm
## 57.5 cm
## 61.537 cm
## 65.463 cm
## 70 cm
## 100 cm
# Find the surface area of a cube if the edge is:
## 2 cm
## 3.3 cm
## 4.3 cm
## 6 cm
## 7.5 cm
## 8.6 cm
## 10 cm
## 15 cm
## 16.5 cm
## 17 cm
## 20 cm
## 24.3 cm
## 26.4 cm
## 31.2 cm
## 32.5 cm
## 65 cm
## 75 cm
## 80 cm
## 92.5 cm
## 100 cm

==Cylinder==

# Find the volume of a cylinder if the radius or diameter and height are: (Use &lt;math&gt;\!3.14&lt;/math&gt; if the radius or diameter is not a multiple of 7 and use &lt;math&gt;\frac{22}{7}&lt;/math&gt; if the radius or diameter is a multiple of 7.)
## diameter = 28 cm, height = 12 cmi dnt ilike 8cm lengeth hahahahha 8 cm
## radius = 12 cm, height = 10 cm
## diameter = 10 cm, height = 5 cm
## radius = 35 cm, height = 14 cm
## diameter = 32 cm, height = 7 cm
## diameter = 20 cm, height = 13 cm
## radius = 42 cm, height = 15 cm
## radius = 35 cm, height = 18 cm
## radius = 26 cm, height = 6 cm
## diameter = 50 cm, height = 21 cm
## diameter = 70 cm, height = 12 cm
## radius = 13 cm, height = 12 cm
## radius = 32 cm, height = 14 cm
## diameter = 63 cm, height = 18 cm
# Find the surface area of a cylinder if the radius or diameter and height are: (Use &lt;math&gt;\!3.14&lt;/math&gt; if the radius or diameter is not a multiple of 7 and use &lt;math&gt;\frac{22}{7}&lt;/math&gt; if the radius or diameter is a multiple of 7.)
## diameter = 25 cm, height = 7.5 cm
## radius = 18 cm, height = 12 cm
## radius = 16 cm, height = 14 cm
## diameter = 35 cm, height = 17.5 cm
## diameter = 28 cm, height = 15 cm
## radius = 42 cm, height = 20 cm
## radius = 15 cm, height = 16 cm
## radius = 8 cm, height = 15 cm
## diameter = 56 cm, height = 22.5 cm
## radius = 35 cm, height = 8.5 cm
## diameter = 18 cm, height = 20 cm
## radius = 24 cm, height = 9 cm
## radius = 63 cm, height = 12 cm
## radius = 70 cm, height = 18 cm
## diameter = 54 cm, height = 21 cm

==Traingular prism==

# Find the volume of a triangular prism if the base length, base height and the height are:
## base length = 9 cm, base height = 14 cm, height = 20 cm
## base length = 12 cm, base height = 5 cm, height = 13 cm
## base length = 14 cm, base height = 8.5 cm, height = 3 cm
## base length = 22 cm, base height = 8.5 cm, height = 9 cm
## base length = 15 cm, base height = 14 cm, height = 16 cm
## base length = 8 cm, base height = 2 cm, height = 25 cm
## base length = 25 cm, base height = 16 cm, height = 24 cm
## base length = 17 cm, base height = 20 cm, height = 25 cm
## base length = 30 cm, base height = 25 cm, height = 17.5 cm
## base length = 25 cm, base height = 15 cm, height = 20 cm
# Find the surface area of a triangular prism if the base length, base height and the height are:
## base length = 3 cm, base height = 4 cm, height = 5 cm
## base length = 8 cm, base height = 15 cm, height = 17 cm
## base length = 6 cm, base height = 8 cm, height = 10 cm
## base length = 12 cm, base height = 16 cm, height = 20 cm
## base length = 25 cm, base height = 10 cm, height = 26 cm
## base length = 20 cm, base height = 21 cm, height = 29 cm
## base length = 15 cm, base height = 20 cm, height = 25 cm
## base length = 21 cm, base height = 28 cm, height = 35 cm
## base length = 33 cm, base height = 44 cm, height = 55 cm
## base length = 15 cm, base height = 7.5 cm, height = 8 cm

==Rectangular pyramid==

# Find the volume of a rectangular pyramid (rectangular base shape) if the base length, base width and height are:
## base length = 12 cm, base width = 8 cm, height = 5 cm
## base length = 15 cm, base width = 14 cm, height = 10 cm
## base length = 11 cm, base width = 10.5 cm, height = 16 cm
## base length = 24 cm, base width = 12 cm, height = 5 cm
## base length = 30 cm, base width = 15.5 cm, height = 8 cm
## base length = 17 cm, base width = 12 cm, height = 25 cm
## base length = 32 cm, base width = 15 cm, height = 24 cm
## base length = 10 cm, base width = 14 cm, height = 7 cm
## base length = 14 cm, base width = 25 cm, height = 9 cm
## base length = 24 cm, base width = 30 cm, height = 12 cm
# Find the surface area of a rectangular pyramid (rectangular base shape) if the base length, base width and height are:
## base length = 2 cm, base width = 6 cm, height = 4.5 cm
## base length = 12 cm, base width = 8 cm, height = 10 cm
## base length = 24 cm, base width = 14 cm, height = 9 cm
## base length = 16 cm, base width = 9 cm, height = 14 cm
## base length = 22 cm, base width = 8 cm, height = 14 cm
## base length = 25 cm, base width = 18 cm, height = 21 cm
## base length = 32 cm, base width = 14 cm, height = 26 cm
## base length = 35 cm, base width = 28 cm, height = 21 cm
## base length = 44 cm, base width = 35 cm, height = 26 cm
## base length = 56 cm, base width = 35 cm, height = 18 cm

==Sphere==

# Find the volume of a sphere if the radius or diameter is: (Use &lt;math&gt;\!3.14&lt;/math&gt; if the radius or diameter is not a multiple of 7 and use &lt;math&gt;\frac{22}{7}&lt;/math&gt; if the radius or diameter is a multiple of 7.)
## 2 cm
## 5 cm
## 6 cm
## 8 cm
## 10 cm
## 12 cm
## 16 cm
## 21 cm
## 25 cm
## 56 cm
# Find the surface area of a sphere if the radius or diameter is: (Use &lt;math&gt;\!3.14&lt;/math&gt; if the radius or diameter is not a multiple of 7 and use &lt;math&gt;\frac{22}{7}&lt;/math&gt; if the radius or diameter is a multiple of 7.)
## 3 cm
## 5 cm
## 6.3 cm
## 8.7 cm
## 10 cm
## 14 cm
## 16.7 cm
## 23.1 cm
## 25.3 cm
## 30 cm

[[Category:Mathematics Worksheet]]</text>
      <sha1>p0xbecxpsj31yorprmpxnkfeszqlgfr</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Mathematics Worksheet</title>
    <ns>1</ns>
    <id>201867</id>
    <revision>
      <id>1630004</id>
      <parentid>1556811</parentid>
      <timestamp>2009-09-15T14:01:57Z</timestamp>
      <contributor>
        <username>Triwikanto</username>
        <id>232158</id>
      </contributor>
      <comment>/* Decimal (,) and Dots (.) */ new section</comment>
      <text xml:space="preserve">A comment about use of ''',''' and '''.''' with regards to decimal notation may be a nice addition to the book.  [[User:Thenub314|Thenub314]] ([[User talk:Thenub314|talk]]) 12:08, 3 July 2009 (UTC)

== Decimal (,) and Dots (.) ==

Decimal sign (,) is used for the questions about decimal number operation. But the numbers like 23.285 must separated by dot sign (.). The number like 3683 must be separated become 3.683. It is right or not?

[[User:Triwikanto|Triwikanto]] ([[User talk:Triwikanto|talk]]) 14:01, 15 September 2009 (UTC)</text>
      <sha1>hr3xps80p2erhdteyyg6882q9snx3iw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Coffee Rum Glazed Apples</title>
    <ns>102</ns>
    <id>201868</id>
    <revision>
      <id>1708786</id>
      <parentid>1556819</parentid>
      <timestamp>2010-01-30T16:35:13Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Apple recipes]]

== Ingredients ==
* 3 Honeycrisp apples, peeled, cored, and sliced into 12ths
* 2 tbsp dark rum
* 2 tbsp coffee liqueur
* 3/4 cup strong coffee, cooled
* 3 tbsp sugar
* Pinch of salt
* 3 tbsp unsalted butter


== Procedure ==
#Melt 1 tbsp butter in a stainless steel skillet over medium heat. Add apples and sauté just until browned around edges. Remove and keep warm.
#Meanwhile, combine liqueurs. Add to pan, turn heat off, and ignite. Bring to a boil and start scraping browned bits.
#Add remaining ingredients to pan and bring to a boil over medium heat until reduced by 1/3. Add apples and toss to coat. Serve warm.</text>
      <sha1>83qz1ee83uumyy5i38dqmu7ucf0jkno</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hamburger fried rice</title>
    <ns>102</ns>
    <id>201869</id>
    <revision>
      <id>2072104</id>
      <parentid>1734803</parentid>
      <timestamp>2011-03-21T09:45:30Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Fixed energy</comment>
      <text xml:space="preserve">{{recipesummary|Rice recipes|3|30 minutes|2||300 kcal.}}

{{Recipe}}

==Ingredients==

* 3 tbsp. canola oil for frying
* 4 cloves [[Cookbook:Garlic|garlic]], slice 0,5 cm
* 4 cloves [[Cookbook:Red onion|red onion]], slice 0,5 cm
* 3 cm [[Cookbook:Ginger|ginger]], minced
* 2 red [[Cookbook:Chilli|chillies]], minced
* 400 g hamburger meat, diced
* 3 [[Cookbook:Scallion|scallion]], cut 1 cm
* 2 [[Cookbook:Celery|celeries]], minced
* 600 g [[Cookbook:Rice|rice]]
* 2 tbsp. [[Cookbook:Salt|salt]]
* 1 tbsp. [[Cookbook:Pepper|black pepper]]
* 2 tbsp. black [[Cookbook:Soy sauce|soy sauce]]

==Procedure==

# Heat the canola oil on non-stick pan. When the oil is very hot, fry the garlic, red onion, ginger and red chillies. Stir at 20 seconds until fragrant.
# Add the hamburger meat, cook until the hamburger meat changing the color. And then add the celery and scallion.
# Add the rice, finally salt, black pepper and black soy sauce. Cook until mixed all.
# Serves hot.


[[Category:Fried rice recipes]]
[[Category:Meat recipes]]
[[Category:Inexpensive recipes]]</text>
      <sha1>f5r9og9aaodwnwkm6tdj4bdtvttrdn5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Maine Building.jpg</title>
    <ns>6</ns>
    <id>201871</id>
    <revision>
      <id>1563560</id>
      <parentid>1556837</parentid>
      <timestamp>2009-07-07T21:32:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added proper license based on description and category.</comment>
      <text xml:space="preserve">{{Information
|Description=miane state capitol building
|Source= webshots
|Date= 7-21-07
|Author=  rmr2u
|Permission= released to public domain by author
|other_versions=
}}
{{PD-self}}
[[Category:One-to-One Laptop Schools/Images]]</text>
      <sha1>ce0saacnqyzw7uk11zrk8c1mphy50dy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>File:Teacher child laptop.jpg</title>
    <ns>6</ns>
    <id>201878</id>
    <revision>
      <id>1556863</id>
      <timestamp>2009-07-03T14:28:03Z</timestamp>
      <contributor>
        <username>Dvitalo12</username>
        <id>212119</id>
      </contributor>
      <comment>{{Information
|Description=child and learning
|Source=Edutopia
|Date=7-21-06
|Author=MLTI
|Permission=used by permission Edutopia
|other_versions=
}}</comment>
      <text xml:space="preserve">== Summary ==
{{Information
|Description=child and learning
|Source=Edutopia
|Date=7-21-06
|Author=MLTI
|Permission=used by permission Edutopia
|other_versions=
}}
== Licensing: ==
{{cc-by-sa-3.0}}</text>
      <sha1>5456rlqn08x25psthmj08uar1f00fdp</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Community Health Worker Manual Print</title>
    <ns>0</ns>
    <id>201879</id>
    <redirect title="Community Health Worker Manual/Print" />
    <revision>
      <id>1556872</id>
      <timestamp>2009-07-03T14:33:13Z</timestamp>
      <contributor>
        <username>Sigma 7</username>
        <id>164862</id>
      </contributor>
      <comment>moved [[Community Health Worker Manual Print]] to [[Community Health Worker Manual/Print]]</comment>
      <text xml:space="preserve">#REDIRECT [[Community Health Worker Manual/Print]]</text>
      <sha1>svhqq37b9qchh700p6nptffqjja686r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:BBQ Pork fried rice</title>
    <ns>102</ns>
    <id>201880</id>
    <revision>
      <id>2069163</id>
      <parentid>1785592</parentid>
      <timestamp>2011-03-13T19:46:28Z</timestamp>
      <contributor>
        <username>RaspaPT</username>
        <id>435036</id>
      </contributor>
      <minor />
      <comment>Fixed energy</comment>
      <text xml:space="preserve">{{Recipesummary|Rice recipes|4|1 hour|3||360 kcal.}}

{{Recipe}} | [[Cookbook:Cuisine of China|Cuisine of China]]

==Ingredients==

* 1 piece (750 g) boneless pork loin, cut into 30 pieces

'''For pork marinating'''

* 50 ml [[Cookbook:Barbecue sauce|barbeque sauce]]
* 15 ml light [[Cookbook:Soy sauce|soy sauce]]
* 30 ml [[Cookbook:Hoisin sauce|hoisin sauce]]
* 5 tbsp. [[Cookbook:Sugar|sugar]]
* 2½ tbsp. [[Cookbook:Salt|salt]]

'''For fried rice'''

* 6½ tbsp. [[Cookbook:Olive Oil|olive oil]]
* 5 tbsp. [[Cookbook:Sesame Oil|sesame oil]]
* 7 cloves [[Cookbook:Garlic|garlic]], minced
* 5 cm [[Cookbook:Ginger|ginger]], minced
* 5 red [[Cookbook:Chilli|chillies]], minced
* 6 [[Cookbook:Scallion|scallion]], cut 2 cm
* 4 [[Cookbook:Egg|eggs]], mixed
* 3 [[Cookbook:Egg|eggs]], make [[Cookbook:Omelette|omelette]] and slice 1 cm (as garnishing)
* 1.000 g [[Cookbook:Rice|rice]]
* 4 tbsp. salted [[Cookbook:Soy sauce|soy sauce]]
* 2 tbsp. [[Cookbook:Chicken powder|chicken powder]]
* 1½ tbsp. [[Cookbook:Oyster sauce|oyster sauce]]
* 2 tbsp. [[Cookbook:Salt|salt]]
* 20 g [[Cookbook:Jalapeño|jalapeño]]

'''Garnishing'''

* Shredded cabbage
* Tomato
* Pickles
* Shredded lettuce
* Cucumber

==Procedures==

'''For grilled pork'''

# Mix all the marinating sauce on a bowl, and place the pork into the sauce mixture. Wrap with plastic wrapper, and refrigerate in refrigerator until 25 minutes. Make sure the sauce in the bowl is really absorbed.
# Place the pork into the baking pan and bake at 20 minutes in temperature 200°C. After finish, put the pork into the plate.

'''For fried rice'''

# Heat the olive oil and sesame oil on the medium wok. Fry the garlic, red chillies, ginger and scallion, stir briefly at 1 minutes. Add the mixed egg and rice.
# Add the grilled pork, salted soy sauce, chicken powder, oyster sauce, salt and jalapeño. Stir until mixed all.
# Serves hot with garnishing 

[[Category:Fried rice recipes]]
[[Category:Pork recipes]]
[[Category:Vegetable recipes]]
[[Category:Egg recipes]]
[[Category:Chinese recipes]]
[[Category:Recipes with metric units]]
[[Category:Inexpensive recipes]]
[[Category:Barbecue recipes]]</text>
      <sha1>2l2s74b2k3c7uy1lv8852069nb8wgg3</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Visualizing Computation/Call Trees</title>
    <ns>0</ns>
    <id>201881</id>
    <revision>
      <id>1727561</id>
      <parentid>1727508</parentid>
      <timestamp>2010-02-27T12:16:54Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <comment>Undo revision 1727508 by [[Special:Contributions/69.207.180.124|69.207.180.124]] ([[User talk:69.207.180.124|Talk]]) &quot;iff&quot; means &quot;if and only if&quot;.</comment>
      <text xml:space="preserve">Call trees are visual representations of the functions being called upon in a particular instance. 
For example, consider the recursive function:

     def even(i): # return True iff i is an even number
            return i % 2 == 0

     def power(base, exp):
            if exp == 1:
                return base
            elif even(exp):
                base_to_half_exp = power(base, exp//2)
                return base_to_half_exp * base_to_half_exp
            else:[[:Image:]]
                return base * power(base, exp-1)

     print power(2, 7)

The power(2, 7) function will call on both the even() function and the power() function multiple times. This diagram shows the progression of the function. 

[[File:Working_simpler.svg|250px]]

Each time a function calls on another function, an arrow points from the function to the function it is calling. Multiple arrows can, of course, originate from the same function. 

Call trees can be designed utilizing different conventions to emphasize different points of the function. If the values each function is returning are important to the problem, those values can be placed in the call tree with arrows pointing upwards toward the function that will use that value. If the timing is most important and multiple arrows are originating from the same function, the first function called upon should be placed furthest to the left. Additionally, call trees can help to show the complexity of a function. Consider this power function:


        def even(i): # return True iff i is an even number
            return i % 2 == 0

        def power(base, exp):
            if exp == 1:
                return base
            elif even(exp):
                return power(base, exp//2) * power(base, exp//2)
            else:
                return base * power(base, exp-1)

        print power(2, 7)

This function forms the following call tree. 

[[File:Working_notsimpler.svg|1000px]]

It is obvious while looking at the call trees that the original function is much less complex and therefore much faster.

{{BookCat}}</text>
      <sha1>bun8v51syssnvx4pe68q0rkkdqb4s41</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Talk:Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1</title>
    <ns>1</ns>
    <id>201883</id>
    <revision>
      <id>1606400</id>
      <parentid>1598373</parentid>
      <timestamp>2009-08-13T13:27:24Z</timestamp>
      <contributor>
        <username>Mbrowder</username>
        <id>239400</id>
      </contributor>
      <comment>/* Discussion */</comment>
      <text xml:space="preserve">==Orphaned pages==
The following pages are not linked to by this chapter and were not selected for general display.  They are preserved here for posterity.
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.1.2]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.2.2]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.3.2]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.4.2]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.5.2]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.6.1]]
*[[Foundations and Assessment of Education/Edition 1/Foundations Table of Contents/Chapter 1/1.7.2]]
-- [[User:Adrignola|Adrignola]] &lt;sup&gt;[[User talk:Adrignola|talk]] [[Special:Contributions/Adrignola|contribs]]&lt;/sup&gt; 16:33, 2 August 2009 (UTC)

==Discussion==
After reading this chapter I feel I have learned a great deal from the research presented by the authors of the articles in the chapter and look forward to reading more chapters throuhgout the rest of the course.  I felt the student soap box was a great question. I have thought about what kind of teacher I want to become but I have not thought about all the values I want to feel confident instilling within my students. I feel the more I learn through the reading the more I become excited about becoming a teacher and changing lives. [[User:Lwill031|Lwill031]] ([[User talk:Lwill031|talk]]) 15:55, 3 July 2009 (UTC)

I enjoyed this chapter because it gave all the fundamental reasons of why I went into teaching.  I also think that there were many reasons in this chapter why there are some teachers who may not be viewed as a professional.  I hope that many teachers that are just starting out realize the many things that make up a good teacher and the it is not just conveyance of the knowledge but also caring for the students that you will interact with.
[[User:Jnewh001|Jnewh001]] ([[User talk:Jnewh001|talk]]) 17:25, 5 July 2009 (UTC)


This chapter culminates some of the thoughts and worries in my mind that concern the aspect of teaching and the apprehension, but crazy enjoyment I get out of it. It touches on the overall goals a teacher should have– how teachers impact students (hopefully in a positive way) and reinforces the meaning of what I might be trying to do with my life, and how important that is. [[User:Hsmit022|Hsmit022]] ([[User talk:Hsmit022|talk]]) 17:32, 12 July 2009 (UTC)

This chapter presents some interesting ideas on the philosophy of teaching.  I was particularly intrigued by the section debating what it means to be a qualified teacher. The side of the debate that argues that teacher qualification should not depend on appropriate education presents some good points.  This side argues that teacher qualification should be determined by how effectively the teacher teaches and by how well the teacher is able to build relationship with students. While I think these are good points, I agree with NCLB requirement (along with additional state requirements) that a teacher needs to have a certain amount of education and that this should not be open to compromise.  Teacher's who have trouble building relationships can improve on this with experience.  However, mastery of content is indispensable and needs to be proven before taking on a position as a teacher.
[[User:Mbrowder|Mbrowder]] ([[User talk:Mbrowder|talk]]) 13:27, 13 August 2009 (UTC)</text>
      <sha1>fbqusjhqs0mu2h066flsbvkg5ikwuet</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Muggles' Guide to Harry Potter/Templates</title>
    <ns>14</ns>
    <id>201884</id>
    <revision>
      <id>1602365</id>
      <parentid>1556907</parentid>
      <timestamp>2009-08-06T19:19:43Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>sort key</comment>
      <text xml:space="preserve">This category contains templates used in the [[{{ROOTBOOKNAME}}]].

[[Category:Muggles' Guide to Harry Potter| Templates]]
[[Category:Book-specific templates]]</text>
      <sha1>5g6fpm7vr1ukwcpqkq8auq6rx581hld</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Grilled Bananas with Coffee Syrup</title>
    <ns>102</ns>
    <id>201885</id>
    <revision>
      <id>1734053</id>
      <parentid>1556909</parentid>
      <timestamp>2010-03-11T21:21:04Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Fruit recipes]] [[Category:Dessert recipes]]

== Ingredients ==
* 6 bananas, halved but '''''unpeeled'''''
* 1 cup weak coffee
* 1/4 cup sugar
* 1/2 stick cinnamon
* 1/2 cup heavy cream
* 2 tbsp coffee liqueur
* Pinch of salt
* 2 tbsp butter

== Procedure ==
#Combine all ingredients except bananas in a large saucepan. Bring to a boil over medium high heat until reduced to 1/2 cup. Remove from heat and set aside.
#Brush bananas liberally with coffee mixture. Grill over medium high heat just until marked and slightly charred.
#Remove from heat, peel, and drizzle several more spoonfuls of syrup over bananas. Serve with remaining syrup on the side.</text>
      <sha1>q9jxh662hsh6y9w88mbtf2uoco4joqd</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User fancy rat owner</title>
    <ns>10</ns>
    <id>201886</id>
    <revision>
      <id>1556923</id>
      <parentid>1556920</parentid>
      <timestamp>2009-07-03T16:47:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0099FF 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #E6DEDB;&quot;
| style=&quot;width: 45px; height: 45px; background: #392521; text-align: center; font-size: 20pt; color: black;&quot; | [[Image:Rat agouti.jpg|40px]] 
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user has one or more '''[[w:fancy rat|fancy rats]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Fancy rat owner]]&lt;/noinclude&gt;</text>
      <sha1>293mwe5iohneuj47hu4bl4sxbg53a60</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Shrimp Curry</title>
    <ns>102</ns>
    <id>201888</id>
    <revision>
      <id>1804932</id>
      <parentid>1556924</parentid>
      <timestamp>2010-05-24T08:58:28Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Shrimp recipes]]

== Ingredients ==
*1 pound peeled deveined jumbo shrimp, heads off
*1/2 onion, finely diced
*1 tbsp minced garlic
*1 tbsp vegetable oil
*1 tbsp curry powder
*1/2 cup chicken broth
*1 heaping tbsp red curry paste
*1 tbsp ghee

== Procedure ==
#Heat oil in a large stainless steel saute pan over medium high heat. Add shrimp and saute just until bright pink. Remove and keep warm.
#Melt ghee in same pan. Add vegetables and saute until browned around edges.
#Add remaining ingredients and shrimp and toss to coat. Reduce heat to medium low and cook until shrimp are heated through.
#Remove and serve.</text>
      <sha1>rcu7ko84c18sonf8lb8xth4skaocg4j</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User no pet</title>
    <ns>10</ns>
    <id>201889</id>
    <revision>
      <id>1559363</id>
      <parentid>1556942</parentid>
      <timestamp>2009-07-04T16:20:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid salmon 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: salmon;&quot;
| style=&quot;width: 45px; height: 45px; background: salmon; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:No pet.svg|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user is '''not''' a pet owner.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|No pet]]&lt;/noinclude&gt;</text>
      <sha1>3gwc2g18bgdictj9yrfp8usi7d8gp74</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User pets only from animal shelter</title>
    <ns>10</ns>
    <id>201891</id>
    <revision>
      <id>1556953</id>
      <parentid>1556951</parentid>
      <timestamp>2009-07-03T16:53:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid salmon 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: salmon;&quot;
| style=&quot;width: 45px; height: 45px; background: salmon; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:No pet.svg|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user thinks pets should only come from an '''[[w:animal shelter|animal shelter]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Pets only from animal shelter]]&lt;/noinclude&gt;</text>
      <sha1>gb21i2w8heti22e17xnn7xj1bpnnsd6</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User tamagotchi</title>
    <ns>10</ns>
    <id>201893</id>
    <revision>
      <id>1556963</id>
      <parentid>1556961</parentid>
      <timestamp>2009-07-03T16:55:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid darkblue 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightcyan;&quot;
| style=&quot;width: 45px; height: 45px; background: darkblue; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Tamagotchi 0124 ubt.jpeg|40px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black;&quot; | This user takes good care of  one or more '''[[w:Tamagotchi|Tamagotchis]]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Animal user templates|Tamagotchi]]&lt;/noinclude&gt;</text>
      <sha1>sdk2ti1erjss2r05k9vwh0cd6bw32xa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:92.25.168.21</title>
    <ns>3</ns>
    <id>201895</id>
    <revision>
      <id>1556965</id>
      <timestamp>2009-07-03T16:57:18Z</timestamp>
      <contributor>
        <username>Chazz</username>
        <id>32521</id>
      </contributor>
      <comment>Created page with '{{subst:test}}You might consider channeling your writing talent into forums where it would be better appreciated... but a textbook is no place for fantasy fiction. ~~~~'</comment>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please help &lt;u&gt;''improve''&lt;/u&gt; Wikibooks'''.

[[Special:Contributions/92.25.168.21|Recent edits]] you made have not been considered constructive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:HELP|Reading Room Assistance]] page. Thanks. }}You might consider channeling your writing talent into forums where it would be better appreciated... but a textbook is no place for fantasy fiction. [[User:Chazz|Chazz]] &lt;small&gt;([[User talk:Chazz|talk]])&lt;/small&gt; 16:57, 3 July 2009 (UTC)</text>
      <sha1>hktmzxno56w5mkklv6sqa6dokqjdvue</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Ferrari</title>
    <ns>10</ns>
    <id>201896</id>
    <redirect title="User:PodPedia/templates/Ferrari" />
    <revision>
      <id>1556967</id>
      <timestamp>2009-07-03T16:59:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Ferrari]] to [[User:PodPedia/templates/Ferrari]]: Not going to list box for every make and model of vehicle.</comment>
      <text xml:space="preserve">#REDIRECT [[User:PodPedia/templates/Ferrari]]</text>
      <sha1>hsv1trrn361hc0bnwj80wbwi8q27ugx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Apple Stuffed Pork Loin</title>
    <ns>102</ns>
    <id>201897</id>
    <revision>
      <id>1556976</id>
      <parentid>1556970</parentid>
      <timestamp>2009-07-03T17:02:39Z</timestamp>
      <contributor>
        <username>Iwatchaltonbrown</username>
        <id>243605</id>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Pork recipes]] [[Category:Apple recipes]]

== Ingredients ==
:1 boneless pork loin roast
:1/4 cup [[Cookbook:Apple Stuffing|Apple Stuffing]]
:[[Cookbook:Grill Seasoning|Grill Seasoning for Chops]]
:Olive oil
:Dijon mustard

== Directions ==
#Make a slit in the top center of the roast about 1 1/4 in. deep. Fill with Apple Stuffing, brush opening with Dijon mustard, and press closed. 
#Brush roast with olive oil and shake on Seasoning liberally. Set aside until needed.
#Grill on a preheated charcoal grill, turning often until internal temperature reaches 140°.
#Remove and let rest 7 minutes. Serve.</text>
      <sha1>669bvawnfufdog8doppft398k0itrih</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User brown</title>
    <ns>10</ns>
    <id>201898</id>
    <revision>
      <id>1557078</id>
      <parentid>1556979</parentid>
      <timestamp>2009-07-03T17:25:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #ED9121 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: brown;&quot;
| style=&quot;width: 45px; height: 45px; background: brown; text-align: center; font-size:14pt; color:#ED9121;&quot; | '''Br'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:#ED9121;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''brown'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Brown]]&lt;/noinclude&gt;</text>
      <sha1>9exj194osrj1abxzxamymoagrchjc5z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User pink</title>
    <ns>10</ns>
    <id>201900</id>
    <revision>
      <id>1557083</id>
      <parentid>1556989</parentid>
      <timestamp>2009-07-03T17:27:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid hotpink 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: pink;&quot;
| style=&quot;width: 45px; height: 45px; background: pink; text-align: center; font-size:14pt; color:hotpink;&quot; | '''P'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:hotpink;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''pink'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Pink]]&lt;/noinclude&gt;</text>
      <sha1>8sepmqoc0bkyf5zhujg5kna06bvjly7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User orange</title>
    <ns>10</ns>
    <id>201902</id>
    <revision>
      <id>1557082</id>
      <parentid>1557020</parentid>
      <timestamp>2009-07-03T17:27:31Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #CC5500 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: orange;&quot;
| style=&quot;width: 45px; height: 45px; background: orange; text-align: center; font-size:14pt; color:#CC5500;&quot; | '''O'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:#CC5500;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''orange'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Orange]]&lt;/noinclude&gt;</text>
      <sha1>ota006b2zqjx85kp3709sqfuyy3efsa</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User yellow</title>
    <ns>10</ns>
    <id>201904</id>
    <revision>
      <id>1557086</id>
      <parentid>1557021</parentid>
      <timestamp>2009-07-03T17:29:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid goldenrod 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: yellow;&quot;
| style=&quot;width: 45px; height: 45px; background: yellow; text-align: center; font-size:14pt; color:goldenrod;&quot; | '''Y'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:goldenrod;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''yellow'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Yellow]]&lt;/noinclude&gt;</text>
      <sha1>p12xxuso2rxoqx0yfsnd66tlh1yjczl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User:Fadamr/monobook.css</title>
    <ns>2</ns>
    <id>201905</id>
    <revision>
      <id>1557388</id>
      <parentid>1557387</parentid>
      <timestamp>2009-07-03T18:31:22Z</timestamp>
      <contributor>
        <username>Fadamr</username>
        <id>250282</id>
      </contributor>
      <text xml:space="preserve">pre {padding:0; border: none; margin:0; line-height: 1.5em; }
.code .input ol {list-style: none; font-size: 1.2em; margin-left: 0;}
.code .input ol li div:before {content: &quot;\003E \0020&quot;;}
table.subfigures div.thumbinner, table.subfigures tr td, table.subfigures {border: 0;}</text>
      <sha1>mhzd3q6x9s0mc6bvq16qpih8dvsebje</sha1>
      <model>css</model>
      <format>text/css</format>
    </revision>
  </page>
  <page>
    <title>Template:User green</title>
    <ns>10</ns>
    <id>201907</id>
    <revision>
      <id>1557080</id>
      <parentid>1557022</parentid>
      <timestamp>2009-07-03T17:26:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid lightgreen 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: green;&quot;
| style=&quot;width: 45px; height: 45px; background: green; text-align: center; font-size:14pt; color:lightgreen&quot; | '''G'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:lightgreen&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''green'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Green]]&lt;/noinclude&gt;</text>
      <sha1>3d6tffms7lqx068cvrery972kdn612z</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User blue</title>
    <ns>10</ns>
    <id>201909</id>
    <revision>
      <id>1557077</id>
      <parentid>1557030</parentid>
      <timestamp>2009-07-03T17:25:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid lightblue 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: blue;&quot;
| style=&quot;width: 45px; height: 45px; background: blue; text-align: center; font-size:14pt; color:lightblue;&quot; | '''B'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:lightblue;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''blue'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Blue]]&lt;/noinclude&gt;</text>
      <sha1>kvea5hi3b9y88dpxfmpg72ubzdunn8r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Cookbook:Fast Food French Fries</title>
    <ns>102</ns>
    <id>201911</id>
    <revision>
      <id>2302494</id>
      <parentid>1720658</parentid>
      <timestamp>2012-04-06T15:31:44Z</timestamp>
      <contributor>
        <ip>95.97.3.74</ip>
      </contributor>
      <text xml:space="preserve">{{recipe}} [[Category:Potato recipes]]

This recipe is way better than the other French fries recipe trust me this recipe tastes more like restaurant fries than mashed potatoes like the other one.

== Ingredients ==
* 2 pounds Russet potatoes, cut slightly larger than julienne
* Salt and freshly ground black pepper
* Oil for deep frying

== Procedure ==
#Place potatoes in a large container of clean water. Rinse repeatedly until water runs clear.
#Spin potatoes in a salad spinner until dry. Fry at 350° until tender and limp but not browned. Drain on a cooling rack.
#Heat oil to 375° and fry potatoes for 4-5 minutes. Drain on a cooling rack and sprinkle heavily with salt and freshly ground black pepper. Serve.

==External links==
* [http://www.potatoes-recipes.com/french-fries Different ways of preparing french fries]</text>
      <sha1>dl0cspfm9m8wtmlp3yll9wnwrzxb09e</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User grey</title>
    <ns>10</ns>
    <id>201912</id>
    <revision>
      <id>1557081</id>
      <parentid>1557041</parentid>
      <timestamp>2009-07-03T17:27:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid silver 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: grey;&quot;
| style=&quot;width: 45px; height: 45px; background: grey; text-align: center; font-size:14pt; color:lightgrey;&quot; | '''Gr'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:lightgrey;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''grey'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Grey]]&lt;/noinclude&gt;</text>
      <sha1>ab40wxyjpmuhzcfb9jcdo29v408lln5</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User gold</title>
    <ns>10</ns>
    <id>201914</id>
    <revision>
      <id>1557079</id>
      <parentid>1557049</parentid>
      <timestamp>2009-07-03T17:26:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid darkgoldenrod 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: gold;&quot;
| style=&quot;width: 45px; height: 45px; background: gold; text-align: center; font-size:14pt; color:darkgoldenrod;&quot; | '''Gl'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:darkgoldenrod;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''gold'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Gold]]&lt;/noinclude&gt;</text>
      <sha1>rwgvs949r3hpzpixucu0ta20g6ng396</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User silver</title>
    <ns>10</ns>
    <id>201916</id>
    <revision>
      <id>1557085</id>
      <parentid>1557059</parentid>
      <timestamp>2009-07-03T17:29:29Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Parameters for alternate spelling.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid grey 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightgray;&quot;
| style=&quot;width: 45px; height: 45px; background: lightgray; text-align: center; font-size:14pt; color:grey;&quot; | '''Sl'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:grey;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''silver'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Silver]]&lt;/noinclude&gt;</text>
      <sha1>rskffxnbxqdbvc5j71e6za3iwqdx7ld</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User white</title>
    <ns>10</ns>
    <id>201918</id>
    <revision>
      <id>1557075</id>
      <parentid>1557073</parentid>
      <timestamp>2009-07-03T17:23:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid grey 2px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: white;&quot;
| style=&quot;width: 45px; height: 45px; background: white; text-align: center; font-size:14pt; color:gray;&quot; | '''W'''
| style=&quot;font-size:8pt; padding: 4pt; line-height: 1.25em; color:gray;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''white'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|White]]&lt;/noinclude&gt;</text>
      <sha1>corbqbkf2ddm9stbp1wuzswwraeno1b</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User rainbow</title>
    <ns>10</ns>
    <id>201920</id>
    <revision>
      <id>1557093</id>
      <parentid>1557091</parentid>
      <timestamp>2009-07-03T17:32:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid  1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: black;&quot;
| style=&quot;width: 45px; height: 45px; background: ; text-align: center; font-size: 14pt; color: black;&quot; | '''[[File:Rainbow icon.svg|45px]]'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em;&quot; | '''&lt;font color=&quot;red&quot;&gt;This &lt;font color=&quot;aqua&quot;&gt;user &lt;font color=	33FF77&gt;likes &lt;font color=&quot;pink&quot;&gt;all &lt;font color=CCFFFF&gt;of &lt;font color=&quot;yellow&quot;&gt;the &lt;font color=&quot;white&quot;&gt;col{{{1|ou}}}rs.'''
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Rainbow]]&lt;/noinclude&gt;</text>
      <sha1>d5kmxjqjw9u7xbmpjx93eqb4wm37ndk</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User ultraviolet</title>
    <ns>10</ns>
    <id>201922</id>
    <revision>
      <id>1557099</id>
      <parentid>1557097</parentid>
      <timestamp>2009-07-03T17:35:34Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid black 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: lightblue;&quot;
| style=&quot;width: 45px; height: 45px; background: white; text-align: center; color: black;&quot; | 
[[Image:Colours_reflected_from_a_thin_water_film_depending_on_thickness_and_angle_of_incidence.png|43px]]
| style= &quot;font-size: 8pt; padding: 4pt; line-height:1.25em;&quot; | This user's fav{{{1|ou}}}rite col{{{1|ou}}}r is '''ultraviolet'''.
|
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Ultraviolet]]&lt;/noinclude&gt;</text>
      <sha1>qp4cuu4n2thecjnlw0nvmfqn76k9qp2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User dislike colours</title>
    <ns>10</ns>
    <id>201924</id>
    <revision>
      <id>1557104</id>
      <parentid>1557102</parentid>
      <timestamp>2009-07-03T17:38:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up and categorized.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid white 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: black;&quot;
| style=&quot;width: 45px; height: 45px; background: black; text-align: center; font-size: 14pt; color: white;&quot; | '''&amp;mdash;'''
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: white;&quot; | This user does not like col{{{1|ou}}}rs.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Colour user templates|Dislike colours]]&lt;/noinclude&gt;</text>
      <sha1>585pi5q7g7yohy60qh7923yatls2eyz</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User dislike colors</title>
    <ns>10</ns>
    <id>201926</id>
    <redirect title="Template:User dislike colours" />
    <revision>
      <id>1557105</id>
      <timestamp>2009-07-03T17:39:33Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Redirect to alternate spelling.</comment>
      <text xml:space="preserve">#REDIRECT[[Template:User dislike colours]]</text>
      <sha1>fj4o0j4yc8fjlxhf6wq5svm9xlz83o1</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User computers</title>
    <ns>10</ns>
    <id>201927</id>
    <revision>
      <id>1557114</id>
      <parentid>1557112</parentid>
      <timestamp>2009-07-03T17:42:54Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>+category</comment>
      <text xml:space="preserve">{{userbox|lightgrey|lightblue|[[File:Computer_n_screen.svg|40px]]|This user is interested in [[w:computer|computers]]}}&lt;noinclude&gt;[[Category:Computer-related user templates|Computers]]&lt;/noinclude&gt;</text>
      <sha1>fk423b3j26d4p2pierpvpplbcj087kn</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User anti-drm</title>
    <ns>10</ns>
    <id>201929</id>
    <revision>
      <id>1557120</id>
      <parentid>1557118</parentid>
      <timestamp>2009-07-03T17:44:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category and fixed link</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; margin: 1px; color: #000;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #FFF; border-collapse: collapse;&quot;
|-
| style=&quot;width:45px; background: black; height:45px; border: 1px solid black; color: silver; text-align: center; font-size: 14pt; &quot; |[[File:PD-icon.svg|40px]] 
| style=&quot;font-size:8pt; background: #CCF; border: 1px solid black; color: black; padding: 0 4pt; line-height: 1.25em; &quot; |
This user is against [[w:Digital rights management|DRM]].
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Computer-related user templates|Anti-drm]]&lt;/noinclude&gt;</text>
      <sha1>0sf4oc6ii13o9vr3hppt3h62nr1x4wx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User computer scientist</title>
    <ns>10</ns>
    <id>201931</id>
    <revision>
      <id>1557132</id>
      <parentid>1557131</parentid>
      <timestamp>2009-07-03T17:50:11Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Added includeonly code.</comment>
      <text xml:space="preserve">{{userbox
| border-c = #555
| id       = [[File:Gnome-utilities-terminal.svg|43px]]
| id-c     = #9abccf
| info     = This user is a '''[[w:computer scientist|computer scientist]]'''
| info-c   = #DDD
| info-fc  = black
| info-s   = 8
}}&lt;noinclude&gt;[[Category:Profession user templates|Computer scientist]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:Users by profession|Computer scientist]]}}}&lt;/includeonly&gt;</text>
      <sha1>lwibdhbnxnqx5hfge3il3jb0rrc65ym</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in South America</title>
    <ns>14</ns>
    <id>201933</id>
    <revision>
      <id>1557127</id>
      <timestamp>2009-07-03T17:46:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User category.</comment>
      <text xml:space="preserve">[[Category:Users by location|South America]]</text>
      <sha1>alwfg23z1m61r2wvm76jkz8keuk3dii</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in Asia</title>
    <ns>14</ns>
    <id>201934</id>
    <revision>
      <id>1557128</id>
      <timestamp>2009-07-03T17:46:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User category.</comment>
      <text xml:space="preserve">[[Category:Users by location|Asia]]</text>
      <sha1>12w4uxrn2wf8g0eobbka43es59r8xll</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Users in Africa</title>
    <ns>14</ns>
    <id>201935</id>
    <revision>
      <id>1557129</id>
      <timestamp>2009-07-03T17:47:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>User category.</comment>
      <text xml:space="preserve">[[Category:Users by location|Africa]]</text>
      <sha1>2tlcpezzpjhp03h9nk2nw1rxvnpd9f4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Profession user templates</title>
    <ns>14</ns>
    <id>201936</id>
    <revision>
      <id>1557130</id>
      <timestamp>2009-07-03T17:48:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Userboxes]]</text>
      <sha1>e961usedd0xze3hi9dd9nanh1bukgtw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Userboxes/Profession</title>
    <ns>4</ns>
    <id>201937</id>
    <revision>
      <id>1557133</id>
      <timestamp>2009-07-03T17:51:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added template and category.</comment>
      <text xml:space="preserve">{{usbktop}}
{{usbk|User computer scientist}}
{{usbkbottom}}

{{BookCat}}</text>
      <sha1>ddoknhiwbg9b1urag00kr9my9zdr1yl</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User email</title>
    <ns>10</ns>
    <id>201938</id>
    <revision>
      <id>1557157</id>
      <parentid>1557156</parentid>
      <timestamp>2009-07-03T17:53:42Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up.</comment>
      <text xml:space="preserve">{{ userbox
| border-c = black
| info-c   = #f99
| id-c     = white
| id-s     = 20
| id       = @
| info     = This user can be reached '''[[Special:Emailuser/{{BASEPAGENAMEE}}|by email]]'''.
}}&lt;noinclude&gt;[[Category:Computer-related user templates|Email]]&lt;/noinclude&gt;</text>
      <sha1>16xvqwv64vd56xr0ih84wfsklg4ckp4</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>User talk:Whiteknight/Remotetalk Gadget</title>
    <ns>3</ns>
    <id>201939</id>
    <revision>
      <id>1557230</id>
      <parentid>1557158</parentid>
      <timestamp>2009-07-03T17:55:34Z</timestamp>
      <contributor>
        <username>UnRheal</username>
        <id>250622</id>
      </contributor>
      <minor />
      <comment>whups, typo</comment>
      <text xml:space="preserve">== Which is broken, Remotetalk Gadget, or me...? ==
I tried to follow the apparently simple instructions - to go to my &quot;Special:Preferences&quot; page, then the &quot;Gadgets&quot; tab, and looking for something called &quot;remotetalk.js&quot; with a checkbox near it. However, I appear to be unable to locate anything on that page called remotetalk.js - when I search with Firefox, which lets you search-by-letter as you type, I get r-e-m-o, which matches on &quot;Remove Image Tools&quot; - but as soon as I hit the next letter... &quot;t&quot; - it says &quot;Phrase not found&quot;

Am I doing something wrong...? I was going to try to contact Whiteknight in regards to the X86 Disassembly and possible PDF creation, but seeing other &quot;talk&quot; entries on Whiteknight's page with no answers, and thinking that maybe this Remotetalk might be more expedient in any case... *and* noting that Opera 9 says &quot;Not Tested&quot; (and since I happened to have Opera 9 installed) - thought I'd give it a go, but got stumped at the above described step. Any suggestions, thoughts, etc. much appreciated!  Cheers. --[[User:UnRheal|UnRheal]] ([[User talk:UnRheal|talk]]) 17:54, 3 July 2009 (UTC)</text>
      <sha1>007jnb22g84azmjthm76vtgw25lq34x</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User aim</title>
    <ns>10</ns>
    <id>201940</id>
    <revision>
      <id>1559372</id>
      <parentid>1559370</parentid>
      <timestamp>2009-07-04T16:28:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:1px solid #555555; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#ffc9c6;&quot;
| style=&quot;width:45px; height:45px; background:#ffffff; text-align:center; &quot; | '''[[File:Crystal 128 aim.png|45px]]'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:black; text-align: center;&quot; | This user's [[w:AOL Instant Messenger|AIM]] screenname is '''{{{1}}}'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Instant messaging user templates|Aim]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:AIM users|{{PAGENAME}}]]}}}&lt;/includeonly&gt;</text>
      <sha1>929iy7ltvn1b5yuat3ofrd568yi7z6s</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User google talk</title>
    <ns>10</ns>
    <id>201941</id>
    <revision>
      <id>1559377</id>
      <parentid>1559376</parentid>
      <timestamp>2009-07-04T16:33:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:1px solid #036; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#fff;&quot;
| style=&quot;width:45px; height:45px; background:#9cf; text-align:center; font-size:12pt; color:black; padding:1pt; line-height:1em; font-family:sans-serif;&quot; | '''&lt;span style=&quot;font-size:16pt; font-family: serif; color:#666&quot;&gt;G&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #036&quot;&gt;t&lt;/span&gt;&lt;span style=&quot;color: #f00&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: #ff0&quot;&gt;l&lt;/span&gt;&lt;span style=&quot;color: #060&quot;&gt;k&lt;/span&gt;'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:black; &quot; | This user's [[w:Google Talk|Google Talk]] screenname is '''{{{1}}}'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Instant messaging user templates|Google talk]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:Google Talk users|{{PAGENAME}}]]}}}&lt;/includeonly&gt;</text>
      <sha1>57b1i5gk1bzns8ueefi9b8xeulyksvj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User Google Talk</title>
    <ns>10</ns>
    <id>201942</id>
    <redirect title="Template:User google talk" />
    <revision>
      <id>1557252</id>
      <timestamp>2009-07-03T17:57:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User Google Talk]] to [[Template:User google talk]]: Consistency with others.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User google talk]]</text>
      <sha1>5q4raprxcg0ell7dalv82pbchghd0vj</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User skype</title>
    <ns>10</ns>
    <id>201943</id>
    <revision>
      <id>1559388</id>
      <parentid>1559387</parentid>
      <timestamp>2009-07-04T16:41:22Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text and cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:1px solid #ffd700; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#fffacd;&quot;
| style=&quot;width:45px; height:45px; background:white; text-align:center;&quot; | '''[[File:Crystal Clear app Internet Connection Tools.png|35px]]'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:black; text-align: center;&quot; | This user's '''[[w:Skype|Skype]]''' username is '''[http://www.ilbricco.it/callto.php?id={{{1}}} {{{1}}}]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Instant messaging user templates|Skype]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:Skype users|{{PAGENAME}}]]}}}&lt;/includeonly&gt;</text>
      <sha1>6yyajrj768g72hl2vaunzfilcv93pss</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User jabber</title>
    <ns>10</ns>
    <id>201944</id>
    <revision>
      <id>1559382</id>
      <parentid>1559380</parentid>
      <timestamp>2009-07-04T16:36:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Cleaned up code.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float:left; border:1px solid #ffd700; margin:1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width:238px; background:#fffacd;&quot;
| style=&quot;width:45px; height:45px; background:#fff;&quot; | '''[[File:Info bulb.png|45px]]'''
| style=&quot;font-size:8pt; padding:4pt; line-height:1.25em; color:black; text-align: center;&quot; | This user uses '''[[w:Jabber|Jabber]]''' as &lt;b&gt;{{{1}}}&lt;/b&gt;.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Instant messaging user templates|Jabber]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:Jabber users|{{PAGENAME}}]]}}}&lt;/includeonly&gt;</text>
      <sha1>jic1kaenrjftxd0ugxywnesa4h9tco8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Category:Instant messaging user templates</title>
    <ns>14</ns>
    <id>201945</id>
    <revision>
      <id>1557324</id>
      <timestamp>2009-07-03T18:16:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Template category.</comment>
      <text xml:space="preserve">[[Category:Computer-related user templates]]</text>
      <sha1>a1zqpjzgsg9aipzacdgpfiyeysymz0h</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User yim</title>
    <ns>10</ns>
    <id>201946</id>
    <revision>
      <id>1559392</id>
      <parentid>1559391</parentid>
      <timestamp>2009-07-04T16:44:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Centered text.</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border: solid #8A2BE2 1px; margin: 1px;&quot; id=&quot;yimuser&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; color:#8A2BE2; background: #000000;&quot;
| style=&quot;width: 45px; height: 45px; background: #ffffff; text-align: center; font: italic bold 20pt 'Georgia'; color:#ff0033; text-align:center;&quot; | Y!
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; background:#C6C9FF; text-align:center;&quot; | This user's [[w:Yahoo! Messenger|Yahoo! Messenger]] screename is '''[http://edit.yahoo.com/config/send_webmesg?.target={{{1}}}&amp;.src=pg {{{1}}}]'''''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Instant messaging user templates|YIM]]&lt;/noinclude&gt;&lt;includeonly&gt;{{{category|[[Category:Yahoo! Messenger users|{{PAGENAME}}]]}}}&lt;/includeonly&gt;</text>
      <sha1>ru94fb87mhu1f2g2ylozfvnx9n0uq24</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User YIM</title>
    <ns>10</ns>
    <id>201947</id>
    <redirect title="Template:User yim" />
    <revision>
      <id>1557351</id>
      <timestamp>2009-07-03T18:19:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>moved [[Template:User YIM]] to [[Template:User yim]]: Consistency with other templates.</comment>
      <text xml:space="preserve">#REDIRECT [[Template:User yim]]</text>
      <sha1>6nnrnhdoubuswvp91dfbj6dorfcnhka</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
  <page>
    <title>Template:User wiki</title>
    <ns>10</ns>
    <id>201948</id>
    <revision>
      <id>1557566</id>
      <parentid>1557359</parentid>
      <timestamp>2009-07-03T19:18:07Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed alignment</comment>
      <text xml:space="preserve">&lt;div style=&quot;float: left; border:solid #0000cd 1px; margin: 1px;&quot;&gt;
{| cellspacing=&quot;0&quot; style=&quot;width: 238px; background: #b0e0e6;&quot;
| style=&quot;width: 45px; height: 45px; background: #0000cd; text-align: center; font-size: 14pt; color: white;&quot; | Wiki
| style=&quot;font-size: 8pt; padding: 4pt; line-height: 1.25em; color: black; text-align: center;&quot; | This user has a '''[{{{1}}} wiki]'''.
|}&lt;/div&gt;&lt;noinclude&gt;[[Category:Website user templates|Wiki]]&lt;/noinclude&gt;</text>
      <sha1>16ivn0bzfpafl84av8cv4aey8qzz98m</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>
</mediawiki>